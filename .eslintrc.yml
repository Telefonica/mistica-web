parser: babel-eslint # typescript parser is used as an override (see overrides section)
env:
    es6: true
    node: true
    browser: true
    jest/globals: true
parserOptions: # http://eslint.org/docs/user-guide/configuring.html#specifying-parser-options
    ecmaVersion: 11
    sourceType: module
    ecmaFeatures:
        jsx: true
settings:
    react:
        version: '16.11'
plugins:
    - babel
    - filenames
    - jest
    - react
    - react-hooks
    - jsx-a11y
    - testing-library
    - flowtype
    - import
    - '@typescript-eslint'
    - '@telefonica/eslint-plugin-async-await'
extends:
    - 'eslint:recommended'
rules:
    # Basic rules
    default-case: error
    dot-notation: error
    eqeqeq: error
    filenames/match-regex: [error, '^[a-z0-9]+(-[a-z0-9]+)*(\.(config))?$'] # matches: "foo-bar" or "foo-bar.config"
    new-cap: [error, {newIsCap: true, capIsNew: false}]
    no-cond-assign: error
    no-debugger: error
    no-delete-var: error
    no-dupe-keys: error
    no-duplicate-case: error
    no-empty: error
    no-eval: error
    no-extend-native: error
    no-extra-bind: error
    no-extra-boolean-cast: error
    no-fallthrough: error
    no-implied-eval: error
    no-inner-declarations: [error, both]
    no-invalid-regexp: error
    no-irregular-whitespace: error
    no-labels: error
    no-lone-blocks: error
    no-lonely-if: error
    no-loop-func: error
    no-new-func: error
    no-new-object: error
    no-new-wrappers: error
    no-octal: error
    no-proto: error
    no-redeclare: error
    no-return-assign: error
    no-shadow-restricted-names: error
    no-sparse-arrays: error
    no-undef-init: error
    no-unneeded-ternary: error
    no-unreachable: error
    babel/no-unused-expressions: error
    no-unused-vars: [error, {vars: all, args: after-used, ignoreRestSiblings: true}]
    no-use-before-define: error
    no-var: error
    no-with: error
    object-shorthand: error
    prefer-arrow-callback: error
    prefer-const: error
    prefer-spread: error
    strict: [error, global]
    use-isnan: error
    valid-typeof: error
    yoda: error

    # Jest rules. jest/recommended but setting all to error severity to fail in CI
    jest/no-alias-methods: error
    jest/no-disabled-tests: error
    jest/no-focused-tests: error
    jest/no-identical-title: error
    jest/no-jest-import: error
    jest/no-jasmine-globals: error
    jest/no-test-prefixes: error
    jest/valid-describe: error
    jest/valid-expect: error
    jest/valid-expect-in-promise: error
    jest/consistent-test-it: [error, {fn: test}] # not included in jest/recommended

    # react testing library
    testing-library/prefer-screen-queries: error
    testing-library/prefer-presence-queries: error
    testing-library/prefer-explicit-assert: error
    testing-library/no-wait-for-empty-callback: error
    testing-library/no-manual-cleanup: error
    testing-library/no-debug: error
    testing-library/no-dom-import: error
    testing-library/await-async-utils: error
    testing-library/await-async-query: error
    testing-library/no-await-sync-query: error
    testing-library/prefer-find-by: error
    testing-library/prefer-wait-for: error

    # react rules
    react/forbid-dom-props: [error, {forbid: [xmlns]}]
    react/jsx-fragments: [error, syntax]
    react/jsx-boolean-value: error
    react/jsx-curly-brace-presence: [2, {'props': 'never', 'children': 'never'}]
    react/jsx-no-duplicate-props: error
    react/jsx-no-undef: error
    react/jsx-uses-react: error
    react/jsx-uses-vars: error
    react/no-danger: error
    react/no-deprecated: error
    react/no-direct-mutation-state: error
    react/no-find-dom-node: error
    react/no-unknown-property: error
    react/react-in-jsx-scope: error
    react-hooks/rules-of-hooks: error
    react-hooks/exhaustive-deps: [error, {'additionalHooks': 'useIsomorphicLayoutEffect'}]

    # Accessibility rules: https://github.com/evcohen/eslint-plugin-jsx-a11y/tree/master/docs/rules
    jsx-a11y/aria-role: error
    jsx-a11y/aria-props: error
    jsx-a11y/aria-proptypes: error
    jsx-a11y/no-access-key: error
    jsx-a11y/role-has-required-aria-props: error
    jsx-a11y/tabindex-no-positive: error
    jsx-a11y/scope: error
    jsx-a11y/label-has-associated-control: error
    jsx-a11y/role-supports-aria-props: error
    jsx-a11y/no-distracting-elements: error
    jsx-a11y/aria-unsupported-elements: error
    jsx-a11y/interactive-supports-focus: error
    jsx-a11y/no-interactive-element-to-noninteractive-role: error
    jsx-a11y/no-noninteractive-tabindex: error
    jsx-a11y/heading-has-content: error
    jsx-a11y/no-redundant-roles: error
    jsx-a11y/mouse-events-have-key-events: error
    jsx-a11y/no-onchange: error
    jsx-a11y/img-redundant-alt: error
    jsx-a11y/no-noninteractive-element-interactions: error
    jsx-a11y/no-static-element-interactions: [error, {handlers: [onClick, onKeyPress]}]

    # flow rules
    flowtype/array-style-complex-type: error
    flowtype/array-style-simple-type: error
    flowtype/define-flow-type: error
    flowtype/no-types-missing-file-annotation: error
    flowtype/require-valid-file-annotation: [error, never, {annotationStyle: line}]
    flowtype/use-flow-type: error

    # import rules
    import/export: error
    import/no-mutable-exports: error
    import/no-duplicates: error
    import/extensions: [error, {js: never, json: always}]
    import/no-named-default: error
    import/no-useless-path-segments: error
    import/no-self-import: error

overrides:
    # overrides for TypeScript files
    - files:
          - '*.tsx'
      parser: '@typescript-eslint/parser'
      rules:
          'flowtype/no-types-missing-file-annotation': off
          no-unused-vars: off
          '@typescript-eslint/no-unused-vars':
              - error
              - vars: all
                args: after-used
                ignoreRestSiblings: true
          '@typescript-eslint/no-empty-function': off
          '@typescript-eslint/no-explicit-any': off
          '@typescript-eslint/ban-ts-comment':
              - error
              - ts-expect-error: allow-with-description
                ts-ignore: true
                ts-nocheck: true
                ts-check: false
          '@typescript-eslint/no-namespace':
              - error
              - allowDeclarations: false
                allowDefinitionFiles: false
          'no-restricted-syntax':
              - error
              - selector: TSEnumDeclaration
                message: 'enums are not allowed'
          '@typescript-eslint/prefer-as-const': off # TODO: review this rule and check how flowgen translates "as const" syntax
      extends:
          - 'eslint:recommended'
          - 'plugin:@typescript-eslint/recommended'

    # overrides for Type Tests
    - files:
          - '**/__type_tests__/*-type-test.tsx'
          - '**/__type_tests__/*-type-test.js'
      rules:
          'no-unused-vars': off
          'babel/no-unused-expressions': off
          '@typescript-eslint/no-unused-vars': off

    # overrides for flow definitions
    - files:
          - '*.js.flow'
      rules:
          filenames/match-regex: [error, '^[a-z0-9]+(-[a-z0-9]+)*\.js$'] # matches: "foo-bar.js"
          no-use-before-define: off
          import/no-duplicates: off
          no-undef: off
    - files:
          - '**/*+(screenshot|acceptance)-test.tsx'
      rules:
          '@telefonica/async-await/await-async-methods':
              [
                  error,
                  {
                      page: ['click', 'type', 'screenshot', 'title', 'close', 'goBack'],
                      screen:
                          [
                              'findByPlaceholderToken',
                              'findAllByPlaceholderToken',
                              'findByToken',
                              'findAllByToken',
                              'findByLabelToken',
                              'findAllByLabelToken',
                              'findByAltToken',
                              'findAllByAltToken',
                          ],
                  },
              ]
