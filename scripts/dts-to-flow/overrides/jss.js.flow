// @flow
import * as React from 'react';
import {type Theme} from './theme';

declare export var getJss: () => any;

declare type CSSValue<P> = void | number | boolean | string | ((P) => string | number | boolean);
declare type ClassDefinition<P> = {
    +[cssProp: string]:
        | CSSValue<P>
        | {
              +[cssProp: string]:
                  | CSSValue<P>
                  | {
                        +[cssProp: string]: CSSValue<P>,
                        ...
                    },
              ...
          },
    ...
};

declare type StylesDefinition<P> = {+[className: string]: ClassDefinition<P>, ...};

declare type UseStyles<P, S: StylesDefinition<any>> = (props: P) => $ObjMap<S, () => string>;

declare export var createUseStyles: <P, S: StylesDefinition<P>>(
    styles: (theme: Theme) => S
) => UseStyles<P, S>;

declare export class ServerSideStyles {
    render(el: React.Element<any>): React.Element<any>;
    getStylesString(): string;
    renderStyles(): React.Element<'style'>;
}
