// @flow

import * as React from "react";
import { ButtonLink } from "./button";
import type { RendersNullableElement, TrackingEvent } from "./utils/types";
import type { NullableButtonElement } from "./button";
declare type CommonProps = {
  title: string,
  description: string,
  imageUrl?: string,
  imageFit?: "fit" | "fill",
  backgroundImageUrl?: string,
  onClose?: () => void,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  isInverse?: boolean,
  "aria-label"?: string,
  width?: string | number,
};
declare type BasicProps = { ...$Exact<CommonProps> };
declare type ButtonProps = {
  ...$Exact<CommonProps>,
  button?: NullableButtonElement | RendersNullableElement<typeof ButtonLink>,
};
declare type HrefProps = {
  ...$Exact<CommonProps>,
  href?: string,
  newTab?: boolean,
};
declare type ToProps = {
  ...$Exact<CommonProps>,
  to?: string,
  fullPageOnWebView?: boolean,
};
declare type OnPressProps = {
  ...$Exact<CommonProps>,
  onPress?: () => void,
};
declare type Props =
  | BasicProps
  | ButtonProps
  | HrefProps
  | ToProps
  | OnPressProps;
declare var HighlightedCard: React.ComponentType<Props>;
declare export default typeof HighlightedCard;
declare export var test1: React.Node;
declare export var test2: React.Node;
declare export var test3: React.Node;
declare export var test4: React.Node;
declare export var test5: React.Node;
declare export var test6: React.Node;
declare export var test7: React.Node;
declare export var test8: (isTouchable: boolean) => React.Node;
declare export var test9: (isTouchable: boolean) => React.Node;
