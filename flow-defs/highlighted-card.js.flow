// @flow
/**
 * Flowtype definitions for highlighted-card
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as React from "react";
import TextLink from "./text-link";
import { type TrackingEvent } from "./utils/types";
import { type ButtonElement } from "./button";
declare type CommonProps = {
  title: string,
  description: string,
  imageUrl?: string,
  imageFit?: "auto" | "contain" | "cover",
  backgroundImageUrl?: string,
  onClose?: () => void,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>
};
declare type BasicProps = {
  ...$Exact<CommonProps>,

  button?: void,
  onPress?: void,
  to?: void,
  href?: void
};
declare type ButtonProps = {
  ...$Exact<CommonProps>,

  button?: ButtonElement | React.Element<typeof TextLink> | null,
  onPress?: void,
  to?: void,
  href?: void
};
declare type HrefProps = {
  ...$Exact<CommonProps>,

  href?: string,
  newTab?: boolean,
  onPress?: void,
  to?: void,
  button?: void
};
declare type ToProps = {
  ...$Exact<CommonProps>,

  to?: string,
  fullPageOnWebView?: boolean,
  href?: void,
  onPress?: void,
  button?: void
};
declare type OnPressProps = {
  ...$Exact<CommonProps>,

  onPress?: () => void,
  href?: void,
  to?: void,
  button?: void
};
declare type Props =
  | BasicProps
  | ButtonProps
  | HrefProps
  | ToProps
  | OnPressProps;
declare var HighlightedCard: React.ComponentType<Props>;
declare export default typeof HighlightedCard;
