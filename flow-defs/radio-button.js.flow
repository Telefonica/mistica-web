// @flow

import * as React from "react";
import type { DataAttributes } from "./utils/types";
declare type RadioContextType = {
  disabled?: boolean,
  selectedValue?: string | null,
  focusableValue?: string | null,
  select: (value: string) => void,
  selectNext: () => void,
  selectPrev: () => void,
};
declare export var useRadioContext: () => RadioContextType;
declare type PropsRender = {
  value: string,
  id?: string,
  render: (renderProps: {
    controlElement: React.Element<any>,
    labelId: string,
    disabled: boolean,
    checked: boolean,
  }) => React.Node,
  dataAttributes?: DataAttributes,
  "aria-labelledby"?: string,
};
declare type PropsChildren = {
  value: string,
  id?: string,
  children?: React.Node,
  dataAttributes?: DataAttributes,
  "aria-labelledby"?: string,
};
declare var RadioButton: React.ComponentType<PropsRender | PropsChildren>;
declare type RadioGroupProps = {
  name: string,
  disabled?: boolean,
  "aria-labelledby"?: string,
  children: React.Node,
  value?: string,
  defaultValue?: string,
  onChange?: (value: string) => void,
  dataAttributes?: DataAttributes,
};
declare export var RadioGroup: React.ComponentType<RadioGroupProps>;
declare export default typeof RadioButton;
