// @flow

import * as React from "react";
import type { DataAttributes, TrackingEvent } from "./utils/types";
import type { Location } from "history";
export type PressHandler = (event: SyntheticMouseEvent<HTMLElement>) => void;
declare type CommonProps = {
  children: React.Node,
  className?: string,
  disabled?: boolean,
  style?: CssStyle,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  "aria-label"?: string,

  /**
   * "data-" prefix is automatically added. For example, use "testid" instead of "data-testid"
   */
  dataAttributes?: DataAttributes,
  "aria-checked"?: "true" | "false" | boolean,
  "aria-controls"?: string,
  "aria-expanded"?: "true" | "false" | boolean,
  "aria-hidden"?: "true" | "false" | boolean,
  "aria-selected"?: "true" | "false" | boolean,
  "aria-labelledby"?: string,
  "aria-live"?: "polite" | "off" | "assertive",
  role?: string,
  type?: "button" | "submit",
  tabIndex?: number,
};
export type PropsHref = {
  ...$Exact<CommonProps>,
  href: string,
  newTab?: boolean,
  loadOnTop?: boolean,
};
export type PropsOnPress = {
  ...$Exact<CommonProps>,
  onPress: PressHandler,
  formId?: string,
};
export type PropsTo = {
  ...$Exact<CommonProps>,
  to: string | Location,
  fullPageOnWebView?: boolean,
  replace?: boolean,
};
export type PropsMaybeHref = {
  ...$Exact<CommonProps>,
  maybe: true,
  href?: string,
  newTab?: boolean,
  loadOnTop?: boolean,
};
export type PropsMaybeTo = {
  ...$Exact<CommonProps>,
  maybe: true,
  to?: string | Location,
  fullPageOnWebView?: boolean,
  replace?: boolean,
};
export type PropsMaybeOnPress = {
  ...$Exact<CommonProps>,
  maybe: true,
  onPress?: PressHandler,
  formId?: string,
};
export type Props =
  | PropsHref
  | PropsTo
  | PropsOnPress
  | PropsMaybeHref
  | PropsMaybeTo
  | PropsMaybeOnPress;
export type TouchableElement =
  | HTMLDivElement
  | HTMLAnchorElement
  | HTMLButtonElement;
declare var Touchable: React.AbstractComponent<Props, TouchableElement>;
declare export default typeof Touchable;

import { type CssStyle } from "./__css_types__.js.flow";
