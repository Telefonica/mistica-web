// @flow
/**
 * Flowtype definitions for touchable
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 **/

import * as React from "react";
import { Link } from "react-router-dom";
import { type TrackingEvent } from "./utils/types";
import { type Location } from "history";
export type PressHandler = (event: SyntheticMouseEvent<HTMLElement>) => void;
declare type CommonProps = {
  children: React.Node,
  className?: string,
  disabled?: boolean,
  elementRef?: React.Ref<
    HTMLButtonElement | HTMLAnchorElement | HTMLDivElement
  >,
  style?: $Shape<CSSStyleDeclaration>,
  trackingEvent?: TrackingEvent,
  label?: string,
  "data-testid"?: string,
  "aria-checked"?: "true" | "false",
  "aria-controls"?: string,
  "aria-expanded"?: "true" | "false",
  "aria-hidden"?: "true" | "false",
  role?: string,
  type?: "button" | "submit",
  tabIndex?: number
};
declare type PropsHref = {
  ...$Exact<CommonProps>,

  href: string,
  newTab?: boolean,
  to?: void,
  onPress?: void
};
declare type PropsOnPress = {
  ...$Exact<CommonProps>,

  onPress: PressHandler,
  href?: void,
  to?: void
};
declare type PropsTo = {
  ...$Exact<CommonProps>,

  to: string | Location,
  fullPageOnWebView?: boolean,
  replace?: boolean,
  href?: void,
  onPress?: void
};
declare type PropsMaybeHref = {
  ...$Exact<CommonProps>,

  maybe: true,
  href?: string,
  newTab?: boolean,
  to?: void,
  onPress?: void
};
declare type PropsMaybeTo = {
  ...$Exact<CommonProps>,

  maybe: true,
  to?: string | Location,
  fullPageOnWebView?: boolean,
  replace?: boolean,
  href?: void,
  onPress?: void
};
declare type PropsMaybeOnPress = {
  ...$Exact<CommonProps>,

  maybe: true,
  onPress?: PressHandler,
  href?: void,
  to?: void
};
declare type Props =
  | PropsHref
  | PropsTo
  | PropsOnPress
  | PropsMaybeHref
  | PropsMaybeTo
  | PropsMaybeOnPress;
declare var Touchable: (
  props: Props
) =>
  | React.Element<typeof Link>
  | React.Element<"a">
  | React.Element<"button">
  | React.Element<"div">;
declare export default typeof Touchable;
