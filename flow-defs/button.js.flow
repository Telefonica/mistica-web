// @flow
/**
 * Flowtype definitions for button
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as React from "react";
import { type TrackingEvent } from "./utils/types";
import { type Location } from "history";
declare export var BUTTON_MIN_WIDTH: 156;
declare type CommonProps = {
  children: React.Node,
  className?: string,
  style?: CssStyle,
  small?: boolean,
  showSpinner?: boolean,
  loadingText?: string,
  disabled?: boolean,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  "data-testid"?: string,
  "aria-controls"?: string,
  "aria-expanded"?: "true" | "false",
  tabIndex?: number
};
export type ToButtonProps = {
  ...$Exact<CommonProps>,

  to: string | Location,
  fullPageOnWebView?: boolean,
  submit?: void,
  fake?: void,
  onPress?: void,
  href?: void
};
export type OnPressButtonProps = {
  ...$Exact<CommonProps>,

  onPress: (event: SyntheticMouseEvent<HTMLElement>) => void | void,
  submit?: void,
  fake?: void,
  to?: void,
  href?: void
};
export type HrefButtonProps = {
  ...$Exact<CommonProps>,

  href: string,
  newTab?: boolean,
  submit?: void,
  fake?: void,
  onPress?: void,
  to?: void
};
export type FakeButtonProps = {
  ...$Exact<CommonProps>,

  fake: true,
  submit?: void,
  onPress?: void,
  to?: void,
  href?: void
};
export type SubmitButtonProps = {
  ...$Exact<CommonProps>,

  submit: true,
  to?: void,
  fake?: void,
  onPress?: void,
  href?: void
};
export type ButtonProps =
  | FakeButtonProps
  | SubmitButtonProps
  | ToButtonProps
  | OnPressButtonProps
  | HrefButtonProps;
declare type ButtonLinkCommonProps = {
  children: React.Node,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  "data-testid"?: string
};
declare type ButtonLinkOnPressProps = {
  ...$Exact<ButtonLinkCommonProps>,

  onPress: (event: SyntheticMouseEvent<HTMLElement>) => void,
  to?: void,
  href?: void
};
declare type ButtonLinkHrefProps = {
  ...$Exact<ButtonLinkCommonProps>,

  href: string,
  newTab?: boolean,
  onPress?: void,
  to?: void
};
declare type ButtonLinkToProps = {
  ...$Exact<ButtonLinkCommonProps>,

  to: string,
  fullPageOnWebView?: boolean,
  onPress?: void,
  href?: void
};
export type ButtonLinkProps =
  | ButtonLinkOnPressProps
  | ButtonLinkHrefProps
  | ButtonLinkToProps;
declare export var ButtonLink: React.ComponentType<ButtonLinkProps>;
declare export var ButtonPrimary: React.ComponentType<ButtonProps>;
declare export var ButtonSecondary: React.ComponentType<ButtonProps>;
declare export var ButtonDanger: React.ComponentType<ButtonProps>;
export type ButtonElement =
  | React.Element<typeof ButtonPrimary>
  | React.Element<typeof ButtonSecondary>
  | React.Element<typeof ButtonDanger>;
declare export {};

import { type CssStyle } from "./__types__.js.flow";
