// @flow
/**
 * Flowtype definitions for select
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as React from "react";
export type SelectProps = {
  id?: string,
  label?: string,
  helperText?: string,
  value?: string,
  onChange?: (event: SyntheticEvent<any>) => void,
  onChangeValue?: (value: string) => void,
  name?: string,
  fullWidth?: boolean,
  style?: CssStyle,
  options: $ReadOnlyArray<{
    +value: string,
    +text: string
  }>,
  required?: boolean,
  inputRef?: React.Ref<HTMLSelectElement | HTMLInputElement>,
  disabled?: boolean,
  error?: boolean,
  inputProps?: { [prop: string]: string, ... },
  autoFocus?: boolean,
  onBlur?: (event: SyntheticFocusEvent<any>) => void,
  focusableRef?: React.Ref<HTMLDivElement | HTMLSelectElement>
};
declare var Select: React.ComponentType<SelectProps>;
declare export default typeof Select;

import { type CssStyle } from "./__types__.js.flow";
