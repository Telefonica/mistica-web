// @flow

import * as React from "react";
import NavigationBreadcrumbs from "./navigation-breadcrumbs";
import { ButtonPrimary, ButtonSecondary } from "./button";
import type {
  DataAttributes,
  RendersElement,
  RendersNullableElement,
} from "./utils/types";
import type { TextPresetProps } from "./text";
declare type OverridableTextProps = {
  color?: $PropertyType<TextPresetProps, "color">,
  decoration?: $PropertyType<TextPresetProps, "decoration">,
  truncate?: $PropertyType<TextPresetProps, "truncate">,
};
declare type RichText =
  | string
  | {
      ...{
        text: string,
      },
      ...OverridableTextProps,
    };
declare type HeaderProps = {
  pretitle?: RichText,
  title?: string,
  preamount?: RichText,
  amount?: string,
  button?: RendersNullableElement<typeof ButtonPrimary>,
  secondaryButton?: RendersNullableElement<typeof ButtonSecondary>,
  subtitle?: RichText,
  isErrorAmount?: boolean,
  dataAttributes?: DataAttributes,
};
declare export var Header: React.ComponentType<HeaderProps>;
declare type MainSectionHeaderProps = {
  title: string,
  description?: string,
  button?:
    | RendersNullableElement<typeof ButtonPrimary>
    | RendersNullableElement<typeof ButtonSecondary>,
};
declare export var MainSectionHeader: React.ComponentType<MainSectionHeaderProps>;
declare type HeaderLayoutProps = {
  isInverse?: boolean,
  breadcrumbs?: RendersNullableElement<typeof NavigationBreadcrumbs>,
  header: React.Node,
  extra?: React.Node,
  sideBySideExtraOnDesktop?: boolean,
  dataAttributes?: DataAttributes,
};
declare export var HeaderLayout: React.ComponentType<HeaderLayoutProps>;
declare type MainSectionHeaderLayoutProps = {
  isInverse?: boolean,
  children: RendersElement<typeof MainSectionHeader>,
};
declare export var MainSectionHeaderLayout: React.ComponentType<MainSectionHeaderLayoutProps>;
declare export {};
