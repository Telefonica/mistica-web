// @flow

import * as React from "react";
import NavigationBreadcrumbs from "./navigation-breadcrumbs";
import { ButtonPrimary, ButtonSecondary } from "./button";
import type { TextPresetProps } from "./text";
declare type OverridableTextProps = {
  color?: $PropertyType<TextPresetProps, "color">,
  textDecoration?: $PropertyType<TextPresetProps, "textDecoration">,
  truncate?: $PropertyType<TextPresetProps, "truncate">,
};
declare type RichText =
  | string
  | ({
      text: string,
    } & OverridableTextProps);
declare type HeaderProps = {
  pretitle?: RichText,
  title?: string,
  preamount?: RichText,
  amount?: string,
  button?: React.Element<typeof ButtonPrimary>,
  secondaryButton?: React.Element<typeof ButtonSecondary>,
  subtitle?: RichText,
  isErrorAmount?: boolean,
};
declare export var Header: React.ComponentType<HeaderProps>;
declare type MainSectionHeaderProps = {
  title: string,
  description?: string,
  button?:
    | React.Element<typeof ButtonPrimary>
    | React.Element<typeof ButtonSecondary>,
};
declare export var MainSectionHeader: React.ComponentType<MainSectionHeaderProps>;
declare type HeaderLayoutProps = {
  isInverse?: boolean,
  breadcrumbs?: React.Element<typeof NavigationBreadcrumbs>,
  header: React.Node,
  extra?: React.Node,
  sideBySideExtraOnDesktop?: boolean,
};
declare export var HeaderLayout: React.ComponentType<HeaderLayoutProps>;
declare type MainSectionHeaderLayoutProps = {
  isInverse?: boolean,
  children: React.Element<typeof MainSectionHeader>,
};
declare export var MainSectionHeaderLayout: React.ComponentType<MainSectionHeaderLayoutProps>;
declare export {};
