// @flow

import * as React from "react";
import type { DataAttributes, TrackingEvent } from "./utils/types";
declare type CommonProps = {|
  headline?: string | React.Node,
  title: string,
  titleLinesMax?: number,
  subtitle?: string,
  subtitleLinesMax?: number,
  description?: string | null,
  descriptionLinesMax?: number,
  icon?: React.Node,
  iconSize?: 24 | 40,
  badge?: boolean | number,
  role?: string,
  extra?: React.Node,
|};
declare type ControlProps = {
  name?: string,
  value?: boolean,
  defaultValue?: boolean,
  onChange?: (checked: boolean) => void,
};
declare type BasicRowContentProps = {|
  ...$Exact<CommonProps>,
  right?: React.Node,
|};
declare type SwitchRowContentProps = {|
  ...$Exact<CommonProps>,
  onPress?: () => void,
  switch: ControlProps,
|};
declare type CheckboxRowContentProps = {|
  ...$Exact<CommonProps>,
  onPress?: () => void,
  checkbox: ControlProps,
|};
declare type RadioRowContentProps = {|
  ...$Exact<CommonProps>,
  radioValue: string,
|};
declare type HrefRowContentProps = {|
  ...$Exact<CommonProps>,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  href: string,
  newTab?: boolean,
  right?: React.Node,
|};
declare type ToRowContentProps = {|
  ...$Exact<CommonProps>,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  to: string,
  fullPageOnWebView?: boolean,
  replace?: boolean,
  right?: React.Node,
|};
declare type OnPressRowContentProps = {|
  ...$Exact<CommonProps>,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,
  onPress: () => void,
  right?: React.Node,
|};
declare type RowContentProps =
  | BasicRowContentProps
  | SwitchRowContentProps
  | RadioRowContentProps
  | CheckboxRowContentProps
  | HrefRowContentProps
  | ToRowContentProps
  | OnPressRowContentProps;
declare export var Row: React.ComponentType<RowContentProps>;
declare type RowListProps = {
  children: React.Node,
  ariaLabelledby?: string,
  role?: string,
  dataAttributes?: DataAttributes,
};
declare export var RowList: React.ComponentType<RowListProps>;
declare type CommonBoxedRowProps = {|
  isInverse?: boolean,
|};
declare type BasicBoxedRowProps = {|
  ...$Exact<BasicRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type SwitchBoxedRowProps = {|
  ...$Exact<SwitchRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type CheckboxBoxedRowProps = {|
  ...$Exact<CheckboxRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type RadioBoxedRowProps = {|
  ...$Exact<RadioRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type HrefBoxedRowProps = {|
  ...$Exact<HrefRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type ToBoxedRowProps = {|
  ...$Exact<ToRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type OnPressBoxedRowProps = {|
  ...$Exact<OnPressRowContentProps>,
  ...$Exact<CommonBoxedRowProps>,
|};
declare type BoxedRowProps =
  | BasicBoxedRowProps
  | SwitchBoxedRowProps
  | RadioBoxedRowProps
  | CheckboxBoxedRowProps
  | HrefBoxedRowProps
  | ToBoxedRowProps
  | OnPressBoxedRowProps;
declare export var BoxedRow: React.ComponentType<BoxedRowProps>;
declare type BoxedRowListProps = {
  children: React.Node,
  ariaLabelledby?: string,
  role?: string,
  dataAttributes?: DataAttributes,
};
declare export var BoxedRowList: React.ComponentType<BoxedRowListProps>;
declare export {};
