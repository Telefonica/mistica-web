// @flow

import * as React from "react";
import type { DataAttributes, TrackingEvent } from "./utils/types";
declare type CommonProps = {|
  children?: React.Node,
  className?: string,
  disabled?: boolean,
  icon?: string,
  iconSize?: number,
  backgroundColor?: string,
  size?: number | string,
  style?: CssStyle,
  trackingEvent?: TrackingEvent | $ReadOnlyArray<TrackingEvent>,

  /**
   * @deprecated use dataAttributes
   */
  "data-testid"?: string,

  /**
   * "data-" prefix is automatically added. For example, use "testid" instead of "data-testid"
   */
  dataAttributes?: DataAttributes,
  newTab?: boolean,
|};
declare type HrefProps = {|
  ...$Exact<CommonProps>,
  label: string,
  href: string,
|};
declare type ToProps = {|
  ...$Exact<CommonProps>,
  label: string,
  to: string,
  fullPageOnWebView?: boolean,
  replace?: boolean,
|};
declare type OnPressProps = {|
  ...$Exact<CommonProps>,
  label: string,
  onPress: (event: SyntheticMouseEvent<HTMLElement>) => void,
|};
declare type MaybeProps = {| ...$Exact<CommonProps> |};
declare type Props = HrefProps | ToProps | OnPressProps | MaybeProps;
declare var IconButton: React.ComponentType<Props>;
declare export default typeof IconButton;

import { type CssStyle } from "./__types__.js.flow";
