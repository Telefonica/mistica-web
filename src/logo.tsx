'use client';
import * as React from 'react';
import {useTheme} from './hooks';
import {useIsInverseVariant} from './theme-variant-context';
import Touchable from './touchable';
import {getMovistarSkin} from './skins/movistar';
import {getVivoSkin} from './skins/vivo';
import {getO2Skin} from './skins/o2';
import {getBlauSkin} from './skins/blau';
import {getTuSkin} from './skins/tu';
import {getTelefonicaSkin} from './skins/telefonica';
import {getPrefixedDataAttributes} from './utils/dom';
import * as styles from './logo.css';
import {applyCssVars} from './utils/css';

import type {SkinName} from './skins/types';
import type {ByBreakpoint, DataAttributes, TrackingEvent} from './utils/types';
import type {ExclusifyUnion} from './utils/utility-types';

const calcInlineVars = (size: ByBreakpoint<number>) => {
    if (typeof size === 'number') {
        return {
            [styles.vars.size]: `${size}px`,
        };
    }
    const vars = {
        [styles.vars.sizeMobile]: `${size.mobile}px`,
        [styles.vars.sizeDesktop]: `${size.desktop}px`,
    };
    if (size.tablet) {
        vars[styles.vars.sizeTablet] = `${size.tablet}px`;
    }
    return vars;
};

type LogoType = 'isotype' | 'imagotype' | 'vertical';
type LogoImageProps = {size: ByBreakpoint<number>; type: LogoType};

const MovistarLogoImage = ({size, type}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const {colors} = getMovistarSkin();
    const isInverse = useIsInverseVariant();
    const color = isInverse && !isDarkMode ? colors.inverse : colors.brand;

    if (type === 'vertical') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 72 72"
                fill={color}
            >
                <path d="M22.1005 12.8312C20.077 12.8698 16.3384 13.8526 14.6232 20.8289C13.8716 23.8738 13.5825 27.0343 14.2378 30.8115C14.8159 34.2804 15.8566 37.2867 16.5696 38.9441C16.8201 39.5222 17.1863 40.1004 17.4754 40.4665C18.304 41.5265 19.6916 41.4494 20.2697 41.1603C20.9057 40.852 21.638 40.1004 21.3682 38.366C21.2333 37.5373 20.8672 36.3232 20.6744 35.6487C20.0385 33.5674 19.1905 31.0621 19.1134 29.2891C19.0171 26.8994 19.9614 26.5911 20.5781 26.4562C21.638 26.2249 22.5052 27.3812 23.3532 28.8266C24.3553 30.561 26.0705 33.6059 27.458 35.9377C28.7107 38.0383 31.0425 40.3124 34.7812 40.1582C38.5969 40.004 41.3913 38.5394 42.8367 33.9721C43.9159 30.5417 44.6482 27.9979 45.843 25.377C47.2113 22.3706 49.0228 20.7518 50.5645 21.2529C51.9906 21.7154 52.3375 23.1029 52.3568 25.1457C52.376 26.9572 52.1641 28.9422 51.9906 30.4068C51.9328 30.9464 51.8172 32.0064 51.875 32.6038C51.9521 33.7793 52.4724 34.9356 53.7829 35.1283C55.1897 35.3211 56.3074 34.2033 56.7507 32.8543C56.9241 32.3147 57.0783 31.5053 57.1554 30.9272C57.5601 27.9979 57.6757 26.0322 57.483 23.0451C57.271 19.557 56.5772 16.3579 55.3824 13.6021C54.2454 10.9619 52.4146 9.266 50.0442 9.11183C47.4425 8.93839 44.4555 10.6728 42.8752 14.0261C41.4298 17.1095 40.2736 20.2893 39.5798 21.9081C38.8667 23.5462 37.8261 24.5676 36.2073 24.741C34.2416 24.953 32.5457 23.5269 31.3123 21.4841C30.2331 19.7112 28.094 16.3386 26.9377 15.2016C25.897 14.1224 24.6636 12.7927 22.1005 12.8312Z" />
                <path d="M17.3019 51.9718V62.494H15.8758C15.5482 62.494 15.3748 62.3013 15.3748 61.9737V55.0167L12.5419 59.6611H11.3085C10.9809 59.6611 10.8267 59.5455 10.6725 59.2949L8.01307 55.1516V62.494H6.06665V52.5692C6.06665 52.1838 6.25937 51.9718 6.68334 51.9718H8.24433L11.771 57.6183L14.8737 52.415C15.0664 52.0681 15.2592 51.9718 15.6639 51.9718H17.3019Z" />
                <path d="M18.8244 58.7938C18.8244 56.5198 20.3468 54.9395 22.6594 54.9395C24.972 54.9395 26.4944 56.5198 26.4944 58.7938C26.4944 61.0679 24.9527 62.6481 22.6594 62.6481C20.3468 62.6481 18.8244 61.0679 18.8244 58.7938ZM24.3938 58.7938C24.3938 57.4063 23.7579 56.5391 22.6594 56.5391C21.5609 56.5391 20.925 57.387 20.925 58.7938C20.925 60.1621 21.5609 61.0486 22.6594 61.0486C23.7579 61.0486 24.3938 60.1814 24.3938 58.7938Z" />
                <path d="M35.1473 55.0938L31.9868 62.4748H30.5414C30.2331 62.4748 30.0597 62.3591 29.9633 62.0701L27.246 55.6719C27.1111 55.325 27.246 55.0745 27.6315 55.0745H29.231L31.1196 60.2007L33.0082 55.0745H35.1473V55.0938Z" />
                <path d="M35.9567 52.5499C35.9567 51.8754 36.5156 51.3358 37.1901 51.3358C37.8453 51.3358 38.4042 51.8754 38.4042 52.5499C38.4042 53.2629 37.8453 53.7832 37.1901 53.7832C36.4963 53.7832 35.9567 53.2629 35.9567 52.5499ZM36.1302 55.614C36.1302 55.2671 36.3229 55.0937 36.6505 55.0937H38.1922V62.494H36.1302V55.614Z" />
                <path d="M40.3699 62.3976C39.9459 62.282 39.8688 62.0892 39.8688 61.8194V60.7788C40.6204 60.9715 41.5455 61.1449 42.3741 61.1449C43.4148 61.1449 43.8195 60.7981 43.8195 60.3548C43.8195 59.873 43.3763 59.7381 42.6825 59.5647L41.9502 59.372C40.5819 59.0443 39.7147 58.3891 39.7147 57.1365C39.7147 55.6526 40.8902 54.9395 42.9523 54.9395C43.6846 54.9395 44.4362 55.0552 44.8602 55.1901C45.2649 55.3057 45.3227 55.4599 45.3227 55.7682V56.7318C44.5904 56.5391 43.6846 56.4427 42.9716 56.4427C42.0465 56.4427 41.6611 56.674 41.6611 57.0787C41.6611 57.4834 42.1814 57.6761 42.8367 57.8495L43.6653 58.0615C44.706 58.312 45.7852 58.6975 45.7852 60.2585C45.7852 61.858 44.5711 62.6674 42.432 62.6674C41.6804 62.6481 40.8324 62.5518 40.3699 62.3976Z" />
                <path d="M47.6353 60.2778V56.5584H46.1128V55.6141C46.1128 55.2672 46.3055 55.0938 46.6331 55.0938H47.6353V52.9546C47.6353 52.627 47.828 52.4343 48.1556 52.4343H49.6973V55.0938H51.663V56.5584H49.6973V59.9117C49.6973 60.6825 49.9671 61.0679 50.8536 61.0679C51.2583 61.0679 51.7015 60.9909 52.0677 60.9138V61.9159C52.0677 62.1471 52.0099 62.3013 51.6437 62.4555C51.3547 62.5711 50.8343 62.6482 50.2947 62.6482C48.6952 62.6482 47.6353 61.8195 47.6353 60.2778Z" />
                <path d="M60.7977 61.0294V61.993C60.7977 62.1857 60.7977 62.3977 60.4315 62.5133C60.2388 62.5711 59.9497 62.6289 59.6414 62.6289C58.6393 62.6289 58.0997 62.1664 57.8491 61.4148C57.3095 62.1857 56.4231 62.6482 55.4017 62.6482C53.8792 62.6482 52.8771 61.6075 52.8771 60.2778C52.8771 58.7168 54.2454 57.9267 56.9048 57.9267C57.1746 57.9267 57.4637 57.946 57.695 57.9652C57.695 56.9631 57.2325 56.5584 55.922 56.5584C55.1897 56.5584 54.2261 56.674 53.5131 56.8668V55.8646C53.5131 55.537 53.5902 55.3829 53.9563 55.2672C54.4766 55.0938 55.3631 54.9782 56.2303 54.9782C58.9476 54.9782 59.757 56.1923 59.757 57.7532V60.3742C59.757 60.9138 59.8727 61.145 60.3544 61.145C60.4893 61.0872 60.7013 61.0679 60.7977 61.0294ZM57.6564 59.6611V59.1215H57.271C55.6715 59.1215 54.8621 59.3721 54.8621 60.2007C54.8621 60.7596 55.2668 61.2221 56.0184 61.2221C56.9434 61.2221 57.6564 60.5862 57.6564 59.6611Z" />
                <path d="M66.7333 55.4213V56.8474H66.0203C64.7098 56.8474 64.016 57.3677 64.016 58.8709V62.5132H61.954V55.6333C61.954 55.2864 62.1467 55.1129 62.455 55.1129H63.8426L63.8811 56.6739C64.2858 55.5562 65.1916 54.9588 66.2323 54.9588C66.5599 54.9395 66.7333 55.0937 66.7333 55.4213Z" />
            </svg>
        );
    }

    if (type === 'imagotype') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 195 72"
                fill={color}
            >
                <path d="M17.9412 17.6705C15.0439 17.7257 9.69094 19.1342 7.23519 29.1317C6.15907 33.4952 5.74518 38.0245 6.68333 43.4375C7.51111 48.4086 9.00112 52.7169 10.022 55.092C10.3808 55.9205 10.905 56.7491 11.3189 57.2738C12.5054 58.7927 14.4921 58.6823 15.3198 58.268C16.2304 57.8261 17.2789 56.7491 16.8926 54.2635C16.6995 53.0759 16.1752 51.3361 15.8993 50.3694C14.9887 47.3868 13.7747 43.7965 13.6643 41.2557C13.5263 37.8312 14.8784 37.3893 15.7613 37.196C17.2789 36.8646 18.5206 38.5216 19.7347 40.5929C21.1695 43.0785 23.6253 47.442 25.6119 50.7837C27.4055 53.794 30.7442 57.0528 36.0972 56.8319C41.5605 56.611 45.5615 54.5121 47.6309 47.9667C49.1761 43.0509 50.2246 39.4054 51.9354 35.6494C53.8944 31.3411 56.4882 29.0212 58.6956 29.7393C60.7374 30.4021 61.2341 32.3906 61.2617 35.318C61.2893 37.914 60.9858 40.7586 60.7374 42.8575C60.6547 43.6308 60.4891 45.1498 60.5719 46.0059C60.6823 47.6906 61.4273 49.3476 63.3036 49.6238C65.3178 49.9 66.9182 48.2982 67.5528 46.3649C67.8012 45.5916 68.0219 44.4317 68.1323 43.6032C68.7117 39.4054 68.8773 36.5884 68.6014 32.3077C68.2978 27.309 67.3045 22.7245 65.5938 18.7752C63.9658 14.9916 61.3445 12.5613 57.9506 12.3404C54.2256 12.0918 49.9487 14.5774 47.6861 19.3828C45.6166 23.8016 43.9611 28.3584 42.9677 30.6783C41.9468 33.0258 40.4568 34.4895 38.139 34.738C35.3246 35.0418 32.8964 32.9981 31.1305 30.0707C29.5853 27.5299 26.5225 22.6969 24.8669 21.0674C23.3493 19.5209 21.611 17.6153 17.9412 17.6705Z" />
                <path d="M107.038 44.5422H104.527C103.948 44.5422 103.644 44.2384 103.644 43.6308V31.3687L98.6498 39.5434H96.47C96.1941 39.5434 95.9733 39.4882 95.8078 39.4054C95.6422 39.2949 95.5042 39.1292 95.3663 38.9082L90.7031 31.5896V44.5422H87.2816V27.0328C87.2816 26.3423 87.6403 25.9833 88.3577 25.9833H91.117L97.353 35.9532L102.816 26.7842C102.982 26.4804 103.175 26.2595 103.368 26.1766C103.561 26.0662 103.837 26.0109 104.196 26.0109H107.038V44.5422Z" />
                <path d="M112.943 43.9623C111.922 43.3823 111.149 42.5814 110.57 41.5595C109.99 40.5377 109.714 39.3502 109.714 38.0245C109.714 36.6989 109.99 35.5113 110.57 34.4895C111.149 33.4677 111.922 32.6668 112.943 32.0868C113.964 31.5068 115.15 31.2307 116.502 31.2307C117.854 31.2307 119.041 31.5068 120.062 32.0868C121.083 32.6668 121.855 33.4677 122.435 34.4895C123.014 35.5113 123.29 36.6989 123.29 38.0245C123.29 39.3502 123.014 40.5377 122.435 41.5595C121.855 42.5814 121.083 43.3823 120.062 43.9623C119.041 44.5422 117.854 44.8184 116.53 44.8184C115.15 44.8184 113.964 44.5422 112.943 43.9623ZM118.71 40.9243C119.262 40.2063 119.51 39.2397 119.51 38.0245C119.51 36.7817 119.234 35.8151 118.71 35.0971C118.185 34.4067 117.44 34.0476 116.447 34.0476C115.481 34.0476 114.736 34.4067 114.185 35.0971C113.66 35.7875 113.384 36.7817 113.384 38.0245C113.384 39.2397 113.66 40.2063 114.185 40.9243C114.736 41.6424 115.481 42.0014 116.42 42.0014C117.44 42.0014 118.185 41.6424 118.71 40.9243Z" />
                <path d="M134.686 31.5068H138.466L132.92 44.5422H130.381C130.106 44.5422 129.885 44.487 129.747 44.3765C129.581 44.266 129.471 44.1003 129.36 43.8242L124.587 32.5563C124.532 32.3906 124.504 32.2525 124.504 32.1144C124.504 31.9211 124.559 31.7554 124.697 31.6449C124.835 31.5344 125.001 31.4792 125.277 31.4792H128.091L131.402 40.5101L134.686 31.5068Z" />
                <path d="M140.977 28.8831C140.646 28.6898 140.398 28.4413 140.204 28.1099C140.011 27.7785 139.901 27.4194 139.901 27.0052C139.901 26.6185 140.011 26.2595 140.204 25.9281C140.398 25.5967 140.674 25.3481 140.977 25.1548C141.308 24.9615 141.667 24.8786 142.053 24.8786C142.439 24.8786 142.798 24.9615 143.129 25.1548C143.46 25.3481 143.736 25.5967 143.902 25.9281C144.095 26.2595 144.178 26.6185 144.178 27.0052C144.178 27.3918 144.095 27.7785 143.902 28.1099C143.709 28.4413 143.46 28.7174 143.129 28.8831C142.798 29.0765 142.439 29.1593 142.053 29.1593C141.667 29.1593 141.281 29.0765 140.977 28.8831ZM140.204 32.4182C140.204 31.8106 140.508 31.5068 141.115 31.5068H143.847V44.5698H140.204V32.4182Z" />
                <path d="M149.282 44.7079C148.62 44.6251 148.068 44.5146 147.654 44.3765C147.296 44.2661 147.047 44.128 146.937 43.9899C146.827 43.8242 146.771 43.6308 146.771 43.3547V41.5319C147.489 41.7253 148.234 41.891 149.007 42.0014C149.779 42.1119 150.496 42.1671 151.186 42.1671C152.042 42.1671 152.676 42.029 153.09 41.7805C153.504 41.5319 153.725 41.1729 153.725 40.7586C153.725 40.4825 153.642 40.2615 153.504 40.1234C153.339 39.9577 153.145 39.8197 152.869 39.7368C152.594 39.6263 152.235 39.5159 151.738 39.4054L150.441 39.0464C149.172 38.7426 148.206 38.2731 147.516 37.6379C146.827 37.0027 146.496 36.1742 146.496 35.0971C146.496 33.7991 146.992 32.8325 147.958 32.1973C148.924 31.5621 150.359 31.2307 152.207 31.2307C152.842 31.2307 153.449 31.2583 154.056 31.3411C154.663 31.424 155.16 31.5344 155.574 31.6449C155.905 31.7278 156.125 31.8382 156.236 32.0039C156.346 32.1696 156.374 32.363 156.374 32.6668V34.379C155.739 34.2133 155.022 34.1029 154.304 33.9924C153.559 33.9095 152.869 33.8543 152.235 33.8543C150.717 33.8543 149.945 34.2133 149.945 34.959C149.945 35.2904 150.11 35.5666 150.469 35.7599C150.828 35.9532 151.324 36.1465 152.014 36.3122L153.477 36.6989C154.222 36.8922 154.856 37.0855 155.38 37.3341C155.905 37.5827 156.346 37.9693 156.677 38.494C157.008 39.0188 157.202 39.6816 157.202 40.5653C157.202 41.9738 156.705 43.0233 155.684 43.7413C154.663 44.4594 153.201 44.8184 151.297 44.8184C150.634 44.8184 149.972 44.7908 149.282 44.7079Z" />
                <path d="M162.665 44.3489C161.975 44.0175 161.423 43.548 161.037 42.9128C160.651 42.2776 160.457 41.5319 160.457 40.6482V34.1028H157.781V32.4182C157.781 31.8106 158.084 31.5068 158.692 31.5068H160.457V27.7232C160.457 27.4194 160.54 27.1985 160.706 27.0328C160.871 26.8671 161.092 26.8119 161.368 26.8119H164.1V31.5068H167.576V34.1028H164.1V40.013C164.1 40.7034 164.238 41.2281 164.569 41.5595C164.872 41.8909 165.397 42.0566 166.142 42.0566C166.721 42.0566 167.438 41.9738 168.266 41.7805V43.548C168.266 43.7689 168.211 43.9346 168.128 44.1003C168.018 44.2384 167.825 44.3765 167.521 44.5146C167.273 44.6251 166.914 44.7079 166.5 44.7631C166.059 44.8184 165.617 44.846 165.148 44.846C164.182 44.8184 163.382 44.6527 162.665 44.3489Z" />
                <path d="M183.249 42.0566C183.387 42.029 183.525 42.0014 183.635 41.9738V43.6861C183.635 43.907 183.608 44.1003 183.525 44.2384C183.442 44.4041 183.277 44.5146 183.001 44.5974C182.587 44.7355 182.118 44.7908 181.593 44.7908C179.965 44.7908 178.917 44.0727 178.448 42.6642C177.979 43.3547 177.372 43.8794 176.627 44.266C175.882 44.6527 175.054 44.846 174.143 44.846C173.288 44.846 172.515 44.6527 171.826 44.2936C171.136 43.9346 170.612 43.4099 170.253 42.7747C169.894 42.1395 169.701 41.4214 169.701 40.6482C169.701 39.2673 170.308 38.2454 171.495 37.555C172.681 36.8646 174.447 36.5056 176.792 36.5056L178.172 36.5332C178.144 35.9256 178.062 35.4561 177.868 35.1247C177.675 34.7657 177.372 34.5171 176.903 34.3514C176.434 34.1857 175.854 34.1028 175.082 34.1028C174.447 34.1028 173.73 34.1581 172.929 34.2409C172.157 34.3514 171.439 34.4619 170.805 34.6276V32.8601C170.805 32.5563 170.86 32.3353 170.97 32.1696C171.081 32.0039 171.274 31.8935 171.605 31.8106C172.074 31.6725 172.681 31.5344 173.398 31.4516C174.116 31.3411 174.861 31.3135 175.606 31.3135C177.841 31.3135 179.441 31.7554 180.407 32.6115C181.373 33.4953 181.842 34.6828 181.842 36.2018V40.8139C181.842 41.311 181.925 41.6424 182.063 41.8633C182.201 42.0843 182.476 42.1671 182.89 42.1671C182.973 42.0843 183.111 42.0566 183.249 42.0566ZM176.71 41.9738C177.151 41.7528 177.482 41.4214 177.758 40.9796C178.006 40.5653 178.144 40.0682 178.144 39.5435V38.6045H177.482C176.02 38.6045 174.944 38.7426 174.254 39.0463C173.564 39.3225 173.205 39.8196 173.205 40.5377C173.205 41.0624 173.398 41.5043 173.757 41.8357C174.116 42.1671 174.613 42.3604 175.275 42.3604C175.771 42.3052 176.268 42.1947 176.71 41.9738Z" />
                <path d="M194.093 32.0592V34.5723H192.824C191.61 34.5723 190.727 34.8485 190.147 35.4009C189.568 35.9532 189.292 36.8646 189.292 38.135V44.5698H185.65V32.4182C185.65 31.8106 185.953 31.5068 186.533 31.5068H188.988L189.044 34.2685C189.402 33.3019 189.954 32.5563 190.671 32.0315C191.389 31.5068 192.244 31.2583 193.155 31.2583C193.789 31.2306 194.093 31.5068 194.093 32.0592Z" />
            </svg>
        );
    }

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M17.2797 17.2124C14.4995 17.2572 9.36782 18.6502 7.02384 28.3781C6.00256 32.6168 5.60793 37.0347 6.4823 42.2938C7.28828 47.1441 8.71635 51.3303 9.67886 53.6376C10.0107 54.4324 10.5244 55.2617 10.9215 55.7719C12.0639 57.239 13.9651 57.1453 14.764 56.7453C15.6348 56.3098 16.6358 55.2581 16.2736 52.8561C16.0983 51.6958 15.5933 49.9981 15.3091 49.0545C14.4367 46.1588 13.2756 42.6649 13.1743 40.176C13.039 36.8468 14.3308 36.4108 15.1885 36.2193C16.6312 35.8965 17.8405 37.5063 18.9894 39.5237C20.3607 41.9314 22.7108 46.1974 24.6277 49.456C26.3582 52.3975 29.5517 55.5469 34.6804 55.3307C39.9089 55.1109 43.763 53.0837 45.7483 46.7014C47.2341 41.9267 48.2468 38.3588 49.8765 34.7048C51.7503 30.5031 54.2498 28.254 56.3547 28.9408C58.3091 29.5781 58.7969 31.5193 58.8202 34.3728C58.841 36.8968 58.5538 39.6792 58.3304 41.7234C58.2493 42.4652 58.1024 43.9576 58.1622 44.7859C58.2802 46.4146 58.9742 48.0414 60.7792 48.3018C62.7017 48.5788 64.2443 47.0174 64.8603 45.1302C65.1034 44.3864 65.3106 43.2482 65.4226 42.4405C65.9874 38.3618 66.1338 35.6206 65.8795 31.4473C65.5811 26.5676 64.6414 22.1178 63.0021 18.2667C61.4337 14.5839 58.9145 12.2236 55.6835 12.0151C52.107 11.7845 48.0026 14.1958 45.8496 18.8741C43.8648 23.1865 42.2772 27.6136 41.3141 29.873C40.3374 32.1643 38.9018 33.5764 36.6946 33.8127C33.996 34.101 31.6708 32.1103 29.9676 29.2718C28.4828 26.7977 25.5401 22.0869 23.9656 20.5039C22.4864 19.0167 20.7969 17.1558 17.2797 17.2124Z" />
        </svg>
    );
};

const VivoLogoImage = ({size, type}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const isInverse = useIsInverseVariant();
    const {colors} = getVivoSkin();
    const color = isInverse && !isDarkMode ? colors.inverse : colors.brand;

    if (type === 'vertical') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 72 72"
                fill={color}
            >
                <path d="M24.7302 55.7681V54.5346C24.7302 54.3255 24.6222 53.5308 23.8252 53.0943L14.7817 47.9903C13.8238 47.4665 13.0106 48.0844 12.8085 48.6288L12.1998 49.9864C11.8736 50.7169 12.2181 51.5943 12.9831 51.9228L19.4217 55.1272V55.1754L12.9831 58.3752C12.2204 58.706 11.8736 59.5835 12.1998 60.3117L12.8085 61.6692C13.0106 62.2159 13.8238 62.8315 14.7817 62.3101L23.8252 57.206C24.6222 56.7719 24.7302 55.9771 24.7302 55.7681Z" />
                <path d="M24.7302 33.3465V32.1152C24.7302 31.9062 24.6222 31.1114 23.8252 30.675L14.7817 25.5709C13.8238 25.0472 13.0106 25.6651 12.8085 26.2118L12.1998 27.5694C11.8736 28.2998 12.2181 29.1773 12.9831 29.5058L19.4217 32.7102V32.7584L12.9831 35.9605C12.2204 36.2913 11.8736 37.1665 12.1998 37.8969L12.8085 39.2545C13.0106 39.8012 13.8238 40.4168 14.7817 39.8954L23.8252 34.7913C24.6222 34.3503 24.7302 33.5555 24.7302 33.3465Z" />
                <path d="M12.1216 18.3697C12.1216 21.8865 14.9746 24.7372 18.4914 24.7372C22.0105 24.7372 24.8611 21.8865 24.8611 18.3697C24.8611 14.8506 22.0105 12 18.4914 12C14.9746 12 12.1216 14.8506 12.1216 18.3697ZM21.0043 18.3697C21.0043 19.7572 19.8788 20.8827 18.4914 20.8827C17.1016 20.8827 15.9761 19.7572 15.9761 18.3697C15.9761 16.9823 17.1016 15.8545 18.4914 15.8545C19.8788 15.8568 21.0043 16.9823 21.0043 18.3697Z" />
                <path d="M8.4969 41.4482C9.87513 41.4482 10.9915 42.5669 10.9915 43.9451C10.9915 45.3234 9.87283 46.442 8.4969 46.442C7.11637 46.442 6 45.3234 6 43.9451C6 42.5669 7.11637 41.4482 8.4969 41.4482Z" />
                <path d="M13.7939 46.1158C12.9417 46.1158 12.2526 45.4267 12.2526 44.5768V43.2882C12.2526 42.4383 12.9417 41.7491 13.7939 41.7491H23.1935C24.0434 41.7491 24.7325 42.4383 24.7325 43.2882V44.5768C24.7325 45.429 24.0411 46.1158 23.1935 46.1158H13.7939Z" />
                <path d="M57.9111 22.8788C57.9111 24.5074 57.3346 27.048 55.5406 28.842C54.9089 29.4737 54.3645 29.8504 53.9258 30.1329C53.0827 30.6773 52.4717 31.0586 52.8117 31.9683C53.1448 32.8641 54.1876 32.5862 55.1731 32.3634C55.49 32.2875 61.676 30.8082 61.7541 30.8036C63.4149 30.489 65.0205 31.541 65.411 33.1673C65.4133 33.1742 65.9072 35.2393 65.9118 35.2576C66.3046 36.884 65.3513 38.5493 63.7296 39.0248C63.6607 39.0547 56.9004 40.681 56.889 40.6833C55.6049 41.0095 54.8538 41.6481 54.8538 42.8862C54.8538 43.4398 55.1731 44.0416 55.5681 44.54C55.5681 44.54 62.9118 53.6433 62.9509 53.7122C63.9501 55.0766 63.6951 56.9763 62.3973 58.0307C62.3927 58.0352 60.7434 59.3721 60.7273 59.3836C59.4318 60.438 57.5184 60.2978 56.3882 59.0391C56.3308 58.9908 51.7688 53.3837 51.2841 52.7888C50.7995 52.1938 50.1907 51.2888 49.3454 51.2888C48.5024 51.2888 47.8937 52.1938 47.409 52.7888C46.9266 53.3837 42.3624 58.9908 42.3049 59.0391C41.1748 60.2978 39.2613 60.438 37.9635 59.3836C37.9497 59.3721 36.2935 58.0307 36.2935 58.0307C34.9957 56.9763 34.7407 55.0743 35.74 53.7122C35.7767 53.641 43.1227 44.54 43.1227 44.54C43.5155 44.0416 43.8371 43.4398 43.8371 42.8862C43.8371 41.6481 43.0859 41.0118 41.8019 40.6833C41.7904 40.681 35.0302 39.0547 34.9613 39.0248C33.3395 38.5493 32.3863 36.8817 32.7768 35.2576C32.7814 35.2393 33.2775 33.1673 33.2775 33.1673C33.668 31.541 35.2714 30.4912 36.9344 30.8036C37.0125 30.8059 43.1985 32.2875 43.5155 32.3634C44.5032 32.5862 45.5438 32.8641 45.8769 31.9683C46.2168 31.0563 45.6058 30.6773 44.7651 30.1329C44.3264 29.8504 43.7797 29.4714 43.1503 28.842C41.3563 27.048 40.7774 24.5074 40.7774 22.8788C40.7774 18.2066 44.6732 14.421 49.3431 14.421C54.0153 14.4187 57.9111 18.2066 57.9111 22.8788Z" />
            </svg>
        );
    }

    if (type === 'imagotype') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 195 72"
                fill={color}
            >
                <path d="M23.3761 61.4297H26.5561C27.0861 61.4297 29.1472 61.1549 30.266 59.0938L43.4176 35.7743C44.7721 33.301 43.1821 31.2006 41.7688 30.6903L38.2748 29.1199C36.3904 28.2759 34.133 29.1592 33.2693 31.1417L25.0054 47.7481H24.8876L16.6433 31.1417C15.7992 29.1788 13.5222 28.2759 11.6575 29.1199L8.16346 30.6903C6.75015 31.2006 5.16018 33.301 6.5146 35.7743L19.6858 59.0938C20.8047 61.1549 22.8462 61.4297 23.3761 61.4297Z" />
                <path d="M81.204 61.4297H84.3839C84.9139 61.4297 86.975 61.1549 88.0939 59.0938L101.265 35.7743C102.62 33.301 101.03 31.2006 99.6163 30.6903L96.1223 29.1199C94.2378 28.2759 91.9805 29.1592 91.1364 31.1417L82.8725 47.7481H82.7547L74.4908 31.1417C73.6467 29.1788 71.3697 28.2759 69.5049 29.1199L66.0109 30.6903C64.5976 31.2006 63.0077 33.301 64.3621 35.7743L77.5137 59.0938C78.6129 61.1549 80.674 61.4297 81.204 61.4297Z" />
                <path d="M119.815 28.904C110.746 28.904 103.385 36.265 103.385 45.3337C103.385 54.4024 110.746 61.7634 119.815 61.7634C128.884 61.7634 136.244 54.4024 136.244 45.3337C136.244 36.265 128.903 28.904 119.815 28.904ZM119.815 51.8114C116.242 51.8114 113.337 48.9062 113.337 45.3337C113.337 41.7612 116.242 38.8561 119.815 38.8561C123.387 38.8561 126.292 41.7612 126.292 45.3337C126.312 48.9062 123.407 51.8114 119.815 51.8114Z" />
                <path d="M60.3184 19.5603C60.3184 23.1132 57.4329 25.9987 53.88 25.9987C50.3271 25.9987 47.4416 23.1132 47.4416 19.5603C47.4416 16.0074 50.3271 13.1219 53.88 13.1219C57.4329 13.1219 60.3184 16.0074 60.3184 19.5603Z" />
                <path d="M48.2661 33.2226C48.2661 31.0241 50.0327 29.2574 52.2312 29.2574H55.5485C57.747 29.2574 59.5136 31.0241 59.5136 33.2226V57.4647C59.5136 59.6632 57.7274 61.4298 55.5485 61.4298H52.2312C50.0327 61.4298 48.2661 59.6632 48.2661 57.4647V33.2226Z" />
                <path d="M178.919 19.5409C178.919 21.5627 178.192 24.7427 175.974 26.9608C175.189 27.746 174.502 28.2171 173.952 28.5704C172.912 29.2574 172.146 29.7285 172.559 30.867C172.971 31.9859 174.266 31.6326 175.503 31.3577C175.896 31.2596 183.61 29.4144 183.708 29.4144C185.769 29.0219 187.771 30.337 188.262 32.3588C188.262 32.3588 188.871 34.9499 188.89 34.9695C189.381 36.9913 188.184 39.0721 186.162 39.6609C186.083 39.7002 177.662 41.722 177.643 41.722C176.053 42.1342 175.11 42.9194 175.11 44.4701C175.11 45.1571 175.503 45.903 175.994 46.5312C175.994 46.5312 185.141 57.8769 185.18 57.9554C186.417 59.6632 186.103 62.0187 184.493 63.3338C184.493 63.3338 182.432 65.0023 182.413 65.0219C180.803 66.3371 178.408 66.1604 177.014 64.5901C176.936 64.5312 171.263 57.5432 170.655 56.7973C170.046 56.0514 169.3 54.9325 168.24 54.9325C167.18 54.9325 166.434 56.0514 165.826 56.7973C165.217 57.5432 159.544 64.5116 159.466 64.5901C158.053 66.1604 155.677 66.3371 154.068 65.0219C154.048 65.0023 151.987 63.3338 151.987 63.3338C150.378 62.0187 150.044 59.6435 151.3 57.9554C151.339 57.8769 160.487 46.5312 160.487 46.5312C160.977 45.903 161.37 45.1571 161.37 44.4701C161.37 42.9194 160.428 42.1342 158.838 41.722C158.818 41.722 150.397 39.7002 150.319 39.6609C148.297 39.0721 147.119 36.9913 147.59 34.9695C147.59 34.9499 148.218 32.3785 148.218 32.3588C148.709 30.337 150.711 29.0219 152.772 29.4144C152.87 29.4144 160.565 31.2596 160.977 31.3577C162.214 31.6326 163.51 31.9859 163.922 30.867C164.354 29.7285 163.588 29.2574 162.528 28.5704C161.978 28.2171 161.311 27.746 160.526 26.9608C158.288 24.723 157.562 21.5627 157.562 19.5409C157.562 13.7307 162.41 9 168.24 9C174.07 9 178.919 13.711 178.919 19.5409Z" />
            </svg>
        );
    }

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M46.8016 17.1117C46.8016 19.2508 46.0737 22.5899 43.8127 24.9457C43.0178 25.7738 42.3281 26.2722 41.777 26.6429C40.714 27.3592 39.9446 27.8575 40.3732 29.0552C40.7938 30.2313 42.1074 29.8665 43.3494 29.574C43.7492 29.4753 51.549 27.5301 51.6472 27.5253C53.7419 27.1136 55.7661 28.4943 56.2571 30.6297C56.2594 30.6381 56.8833 33.3526 56.8891 33.3766C57.3836 35.5121 56.182 37.7017 54.137 38.3264C54.0492 38.3673 45.5261 40.5028 45.5111 40.5064C43.8924 40.9361 42.945 41.7727 42.945 43.399C42.945 44.126 43.3483 44.9157 43.8462 45.5705C43.8462 45.5705 53.1064 57.5285 53.1538 57.6212C54.4143 59.4123 54.0931 61.9101 52.4548 63.2944C52.449 63.3004 50.3694 65.0579 50.3486 65.0735C48.7137 66.459 46.3014 66.276 44.8779 64.6221C44.804 64.5571 39.0538 57.1926 38.4426 56.4114C37.8326 55.6314 37.0654 54.4421 35.999 54.4421C34.9326 54.4421 34.1689 55.6302 33.5566 56.4114C32.9477 57.1926 27.194 64.5583 27.1224 64.6221C25.6978 66.2748 23.2854 66.459 21.6494 65.0735C21.6321 65.0579 19.5501 63.3004 19.5444 63.2944C17.9084 61.9101 17.586 59.4123 18.8454 57.6212C18.8927 57.5285 28.153 45.5705 28.153 45.5705C28.6498 44.9157 29.0541 44.126 29.0541 43.399C29.0541 41.7727 28.1079 40.9361 26.4881 40.5064C26.4731 40.5028 17.9511 38.3673 17.8633 38.3264C15.8183 37.7017 14.6179 35.5121 15.1101 33.3766C15.1147 33.3526 15.7409 30.6381 15.7421 30.6297C16.2331 28.4943 18.2561 27.1124 20.352 27.5253C20.4502 27.5301 28.2489 29.4753 28.6486 29.574C29.8929 29.8665 31.2054 30.2313 31.626 29.0552C32.0546 27.8587 31.2851 27.3592 30.2234 26.6429C29.6711 26.2722 28.9814 25.775 28.1865 24.9457C25.9243 22.5887 25.1964 19.2508 25.1964 17.1117C25.1987 10.9751 30.1101 6 36.0002 6C41.8902 6 46.8016 10.9751 46.8016 17.1117Z" />
        </svg>
    );
};

const O2LogoImage = ({size, type}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const isInverse = useIsInverseVariant();
    // todo WEB-761 what about classic?
    const {colors} = getO2Skin();
    const color = isInverse && !isDarkMode ? colors.inverse : colors.brand;

    if (type === 'vertical') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 72 72"
                fill={color}
            >
                <path d="M64.6464 48.1005C65.5273 48.3194 66.3797 48.7244 67.0163 49.3673C67.555 49.8826 67.9234 50.5497 68.1381 51.2513C68.3932 52.1193 68.4578 53.0409 68.3406 53.9362C68.2286 54.7438 67.9502 55.5225 67.5851 56.2533C66.899 57.5977 65.9414 58.7894 64.9183 59.9048C63.8168 61.0986 62.6299 62.214 61.4443 63.3281C63.8331 63.3205 66.222 63.3277 68.6108 63.3243C68.7406 63.3231 68.8729 63.3164 69 63.3499V66.1656C68.9276 66.1744 68.8561 66.1841 68.7849 66.187L56.6515 66.1866V63.1532C56.9278 62.8849 57.223 62.6362 57.5061 62.3746C58.7357 61.2826 59.9476 60.1702 61.0896 58.9906C62.1882 57.8312 63.2582 56.619 64.0232 55.2197C64.3697 54.5626 64.6602 53.8473 64.655 53.0979C64.6516 52.5621 64.4529 52.0228 64.0723 51.6312C63.578 51.1099 62.8587 50.8466 62.1481 50.7611C61.1887 50.6609 60.2199 50.855 59.327 51.1913C58.6379 51.4458 57.9983 51.8056 57.3725 52.1792C57.2747 51.1712 57.173 50.1635 57.0791 49.1551C58.6163 48.4104 60.3087 47.9609 62.0261 47.8824C62.9031 47.8313 63.7918 47.895 64.6464 48.1005ZM44.5216 15.9479C46.2174 16.5777 47.8288 17.4272 49.2842 18.4844C51.7084 20.2329 53.6818 22.5547 55.0432 25.1725C56.3106 27.5865 57.064 30.2404 57.3669 32.9308C57.5113 34.2801 57.5716 35.6404 57.4945 36.9961C57.3885 39.1497 56.97 41.2895 56.2443 43.3274C55.1022 46.5373 53.168 49.4901 50.5956 51.7934C48.1348 54.0137 45.0922 55.6109 41.841 56.4164C39.4569 57.011 36.9711 57.1964 34.5189 57.0169C32.0275 56.8353 29.5623 56.2462 27.2864 55.2382C24.6566 54.0787 22.2902 52.3616 20.3927 50.2449C18.0655 47.6619 16.445 44.5002 15.6352 41.1616C15.2392 39.5413 15.0384 37.8792 15 36.2153V35.3469C15.0353 33.9564 15.1603 32.5664 15.4189 31.1973C16.0352 27.8905 17.3992 24.692 19.5312 22.0352C21.1736 19.9734 23.2664 18.2546 25.6285 17.0201C28.6633 15.4237 32.1089 14.6354 35.5471 14.5511C38.5915 14.4593 41.6699 14.8883 44.5216 15.9479ZM35.3058 20.656C34.0556 20.7554 32.817 21.0309 31.6603 21.5068C30.4359 22.0054 29.3042 22.714 28.3199 23.5799C27.0856 24.6597 26.078 25.9726 25.3009 27.397C24.1179 29.5695 23.456 31.9948 23.2715 34.442C23.1655 35.8798 23.2284 37.3286 23.4426 38.7551C23.7215 40.5808 24.2533 42.3768 25.0885 44.0369C25.797 45.4479 26.7296 46.7608 27.8988 47.8476C29.1348 49.0096 30.6453 49.8935 32.2813 50.4072C33.7802 50.8797 35.3705 51.0542 36.9413 50.9883C38.4027 50.9208 39.8611 50.6344 41.2092 50.0734C43.2433 49.2406 44.9767 47.7906 46.2355 46.037C47.8603 43.7815 48.7769 41.0966 49.1372 38.3786C49.613 34.8311 49.0941 31.1331 47.4931 27.8998C46.776 26.4703 45.8494 25.1281 44.6828 24.0085C43.4299 22.7706 41.8862 21.8075 40.1968 21.241C38.632 20.7114 36.9543 20.5386 35.3058 20.656Z" />
            </svg>
        );
    }

    if (type === 'imagotype') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 72 72"
                fill={color}
            >
                <path d="M64.6464 48.1005C65.5273 48.3194 66.3797 48.7244 67.0163 49.3673C67.555 49.8826 67.9234 50.5497 68.1381 51.2513C68.3932 52.1193 68.4578 53.0409 68.3406 53.9362C68.2286 54.7438 67.9502 55.5225 67.5851 56.2533C66.899 57.5977 65.9414 58.7894 64.9183 59.9048C63.8168 61.0986 62.6299 62.214 61.4443 63.3281C63.8331 63.3205 66.222 63.3277 68.6108 63.3243C68.7406 63.3231 68.8729 63.3164 69 63.3499V66.1656C68.9276 66.1744 68.8561 66.1841 68.7849 66.187L56.6515 66.1866V63.1532C56.9278 62.8849 57.223 62.6362 57.5061 62.3746C58.7357 61.2826 59.9476 60.1702 61.0896 58.9906C62.1882 57.8312 63.2582 56.619 64.0232 55.2197C64.3697 54.5626 64.6602 53.8473 64.655 53.0979C64.6516 52.5621 64.4529 52.0228 64.0723 51.6312C63.578 51.1099 62.8587 50.8466 62.1481 50.7611C61.1887 50.6609 60.2199 50.855 59.327 51.1913C58.6379 51.4458 57.9983 51.8056 57.3725 52.1792C57.2747 51.1712 57.173 50.1635 57.0791 49.1551C58.6163 48.4104 60.3087 47.9609 62.0261 47.8824C62.9031 47.8313 63.7918 47.895 64.6464 48.1005ZM44.5216 15.9479C46.2174 16.5777 47.8288 17.4272 49.2842 18.4844C51.7084 20.2329 53.6818 22.5547 55.0432 25.1725C56.3106 27.5865 57.064 30.2404 57.3669 32.9308C57.5113 34.2801 57.5716 35.6404 57.4945 36.9961C57.3885 39.1497 56.97 41.2895 56.2443 43.3274C55.1022 46.5373 53.168 49.4901 50.5956 51.7934C48.1348 54.0137 45.0922 55.6109 41.841 56.4164C39.4569 57.011 36.9711 57.1964 34.5189 57.0169C32.0275 56.8353 29.5623 56.2462 27.2864 55.2382C24.6566 54.0787 22.2902 52.3616 20.3927 50.2449C18.0655 47.6619 16.445 44.5002 15.6352 41.1616C15.2392 39.5413 15.0384 37.8792 15 36.2153V35.3469C15.0353 33.9564 15.1603 32.5664 15.4189 31.1973C16.0352 27.8905 17.3992 24.692 19.5312 22.0352C21.1736 19.9734 23.2664 18.2546 25.6285 17.0201C28.6633 15.4237 32.1089 14.6354 35.5471 14.5511C38.5915 14.4593 41.6699 14.8883 44.5216 15.9479ZM35.3058 20.656C34.0556 20.7554 32.817 21.0309 31.6603 21.5068C30.4359 22.0054 29.3042 22.714 28.3199 23.5799C27.0856 24.6597 26.078 25.9726 25.3009 27.397C24.1179 29.5695 23.456 31.9948 23.2715 34.442C23.1655 35.8798 23.2284 37.3286 23.4426 38.7551C23.7215 40.5808 24.2533 42.3768 25.0885 44.0369C25.797 45.4479 26.7296 46.7608 27.8988 47.8476C29.1348 49.0096 30.6453 49.8935 32.2813 50.4072C33.7802 50.8797 35.3705 51.0542 36.9413 50.9883C38.4027 50.9208 39.8611 50.6344 41.2092 50.0734C43.2433 49.2406 44.9767 47.7906 46.2355 46.037C47.8603 43.7815 48.7769 41.0966 49.1372 38.3786C49.613 34.8311 49.0941 31.1331 47.4931 27.8998C46.776 26.4703 45.8494 25.1281 44.6828 24.0085C43.4299 22.7706 41.8862 21.8075 40.1968 21.241C38.632 20.7114 36.9543 20.5386 35.3058 20.656Z" />
            </svg>
        );
    }

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M64.6464 48.1005C65.5273 48.3194 66.3797 48.7244 67.0163 49.3673C67.555 49.8826 67.9234 50.5497 68.1381 51.2513C68.3932 52.1193 68.4578 53.0409 68.3406 53.9362C68.2286 54.7438 67.9502 55.5225 67.5851 56.2533C66.899 57.5977 65.9414 58.7894 64.9183 59.9048C63.8168 61.0986 62.6299 62.214 61.4443 63.3281C63.8331 63.3205 66.222 63.3277 68.6108 63.3243C68.7406 63.3231 68.8729 63.3164 69 63.3499V66.1656C68.9276 66.1744 68.8561 66.1841 68.7849 66.187L56.6515 66.1866V63.1532C56.9278 62.8849 57.223 62.6362 57.5061 62.3746C58.7357 61.2826 59.9476 60.1702 61.0896 58.9906C62.1882 57.8312 63.2582 56.619 64.0232 55.2197C64.3697 54.5626 64.6602 53.8473 64.655 53.0979C64.6516 52.5621 64.4529 52.0228 64.0723 51.6312C63.578 51.1099 62.8587 50.8466 62.1481 50.7611C61.1887 50.6609 60.2199 50.855 59.327 51.1913C58.6379 51.4458 57.9983 51.8056 57.3725 52.1792C57.2747 51.1712 57.173 50.1635 57.0791 49.1551C58.6163 48.4104 60.3087 47.9609 62.0261 47.8824C62.9031 47.8313 63.7918 47.895 64.6464 48.1005ZM44.5216 15.9479C46.2174 16.5777 47.8288 17.4272 49.2842 18.4844C51.7084 20.2329 53.6818 22.5547 55.0432 25.1725C56.3106 27.5865 57.064 30.2404 57.3669 32.9308C57.5113 34.2801 57.5716 35.6404 57.4945 36.9961C57.3885 39.1497 56.97 41.2895 56.2443 43.3274C55.1022 46.5373 53.168 49.4901 50.5956 51.7934C48.1348 54.0137 45.0922 55.6109 41.841 56.4164C39.4569 57.011 36.9711 57.1964 34.5189 57.0169C32.0275 56.8353 29.5623 56.2462 27.2864 55.2382C24.6566 54.0787 22.2902 52.3616 20.3927 50.2449C18.0655 47.6619 16.445 44.5002 15.6352 41.1616C15.2392 39.5413 15.0384 37.8792 15 36.2153V35.3469C15.0353 33.9564 15.1603 32.5664 15.4189 31.1973C16.0352 27.8905 17.3992 24.692 19.5312 22.0352C21.1736 19.9734 23.2664 18.2546 25.6285 17.0201C28.6633 15.4237 32.1089 14.6354 35.5471 14.5511C38.5915 14.4593 41.6699 14.8883 44.5216 15.9479ZM35.3058 20.656C34.0556 20.7554 32.817 21.0309 31.6603 21.5068C30.4359 22.0054 29.3042 22.714 28.3199 23.5799C27.0856 24.6597 26.078 25.9726 25.3009 27.397C24.1179 29.5695 23.456 31.9948 23.2715 34.442C23.1655 35.8798 23.2284 37.3286 23.4426 38.7551C23.7215 40.5808 24.2533 42.3768 25.0885 44.0369C25.797 45.4479 26.7296 46.7608 27.8988 47.8476C29.1348 49.0096 30.6453 49.8935 32.2813 50.4072C33.7802 50.8797 35.3705 51.0542 36.9413 50.9883C38.4027 50.9208 39.8611 50.6344 41.2092 50.0734C43.2433 49.2406 44.9767 47.7906 46.2355 46.037C47.8603 43.7815 48.7769 41.0966 49.1372 38.3786C49.613 34.8311 49.0941 31.1331 47.4931 27.8998C46.776 26.4703 45.8494 25.1281 44.6828 24.0085C43.4299 22.7706 41.8862 21.8075 40.1968 21.241C38.632 20.7114 36.9543 20.5386 35.3058 20.656Z" />
        </svg>
    );
};

const TelefonicaLogoImage = ({size, type}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const isInverse = useIsInverseVariant();
    const {colors} = getTelefonicaSkin();
    const color = isInverse && !isDarkMode ? colors.inverse : colors.brand;

    if (type === 'vertical') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 73 72"
                fill={color}
            >
                <path d="M20.6921 19.2599C24.3945 19.2599 27.3958 16.2916 27.3958 12.63C27.3958 8.96833 24.3945 6 20.6921 6C16.9898 6 13.9885 8.96833 13.9885 12.63C13.9885 16.2916 16.9898 19.2599 20.6921 19.2599Z" />
                <path d="M36.4448 19.2599C40.1471 19.2599 43.1484 16.2916 43.1484 12.63C43.1484 8.96833 40.1471 6 36.4448 6C32.7424 6 29.7411 8.96833 29.7411 12.63C29.7411 16.2916 32.7424 19.2599 36.4448 19.2599Z" />
                <path d="M52.1973 19.2599C55.8997 19.2599 58.901 16.2916 58.901 12.63C58.901 8.96833 55.8997 6 52.1973 6C48.495 6 45.4937 8.96833 45.4937 12.63C45.4937 16.2916 48.495 19.2599 52.1973 19.2599Z" />
                <path d="M36.4448 34.8394C40.1471 34.8394 43.1484 31.8711 43.1484 28.2095C43.1484 24.5479 40.1471 21.5795 36.4448 21.5795C32.7424 21.5795 29.7411 24.5479 29.7411 28.2095C29.7411 31.8711 32.7424 34.8394 36.4448 34.8394Z" />
                <path d="M36.4448 50.4201C40.1471 50.4201 43.1484 47.4518 43.1484 43.7902C43.1484 40.1286 40.1471 37.1602 36.4448 37.1602C32.7424 37.1602 29.7411 40.1286 29.7411 43.7902C29.7411 47.4518 32.7424 50.4201 36.4448 50.4201Z" />
                <path d="M16.0791 60.2396H13.9885V59.0084H19.4643V60.2396H17.3737V65.9012H16.0791V60.2396Z" />
                <path d="M23.8347 64.424C23.7255 64.8176 23.0982 65.9996 21.4954 65.9996C20.0018 65.9996 18.9062 64.9196 18.9062 63.3896C18.9062 61.8596 19.9981 60.7808 21.4954 60.7808C22.8883 60.7808 23.9839 61.8608 23.9839 63.2912C23.9821 63.4118 23.972 63.532 23.9536 63.6512L23.9342 63.7892H20.151C20.2602 64.4876 20.788 64.97 21.4954 64.97C22.0826 64.97 22.4406 64.6352 22.5401 64.4288L23.8347 64.424ZM22.7427 62.9468C22.6335 62.3072 22.2052 61.814 21.499 61.814C20.7419 61.814 20.3039 62.3072 20.1547 62.9468H22.7427Z" />
                <path d="M24.7301 59.0084H25.975V65.9012H24.7301V59.0084Z" />
                <path d="M31.6485 64.424C31.5393 64.8176 30.912 65.9996 29.3092 65.9996C27.8156 65.9996 26.7212 64.9196 26.7212 63.3896C26.7212 61.8596 27.8132 60.7808 29.3092 60.7808C30.7033 60.7808 31.7989 61.8608 31.7989 63.2912C31.7965 63.4117 31.7864 63.532 31.7686 63.6512L31.748 63.7892H27.9648C28.074 64.4876 28.6018 64.97 29.3092 64.97C29.8964 64.97 30.2556 64.6352 30.3551 64.4288L31.6485 64.424ZM30.5565 62.9468C30.4461 62.3072 30.019 61.814 29.3116 61.814C28.5545 61.814 28.1165 62.3072 27.9672 62.9468H30.5565Z" />
                <path d="M32.9431 62.0612H32.0938V60.8792H32.9431V60.14C32.9431 59.3924 33.4284 58.91 34.188 58.91H35.2799V59.99H34.5338C34.4876 59.9888 34.4417 59.997 34.3988 60.014C34.356 60.0309 34.3171 60.0564 34.2845 60.0887C34.2519 60.121 34.2263 60.1596 34.2093 60.2021C34.1923 60.2445 34.1842 60.2899 34.1855 60.3356V60.8768H35.2775V62.0588H34.1855V65.8987H32.9431V62.0612Z" />
                <path d="M40.6465 63.3896C40.6465 64.916 39.5545 65.9996 38.0572 65.9996C36.56 65.9996 35.4741 64.9196 35.4741 63.3896C35.4741 61.8596 36.5661 60.7808 38.0621 60.7808C39.5581 60.7808 40.6465 61.8644 40.6465 63.3896ZM39.4016 63.3896C39.4016 62.504 38.8046 61.9136 38.0572 61.9136C37.3098 61.9136 36.7129 62.504 36.7129 63.3896C36.7129 64.2752 37.311 64.8668 38.0572 64.8668C38.8034 64.8668 39.4016 64.2764 39.4016 63.3896Z" />
                <path d="M41.3927 60.8792H42.5369L42.6364 61.3712H42.6861C42.7852 61.2584 42.899 61.1591 43.0246 61.076C43.3396 60.8774 43.7067 60.7747 44.0802 60.7808C45.2256 60.7808 46.0713 61.6208 46.0713 62.8976V65.8976H44.8276V62.9996C44.8276 62.7122 44.7122 62.4366 44.5067 62.2334C44.3013 62.0302 44.0226 61.916 43.732 61.916C43.4414 61.916 43.1627 62.0302 42.9573 62.2334C42.7518 62.4366 42.6364 62.7122 42.6364 62.9996V65.9048H41.3927V60.8792Z" />
                <path d="M53.9931 64.0304C53.8341 64.8176 53.2068 65.9996 51.604 65.9996C50.1104 65.9996 49.0148 64.9196 49.0148 63.3896C49.0148 61.8596 50.1068 60.7808 51.604 60.7808C53.2068 60.7808 53.8341 61.9628 53.9931 62.7008H52.7482C52.6697 62.4646 52.5156 62.2601 52.3092 62.1181C52.1028 61.9761 51.8553 61.9043 51.604 61.9136C50.8566 61.9136 50.2597 62.504 50.2597 63.3896C50.2597 64.2752 50.8566 64.8668 51.604 64.8668C51.8634 64.8785 52.1189 64.8013 52.3274 64.6483C52.5358 64.4953 52.6845 64.2757 52.7482 64.0268L53.9931 64.0304Z" />
                <path d="M57.7568 65.4092H57.7071C57.6066 65.5247 57.4887 65.6243 57.3576 65.7044C57.03 65.9048 56.6508 66.0073 56.2656 65.9996C55.1106 65.9996 54.4238 65.3 54.4238 64.4732C54.4238 63.4892 55.1203 62.7992 56.5144 62.7992H57.6598V62.7008C57.6598 62.1488 57.3212 61.7648 56.7631 61.7648C56.205 61.7648 55.9138 62.1248 55.8677 62.4056H54.6204C54.7296 61.5788 55.4066 60.7808 56.7607 60.7808C58.0553 60.7808 58.901 61.628 58.901 62.7008V65.9012H57.8563L57.7568 65.4092ZM57.6573 63.7292H56.6114C55.9647 63.7292 55.6651 63.9692 55.6651 64.3688C55.6651 64.7684 55.9538 65.0084 56.4622 65.0084C57.2181 65.0084 57.6573 64.5752 57.6573 63.8768V63.7292Z" />
                <path d="M47.0249 60.8792H48.2686V65.9012H47.0249V60.8792Z" />
                <path d="M47.6474 60.1569C48.0542 60.1569 48.3839 59.8308 48.3839 59.4285C48.3839 59.0262 48.0542 58.7001 47.6474 58.7001C47.2407 58.7001 46.9109 59.0262 46.9109 59.4285C46.9109 59.8308 47.2407 60.1569 47.6474 60.1569Z" />
                <path d="M38.5062 58.7624H39.7996L38.6045 60.1904H37.5598L38.5062 58.7624Z" />
            </svg>
        );
    }

    if (type === 'imagotype') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 195 72"
                fill={color}
            >
                <path d="M12.5551 28.1101C16.1753 28.1101 19.1101 25.1753 19.1101 21.555C19.1101 17.9348 16.1753 15 12.5551 15C8.9348 15 6 17.9348 6 21.555C6 25.1753 8.9348 28.1101 12.5551 28.1101Z" />
                <path d="M27.9582 28.1101C31.5784 28.1101 34.5132 25.1753 34.5132 21.555C34.5132 17.9347 31.5784 14.9999 27.9582 14.9999C24.3379 14.9999 21.4031 17.9347 21.4031 21.555C21.4031 25.1753 24.3379 28.1101 27.9582 28.1101Z" />
                <path d="M43.3631 28.1101C46.9834 28.1101 49.9182 25.1753 49.9182 21.555C49.9182 17.9347 46.9834 14.9999 43.3631 14.9999C39.7428 14.9999 36.808 17.9347 36.808 21.555C36.808 25.1753 39.7428 28.1101 43.3631 28.1101Z" />
                <path d="M27.9582 43.515C31.5784 43.515 34.5132 40.5802 34.5132 36.96C34.5132 33.3397 31.5784 30.4049 27.9582 30.4049C24.3379 30.4049 21.4031 33.3397 21.4031 36.96C21.4031 40.5802 24.3379 43.515 27.9582 43.515Z" />
                <path d="M27.9582 58.9199C31.5784 58.9199 34.5132 55.9851 34.5132 52.3648C34.5132 48.7446 31.5784 45.8098 27.9582 45.8098C24.3379 45.8098 21.4031 48.7446 21.4031 52.3648C21.4031 55.9851 24.3379 58.9199 27.9582 58.9199Z" />
                <path d="M63.8902 31.8505H57.789V28.2161H73.7887V31.8505H67.671V48.5767H63.8902V31.8505Z" />
                <path d="M86.5493 44.2141C86.229 45.3779 84.3972 48.8678 79.7142 48.8678C75.3515 48.8678 72.1508 45.6689 72.1508 41.1598C72.1508 36.6507 75.3515 33.4518 79.7142 33.4518C83.786 33.4518 86.9866 36.6507 86.9866 40.8688C86.9796 41.2192 86.9502 41.5689 86.8988 41.9156L86.8402 42.3237H75.787C76.1073 44.3879 77.6481 45.8135 79.7142 45.8135C81.4307 45.8135 82.4775 44.8253 82.7685 44.2141H86.5493ZM83.3504 39.8513C83.0302 37.9591 81.7784 36.5061 79.7142 36.5061C77.5036 36.5061 76.2226 37.9591 75.787 39.8513H83.3504Z" />
                <path d="M89.1662 28.2161H92.8024V48.5767H89.1662V28.2161Z" />
                <path d="M109.38 44.2141C109.06 45.3779 107.228 48.8678 102.543 48.8678C98.1807 48.8678 94.9819 45.6689 94.9819 41.1598C94.9819 36.6507 98.1807 33.4518 102.543 33.4518C106.617 33.4518 109.816 36.6507 109.816 40.8688C109.809 41.2192 109.779 41.5689 109.728 41.9156L109.671 42.3237H98.6163C98.9365 44.3879 100.479 45.8135 102.543 45.8135C104.26 45.8135 105.307 44.8253 105.598 44.2141H109.38ZM106.18 39.8513C105.859 37.9591 104.61 36.5061 102.543 36.5061C100.333 36.5061 99.0536 37.9591 98.6163 39.8513H106.18Z" />
                <path d="M113.159 37.2326H110.687V33.7428H113.159V31.5596C113.159 29.349 114.585 27.9234 116.795 27.9234H119.996V31.1241H117.813C117.678 31.1206 117.544 31.1445 117.419 31.1943C117.294 31.2442 117.18 31.319 117.085 31.4141C116.99 31.5093 116.915 31.6229 116.865 31.7479C116.815 31.873 116.79 32.0069 116.794 32.1415V33.7428H119.994V37.2326H116.794V48.5786H113.157L113.159 37.2326Z" />
                <path d="M135.666 41.169C135.666 45.6781 132.466 48.8769 128.103 48.8769C123.74 48.8769 120.54 45.669 120.54 41.169C120.54 36.669 123.74 33.461 128.103 33.461C132.466 33.461 135.666 36.6507 135.666 41.169ZM132.03 41.169C132.03 38.5503 130.284 36.8063 128.103 36.8063C125.922 36.8063 124.176 38.5503 124.176 41.169C124.176 43.7877 125.922 45.5317 128.103 45.5317C130.284 45.5317 132.03 43.7786 132.03 41.169Z" />
                <path d="M137.846 33.7428H141.191L141.482 35.2068H141.627C141.915 34.8717 142.248 34.5779 142.617 34.3339C143.536 33.7459 144.609 33.4422 145.7 33.461C149.046 33.461 151.518 35.9333 151.518 39.7141V48.5859H147.882V39.9959C147.882 38.1055 146.573 36.7971 144.681 36.7971C142.789 36.7971 141.482 38.1055 141.482 39.9959V48.5768H137.846V33.7428Z" />
                <path d="M174.66 43.0502C174.195 45.3779 172.363 48.8678 167.679 48.8678C163.316 48.8678 160.117 45.6689 160.117 41.1598C160.117 36.6507 163.316 33.4518 167.679 33.4518C172.363 33.4518 174.195 36.9416 174.66 39.1248H171.026C170.705 38.2812 169.862 36.7989 167.679 36.7989C165.495 36.7989 163.746 38.5411 163.746 41.1689C163.746 43.7968 165.492 45.5317 167.673 45.5317C169.854 45.5317 170.7 44.0786 171.02 43.0593L174.66 43.0502Z" />
                <path d="M185.655 47.1238H185.51C185.217 47.465 184.874 47.7589 184.491 47.9949C183.532 48.5893 182.42 48.8925 181.292 48.8678C177.917 48.8678 175.91 46.8035 175.91 44.3605C175.91 41.4508 177.947 39.4195 182.018 39.4195H185.364V39.1285C185.364 37.4998 184.376 36.3652 182.745 36.3652C181.114 36.3652 180.273 37.4138 180.128 38.2574H176.492C176.812 35.8126 178.79 33.4573 182.745 33.4573C186.528 33.4573 189 35.9589 189 39.1303V48.5841H185.946L185.655 47.1238ZM185.364 42.1828H182.309C180.419 42.1828 179.546 42.9148 179.546 44.075C179.546 45.2352 180.39 45.9654 181.874 45.9654C184.085 45.9654 185.364 44.6844 185.364 42.6201V42.1828Z" />
                <path d="M154.301 33.7428H157.938V48.5767H154.301V33.7428Z" />
                <path d="M156.118 31.6108C157.307 31.6108 158.271 30.6473 158.271 29.4588C158.271 28.2702 157.307 27.3067 156.118 27.3067C154.93 27.3067 153.966 28.2702 153.966 29.4588C153.966 30.6473 154.93 31.6108 156.118 31.6108Z" />
                <path d="M129.412 27.4879H133.194L129.702 31.706H126.648L129.412 27.4879Z" />
            </svg>
        );
    }

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M20.4652 19.2599C24.1268 19.2599 27.0951 16.2916 27.0951 12.63C27.0951 8.96833 24.1268 6 20.4652 6C16.8035 6 13.8352 8.96833 13.8352 12.63C13.8352 16.2916 16.8035 19.2599 20.4652 19.2599Z" />
            <path d="M36.0447 19.2599C39.7063 19.2599 42.6746 16.2916 42.6746 12.63C42.6746 8.96833 39.7063 6 36.0447 6C32.383 6 29.4147 8.96833 29.4147 12.63C29.4147 16.2916 32.383 19.2599 36.0447 19.2599Z" />
            <path d="M51.6241 19.2599C55.2858 19.2599 58.2541 16.2916 58.2541 12.63C58.2541 8.96833 55.2858 6 51.6241 6C47.9625 6 44.9942 8.96833 44.9942 12.63C44.9942 16.2916 47.9625 19.2599 51.6241 19.2599Z" />
            <path d="M36.0447 34.8394C39.7063 34.8394 42.6746 31.8711 42.6746 28.2095C42.6746 24.5479 39.7063 21.5795 36.0447 21.5795C32.383 21.5795 29.4147 24.5479 29.4147 28.2095C29.4147 31.8711 32.383 34.8394 36.0447 34.8394Z" />
            <path d="M36.0447 50.4201C39.7063 50.4201 42.6746 47.4518 42.6746 43.7902C42.6746 40.1286 39.7063 37.1602 36.0447 37.1602C32.383 37.1602 29.4147 40.1286 29.4147 43.7902C29.4147 47.4518 32.383 50.4201 36.0447 50.4201Z" />
            <path d="M15.9028 60.2396H13.8352V59.0084H19.2508V60.2396H17.1832V65.9012H15.9028V60.2396Z" />
            <path d="M23.5732 64.424C23.4652 64.8176 22.8448 65.9996 21.2596 65.9996C19.7824 65.9996 18.6988 64.9196 18.6988 63.3896C18.6988 61.8596 19.7788 60.7808 21.2596 60.7808C22.6372 60.7808 23.7208 61.8608 23.7208 63.2912C23.719 63.4118 23.709 63.532 23.6908 63.6512L23.6716 63.7892H19.93C20.038 64.4876 20.56 64.97 21.2596 64.97C21.8404 64.97 22.1944 64.6352 22.2928 64.4288L23.5732 64.424ZM22.4932 62.9468C22.3852 62.3072 21.9616 61.814 21.2632 61.814C20.5144 61.814 20.0812 62.3072 19.9336 62.9468H22.4932Z" />
            <path d="M24.4587 59.0084H25.6899V65.9012H24.4587V59.0084Z" />
            <path d="M31.3011 64.424C31.1931 64.8176 30.5727 65.9996 28.9875 65.9996C27.5103 65.9996 26.4279 64.9196 26.4279 63.3896C26.4279 61.8596 27.5079 60.7808 28.9875 60.7808C30.3663 60.7808 31.4499 61.8608 31.4499 63.2912C31.4475 63.4117 31.4375 63.532 31.4199 63.6512L31.3995 63.7892H27.6579C27.7659 64.4876 28.2879 64.97 28.9875 64.97C29.5683 64.97 29.9235 64.6352 30.0219 64.4288L31.3011 64.424ZM30.2211 62.9468C30.1119 62.3072 29.6895 61.814 28.9899 61.814C28.2411 61.814 27.8079 62.3072 27.6603 62.9468H30.2211Z" />
            <path d="M32.5815 62.0612H31.7415V60.8792H32.5815V60.14C32.5815 59.3924 33.0615 58.91 33.8127 58.91H34.8927V59.99H34.1547C34.109 59.9888 34.0636 59.997 34.0212 60.014C33.9788 60.0309 33.9403 60.0564 33.9081 60.0887C33.8759 60.121 33.8506 60.1596 33.8338 60.2021C33.8169 60.2445 33.8089 60.2899 33.8103 60.3356V60.8768H34.8903V62.0588H33.8103V65.8987H32.5815V62.0612Z" />
            <path d="M40.2002 63.3896C40.2002 64.916 39.1202 65.9996 37.6394 65.9996C36.1586 65.9996 35.0846 64.9196 35.0846 63.3896C35.0846 61.8596 36.1646 60.7808 37.6442 60.7808C39.1238 60.7808 40.2002 61.8644 40.2002 63.3896ZM38.969 63.3896C38.969 62.504 38.3786 61.9136 37.6394 61.9136C36.9002 61.9136 36.3098 62.504 36.3098 63.3896C36.3098 64.2752 36.9014 64.8668 37.6394 64.8668C38.3774 64.8668 38.969 64.2764 38.969 63.3896Z" />
            <path d="M40.9382 60.8792H42.0698L42.1682 61.3712H42.2174C42.3154 61.2584 42.428 61.1591 42.5522 61.076C42.8637 60.8774 43.2268 60.7747 43.5962 60.7808C44.729 60.7808 45.5654 61.6208 45.5654 62.8976V65.8976H44.3354V62.9996C44.3354 62.7122 44.2213 62.4366 44.018 62.2334C43.8148 62.0302 43.5392 61.916 43.2518 61.916C42.9644 61.916 42.6888 62.0302 42.4856 62.2334C42.2824 62.4366 42.1682 62.7122 42.1682 62.9996V65.9048H40.9382V60.8792Z" />
            <path d="M53.4001 64.0304C53.2429 64.8176 52.6225 65.9996 51.0373 65.9996C49.5602 65.9996 48.4766 64.9196 48.4766 63.3896C48.4766 61.8596 49.5566 60.7808 51.0373 60.7808C52.6225 60.7808 53.2429 61.9628 53.4001 62.7008H52.1689C52.0913 62.4646 51.9389 62.2601 51.7347 62.1181C51.5306 61.9761 51.2858 61.9043 51.0373 61.9136C50.2982 61.9136 49.7078 62.504 49.7078 63.3896C49.7078 64.2752 50.2982 64.8668 51.0373 64.8668C51.2939 64.8785 51.5466 64.8013 51.7527 64.6483C51.9589 64.4953 52.1059 64.2757 52.1689 64.0268L53.4001 64.0304Z" />
            <path d="M57.1225 65.4092H57.0733C56.974 65.5247 56.8574 65.6243 56.7277 65.7044C56.4037 65.9048 56.0287 66.0073 55.6477 65.9996C54.5053 65.9996 53.8262 65.3 53.8262 64.4732C53.8262 63.4892 54.515 62.7992 55.8937 62.7992H57.0265V62.7008C57.0265 62.1488 56.6917 61.7648 56.1397 61.7648C55.5877 61.7648 55.2997 62.1248 55.2541 62.4056H54.0206C54.1286 61.5788 54.7981 60.7808 56.1373 60.7808C57.4177 60.7808 58.2541 61.628 58.2541 62.7008V65.9012H57.2209L57.1225 65.4092ZM57.0241 63.7292H55.9897C55.3501 63.7292 55.0538 63.9692 55.0538 64.3688C55.0538 64.7684 55.3393 65.0084 55.8421 65.0084C56.5897 65.0084 57.0241 64.5752 57.0241 63.8768V63.7292Z" />
            <path d="M46.5086 60.8792H47.7386V65.9012H46.5086V60.8792Z" />
            <path d="M47.1242 60.1569C47.5265 60.1569 47.8526 59.8308 47.8526 59.4285C47.8526 59.0262 47.5265 58.7001 47.1242 58.7001C46.7219 58.7001 46.3958 59.0262 46.3958 59.4285C46.3958 59.8308 46.7219 60.1569 47.1242 60.1569Z" />
            <path d="M38.0834 58.7624H39.3626L38.1806 60.1904H37.1475L38.0834 58.7624Z" />
        </svg>
    );
};

const BlauLogoImage = ({size, type}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const isInverse = useIsInverseVariant();
    const {colors} = getBlauSkin();
    const color = isInverse && !isDarkMode ? colors.inverse : colors.brand;
    const colorSecondary = isInverse && !isDarkMode ? colors.inverse : colors.promo;

    if (type === 'vertical') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 73 72"
                fill={color}
            >
                <path d="M56.42 52.2003H18.2V63.0003H56.42V52.2003Z" fill={colorSecondary} />
                <path d="M38.8069 36.431H35.0651V31.658H38.8069C40.7615 31.658 41.5432 32.865 41.5432 34.0171C41.5432 35.2789 40.7615 36.431 38.8069 36.431ZM35.121 19.0948H37.9132C40.6496 19.0948 40.4821 23.0447 37.9132 23.0447H35.121V19.0948ZM49.6963 26.2267C52.7119 25.1844 54.3312 22.3864 54.3871 19.369C54.5546 13.7182 50.0316 9 44.3355 9H18.2V19.0398H21.8859V36.7602H18.2V46.8H44.2237C50.925 46.8 56.1188 42.3013 56.3981 35.8276C56.6773 30.89 54.2756 27.9275 49.6963 26.2267Z" />
            </svg>
        );
    }

    if (type === 'imagotype') {
        return (
            <svg
                className={styles.svg}
                style={applyCssVars(calcInlineVars(size))}
                viewBox="0 0 138 72"
                fill={color}
            >
                <path d="M135.557 54.5729H6.16162V65.184H135.557V54.5729Z" fill={colorSecondary} />
                <path d="M37.7269 25.9921C42.1878 27.7129 44.5575 30.6343 44.2869 35.6127C44.0163 42.0913 38.9696 46.5732 32.3623 46.5732H6.83155V36.5296H10.4229V18.8042H6.83155V8.75793H32.47C38.0579 8.75793 42.5215 13.5131 42.3507 19.1299C42.2929 22.1512 40.6877 24.9701 37.7269 25.9921ZM26.1359 17.9477H22.7942V23.2703H26.1359C29.4277 23.2703 29.6484 17.9477 26.1359 17.9477ZM30.3393 34.0259C30.3393 32.4812 29.3437 30.9443 27.0449 30.9443H22.7915V37.1076H27.0423C29.2806 37.1102 30.3393 35.5917 30.3393 34.0259Z" />
                <path d="M45.2905 8.75794V18.8042H48.8477V46.5732H61.8442V8.75794H45.2905Z" />
                <path d="M99.2576 46.5732H87.0676L86.7996 43.7674C84.8108 46.1975 81.8553 47.0592 79.0705 47.117C60.5884 47.3325 60.5884 16.6525 79.0705 16.8627C81.8553 16.8627 84.8108 17.727 86.7996 20.1572L87.0676 17.3435H99.2576V46.5732ZM86.3188 31.9846C86.3188 26.3126 78.3191 26.3704 78.3191 31.9846C78.3191 37.6067 86.3188 37.6619 86.3188 31.9846Z" />
                <path d="M134.858 17.3435H121.972V33.1222C121.972 35.2844 120.359 36.309 118.748 36.309C117.13 36.309 115.843 35.2345 115.843 33.1774V17.3435H102.949V33.2378C102.949 41.072 106.009 46.9043 114.661 47.1171C117.506 47.1696 120.467 46.2501 122.5 43.6571L122.773 46.5733L134.861 46.5917L134.858 17.3435Z" />
            </svg>
        );
    }

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M55.8 52.2003H18V63.0003H55.8V52.2003Z" fill={colorSecondary} />
            <path d="M38.3805 36.431H34.6798V31.658H38.3805C40.3136 31.658 41.0868 32.865 41.0868 34.0171C41.0868 35.2789 40.3136 36.431 38.3805 36.431ZM34.7351 19.0948H37.4966C40.2029 19.0948 40.0373 23.0447 37.4966 23.0447H34.7351V19.0948ZM49.1503 26.2267C52.1327 25.1844 53.7342 22.3864 53.7895 19.369C53.9552 13.7182 49.4819 9 43.8483 9H18V19.0398H21.6454V36.7602H18V46.8H43.7377C50.3654 46.8 55.5022 42.3013 55.7784 35.8276C56.0545 30.89 53.6792 27.9275 49.1503 26.2267Z" />
        </svg>
    );
};

const TuLogoImage = ({size}: LogoImageProps) => {
    const {isDarkMode} = useTheme();
    const isInverse = useIsInverseVariant();
    const {colors} = getTuSkin();
    const color = isDarkMode ? colors.inverse : isInverse ? colors.inverse : colors.backgroundBrand;

    return (
        <svg
            className={styles.svg}
            style={applyCssVars(calcInlineVars(size))}
            viewBox="0 0 72 72"
            fill={color}
        >
            <path d="M36 4C18.3263 4 4 18.3272 4 36C4 53.6728 18.3272 68 36 68C53.6728 68 68 53.6728 68 36C68 18.3272 53.6728 4 36 4ZM55.8772 41.6009C55.8772 43.5342 55.3842 45.257 54.4088 46.7228C53.4333 48.1886 52.0518 49.3518 50.264 50.1991C49.4684 50.5667 48.6149 50.857 47.7088 51.0675C45.8456 51.5 43.8991 51.5 42.036 51.0675C41.1298 50.857 40.2763 50.5675 39.4807 50.1991C37.693 49.3526 36.3114 48.1895 35.336 46.7228C34.3605 45.257 33.8675 43.5342 33.8675 41.6009V33.9974C33.8675 31.9053 33.0009 31.6412 32.2123 31.6412H25.3842L25.3798 41.9404C25.3877 43.2421 25.9368 44.2711 26.7597 45.1465C27.4991 45.9333 29.0526 46.1781 29.0526 46.1781C30.2316 46.3518 31.1386 47.3649 31.1386 48.5921C31.1386 49.8193 30.2325 50.8325 29.0526 51.0061V51.0167C27.9895 51.257 26.9035 51.3825 25.8132 51.3886C23.2211 51.3886 21.2886 50.6956 19.9018 49.2649C18.5167 47.8333 17.8342 45.8509 17.8342 43.1974V31.6412H15.8474C14.7246 31.6412 13.7553 30.7842 13.6939 29.664C13.6763 29.3439 13.7307 29.0386 13.843 28.7623C13.9947 28.3877 14.2737 28.0789 14.6088 27.8544L15.5368 27.2325C18.1184 25.5035 20.193 23.1158 21.5447 20.3184L21.8193 19.7553C21.9939 19.3982 22.2667 19.0912 22.6219 18.9132C22.8781 18.7851 23.1658 18.7132 23.4719 18.7132C24.5184 18.7132 25.3667 19.5544 25.3816 20.5974H25.3833V27.8202H37.4465C37.4518 27.8202 37.457 27.8202 37.4623 27.8202C39.4482 27.8202 41.0588 29.4298 41.0588 31.4167C41.0588 31.4202 41.0588 31.4228 41.0588 31.4263V41.4439C41.0588 42.9851 41.5035 44.2439 42.4088 45.2053C42.4158 45.2123 42.4228 45.2202 42.4298 45.2272C43.75 46.614 45.993 46.614 47.314 45.2272C47.3211 45.2202 47.3281 45.2123 47.3351 45.2053C48.2403 44.243 48.6851 42.9842 48.6851 41.4439V31.5123C48.6851 29.5623 50.2018 27.9018 52.15 27.8325C54.1956 27.7597 55.8772 29.3965 55.8772 31.4263V41.6035V41.6009Z" />
        </svg>
    );
};

type LogoBaseProps = {
    skinName: SkinName;
    size?: ByBreakpoint<number>;
    type?: LogoType;
};

const LogoBase: React.FC<LogoBaseProps> = ({size = 48, skinName, type = 'isotype'}) => {
    switch (skinName) {
        case 'Movistar':
            return <MovistarLogoImage size={size} type={type} />;
        case 'Vivo':
        case 'Vivo-new':
            return <VivoLogoImage size={size} type={type} />;
        case 'O2':
        case 'O2-classic':
            return <O2LogoImage size={size} type={type} />;
        case 'Telefonica':
            return <TelefonicaLogoImage size={size} type={type} />;
        case 'Blau':
            return <BlauLogoImage size={size} type={type} />;
        case 'Tu':
            return <TuLogoImage size={size} type={type} />;
        default:
            return null;
    }
};
type LogoPropsBase = {
    size?: ByBreakpoint<number>;
    type?: LogoType;
    /** "data-" prefix is automatically added. For example, use "testid" instead of "data-testid" */
    dataAttributes?: DataAttributes;
};

type LogoToProps = LogoPropsBase & {
    trackingEvent?: TrackingEvent | ReadonlyArray<TrackingEvent>;
    to: string;
    fullPageOnWebView?: boolean;
    replace?: boolean;
    'aria-label': string;
};

type LogoHrefProps = LogoPropsBase & {
    trackingEvent?: TrackingEvent | ReadonlyArray<TrackingEvent>;
    href: string;
    newTab?: boolean;
    'aria-label': string;
};

type LogoOnPressProps = LogoPropsBase & {
    trackingEvent?: TrackingEvent | ReadonlyArray<TrackingEvent>;
    onPress: () => void;
    'aria-label': string;
};

type LogoProps = ExclusifyUnion<LogoPropsBase | LogoToProps | LogoHrefProps | LogoOnPressProps>;

const MaybeTouchableLogo = (
    logoTouchableProps: Omit<LogoProps, 'children'> & {children: JSX.Element}
): JSX.Element => {
    const dataAttributes = getPrefixedDataAttributes(logoTouchableProps.dataAttributes, 'Logo');

    if (logoTouchableProps.to) {
        return (
            <Touchable
                trackingEvent={logoTouchableProps.trackingEvent}
                to={logoTouchableProps.to}
                fullPageOnWebView={logoTouchableProps.fullPageOnWebView}
                replace={logoTouchableProps.replace}
                aria-label={logoTouchableProps['aria-label']}
                className={styles.logoContainer}
                dataAttributes={dataAttributes}
            >
                {logoTouchableProps.children}
            </Touchable>
        );
    }

    if (logoTouchableProps.href) {
        return (
            <Touchable
                trackingEvent={logoTouchableProps.trackingEvent}
                href={logoTouchableProps.href}
                newTab={logoTouchableProps.newTab}
                replace={logoTouchableProps.replace}
                aria-label={logoTouchableProps['aria-label']}
                className={styles.logoContainer}
                dataAttributes={dataAttributes}
            >
                {logoTouchableProps.children}
            </Touchable>
        );
    }

    if (logoTouchableProps.onPress) {
        return (
            <Touchable
                trackingEvent={logoTouchableProps.trackingEvent}
                onPress={logoTouchableProps.onPress}
                aria-label={logoTouchableProps.href}
                className={styles.logoContainer}
                dataAttributes={dataAttributes}
            >
                {logoTouchableProps.children}
            </Touchable>
        );
    }

    return (
        <div className={styles.logoContainer} {...dataAttributes}>
            {logoTouchableProps.children}
        </div>
    );
};
export const Logo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => {
    const {skinName} = useTheme();

    return (
        <MaybeTouchableLogo {...props}>
            <LogoBase skinName={skinName} type={type} size={size} />
        </MaybeTouchableLogo>
    );
};

export const MovistarLogo: React.FC<LogoProps> = ({type = 'isotype', size, ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="Movistar" type={type} size={size} />
    </MaybeTouchableLogo>
);

export const VivoLogo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="Vivo" type={type} size={size} />
    </MaybeTouchableLogo>
);
export const O2Logo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="O2" type={type} size={size} />
    </MaybeTouchableLogo>
);
export const TelefonicaLogo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="Telefonica" type={type} size={size} />
    </MaybeTouchableLogo>
);
export const BlauLogo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="Blau" type={type} size={size} />
    </MaybeTouchableLogo>
);
export const TuLogo: React.FC<LogoProps> = ({size, type = 'isotype', ...props}) => (
    <MaybeTouchableLogo {...props}>
        <LogoBase skinName="Tu" type={type} size={size} />
    </MaybeTouchableLogo>
);
