/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useIsInverseVariant, useTheme} from '..';

type Props = {
    color?: string;
    size?: number;
};

export const IconAcademicFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.72 15.44a2.9 2.9 0 00.891-.163l5.992-2.672v2.753c0 .81-.566 1.457-1.294 1.62-1.294.243-3.076.727-4.373 1.78-.325.244-.728.407-1.134.407-.406 0-.81-.163-1.135-.406-1.294-1.054-3.075-1.538-4.372-1.782A1.654 1.654 0 015 15.358v-2.672l5.829 2.59c.244.082.568.163.89.163zm9.393 1.131c.406.325.647.972.647 1.375 0 .244-.081.485-.244.566-.162.163-.484.244-.728.244H20.3c-.325 0-.647 0-.89-.244a.736.736 0 01-.244-.566c0-.406.244-1.053.647-1.375v-5.423l-7.61 3.4c-.163.082-.407.163-.566.163-.244 0-.407-.081-.566-.162l-7.93-3.563c-.566-.244-.891-.729-.891-1.376 0-.566.325-1.134.89-1.375l7.934-3.563a1.57 1.57 0 011.215 0l7.933 3.563c.818.375.81 1.308.81 1.781l.08 6.555z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAcademicLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.018 18.531h-1.062c0-.411.327-1.072.49-1.072.164 0 .572.577.572 1.072zm-3.345-2.885c0 .33-.244.577-.49.577-1.387.247-3.345.824-4.895 2.062a.975.975 0 01-1.142 0c-1.47-1.235-3.508-1.812-4.895-2.062-.327-.08-.49-.33-.49-.577v-3.543l5.304 2.474a1.2 1.2 0 001.062 0l5.463-2.558.083 3.627zM3.068 9.63c0-.246.08-.412.327-.496l8.078-3.708c.164-.081.244-.081.408 0l8.077 3.708c.097.05.08.082.08.082h-8.485c-.244 0-.407.165-.407.411 0 .247.163.412.407.412h8.322l-8.078 3.711c-.163.081-.244.081-.407 0l-8.078-3.708a.45.45 0 01-.244-.412zm17.87 7.09v-6.678c.013-.518.05-1.373-.652-1.647l-8.08-3.708c-.409-.166-.736-.166-1.143-.082l-8.078 3.79c-.491.165-.735.658-.735 1.235 0 .577.327.989.735 1.235l1.96.908v3.873c0 .743.491 1.32 1.143 1.485 1.306.246 3.183.742 4.487 1.896.327.247.651.412 1.062.412.407 0 .734-.165 1.062-.412 1.386-1.073 3.183-1.647 4.486-1.896a1.51 1.51 0 001.143-1.485v-3.954l1.714-.743v5.77c-.652.247-.98 1.235-.98 1.812 0 .247.081.496.245.659.244.246.571.246.898.246h.491c.244 0 .48-.059.735-.246.186-.138.255-.236.286-.659.036-.607-.208-1.4-.78-1.812z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAcademicRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.58 18.01h-.49c.082-.246.163-.49.247-.57.162.08.244.324.244.57.08 0 .08 0 0 0zm-3.19-2.537c0 .162-.162.328-.328.409-1.392.246-3.355.818-4.91 1.964a.747.747 0 01-.818 0c-1.473-1.227-3.437-1.72-4.91-1.964-.163 0-.328-.163-.328-.409v-3.11l4.91 2.21c.163.082.41.163.575.163.246 0 .408-.081.574-.162l5.19-2.356.045 3.255zM3.477 9.663c0-.08.056-.184.162-.246l7.939-3.6h.162l7.283 3.275h-7.448a.56.56 0 00-.574.571.56.56 0 00.574.572h7.283l-7.04 3.19h-.246l-7.938-3.6c-.095-.052-.157-.08-.157-.162zm17.594 6.712v-6.303c-.011-.535-.025-1.462-.818-1.8l-7.939-3.6a1.605 1.605 0 00-1.226 0l-7.939 3.6c-.574.246-.899.736-.899 1.391 0 .572.328 1.146.9 1.393l1.8.818v3.599c0 .818.575 1.473 1.308 1.636 1.227.246 3.028.737 4.337 1.8.327.247.736.41 1.145.41.41 0 .818-.163 1.146-.41 1.308-1.063 3.11-1.554 4.336-1.8a1.67 1.67 0 001.308-1.636v-3.684l1.227-.57v5.156c-.655.328-.983 1.308-.983 1.882 0 .328.081.572.246.737.328.328.737.328 1.065.328h.487c.328 0 .574 0 .818-.247.532-.448.412-2.3-.32-2.7z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAccesibilityFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.619 15.83c1.65-.796 3.286-2 4.894-3.609a.562.562 0 000-.792C18.38 8.29 15.137 6.703 11.87 6.703c-1.235 0-2.468.227-3.695.68l-5.2-5.197a.558.558 0 00-.79 0 .561.561 0 000 .793L7.067 7.86c-1.652.795-3.288 2-4.896 3.608a.574.574 0 00-.165.398.55.55 0 00.165.395c3.134 3.134 6.378 4.722 9.644 4.722 1.235 0 2.468-.227 3.695-.68l5.199 5.198a.558.558 0 00.79 0 .561.561 0 000-.792l-4.88-4.88zm-3.468-3.469l-1.837-1.837c.16-.062.322-.067.504-.067.846 0 1.392.546 1.392 1.395 0 .17-.006.341-.059.51zm1.7 1.7l-.621-.621c.19-.41.285-.908.285-1.496 0-.955-.252-1.68-.75-2.154-.474-.451-1.168-.678-2.065-.678-.588 0-1.092.098-1.501.294l-.622-.622c.571-.341 1.283-.515 2.123-.515 2.325 0 3.659 1.339 3.659 3.675-.003.838-.174 1.546-.507 2.118z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAccesibilityLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.68 21.286l-5.321-5.322c1.792-.796 3.571-2.073 5.322-3.824a.282.282 0 000-.398c-3.16-3.16-6.423-4.762-9.692-4.762-1.291 0-2.583.25-3.868.748l-5.488-5.49a.279.279 0 10-.395.395L7.56 7.955c-1.792.796-3.571 2.073-5.322 3.824a.282.282 0 000 .398c3.16 3.16 6.423 4.761 9.692 4.761 1.291 0 2.583-.249 3.868-.747l5.488 5.487a.275.275 0 00.199.081.287.287 0 00.199-.081.273.273 0 00-.003-.392zm-9.69-13.75c3.05 0 6.11 1.48 9.098 4.4-1.703 1.664-3.426 2.865-5.154 3.596l-1.098-1.095c.496-.619.748-1.454.748-2.487 0-1.205-.34-2.138-1.009-2.773-.633-.603-1.526-.908-2.652-.908-1.034 0-1.869.255-2.49.762l-.874-.874a10.078 10.078 0 013.43-.622zm-.053 3.596c-.132 0-.25.017-.356.056l-1.75-1.75c.515-.399 1.215-.6 2.089-.6 1.414 0 3.1.54 3.1 3.117 0 .874-.195 1.574-.588 2.087l-1.72-1.72c.034-.1.054-.218.054-.353.003-.574-.325-.837-.83-.837zm-.006 5.249c-3.05 0-6.11-1.482-9.098-4.4 1.703-1.664 3.426-2.866 5.154-3.597l7.375 7.375a10.011 10.011 0 01-3.43.622z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAccesibilityRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.619 15.83c1.65-.796 3.286-2 4.894-3.609a.562.562 0 000-.792C18.38 8.29 15.137 6.703 11.87 6.703c-1.235 0-2.468.227-3.695.68l-5.2-5.197a.558.558 0 00-.79 0 .561.561 0 000 .793L7.067 7.86c-1.652.795-3.288 2-4.896 3.608a.562.562 0 000 .793c3.134 3.134 6.378 4.722 9.644 4.722 1.235 0 2.468-.227 3.695-.68l5.199 5.198a.558.558 0 00.79 0 .561.561 0 000-.792l-4.88-4.88zm-4.748-8.006c2.82 0 5.658 1.344 8.446 4-1.505 1.434-3.023 2.49-4.541 3.162l-.924-.924c.333-.569.504-1.278.504-2.118 0-2.336-1.334-3.675-3.659-3.675-.84 0-1.551.174-2.123.513l-.515-.513a9.282 9.282 0 012.812-.445zm-.053 2.63c-.18 0-.347.025-.499.073l-1.123-1.124c.409-.196.91-.294 1.501-.294.897 0 1.592.227 2.065.678.499.474.75 1.199.75 2.154 0 .586-.095 1.087-.285 1.496l-1.09-1.09a1.62 1.62 0 00.073-.498c0-.846-.546-1.395-1.392-1.395zm-.003 5.409c-2.82 0-5.658-1.345-8.445-4 1.504-1.432 3.02-2.488 4.54-3.16l2.505 2.504-.003.003.409.406c.154.154.423.429.683.695.213.218.418.426.54.549l.401.4.012-.01 2.17 2.17a9.393 9.393 0 01-2.812.443z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreAlarmFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.218 11.134c0 3.636 2.519 4.216 4.02 4.23h.457c1.51-.022 4.028-.61 4.028-4.199 0-3.594-2.54-4.19-4.054-4.23H7.19c-1.487.009-3.972.572-3.972 4.2zm18.25 6.58c.196.16.269.434.187.678a.606.606 0 01-.577.395h-5.24c-.04.546-.197 1.359-.762 1.995-.544.602-1.325.907-2.306.907-.991 0-1.77-.305-2.313-.907-.569-.636-.723-1.449-.754-1.995H4.465a.602.602 0 01-.392-1.07c.462-.37.846-.885 1.145-1.496C3.706 15.678 2 14.367 2 11.134c0-4.198 2.843-5.148 4.42-5.347 1.532-3.885 5.927-3.807 6.35-3.781.373-.017 3.014-.09 4.93 1.68 1.283 1.182 1.933 2.897 1.933 5.093v3.804c0 .061-.188 3.498 1.835 5.131zM8.076 13.846a.607.607 0 01-.611.602.608.608 0 01-.608-.602v-2.107H4.742a.604.604 0 110-1.207H6.86V8.457a.606.606 0 01.608-.603c.336 0 .61.27.61.603v2.075h2.12c.337 0 .609.272.609.605a.61.61 0 01-.608.605h-2.12v2.104h-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreAlarmLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.627 18.057h14.829c-1.69-2.092-1.518-5.185-1.51-5.333V8.87c0-1.947-.549-3.44-1.624-4.44-1.72-1.602-4.23-1.446-4.255-1.446h-.026c-.008 0-.016.009-.033 0-.157-.008-3.748-.204-5.233 2.782h.14c1.084.025 5.3.45 5.3 5.54 0 5.104-4.216 5.5-5.274 5.513-.098.009-.213.009-.337.009h-.17a7.814 7.814 0 01-1.017-.107 6.05 6.05 0 01-.79 1.336zm8.972 2.381c.434-.493.515-1.174.515-1.557h-4.157c0 .378.073 1.067.516 1.557.344.387.868.583 1.557.583.7 0 1.227-.196 1.569-.583zM2.977 11.273c0 4.21 3.126 4.711 4.47 4.737h.157c.115 0 .222 0 .32-.009 1.344-.025 4.47-.524 4.47-4.694 0-4.163-3.143-4.687-4.495-4.72-.124-.009-.264-.009-.401-.009H7.4c-1.33.017-4.423.493-4.423 4.695zm18.717 6.877a.42.42 0 01.123.459.404.404 0 01-.383.272h-5.496c0 .51-.107 1.412-.723 2.103-.51.566-1.238.86-2.182.86-.936 0-1.672-.294-2.182-.86-.608-.689-.714-1.6-.714-2.1H4.64a.41.41 0 01-.255-.729c.493-.409.902-.96 1.213-1.624-1.563-.499-3.443-1.813-3.443-5.258 0-4.499 3.182-5.342 4.709-5.482 1.549-3.75 5.815-3.636 6.168-3.627.255-.017 2.922-.132 4.849 1.664 1.246 1.165 1.888 2.857 1.888 5.039v3.88c-.012.06-.2 3.663 1.924 5.403zm-10.843-6.877c0 .23-.18.409-.409.409H8.095v2.356a.41.41 0 01-.818 0v-2.356H4.929a.41.41 0 01-.409-.41c0-.223.188-.408.41-.408h2.347V8.539a.41.41 0 01.409-.409c.221 0 .409.188.409.409v2.322h2.347a.41.41 0 01.409.412z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreAlarmRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.832 17.577h13.871c-1.454-2.092-1.3-4.9-1.291-5.036V8.779c0-1.843-.518-3.258-1.535-4.2-1.633-1.512-4.045-1.366-4.07-1.366-.017 0-.023-.009-.042-.009-.014 0-.031.009-.04.009-.154-.009-3.515-.193-4.952 2.524 1.177.042 5.165.549 5.165 5.431 0 4.994-4.176 5.39-5.22 5.403h-.505a5.67 5.67 0 01-.787-.064 6.11 6.11 0 01-.594 1.07zm8.333 2.395c.317-.353.423-.838.448-1.19h-3.697c.034.352.132.845.457 1.198.3.34.753.499 1.397.499.633 0 1.087-.16 1.395-.507zM3.218 11.134c0 3.636 2.519 4.216 4.02 4.23h.457c1.51-.022 4.028-.61 4.028-4.199 0-3.594-2.54-4.19-4.054-4.23H7.19c-1.487.009-3.972.572-3.972 4.2zm18.25 6.58c.196.16.269.434.187.678a.606.606 0 01-.577.395h-5.24c-.04.546-.194 1.359-.762 1.995-.544.602-1.325.907-2.306.907-.991 0-1.77-.305-2.313-.907-.569-.636-.723-1.449-.757-1.995H4.462a.602.602 0 01-.392-1.07c.462-.37.846-.885 1.146-1.496C3.706 15.678 2 14.367 2 11.134c0-4.198 2.843-5.148 4.417-5.347 1.535-3.885 5.93-3.807 6.353-3.781.373-.017 3.014-.09 4.93 1.68 1.283 1.182 1.933 2.897 1.933 5.093v3.804c0 .061-.188 3.495 1.835 5.131zM8.076 13.846a.607.607 0 01-.611.602.608.608 0 01-.608-.602v-2.107H4.742a.604.604 0 110-1.207H6.86V8.457a.606.606 0 01.608-.603c.336 0 .61.27.61.603v2.075h2.12c.337 0 .609.272.609.605a.61.61 0 01-.608.605h-2.12v2.104h-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreCircleFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.748 12.429h-4.294v4.305a.616.616 0 01-1.233 0v-4.305H6.936a.616.616 0 010-1.233h4.285V6.952a.616.616 0 011.233 0V11.2h4.294c.339 0 .616.274.616.616a.617.617 0 01-.616.614M12.255 2.01c-.23-.005-.499-.011-.756-.011h-.177C9.345 2.017 2 2.695 2 11.812c0 9.13 7.415 9.843 9.392 9.871.104.003.213.003.32.003.204 0 .406-.003.58-.005 1.879-.034 9.391-.74 9.391-9.81.003-9.053-7.5-9.815-9.428-9.86"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreCircleLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.904 11.56a.41.41 0 010 .818h-4.498v4.51a.41.41 0 01-.818 0V12.38H7.095a.41.41 0 010-.818h4.49V7.11a.41.41 0 01.818 0v4.45h4.501zm-4.47 9.456c2.014-.036 8.588-.795 8.588-8.991 0-3.55-1.216-6.112-3.608-7.611-1.955-1.227-4.163-1.409-5.022-1.429a32.261 32.261 0 00-.715-.008h-.187c-.855.008-3.048.154-4.972 1.367-2.353 1.476-3.541 4.042-3.541 7.625 0 3.585 1.199 6.162 3.571 7.655 1.944 1.224 4.152 1.384 5.012 1.398.098.003.196.003.294.003.201-.003.403-.003.58-.009zm-.026-18.851c1.928.044 9.435.806 9.435 9.86 0 9.072-7.513 9.776-9.393 9.812a36.04 36.04 0 01-.596.006c-.101 0-.205 0-.306-.003-1.977-.028-9.392-.743-9.392-9.871 0-9.118 7.348-9.796 9.322-9.813h.196c.253 0 .51.003.734.009z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreCircleRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.748 11.199a.616.616 0 010 1.232h-4.294v4.303a.616.616 0 01-1.233 0v-4.305H6.936a.616.616 0 010-1.233h4.285V6.952a.616.616 0 011.233 0V11.2h4.294zm-4.48 9.252c2.463-.045 8.186-.972 8.186-8.583 0-7.61-5.757-8.571-8.23-8.63-.235-.006-.47-.008-.706-.008h-.185c-2.437.022-8.1.899-8.1 8.582 0 7.695 5.72 8.608 8.179 8.642.285.003.571.003.857-.003zm-.016-18.443c1.933.048 9.434.81 9.434 9.86 0 9.073-7.515 9.776-9.392 9.813a36.81 36.81 0 01-.583.005c-.106 0-.212 0-.319-.003C9.415 21.655 2 20.941 2 11.813 2 2.694 9.345 2.016 11.322 2h.196c.252 0 .513.003.734.008z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.187 11.344h-8.532V2.812a.656.656 0 00-1.311 0v8.532H2.812a.655.655 0 100 1.31h8.532v8.53a.656.656 0 001.31 0v-8.53h8.53a.656.656 0 00.003-1.31z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreLocationFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.712 10.717c1.322 0 2.143-.81 2.143-2.112s-.821-2.112-2.143-2.112c-1.325 0-2.146.81-2.146 2.112 0 1.303.824 2.112 2.146 2.112zm-7.034 8.519c1.434-.026 3.857-.58 3.857-4.003s-2.44-3.995-3.89-4.034h-.457c-1.426.014-3.807.546-3.807 4 0 3.47 2.415 4.017 3.849 4.042h.157c.095 0 .202 0 .291-.005zM19.967 4.048c1.232 1.23 1.885 3.028 1.877 5.216-.009 4.613-5.928 11.58-6.77 12.406a.61.61 0 01-.432.176.592.592 0 01-.432-.176c-.423-.41-1.37-1.51-2.47-3.037-1.272 1.614-3.353 1.802-4.037 1.807-.098.009-.21.009-.316.009h-.171c-1.062-.014-5.056-.395-5.056-5.247 0-4.838 3.955-5.199 5.014-5.207h.367a5 5 0 01-.048-.782c0-2.176.661-3.977 1.908-5.199 1.25-1.22 3.09-1.848 5.294-1.854 2.207.008 4.034.658 5.272 1.888zM8.065 14.603h2.033c.34 0 .611.268.611.602a.607.607 0 01-.61.602H8.064v2.008a.607.607 0 01-.61.603.605.605 0 01-.612-.603v-2.008H4.815a.605.605 0 01-.61-.602c0-.334.274-.602.61-.602h2.028v-1.98c0-.334.275-.603.611-.603.34 0 .61.269.61.602v1.98z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreLocationRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.645 20.353c1.663-1.88 5.969-7.585 5.977-11.098.009-1.88-.507-3.341-1.526-4.353-1.017-1.014-2.502-1.526-4.41-1.538-1.885 0-3.392.507-4.42 1.513C9.238 5.88 8.715 7.342 8.715 9.224c-.009.275.033.589.09.908 1.573.322 3.954 1.415 3.954 5.1 0 .878-.14 1.609-.367 2.21a34.542 34.542 0 002.253 2.911zM7.68 19.236c1.434-.023 3.857-.577 3.857-4s-2.437-3.995-3.89-4.034H7.19c-1.429.017-3.81.549-3.81 4.003 0 3.47 2.415 4.017 3.849 4.042h.154c.1-.003.207-.003.297-.011zM19.97 4.048c1.232 1.23 1.885 3.028 1.876 5.216-.008 4.61-5.93 11.58-6.767 12.406a.61.61 0 01-.432.176.59.59 0 01-.431-.176c-.423-.41-1.37-1.51-2.47-3.037-1.272 1.617-3.354 1.802-4.037 1.807-.098.009-.213.009-.32.009h-.17c-1.062-.017-5.059-.395-5.059-5.247 0-4.838 3.955-5.199 5.014-5.207h.367a5.17 5.17 0 01-.05-.779c0-2.176.66-3.978 1.907-5.199 1.25-1.221 3.09-1.849 5.294-1.857 2.213.008 4.04.658 5.278 1.888zm-5.3 3.333c-.986 0-1.465.474-1.465 1.443 0 .97.479 1.442 1.465 1.442.986 0 1.465-.473 1.465-1.442 0-.97-.482-1.443-1.465-1.443zm0 4.096c-1.658 0-2.69-1.017-2.69-2.65s1.032-2.65 2.69-2.65 2.689 1.017 2.689 2.65c-.003 1.633-1.03 2.65-2.69 2.65zm-4.57 3.126a.605.605 0 01.61.602.605.605 0 01-.61.602H8.07v2.011a.605.605 0 01-.611.603.605.605 0 01-.61-.603V15.81H4.817a.605.605 0 01-.61-.602.607.607 0 01.61-.603h2.028v-1.977a.605.605 0 01.61-.602.605.605 0 01.612.602v1.977H10.1v-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreQueryFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.011 12.966c.34 0 .616.272.616.605a.61.61 0 01-.616.605H8.636v2.342a.61.61 0 01-.616.605.612.612 0 01-.617-.605v-2.342h-2.37a.612.612 0 01-.616-.605.61.61 0 01.617-.605h2.37v-2.308a.61.61 0 01.616-.605c.339 0 .616.272.616.605v2.308h2.375zm-.714-7.621c-1.185-.35-1.905-.824-2.098-1.373 0-.008 0-.008-.009-.017.191-.546.91-1.03 2.087-1.38 1.25-.368 2.9-.575 4.65-.575 1.75 0 3.4.207 4.642.574 1.24.367 1.94.852 2.098 1.426 0 0-.009.008-.009.017-.21.53-.921.986-2.078 1.328-1.25.366-2.89.574-4.642.574-1.75 0-3.392-.208-4.641-.574zm2.37 7.039a4.766 4.766 0 00-.49-1.384 4.24 4.24 0 00-.236-.381c-.008-.011-.017-.025-.028-.036a3.473 3.473 0 00-.258-.32l-.064-.067a3.137 3.137 0 00-.28-.263l-.1-.084a3.474 3.474 0 00-.306-.213 2.383 2.383 0 00-.14-.09 3.704 3.704 0 00-.334-.168c-.058-.028-.117-.059-.179-.084-.118-.048-.246-.087-.375-.129-.07-.022-.138-.047-.213-.067a5.204 5.204 0 00-.454-.09c-.073-.01-.14-.03-.216-.039a6.915 6.915 0 00-.753-.059l-.107-.002c-.168 0-.42-.003-.42-.003-1.664.014-4.456.638-4.456 4.67 0 1.394.44 4.65 4.507 4.705h.17c.07 0 .135 0 .2-.003.044 0 .095 0 .137-.002a5.972 5.972 0 00.843-.073c.143-.02.28-.045.412-.076.061-.011.123-.028.184-.042a4.36 4.36 0 00.41-.126c.033-.011.07-.022.1-.034.152-.058.292-.123.426-.196.056-.028.107-.061.16-.092.078-.048.157-.095.23-.146.053-.036.106-.075.16-.115.066-.05.128-.106.19-.16.044-.039.092-.078.131-.117a3.74 3.74 0 00.62-.812c.545-.953.65-2.025.65-2.684 0-.098-.004-.207-.01-.322-.002-.028-.002-.062-.005-.09a5.39 5.39 0 00-.025-.285c-.003-.037-.009-.07-.014-.11a7.475 7.475 0 00-.067-.411zm2.271-1.2c-.45 0-.89-.016-1.322-.044.101.277.182.585.247.91.353.02.711.031 1.075.031 1.84 0 3.583-.215 4.905-.61.748-.216 1.387-.521 1.868-.888v3.98c-.226.42-.901.978-2.134 1.345-1.24.367-2.89.574-4.641.574-.507 0-.998-.02-1.474-.056a4.993 4.993 0 01-.484.854c.63.059 1.283.098 1.96.098 1.84 0 3.583-.216 4.905-.608.748-.215 1.387-.53 1.868-.899v3.544c0 .7-.72 1.274-2.142 1.694-1.25.367-2.9.574-4.642.574-1.742 0-3.392-.204-4.65-.574-1.372-.406-2.084-.958-2.134-1.624l-.21.002h-.188c-1.204-.016-5.72-.445-5.72-5.918 0-5.465 4.474-5.872 5.678-5.88h.12c.104 0 .208.003.309.003V5.308c.456.361 1.086.667 1.896.9 1.33.394 3.073.61 4.905.61 1.832 0 3.574-.216 4.905-.61.792-.233 1.411-.522 1.868-.88v3.944c-.227.42-.902.977-2.135 1.344-1.232.37-2.882.569-4.633.569z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreQueryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.557 16.747a.41.41 0 01-.818 0v-2.59H5.165a.412.412 0 010-.824h2.574v-2.558a.41.41 0 01.818 0v2.558h2.58a.412.412 0 010 .823h-2.58v2.591zm10.535 3.748c1.28-.386 1.93-.907 1.93-1.552v-3.255c-.44.337-1.009.622-1.684.827-1.196.361-2.764.557-4.414.557-.502 0-1.006-.02-1.502-.056-1.064 1.975-3.047 2.535-4.252 2.69.32.305.846.573 1.563.79 1.13.335 2.614.523 4.18.523 1.565.003 3.05-.185 4.179-.524zM7.887 18.946h.177c.12 0 .24 0 .344-.003 4.558-.084 4.914-3.974 4.914-5.165 0-4.583-3.457-5.162-4.942-5.196a20.809 20.809 0 00-.434-.006h-.103c-1.463.014-4.863.541-4.863 5.166-.003 4.633 3.431 5.182 4.907 5.204zM10.73 3.501c-1.07.322-1.717.759-1.882 1.266.003.005.009.011.011.02.166.5.818.935 1.883 1.257 1.12.336 2.605.524 4.179.524 1.574 0 3.059-.188 4.18-.524 1.036-.314 1.683-.734 1.868-1.221.002-.008.01-.014.016-.022-.15-.53-.784-.967-1.893-1.3-1.12-.336-2.605-.524-4.182-.524-1.574 0-3.06.188-4.18.524zm3.255 8.689c.096.479.157.997.157 1.585 0 .961-.145 1.76-.378 2.437 1.938.118 3.938-.064 5.339-.484 1.11-.334 1.712-.85 1.919-1.236v-3.658c-.437.336-1.009.622-1.684.826-1.199.362-2.764.558-4.414.558-.286.003-.636-.006-.939-.028zM8.801 6.008V7.78c1.268.106 3.971.683 4.963 3.563.003 0 .008-.003.011 0 .213.036.62.056 1.149.056 1.571 0 3.056-.188 4.179-.524 1.112-.336 1.712-.849 1.919-1.235V6.025c-.412.322-.972.593-1.686.81-1.194.36-2.762.557-4.415.557s-3.221-.2-4.415-.558c-.725-.221-1.29-.496-1.705-.826zm10.526-3.292c1.67.502 2.516 1.289 2.516 2.34v13.887c0 1.05-.846 1.838-2.513 2.34-1.205.36-2.773.56-4.42.56-1.645 0-3.21-.2-4.415-.558-1.204-.364-1.955-.863-2.302-1.518h-.317c-1.207-.017-5.72-.454-5.72-6.025 0-5.566 4.474-5.978 5.675-5.99h.149V5.056c0-.165.022-.327.067-.481l.003-.003c.232-.81 1.056-1.434 2.445-1.852 1.196-.364 2.762-.563 4.415-.563 1.655 0 3.224.2 4.417.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreQueryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.538 16.521a.607.607 0 01-.608.605.607.607 0 01-.608-.605v-2.336H4.978a.607.607 0 01-.608-.605c0-.334.271-.605.608-.605h2.344v-2.303a.607.607 0 011.216 0v2.303h2.35c.336 0 .608.271.608.605a.607.607 0 01-.608.605h-2.35v2.336zM18.703 20c.804-.24 1.765-.667 1.765-1.328v-2.806a5.888 5.888 0 01-1.406.619c-1.202.358-2.776.554-4.429.554-.501 0-1.008-.02-1.501-.056-.034-.003-.062-.02-.093-.025-.994 1.655-2.678 2.23-3.837 2.42.257.202.67.42 1.341.62 1.098.324 2.547.503 4.079.503 1.532.006 2.983-.173 4.081-.501zM3.218 13.577c0 1.392.435 4.639 4.457 4.695h.168c.115 0 .233 0 .333-.003 4.031-.073 4.465-3.283 4.465-4.661 0-1.378-.437-4.591-4.493-4.686a19.401 19.401 0 00-.414-.006h-.11c-1.644.017-4.406.641-4.406 4.661zm7.325-9.838c-.93.278-1.51.648-1.689 1.045.168.404.762.779 1.7 1.06 1.09.324 2.538.503 4.076.503 1.54 0 2.989-.179 4.079-.504.927-.277 1.52-.647 1.697-1.045-.216-.512-1.014-.857-1.706-1.061-1.09-.325-2.54-.505-4.081-.505-1.538.003-2.986.183-4.076.507zm3.2 8.516c.07.417.12.86.12 1.358a7.3 7.3 0 01-.314 2.19c1.882.11 3.815-.066 5.165-.47 1-.297 1.555-.748 1.757-1.072v-3.143a5.843 5.843 0 01-1.407.619c-1.201.358-2.773.554-4.428.554a12.856 12.856 0 01-.894-.036zM8.778 7.61c0 .05-.017.095-.028.145 1.285.14 3.694.745 4.675 3.283a.587.587 0 01.221-.003c.272.045.72.045.986.045 1.538 0 2.986-.179 4.078-.504 1.003-.3 1.558-.748 1.757-1.073V6.406a6.13 6.13 0 01-1.406.597c-1.2.358-2.773.557-4.429.557-1.655 0-3.227-.196-4.429-.557a5.891 5.891 0 01-1.425-.614v1.222zm10.274-5.028c1.748.52 2.633 1.358 2.633 2.484v13.605c0 1.126-.885 1.964-2.633 2.485-1.21.358-2.784.554-4.431.554-1.647 0-3.219-.196-4.429-.554-1.277-.381-2.073-.913-2.431-1.63-.008-.014-.006-.034-.011-.048h-.093C6.468 19.462 2 19.034 2 13.574 2 8.171 6.347 7.725 7.583 7.71c-.006-.034-.023-.065-.023-.101v-2.54c0-.183.025-.36.073-.53v-.003c.252-.866 1.112-1.521 2.557-1.955 1.202-.359 2.776-.555 4.429-.555 1.658.003 3.233.2 4.434.558z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAddMoreRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.779 10.885H12.8V2.908a.958.958 0 00-1.913 0v7.98h-7.98a.958.958 0 000 1.913h7.98v7.98a.958.958 0 001.913 0v-7.98h7.98a.958.958 0 00-.002-1.916"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAdnFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.878 2.15c.356 0 .644.28.644.622 0 2.263-1.613 3.554-3.302 4.61 1.689 1.057 3.302 2.348 3.302 4.611s-1.613 3.555-3.305 4.608c1.69 1.056 3.303 2.347 3.303 4.61a.633.633 0 01-.645.622.634.634 0 01-.644-.621c0-1.838-1.462-2.821-3.221-3.877-1.76 1.056-3.221 2.036-3.221 3.877a.633.633 0 01-.645.621.634.634 0 01-.644-.621c0-2.264 1.613-3.555 3.303-4.611-.757-.47-1.493-.994-2.082-1.627a.619.619 0 01-.148-.16c-.642-.75-1.07-1.656-1.07-2.82 0-2.261 1.613-3.555 3.302-4.612-1.689-1.056-3.302-2.347-3.302-4.61 0-.345.288-.622.644-.622.356 0 .644.28.644.622 0 1.84 1.46 2.82 3.222 3.877 1.762-1.054 3.22-2.037 3.22-3.877 0-.345.29-.622.645-.622zm-.714 10.479H8.859c.095.468.294.877.577 1.244h5.15c.28-.37.483-.776.578-1.244zM12.01 8.114c-.432.26-.843.52-1.224.784h2.45a21.167 21.167 0 00-1.226-.784z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAdnLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.068 9.11c.574-.439 1.246-.835 1.94-1.227.698.395 1.37.79 1.941 1.227h-3.881zm-.882.824h5.648c.398.472.658 1.012.74 1.65H8.446a3.152 3.152 0 01.739-1.65zm4.732 4.948c-.565.428-1.226.813-1.91 1.2-.68-.387-1.34-.775-1.906-1.2h3.816zm-4.707-.824a3.127 3.127 0 01-.759-1.647h7.116a3.139 3.139 0 01-.759 1.647H9.211zm7.309-2.076c0-2.277-1.77-3.497-3.657-4.585 1.887-1.088 3.657-2.31 3.657-4.585 0-.227-.202-.412-.45-.412-.25 0-.452.185-.452.412 0 1.98-1.722 3.03-3.607 4.1-1.884-1.07-3.606-2.12-3.606-4.1 0-.227-.202-.412-.451-.412-.25 0-.451.185-.451.412 0 2.278 1.77 3.497 3.66 4.585-1.888 1.088-3.66 2.31-3.66 4.585 0 1.089.417 1.926 1.044 2.633a.424.424 0 00.171.19c.67.685 1.538 1.242 2.442 1.765-1.887 1.089-3.66 2.31-3.66 4.586 0 .226.202.412.45.412.25 0 .452-.186.452-.412 0-1.98 1.722-3.03 3.607-4.1 1.887 1.07 3.606 2.12 3.606 4.1 0 .226.202.412.451.412.25 0 .451-.186.451-.412 0-2.278-1.77-3.497-3.657-4.586 1.89-1.09 3.66-2.31 3.66-4.588z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAdnRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.197 15.116c-.37.255-.767.505-1.187.757a22.33 22.33 0 01-1.185-.757h2.372zm-3.761-1.243a2.986 2.986 0 01-.577-1.244h6.305a3.038 3.038 0 01-.577 1.244H9.436zm1.35-4.975c.38-.263.79-.524 1.224-.784.434.26.846.518 1.227.784h-2.451zm3.823 1.244c.278.367.465.778.558 1.243H8.856a3 3 0 01.557-1.243h5.196zm1.913 1.851c0-2.263-1.613-3.554-3.302-4.61 1.689-1.057 3.302-2.348 3.302-4.611a.634.634 0 00-.644-.622.633.633 0 00-.644.622c0 1.84-1.46 2.823-3.221 3.877C10.25 5.593 8.79 4.612 8.79 2.772a.634.634 0 00-.644-.622.633.633 0 00-.644.622c0 2.263 1.613 3.554 3.302 4.61-1.689 1.057-3.302 2.35-3.302 4.611 0 1.165.428 2.07 1.07 2.82a.61.61 0 00.148.16c.589.634 1.325 1.157 2.082 1.628-1.69 1.056-3.303 2.347-3.303 4.61 0 .342.289.622.644.622a.633.633 0 00.645-.621c0-1.84 1.462-2.821 3.22-3.877 1.763 1.056 3.222 2.04 3.222 3.877 0 .341.289.621.644.621a.633.633 0 00.645-.621c0-2.264-1.614-3.555-3.303-4.611 1.692-1.053 3.305-2.345 3.305-4.608z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightCrossFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.719 20.567v-1.874a.324.324 0 00-.174-.053H5.525a.344.344 0 00-.173.048v1.888c.053.03.112.045.173.045h13.02c.062 0 .123-.02.174-.054zm-.174-3.14c.74 0 1.384.546 1.384 1.171v2.07c0 .625-.647 1.171-1.384 1.171H5.525c-.75 0-1.383-.535-1.383-1.17v-2.07c0-.634.633-1.169 1.383-1.169h.152v-5.728c0-4.118 2.257-6.387 6.355-6.387 4.101 0 6.359 2.27 6.359 6.387v5.725h.154zm-4.19-4.938h-1.477a.527.527 0 00-.524.527v1.481h-.691v-1.481a.527.527 0 00-.524-.527H9.663v-.695h1.476a.524.524 0 00.524-.526V9.786h.691v1.482c0 .29.236.526.524.526h1.476v.695zm.218-1.748h-1.174V9.565c0-.451-.35-.832-.764-.832H11.38c-.415 0-.768.38-.768.832v1.179h-1.17c-.449 0-.83.353-.83.767v1.264c0 .414.378.767.827.767h1.173v1.177c0 .45.353.832.768.832h1.255c.414 0 .767-.381.767-.832v-1.18h1.17c.45 0 .83-.353.83-.77v-1.263c0-.412-.378-.765-.83-.765zm-2.538-5.902a.607.607 0 01-.605-.608V2.758c0-.336.272-.608.605-.608.333 0 .605.272.605.608V4.23a.608.608 0 01-.605.608zm-7.21 4.723a.609.609 0 01-.605.608H2.755a.608.608 0 010-1.216h1.468c.333 0 .605.272.602.608zm16.406-.58c.334 0 .605.272.605.608a.607.607 0 01-.605.608h-1.468a.607.607 0 01-.605-.608c0-.336.272-.608.605-.608h1.468zM5.665 5.957L4.63 4.915a.607.607 0 01.852-.863l.002.003L6.52 5.097a.61.61 0 01-.429 1.039.62.62 0 01-.426-.18zm11.524.056a.607.607 0 01-.426-1.037L17.8 3.934a.602.602 0 01.851-.002l.003.002a.609.609 0 010 .857l-1.036 1.042a.607.607 0 01-.429.18z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightCrossLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.943 21.31c.2 0 .373-.128.396-.184L19.336 19a.57.57 0 00-.39-.162H5.442c-.21 0-.367.12-.39.17v2.14c.014.037.174.163.39.163h13.501zM6.646 11.849v6.124h11.097v-6.124c0-3.7-1.87-5.574-5.549-5.574-3.685 0-5.548 1.872-5.548 5.574zm12.3 6.15c.655 0 1.226.467 1.226 1.002v2.148c0 .532-.574 1.002-1.226 1.002H5.442c-.666 0-1.226-.458-1.226-1.002V19c0-.544.563-1.002 1.226-1.002h.367v-6.152c0-4.198 2.208-6.415 6.382-6.415 4.177 0 6.388 2.217 6.388 6.415v6.15h.367v.002zM12.194 4.515a.42.42 0 01-.418-.421V2.568a.419.419 0 01.836 0v1.528a.419.419 0 01-.418.419c0 .003 0 .003 0 0zM4.51 9.629c0 .23-.188.418-.418.42H2.568a.419.419 0 01-.418-.417v-.003a.42.42 0 01.418-.422h1.52a.42.42 0 01.42.422zm17.223-.393a.419.419 0 010 .837H20.21a.419.419 0 01-.418-.419v-.003c0-.23.188-.42.418-.42l1.523.005zM5.735 5.739L4.66 4.657a.424.424 0 010-.595.417.417 0 01.589-.002l.002.002 1.076 1.082a.425.425 0 01-.006.597.42.42 0 01-.586-.003zm11.803-.003a.42.42 0 01-.296-.717l1.075-1.082a.417.417 0 01.59-.003l.002.003a.424.424 0 010 .595l-1.075 1.081a.415.415 0 01-.296.123zm-2.814 7.051v-.97h-1.656a.419.419 0 01-.419-.418V9.734h-.97v1.665a.42.42 0 01-.415.42H9.608v.974h1.656a.42.42 0 01.418.418v1.665h.97v-1.665a.42.42 0 01.418-.42l1.654-.004zm.102-1.81c.393 0 .734.314.734.672v1.31c0 .358-.344.67-.734.67h-1.34v1.35c0 .4-.307.737-.669.737h-1.303c-.361 0-.669-.339-.669-.737v-1.346h-1.34c-.398 0-.734-.308-.734-.672v-1.309c0-.364.336-.672.734-.672h1.34V9.632c0-.393.313-.738.67-.738h1.302c.356 0 .669.345.669.738v1.346h1.34z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightCrossRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.719 20.567v-1.874a.324.324 0 00-.174-.053H5.525a.344.344 0 00-.173.048v1.888c.053.03.112.045.173.045h13.02c.062 0 .123-.02.174-.054zM6.887 11.702v5.703h10.297v-5.703c0-3.48-1.684-5.171-5.152-5.171-3.462 0-5.145 1.692-5.145 5.17zm11.658 5.725c.74 0 1.384.547 1.384 1.168v2.07c0 .625-.647 1.171-1.384 1.171H5.525c-.75 0-1.383-.535-1.383-1.17v-2.07c0-.634.633-1.169 1.383-1.169h.152v-5.725c0-4.118 2.257-6.387 6.355-6.387 4.101 0 6.359 2.27 6.359 6.387v5.725h.154zM12.035 4.84a.607.607 0 01-.605-.608V2.758c0-.336.272-.608.605-.608.333 0 .605.272.605.608V4.23a.608.608 0 01-.605.608zm-7.21 4.723a.609.609 0 01-.605.608H2.755a.608.608 0 010-1.216h1.468c.333 0 .605.272.602.608zm16.406-.58c.334 0 .605.272.605.608a.607.607 0 01-.605.608h-1.468a.607.607 0 01-.605-.608c0-.336.272-.608.605-.608h1.468zM5.665 5.957L4.63 4.915a.607.607 0 01.852-.863l.002.003L6.52 5.097a.61.61 0 01-.429 1.039.62.62 0 01-.426-.18zm11.524.056a.607.607 0 01-.426-1.037L17.8 3.934a.602.602 0 01.851-.002l.003.002a.609.609 0 010 .857l-1.036 1.042a.607.607 0 01-.429.18zm-2.835 6.476v-.695h-1.479a.527.527 0 01-.523-.526V9.786h-.692v1.482a.525.525 0 01-.524.526H9.66v.695h1.476c.289 0 .524.235.524.527v1.481h.692v-1.481c0-.292.235-.527.523-.527h1.48zm.222-1.748c.448 0 .829.353.829.768v1.263c0 .414-.381.767-.83.767h-1.17v1.18c0 .45-.35.832-.768.832h-1.255c-.414 0-.767-.381-.767-.832v-1.177H9.441c-.448 0-.829-.353-.829-.77v-1.263c0-.418.381-.768.83-.768h1.17v-1.18c0-.45.353-.834.768-.834h1.255c.414 0 .767.381.767.832v1.176c-.003.006 1.174.006 1.174.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.719 20.567v-1.874a.324.324 0 00-.174-.053H5.525a.344.344 0 00-.173.048v1.888c.053.03.112.045.173.045h13.02c.062 0 .123-.02.174-.054zm-.174-3.14c.74 0 1.384.546 1.384 1.171v2.07c0 .625-.647 1.171-1.384 1.171H5.525c-.75 0-1.383-.535-1.383-1.17v-2.07c0-.634.633-1.169 1.383-1.169h.152v-5.728c0-4.118 2.257-6.387 6.355-6.387 4.101 0 6.359 2.27 6.359 6.387v5.725h.154zM12.035 4.84a.607.607 0 01-.605-.608V2.758c0-.336.272-.608.605-.608.333 0 .605.272.605.608V4.23a.608.608 0 01-.605.608zm-7.21 4.723a.609.609 0 01-.605.608H2.755a.608.608 0 010-1.216h1.468c.333 0 .605.272.602.608zm16.406-.58c.334 0 .605.272.605.608a.607.607 0 01-.605.608h-1.468a.607.607 0 01-.605-.608c0-.336.272-.608.605-.608h1.468zM5.665 5.957L4.63 4.915a.607.607 0 01.852-.863l.002.003L6.52 5.097a.61.61 0 01-.429 1.039.62.62 0 01-.426-.18zm11.524.056a.607.607 0 01-.426-1.037L17.8 3.934a.602.602 0 01.851-.002l.003.002a.609.609 0 010 .857l-1.036 1.042a.607.607 0 01-.429.18z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.943 21.31c.199 0 .373-.128.393-.185L19.333 19a.57.57 0 00-.39-.162h-13.5c-.211 0-.368.12-.39.17v2.141c.014.037.173.162.39.162h13.5zm-12.3-9.462v6.126H17.74v-6.126c0-3.7-1.867-5.576-5.55-5.576-3.679 0-5.546 1.876-5.546 5.576zm12.3 6.149c.654 0 1.226.467 1.226 1.002v2.149c0 .532-.574 1.002-1.226 1.002h-13.5c-.666 0-1.227-.458-1.227-1.002v-2.15c0-.543.563-1.001 1.227-1.001h.367v-6.152c0-4.195 2.208-6.416 6.383-6.416 4.177 0 6.386 2.218 6.386 6.416v6.149h.364v.003zm-6.75-13.482a.42.42 0 01-.419-.42V2.567a.42.42 0 01.837 0v1.53a.42.42 0 01-.418.417zM4.509 9.628c0 .23-.188.418-.418.421H2.568a.422.422 0 01-.418-.421v-.003a.42.42 0 01.418-.421h1.52c.23.003.418.19.421.424zm17.223-.393a.42.42 0 010 .837h-1.523a.42.42 0 01-.418-.418V9.65c0-.23.188-.422.418-.422l1.523.006zm-16-3.498l-1.075-1.08a.425.425 0 010-.594.417.417 0 01.59-.003l.002.003 1.076 1.079a.425.425 0 01-.006.598.417.417 0 01-.586-.003zm11.802-.003a.421.421 0 01-.421-.419.43.43 0 01.125-.299l1.076-1.081a.417.417 0 01.589-.003l.003.003a.425.425 0 010 .595L17.83 5.61a.4.4 0 01-.296.123z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmLightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.719 20.567v-1.874a.324.324 0 00-.174-.053H5.525a.344.344 0 00-.173.048v1.888c.053.03.112.045.173.045h13.02c.062 0 .123-.02.174-.054zM6.887 11.702v5.703h10.297v-5.703c0-3.48-1.684-5.171-5.152-5.171-3.462 0-5.145 1.692-5.145 5.17zm11.658 5.725c.74 0 1.384.547 1.384 1.168v2.07c0 .625-.647 1.171-1.384 1.171H5.525c-.75 0-1.383-.535-1.383-1.17v-2.07c0-.634.633-1.169 1.383-1.169h.152v-5.725c0-4.118 2.257-6.387 6.355-6.387 4.101 0 6.359 2.27 6.359 6.387v5.725h.154zM12.035 4.84a.607.607 0 01-.605-.608V2.758c0-.336.272-.608.605-.608.333 0 .605.272.605.608V4.23a.608.608 0 01-.605.608zm-7.21 4.723a.609.609 0 01-.605.608H2.755a.608.608 0 010-1.216h1.468c.333 0 .605.272.602.608zm16.406-.58c.334 0 .605.272.605.608a.607.607 0 01-.605.608h-1.468a.607.607 0 01-.605-.608c0-.336.272-.608.605-.608h1.468zM5.665 5.957L4.63 4.915a.607.607 0 01.852-.863l.002.003L6.52 5.097a.61.61 0 01-.429 1.039.62.62 0 01-.426-.18zm11.524.056a.607.607 0 01-.426-1.037L17.8 3.934a.602.602 0 01.851-.002l.003.002a.609.609 0 010 .857l-1.036 1.042a.607.607 0 01-.429.18z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmOffFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.861 20.51c.639 0 1.101-.165 1.412-.502.325-.353.429-.837.46-1.19h-3.74c.028.35.129.837.454 1.19.31.34.773.502 1.414.502zM3.965 2.23l16.767 18.45a.593.593 0 01-.036.838l-.014.014a.623.623 0 01-.868-.05l-2.42-2.661H14.97c-.037.543-.194 1.355-.77 1.989-.55.602-1.337.907-2.337.907-1.003 0-1.79-.305-2.339-.907-.577-.634-.73-1.446-.764-1.99H3.458a.615.615 0 01-.58-.4.59.59 0 01.19-.666c2.051-1.642 1.858-5.057 1.855-5.093L4.92 8.826c0-.355.023-.694.059-1.022l.034-.263c.01-.084.016-.171.03-.255l.014.017c.084-.541.23-1.07.435-1.578L3.046 3.028a.593.593 0 01.037-.838l.014-.014a.629.629 0 01.868.054zM20.66 17.748c.201.16.277.428.19.67a.604.604 0 01-.126.195L7.066 3.585c1.913-1.59 4.423-1.537 4.798-1.518.387-.02 3.053-.081 4.986 1.678 1.297 1.18 1.955 2.888 1.955 5.079v3.795c-.002.073-.187 3.499 1.855 5.129z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmOffLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.363 18.064c1.729-2.09 1.555-5.177 1.544-5.3V8.89c0-.95.137-1.79.4-2.52l10.659 11.697-12.603-.003zm9.202 2.375c-.356.387-.893.586-1.605.586-.711 0-1.25-.196-1.605-.58-.448-.488-.52-1.18-.527-1.558h4.267c-.009.384-.09 1.068-.53 1.552zM7.571 4.46c1.753-1.597 4.339-1.446 4.364-1.443.02.003.04.003.059 0 .025-.003 2.61-.154 4.364 1.443 1.1 1.003 1.661 2.493 1.661 4.431v3.849c-.008.148-.185 3.235 1.543 5.325h-1.47L6.697 5.557c.238-.412.524-.782.874-1.098zm13.308 16.666l-2.042-2.24h1.725a.42.42 0 00.395-.272.407.407 0 00-.129-.457c-2.173-1.734-1.977-5.33-1.974-5.392V8.89c0-2.176-.653-3.871-1.936-5.036-1.933-1.76-4.622-1.675-4.955-1.656-.333-.02-3.022-.1-4.96 1.659a5.46 5.46 0 00-.894 1.056l-2.387-2.62a.429.429 0 00-.594-.033.404.404 0 00-.042.569l.009.008L5.69 5.686c-.409.91-.624 1.977-.624 3.201v3.9c.002.036.198 3.633-1.975 5.366a.4.4 0 00-.13.457.421.421 0 00.396.272h5.627c.003.501.107 1.409.737 2.098.521.571 1.272.86 2.235.86.961 0 1.712-.289 2.233-.857.63-.687.74-1.591.745-2.101h2.776l2.538 2.787c.157.17.42.185.593.034a.403.403 0 00.045-.566c0-.003-.005-.006-.008-.012z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlarmOffRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.847 17.613c1.47-2.09 1.314-4.885 1.306-4.991V8.824c0-.765.095-1.454.277-2.07l9.866 10.86H4.847zm8.423 2.395c-.31.337-.773.502-1.411.502-.642 0-1.104-.163-1.415-.502-.325-.353-.426-.84-.454-1.19h3.74c-.031.356-.132.837-.46 1.19zM7.707 4.633c1.647-1.504 4.09-1.361 4.115-1.361a.421.421 0 00.084 0c.025 0 2.468-.143 4.115 1.361 1.03.944 1.555 2.353 1.555 4.19l.002 3.76c-.01.14-.168 2.94 1.306 5.03h-.936L6.968 5.535a4.18 4.18 0 01.74-.902zm13.025 16.048l-1.694-1.863h1.232c.26 0 .493-.16.58-.4a.595.595 0 00-.19-.67c-2.042-1.63-1.857-5.056-1.855-5.129V8.824c0-2.19-.658-3.9-1.955-5.079-1.933-1.762-4.602-1.703-4.986-1.678-.386-.022-3.056-.084-4.989 1.678-.28.258-.535.546-.753.857L3.965 2.23a.624.624 0 00-.868-.05.59.59 0 00-.065.834c.006.006.009.011.014.014l2.448 2.695c-.375.89-.571 1.924-.571 3.1v3.835c.003.034.188 3.46-1.854 5.09a.595.595 0 00-.19.67c.089.24.321.403.579.4h5.3c.033.543.187 1.353.764 1.989.55.605 1.337.907 2.34.907 1 0 1.784-.305 2.335-.907.578-.633.734-1.443.77-1.99h2.424l2.42 2.662a.613.613 0 00.46.202c.145 0 .293-.05.408-.152a.59.59 0 00.065-.834c-.003-.006-.009-.009-.012-.014z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlertFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.608 20.678L12.38 2.412c-.129-.255-.361-.406-.622-.406-.26 0-.493.154-.619.409L2.11 20.678a.718.718 0 00.022.706.738.738 0 00.633.336h18.193a.733.733 0 00.633-.333.717.717 0 00.017-.71zm-9.748-1.709c-.35 0-.555-.201-.555-.554 0-.353.202-.555.555-.555.353 0 .555.202.555.555 0 .353-.205.554-.555.554zm.563-2.672a.551.551 0 11-1.104 0V8.583a.551.551 0 111.104 0v7.714z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAlertLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.979 2.156c.151 0 .285.093.367.252l9.4 18.776a.446.446 0 01-.005.44c-.076.129-.219.202-.39.202H2.61a.445.445 0 01-.392-.202.446.446 0 01-.006-.44l9.404-18.776c.078-.16.213-.252.364-.252zm.003.72L2.76 21.288h18.437L11.982 2.876zm0 15.65c.19 0 .302.112.302.303 0 .19-.11.302-.302.302-.194 0-.303-.112-.303-.302 0-.191.112-.303.303-.303zm.02-10.364a.28.28 0 01.28.28v8.202a.28.28 0 01-.28.28.28.28 0 01-.28-.28V8.442a.28.28 0 01.28-.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAmbulanceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.448 15.622V12.75c0-.297-.288-.667-.454-.888a352.277 352.277 0 01-2.896-3.835c-.157-.221-.462-.378-.76-.412v6.65c1.295.165 2.155.955 2.385 2.196h.89c.19 0 .404-.098.572-.263a.85.85 0 00.263-.577zm-4.605 3.232c1.132 0 1.7-.568 1.7-1.694s-.568-1.703-1.7-1.703c-1.129 0-1.7.577-1.7 1.703.003 1.126.571 1.694 1.7 1.694zm-9.767 0c1.131 0 1.7-.568 1.7-1.694s-.572-1.703-1.7-1.703c-1.13 0-1.706.577-1.706 1.703-.003 1.126.577 1.694 1.706 1.694zm14.893-7.742c.255.32.717.922.717 1.63v2.88c0 .53-.224 1.053-.619 1.448-.403.395-.933.625-1.45.625h-.875c-.207 1.49-1.271 2.395-2.896 2.395-1.7 0-2.779-.99-2.913-2.6H8.989c-.132 1.614-1.213 2.6-2.913 2.6-1.71 0-2.79-.995-2.922-2.617C2.504 17.39 2 16.877 2 16.246V4.916c0-.684.594-1.235 1.32-1.235h11.7c.725 0 1.319.56 1.319 1.243v1.449c.692.042 1.37.386 1.756.93.376.51 2.586 3.43 2.874 3.809zm-8.49-2.846h-1.773v-1.77c0-.429-.34-.807-.726-.807H8.364c-.386 0-.725.378-.725.807v1.767H5.866c-.437 0-.802.328-.802.723v1.613c0 .395.365.723.802.723h1.773l.008 1.77c0 .437.33.807.717.807H9.99c.39 0 .72-.37.72-.807v-1.77h1.773c.428 0 .81-.336.81-.723V8.99c-.006-.387-.384-.723-.813-.723z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAmbulanceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.008 15.91v-2.918c-.009-.364-.317-.773-.51-1.023-.291-.383-2.543-3.35-2.919-3.882-.201-.274-.577-.465-.935-.501v7.148c1.266.168 2.058.966 2.224 2.235l1.084-.01c.25 0 .515-.118.725-.326.213-.207.33-.473.33-.722zm-4.86 3.474c1.258 0 1.924-.667 1.924-1.924 0-1.267-.666-1.933-1.924-1.933-1.27 0-1.936.666-1.936 1.933 0 1.257.667 1.924 1.936 1.924zm-2.728-2.415c.168-1.325 1.036-2.131 2.395-2.252V5.07c0-.232-.227-.426-.502-.426H3.49c-.275 0-.499.194-.499.418v11.473c0 .233.224.426.499.426h.058c.182-1.423 1.166-2.266 2.717-2.266 1.56 0 2.544.84 2.729 2.266 0-.003 4.426.008 4.426.008zm-7.155 2.415c1.27 0 1.936-.667 1.936-1.924 0-1.267-.667-1.933-1.936-1.933-1.257 0-1.924.666-1.924 1.933 0 1.257.667 1.924 1.924 1.924zM21.16 11.46c.258.333.675.885.684 1.535v2.916c0 .476-.208.95-.575 1.316-.361.359-.843.566-1.31.566l-1.076.008c-.132 1.516-1.124 2.415-2.734 2.415-1.62 0-2.61-.9-2.745-2.415l-4.395-.008c-.135 1.524-1.126 2.423-2.745 2.423-1.608 0-2.603-.9-2.734-2.426h-.042c-.731.003-1.33-.563-1.33-1.255V5.062c0-.692.599-1.25 1.333-1.25h11.823c.734 0 1.333.566 1.333 1.258v1.684c.625.033 1.253.35 1.608.848.378.527 2.614 3.485 2.905 3.858zm-8.431-.74V9.286h-2.194a.413.413 0 01-.417-.41V6.685H8.691L8.683 8.87c0 .23-.188.417-.418.417l-2.19.008v1.426h2.19c.236 0 .418.19.418.417v2.19h1.434v-2.19c0-.109.042-.218.126-.294a.391.391 0 01.291-.123h2.194zm.016-2.266c.435 0 .816.342.816.734v1.633c0 .392-.384.734-.816.734h-1.792v1.79c0 .442-.334.818-.734.818H8.585c-.4 0-.734-.376-.734-.818v-1.79l-1.793.008c-.442 0-.818-.342-.818-.734V9.188c0-.39.376-.726.818-.726l1.793-.008V6.661c0-.434.342-.81.734-.81h1.633c.392 0 .734.376.734.81v1.793h1.792z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAmbulanceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.23 16.244c.162-.163.26-.373.26-.56l-.008-2.846c0-.292-.278-.659-.448-.869a538.3 538.3 0 01-2.866-3.795 1.048 1.048 0 00-.538-.364v6.549c1.16.218 1.936.991 2.146 2.142h.882c.196.003.406-.095.572-.257zm-4.303 2.624c1.118 0 1.69-.56 1.69-1.672 0-1.112-.572-1.68-1.69-1.68-1.117 0-1.68.568-1.68 1.68s.563 1.672 1.68 1.672zm-2.84-2.364c.218-1.21 1.061-2 2.316-2.17V5.111c0-.098-.123-.213-.294-.213H3.546c-.17 0-.294.104-.294.205V16.29c0 .073.081.138.18.171.268-1.35 1.3-2.17 2.831-2.17 1.55 0 2.589.828 2.849 2.21h3.975v.002zm-6.824 2.364c1.118 0 1.69-.56 1.69-1.672 0-1.112-.572-1.68-1.69-1.68-1.117 0-1.68.568-1.68 1.68s.563 1.672 1.68 1.672zm15.443-6.028l.008 2.846c0 .51-.23 1.031-.619 1.42a2.07 2.07 0 01-1.437.617h-.857c-.213 1.47-1.266 2.364-2.874 2.364s-2.66-.894-2.865-2.364H9.129c-.205 1.47-1.258 2.364-2.866 2.364-1.616 0-2.67-.902-2.865-2.381-.768-.073-1.373-.675-1.373-1.415V5.104c0-.79.678-1.423 1.518-1.423H15.11c.84 0 1.518.641 1.518 1.431v1.462c.605.081 1.185.406 1.535.885.939 1.26 1.886 2.516 2.84 3.762.247.32.704.91.704 1.62zm-9.328-2.423v-.994l-1.941.003a.614.614 0 01-.613-.61V6.887h-.998V8.82c0 .336-.274.61-.61.61l-1.941.003v.989h1.943c.34 0 .611.272.611.608l.003 1.933h.994l-.002-1.933c0-.336.274-.61.61-.61h1.944v-.004zm.224-2.21c.544 0 1 .42 1 .916v1.597c0 .496-.46.916-1 .916h-1.549v1.546c0 .54-.423.997-.919.997H8.532c-.498 0-.919-.456-.919-.997V11.64H6.06c-.54 0-1-.418-1-.916V9.126c0-.496.46-.916 1-.916h1.55V6.664c0-.54.423-.997.921-.997h1.602c.5 0 .922.456.922.997v1.543h1.546z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAntennaFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.014 20.395v-1.479h-5.417c-.062 0-.18-.003-.18-.003s-.112.003-.173.003h-.799c-.067 0-.193-.003-.193-.003s-.123.003-.19.003h-5.37v1.48h12.322zm-7.303-4.16l-.49 1.39h.84c.068 0 .197.003.197.003s.12-.003.187-.003h.799c.061 0 .176.003.176.003s.115-.003.177-.003h.868l-.499-1.39h-2.255zm1.12-3.173l-.663 1.88h1.339l-.675-1.88zm-.767-7.56c-.176.179-.212.54-.212.812s.036.633.21.81c.182.181.554.21.762.21.254 0 .59-.037.767-.213.177-.174.213-.535.213-.807s-.036-.633-.213-.813c-.174-.176-.513-.212-.765-.212-.252.002-.59.039-.762.212zm7.566 12.123c.342 0 .62.288.62.647v2.77a.635.635 0 01-.62.647H5.073a.633.633 0 01-.62-.647v-2.77c0-.356.278-.647.62-.647H6.4l3.535-9.933c-.21-.361-.317-.82-.317-1.375 0-.76.199-1.345.588-1.74.378-.38.922-.574 1.62-.574.697 0 1.243.193 1.621.574.395.398.594.983.594 1.742 0 .555-.11 1.012-.32 1.376l3.536 9.933h1.372v-.003zM4.29 9.515a.67.67 0 01.016.916.6.6 0 01-.874.014C2.481 9.487 2 8.098 2 6.317c0-1.782.482-3.171 1.431-4.135a.597.597 0 01.874.017.665.665 0 01-.014.913c-.697.709-1.053 1.787-1.053 3.205-.003 1.417.353 2.493 1.05 3.198zm2.372-.277a.594.594 0 01-.429-.182c-.638-.641-.96-1.566-.96-2.745 0-1.176.322-2.1.96-2.745a.6.6 0 01.874.017.665.665 0 01-.014.913c-.386.392-.582 1.003-.582 1.818 0 .815.196 1.426.582 1.815a.67.67 0 01.017.913.626.626 0 01-.448.196zm13.594-7.056c.95.961 1.431 2.35 1.431 4.135 0 1.781-.482 3.17-1.431 4.128a.593.593 0 01-.871-.017.665.665 0 01.017-.913c.697-.705 1.053-1.781 1.053-3.198 0-1.42-.356-2.499-1.053-3.208a.665.665 0 01-.014-.913.593.593 0 01.868-.014zm-3.706 6.86a.667.667 0 01.017-.913c.386-.39.582-1 .582-1.812 0-.813-.196-1.426-.582-1.816a.668.668 0 01-.017-.915.597.597 0 01.874-.014c.639.644.96 1.568.96 2.745 0 1.179-.324 2.1-.96 2.745a.609.609 0 01-.431.179.618.618 0 01-.443-.199z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAntennaLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.512 20.964v-1.952H5.506v1.952h13.006zm-7.504-5.574h1.972l-.992-2.773-.98 2.773zm2.286.88h-2.6l-.658 1.86h3.921l-.663-1.86zm-2.387-7.765l-3.42 9.625h1.655l2.448-6.93.009-.014c.011-.028.028-.05.045-.076a.596.596 0 01.044-.07l.056-.042c.026-.02.05-.04.082-.053l.014-.009c.02-.008.039-.005.059-.008.03-.006.058-.014.09-.014.027 0 .055.008.083.011.023.006.042.003.062.011.005.003.008.009.014.012.028.01.047.03.073.047.02.014.042.028.061.045.017.02.028.042.045.065.017.025.037.047.048.078l.008.014 2.48 6.93h1.627l-3.423-9.628a2.716 2.716 0 01-1.082.208 2.646 2.646 0 01-1.078-.202zm.006-3.302c-.23.23-.345.619-.345 1.145 0 .364.059.658.17.883.049.1.105.19.175.26.07.073.16.129.26.177.21.106.479.16.81.16.336 0 .605-.057.815-.163a.949.949 0 00.26-.177.99.99 0 00.177-.26c.109-.227.17-.518.17-.883 0-.526-.117-.913-.347-1.145-.224-.227-.585-.342-1.075-.342-.488.006-.85.12-1.07.345zm8.02 12.927c.232 0 .42.199.42.44v2.83a.43.43 0 01-.42.44H5.082a.43.43 0 01-.42-.44v-2.83c0-.24.188-.44.42-.44h1.505L10.2 7.965c-.31-.395-.476-.93-.476-1.613 0-.776.202-1.375.602-1.779.387-.39.941-.588 1.656-.588.714 0 1.271.199 1.658.588.403.406.605 1.006.605 1.779 0 .683-.165 1.216-.476 1.613l3.613 10.169h1.55v-.003zM2.996 6.348c0 1.513.383 2.664 1.14 3.432a.452.452 0 01.01.621.409.409 0 01-.593.012c-.927-.936-1.398-2.303-1.398-4.065 0-1.762.47-3.129 1.398-4.067a.404.404 0 01.594.011.452.452 0 01-.011.622c-.757.768-1.14 1.922-1.14 3.434zm3.708 2.77a.41.41 0 01-.291-.123c-.608-.613-.916-1.504-.916-2.647 0-1.14.308-2.033.916-2.647a.406.406 0 01.594.009.455.455 0 01-.009.621c-.44.443-.66 1.124-.66 2.017 0 .894.22 1.572.658 2.014a.452.452 0 01.01.622.415.415 0 01-.302.135zm13.74-6.837c.927.938 1.398 2.308 1.398 4.067 0 1.76-.471 3.13-1.398 4.065a.415.415 0 01-.292.123.413.413 0 01-.302-.135.455.455 0 01.011-.621c.756-.765 1.14-1.916 1.14-3.432 0-1.512-.384-2.666-1.14-3.434a.455.455 0 01-.011-.622.408.408 0 01.594-.011zm-3.49 6.7a.455.455 0 01.01-.622c.438-.44.662-1.117.662-2.01 0-.897-.221-1.572-.661-2.018a.455.455 0 01-.011-.621.406.406 0 01.593-.012c.608.617.916 1.507.916 2.65s-.308 2.031-.918 2.647a.412.412 0 01-.292.12.402.402 0 01-.3-.134z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAntennaRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.014 20.395v-1.479H5.689v1.48h12.325zm-6.182-7.333l-.664 1.88h1.339l-.675-1.88zm.765 4.563h.868l-.499-1.39h-2.255l-.49 1.39h2.376zm-1.63-9.126L7.72 17.622h1.182l2.347-6.636c.003-.008.009-.011.012-.02a.451.451 0 01.07-.117c.02-.031.039-.065.064-.093.022-.025.053-.039.081-.061.04-.028.076-.06.12-.079.009-.002.012-.008.017-.01.026-.012.054-.01.079-.015.047-.011.092-.022.14-.022.042 0 .081.008.12.02.031.008.062.002.093.016.008.003.011.009.02.011.041.017.075.048.114.073.028.023.062.04.087.065.025.025.042.061.065.092.025.04.053.073.07.118.002.008.008.01.01.02l2.376 6.638h1.154L12.69 8.499a2.931 2.931 0 01-.865.126 2.8 2.8 0 01-.858-.126zm.097-2.998c-.173.18-.212.541-.212.813 0 .272.036.633.21.81.182.181.554.21.762.21.254 0 .593-.037.767-.213.177-.174.213-.535.213-.807s-.036-.633-.213-.813c-.174-.176-.513-.212-.765-.212-.252.002-.59.039-.762.212zm7.57 12.124c.34 0 .618.288.618.647v2.77c0 .356-.277.647-.619.647H5.073a.633.633 0 01-.62-.647v-2.77c0-.356.278-.647.62-.647H6.4l3.535-9.933c-.21-.361-.32-.82-.32-1.375 0-.76.2-1.345.588-1.74.379-.38.922-.574 1.62-.574.697 0 1.243.193 1.621.574.395.398.591.983.591 1.742 0 .555-.109 1.012-.319 1.376l3.535 9.933h1.381v-.003zM4.288 9.515a.67.67 0 01.016.916.604.604 0 01-.445.197.594.594 0 01-.429-.183C2.481 9.487 2 8.098 2 6.317c0-1.782.482-3.171 1.431-4.135a.597.597 0 01.874.017.667.667 0 01-.014.913c-.7.709-1.053 1.787-1.053 3.205-.003 1.417.353 2.493 1.05 3.198zm2.372-.277a.594.594 0 01-.429-.182c-.638-.641-.96-1.566-.96-2.745 0-1.176.322-2.1.96-2.745a.6.6 0 01.874.017.667.667 0 01-.014.913c-.386.392-.582 1.003-.582 1.818 0 .815.196 1.426.582 1.815a.67.67 0 01.017.913.621.621 0 01-.448.196zm13.594-7.056c.95.961 1.431 2.35 1.431 4.135 0 1.781-.482 3.17-1.431 4.128a.6.6 0 01-.429.183.603.603 0 01-.445-.2.665.665 0 01.017-.913c.7-.705 1.053-1.781 1.053-3.198 0-1.42-.353-2.499-1.053-3.208a.665.665 0 01-.014-.913.596.596 0 01.87-.014zm-3.709 6.86a.667.667 0 01.017-.913c.387-.39.585-1 .585-1.812 0-.813-.196-1.426-.585-1.816a.668.668 0 01-.014-.915.597.597 0 01.874-.014c.639.644.96 1.568.96 2.745 0 1.179-.324 2.1-.963 2.745a.603.603 0 01-.428.179.63.63 0 01-.446-.199z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApartmentBuildingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.144 7.625a.407.407 0 01-.406.409H13.15a.409.409 0 01-.406-.41V5.009c0-.226.182-.409.406-.409h2.588c.224 0 .406.183.406.41v2.616zm0 5.137a.407.407 0 01-.406.409H13.15a.409.409 0 01-.406-.41v-2.618c0-.227.182-.41.406-.41h2.588a.41.41 0 01.406.41v2.619zm-5.117-5.137a.407.407 0 01-.407.409H8.032a.409.409 0 01-.406-.41V5.009c0-.226.182-.409.406-.409h2.588c.225 0 .407.183.407.41v2.616zm0 5.137a.407.407 0 01-.407.409H8.032a.409.409 0 01-.406-.41v-2.618c0-.227.182-.41.406-.41h2.588a.41.41 0 01.407.41v2.619zM18.07 2H5.741c-.636 0-1.216.574-1.216 1.202v17.283c0 .641.569 1.201 1.216 1.201h4.05V16.18c0-.227.182-.409.406-.409h3.42c.225 0 .407.182.407.41v5.506h4.05c.647 0 1.216-.563 1.216-1.201V3.202C19.287 2.574 18.707 2 18.07 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApartmentBuildingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.575 20.64V3.36c0-.176-.219-.383-.407-.383H5.838c-.185 0-.406.207-.406.38v17.281c0 .188.204.384.406.384h4.05v-4.686c0-.227.182-.41.406-.41h3.42a.41.41 0 01.407.41v4.686h4.05c.2 0 .404-.193.404-.381zm-7.877.354h2.61v-4.25h-2.607v4.25h-.003zm7.47-18.838c.636 0 1.219.574 1.219 1.205v17.28c0 .638-.569 1.202-1.216 1.202H5.841c-.647 0-1.216-.564-1.216-1.202V3.358c-.003-.628.577-1.202 1.213-1.202h12.33zM8.535 7.372h1.776V5.576H8.533v1.796h.002zm2.182-2.616a.41.41 0 01.407.409V7.78a.407.407 0 01-.407.409h-2.59a.409.409 0 01-.407-.41V5.166c0-.227.182-.41.406-.41h2.591zm2.936 2.616h1.779V5.576h-1.779v1.796zm2.182-2.616c.224 0 .406.185.406.409V7.78a.405.405 0 01-.406.409h-2.588a.409.409 0 01-.406-.41V5.166c0-.227.179-.41.406-.41h2.588zm-7.3 7.753h1.78v-1.795h-1.78v1.795zm2.182-2.616c.225 0 .407.182.407.409v2.616a.407.407 0 01-.407.41h-2.59a.409.409 0 01-.407-.41v-2.616c0-.227.182-.41.406-.41h2.591zm2.936 2.616h1.779v-1.795h-1.779v1.795zm2.182-2.616c.224 0 .406.182.406.409v2.616c0 .227-.179.41-.406.41h-2.588a.407.407 0 01-.406-.41V10.3c0-.227.179-.409.406-.409l2.588.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApartmentBuildingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.651 20.482V16.09c0-.334.266-.603.591-.603h3.328c.328 0 .591.27.591.603v4.389h3.745c.098 0 .196-.112.196-.174V3.378c-.005-.059-.123-.174-.196-.174H5.903c-.075 0-.193.113-.196.174v16.927c0 .062.101.174.196.174l3.748.003zm8.258 1.204H5.906c-.737 0-1.38-.644-1.38-1.378V3.381c0-.723.657-1.378 1.38-1.378H17.91c.723 0 1.38.658 1.38 1.378v16.927c-.002.734-.646 1.378-1.38 1.378zm-7.073-1.235h2.143v-3.76h-2.143v3.76zM8.726 7.109h1.337V5.751H8.727v1.358zm1.93 1.205h-2.52a.595.595 0 01-.591-.603V5.148c0-.333.266-.602.59-.602h2.522c.328 0 .59.27.59.602v2.563a.597.597 0 01-.59.603zm3.051-1.205h1.336V5.751h-1.336v1.358zm1.93 1.205h-2.52a.595.595 0 01-.592-.603V5.148c0-.333.266-.602.591-.602h2.521c.328 0 .591.27.591.602v2.563a.597.597 0 01-.59.603zm-6.91 3.826h1.336v-1.359H8.727v1.359zm1.93 1.205H8.136a.595.595 0 01-.591-.603V10.18c0-.333.266-.602.59-.602h2.522c.328 0 .59.269.59.602v2.563a.597.597 0 01-.59.603zm3.05-1.205h1.336v-1.359h-1.336v1.359zm1.93 1.205h-2.52a.595.595 0 01-.592-.603V10.18c0-.333.266-.602.591-.602h2.521c.328 0 .591.269.591.602v2.563a.597.597 0 01-.59.603z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApiFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.224 4.522c.807 0 1.462.63 1.462 1.41V17.88c0 .776-.655 1.406-1.462 1.406H3.462C2.655 19.29 2 18.657 2 17.881V5.931c0-.776.655-1.409 1.462-1.409h16.762zm.23 4.323H3.232v9.036c0 .12.101.218.227.218h10.39a.862.862 0 01.185-.263l.37-.356a3.66 3.66 0 01-.096-.297h-.414c-.541 0-.984-.425-.984-.946v-.661c0-.521.44-.944.984-.944h.414c.025-.096.056-.196.095-.297l-.37-.353a.93.93 0 01-.027-1.317c.008-.01.02-.02.028-.028l.501-.484a1.014 1.014 0 011.398 0l.37.358a4.58 4.58 0 01.305-.092v-.398c0-.524.44-.947.983-.947h.686c.54 0 .984.423.984.947v.398c.103.028.204.059.305.095l.37-.356a.95.95 0 01.518-.263v-3.05zm-2.569 5.14c-1.162 0-1.882.694-1.882 1.812s.72 1.812 1.882 1.812c1.163 0 1.883-.694 1.883-1.812s-.723-1.812-1.883-1.812zm-8.67-2.902c.567 0 .925.078 1.158.297.196.179.29.459.29.845 0 .387-.089.676-.268.877-.21.238-.538.348-1.014.348h-.58v1.246h-.823v-3.613h1.238zm-2.963 0l1.303 3.61h-.883l-.3-.907h-1.17l-.28.907h-.785l1.208-3.61h.907zm5.826 0v3.61h-.823v-3.61h.823zm-6.3.902h-.01l-.376 1.204h.782l-.395-1.204zm3.404-.306h-.386v1.152h.408c.264 0 .376-.037.48-.138.095-.095.142-.249.142-.46 0-.195-.042-.338-.137-.428-.1-.09-.252-.126-.507-.126zM4.445 6.127a.56.56 0 00-.571.55.56.56 0 00.571.548.562.562 0 00.572-.549.56.56 0 00-.572-.549zm1.715 0a.56.56 0 00-.572.55.56.56 0 00.572.548.562.562 0 00.571-.549.56.56 0 00-.571-.549zm1.714 0a.56.56 0 00-.571.55.56.56 0 00.57.548.562.562 0 00.572-.549.56.56 0 00-.571-.549z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApiLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.588 4.61c.691 0 1.255.546 1.255 1.215v12.333c0 .67-.564 1.216-1.255 1.216H3.41c-.692 0-1.255-.546-1.255-1.216V5.825c0-.67.563-1.216 1.255-1.216h17.177zm.434 4.016H2.977v9.532c0 .233.193.42.434.42H14.49a.787.787 0 01.212-.389l.423-.409a3.382 3.382 0 01-.14-.448h-.51a.845.845 0 01-.857-.832v-.664c0-.456.384-.832.858-.832h.51c.033-.137.078-.297.14-.45l-.424-.41a.825.825 0 01-.252-.59c0-.228.09-.435.255-.594l.499-.485a.908.908 0 011.224 0l.426.412c.145-.056.3-.101.46-.14v-.493c0-.46.386-.832.856-.832h.687c.473 0 .857.372.857.832v.493c.16.039.31.084.46.14l.425-.415a.864.864 0 01.423-.224V8.626zm-2.852 3.591l-.036.855a.4.4 0 01-.345.392 3.04 3.04 0 00-.846.252.422.422 0 01-.473-.076l-.625-.605-.563.485.625.66a.387.387 0 01.067.477c-.112.188-.204.54-.25.801a.405.405 0 01-.405.333h-.846l-.037.7.883.037c.201 0 .372.14.406.333.045.264.137.611.25.802a.39.39 0 01-.068.479l-.448.431h5.129v.003a.428.428 0 00.434-.42v-4.944l-.468.431a.418.418 0 01-.47.076 3.043 3.043 0 00-.847-.255.397.397 0 01-.344-.392v-.818l-.723-.037zm.34 1.849c1.355 0 2.164.784 2.164 2.098 0 1.314-.81 2.098-2.165 2.098-1.356 0-2.165-.784-2.165-2.098 0-1.314.81-2.098 2.165-2.098zm0 .798c-.906 0-1.345.426-1.345 1.303s.44 1.302 1.344 1.302c.905 0 1.345-.425 1.345-1.302s-.44-1.303-1.345-1.303zm-9.138-3.697c.566 0 .924.078 1.157.297.196.179.291.46.291.846 0 .386-.09.675-.269.876-.21.239-.538.348-1.014.348h-.58v1.246h-.823v-3.613h1.238zm-2.964 0l1.303 3.61h-.882l-.3-.907H5.358l-.28.907h-.784l1.207-3.61h.907zm5.827 0v3.61h-.824v-3.61h.824zm-6.3.902h-.011l-.376 1.204h.782l-.395-1.204zm3.403-.306h-.386v1.152h.409c.263 0 .375-.037.479-.138.095-.095.143-.249.143-.459 0-.196-.042-.339-.138-.429-.1-.09-.252-.126-.507-.126zm11.25-6.358H3.41a.428.428 0 00-.434.42v2.008h18.045V5.825a.426.426 0 00-.434-.42zm-14.241.72a.56.56 0 01.571.552.56.56 0 01-.571.551.563.563 0 01-.572-.551.56.56 0 01.572-.552zm1.714 0c.317 0 .569.246.569.552a.558.558 0 01-.569.551.563.563 0 01-.571-.551.56.56 0 01.571-.552zm-3.426 0a.56.56 0 01.572.552.56.56 0 01-.572.551.563.563 0 01-.571-.551.56.56 0 01.571-.552z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconApiRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.224 4.525c.807 0 1.462.63 1.462 1.406v11.95c0 .776-.655 1.406-1.462 1.406H3.462c-.807 0-1.462-.63-1.462-1.406V5.931c0-.776.655-1.406 1.462-1.406h16.762zM18.19 12.1h-.512v.732c0 .252-.19.467-.448.51-.308.047-.58.128-.81.24a.546.546 0 01-.616-.098l-.569-.546-.386.373.568.546a.503.503 0 01.087.616c-.087.148-.182.462-.232.76a.528.528 0 01-.527.43h-.759v.493h.76a.53.53 0 01.526.432c.05.297.145.61.232.759a.499.499 0 01-.087.619l-.142.137h4.952a.229.229 0 00.227-.221v-4.768l-.384.37a.551.551 0 01-.613.098 2.886 2.886 0 00-.816-.24.523.523 0 01-.45-.51V12.1zm2.264-3.254H3.232v9.036c0 .12.101.218.227.218h10.39a.943.943 0 01.182-.263l.37-.353a5.151 5.151 0 01-.096-.297h-.414c-.54 0-.983-.423-.983-.947v-.66c0-.522.44-.947.983-.947h.414a4.07 4.07 0 01.096-.297l-.37-.356a.93.93 0 010-1.347l.501-.482a1.017 1.017 0 011.398 0l.37.356c.098-.034.201-.065.305-.093v-.398c0-.52.44-.946.983-.946h.687c.54 0 .983.425.983.946v.398c.103.028.204.059.305.093l.37-.356a1.06 1.06 0 01.52-.255v-3.05zm-2.48 5.098c1.244 0 2.018.745 2.018 1.94 0 1.197-.774 1.942-2.017 1.942-1.244 0-2.017-.745-2.017-1.941 0-1.196.773-1.941 2.017-1.941zm0 1.03c-.663 0-.946.272-.946.914 0 .638.283.91.947.91.664 0 .947-.272.947-.91 0-.64-.283-.914-.947-.914zm-8.758-3.89c.566 0 .924.078 1.157.297.196.179.29.459.29.845 0 .387-.089.676-.268.877-.21.238-.538.348-1.014.348h-.58v1.246h-.823v-3.613h1.238zm-2.964 0l1.303 3.61h-.883l-.3-.907h-1.17l-.28.907h-.785l1.208-3.61h.907zm5.826 0v3.61h-.823v-3.61h.823zm-6.3.902h-.01l-.376 1.204h.782l-.395-1.204zm3.404-.306h-.386v1.152h.408c.264 0 .376-.037.48-.138.095-.095.142-.249.142-.46 0-.195-.042-.338-.137-.428-.1-.09-.252-.126-.507-.126zm11.045-5.97H3.462a.222.222 0 00-.227.219v1.728h17.219V5.929a.223.223 0 00-.227-.219zM6.16 6.127a.56.56 0 01.571.55.563.563 0 01-.571.551.563.563 0 01-.572-.552.56.56 0 01.572-.549zm1.717 0a.56.56 0 01.571.55.563.563 0 01-.571.551.563.563 0 01-.572-.552.557.557 0 01.572-.549zm-3.432 0a.56.56 0 01.572.55.563.563 0 01-.572.551.563.563 0 01-.571-.552.56.56 0 01.571-.549z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAppointmentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.765 13.885c.476 0 .896.381.896.815v1.406c0 .443-.409.816-.896.816H13.4l.002 1.35c0 .479-.378.882-.823.882h-1.42c-.449 0-.824-.403-.824-.882v-1.353H8.972c-.482 0-.89-.373-.89-.815v-1.401c0-.443.408-.815.89-.815h1.364v-1.35c0-.482.378-.888.824-.888h1.414c.448 0 .824.406.824.888v1.347h1.367zm3.621 6.583c2.096 0 2.096-1.807 2.096-2.4l-.003-7.508H3.26v7.527c0 .028 0 .056-.002.084 0 0-.045 1.036.577 1.683.38.398.994.6 1.812.6h12.42c.05 0 .101.002.151.01.014-.002.076.004.168.004zM18.07 4.134c3.927 0 3.639 3.6 3.639 3.6l.002 10.333c0 3.32-2.442 3.62-3.325 3.62-.196 0-.313-.015-.313-.015H5.65c-3.866 0-3.62-3.585-3.62-3.585V7.714c0-3.341 2.656-3.58 3.41-3.58.126 0 .199.006.199.006h1.19V2.61c0-.335.275-.61.616-.61.34 0 .617.272.617.61v1.53l7.63-.003V2.611c0-.336.274-.611.616-.611.339 0 .616.272.616.61v1.527c-.005-.003 1.146-.003 1.146-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAppointmentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.002 16.462a.13.13 0 00.098-.05l-.005-1.421a.148.148 0 00-.093-.042h-1.84a.41.41 0 01-.409-.409v-1.838a.125.125 0 00-.05-.098l-1.437.006c.011.003-.02.045-.02.092v1.84a.41.41 0 01-.409.41h-1.84a.12.12 0 00-.095.045l.002 1.445c0-.003.003-.003.003-.003.011 0 .045.02.087.02h1.84a.41.41 0 01.41.409v1.843c0 .05.03.087.041.092l1.449-.002c-.012-.003.02-.04.02-.09l-.004-1.84a.42.42 0 01.12-.292.42.42 0 01.292-.12l1.84.003zm0-2.334c.488 0 .914.395.914.84v1.474c0 .448-.426.84-.914.84h-1.428l.003 1.429c0 .496-.384.91-.84.91h-1.471c-.454 0-.84-.417-.84-.91v-1.429H8.993c-.493 0-.91-.386-.91-.84v-1.468c0-.456.417-.84.91-.84h1.431v-1.432c0-.495.384-.913.84-.913h1.469c.456 0 .84.418.84.913v1.426h1.428zm3.513 6.894c1.143 0 2.504-.493 2.504-2.838v-7.79H2.977v7.866c0 .005-.059 1.218.687 2.005.462.49 1.176.74 2.117.74h12.423c.034 0 .067.003.101.006.011.002.09.01.21.01zM4.02 5.342c-.692.439-1.042 1.24-1.042 2.383v1.849h18.04V7.742c0-.023 0-.045.002-.065 0-.008.073-1.21-.664-1.997-.465-.499-1.19-.75-2.156-.75h-1.356v.59a.41.41 0 01-.818 0v-.59l-8.042.002v.588a.41.41 0 01-.818 0v-.585H5.767c-.025 0-.05 0-.073-.003-.008 0-.053-.003-.126-.003-.269 0-.96.04-1.549.412zM18.2 4.108c3.927 0 3.638 3.635 3.638 3.635l.003 10.443c0 3.356-2.443 3.658-3.325 3.658-.193 0-.314-.014-.314-.014H5.778c-3.862-.002-3.619-3.624-3.619-3.624V7.725c0-3.378 2.656-3.616 3.41-3.616.125 0 .198.005.198.005h1.395V2.565a.41.41 0 01.82 0v1.546l8.043-.002V2.565a.41.41 0 01.818 0V4.11h1.356z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAppointmentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.636 15.947V14.94h-1.644a.615.615 0 01-.617-.61v-1.625h-1.01v1.627a.614.614 0 01-.617.611H9.106v1h1.642c.339 0 .616.274.616.61v1.625h1.017l-.006-1.622a.615.615 0 01.617-.61h1.644zm.129-2.224c.596 0 1.1.465 1.1 1.02v1.403c0 .551-.504 1.02-1.1 1.02h-1.157l.003 1.145c0 .591-.47 1.087-1.031 1.087h-1.42c-.558 0-1.028-.496-1.028-1.087v-1.146H8.975c-.605 0-1.098-.456-1.098-1.02v-1.4c0-.552.501-1.02 1.098-1.02h1.16v-1.148c0-.591.47-1.09 1.03-1.09h1.415c.557 0 1.028.499 1.028 1.09v1.146h1.157zm3.622 6.745c2.095 0 2.095-1.807 2.095-2.4V10.56H3.26v7.524c0 .028 0 .056-.003.084 0 0-.045 1.036.577 1.684.38.397.994.599 1.812.599H18.07c.05 0 .1.003.151.011.011 0 .076.006.166.006zM4.112 5.7c-.21.132-.851.535-.851 2.014v1.628h17.218V7.734c0-.03 0-.065.003-.095 0 0 .053-1.026-.56-1.673-.387-.406-1.009-.61-1.855-.61H16.92v.179a.61.61 0 01-.616.608.615.615 0 01-.617-.608v-.18l-7.63.006v.177a.61.61 0 01-.616.608.615.615 0 01-.616-.608V5.36c-.74 0-1.19.003-1.19.003-.037 0-.074-.003-.11-.005-.003 0-.037-.003-.087-.003-.23-.003-.826.03-1.325.344zM18.07 4.134c3.927 0 3.639 3.597 3.639 3.597l.002 10.336c0 3.32-2.442 3.62-3.324 3.62-.194 0-.314-.018-.314-.018H5.65c-3.866 0-3.62-3.585-3.62-3.585V7.711c0-3.338 2.656-3.577 3.41-3.577.126 0 .196.006.196.006l1.19-.003V2.611c0-.336.275-.611.617-.611.341 0 .616.272.616.61v1.53l7.633-.006V2.611c0-.336.274-.611.616-.611.342 0 .616.272.616.61v1.527h1.146v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAppsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.632 2.15h3.224c.54 0 .98.44.98.98v3.224a.98.98 0 01-.98.98h-3.224a.98.98 0 01-.98-.98V3.13c0-.54.44-.98.98-.98zm-7.25 0h3.225c.54 0 .98.44.98.98v3.224a.98.98 0 01-.98.98h-3.225a.98.98 0 01-.98-.98V3.13c0-.54.437-.98.98-.98zm-7.252 0h3.224c.541 0 .98.44.98.98v3.224a.98.98 0 01-.98.98H3.13a.98.98 0 01-.98-.98V3.13c0-.54.44-.98.98-.98zm14.502 7.252h3.224c.54 0 .98.44.98.98v3.225c0 .54-.44.98-.98.98h-3.224c-.54 0-.98-.44-.98-.98v-3.225c0-.543.44-.98.98-.98zm-7.25 0h3.225c.54 0 .98.44.98.98v3.225c0 .54-.44.98-.98.98h-3.225c-.54 0-.98-.44-.98-.98v-3.225c0-.543.437-.98.98-.98zm-7.252 0h3.224c.541 0 .98.44.98.98v3.225a.98.98 0 01-.98.98H3.13c-.54 0-.98-.44-.98-.98v-3.225c0-.543.44-.98.98-.98zm7.252 7.25h3.225c.54 0 .98.44.98.98v3.224c0 .54-.44.98-.98.98h-3.225c-.54 0-.98-.44-.98-.98v-3.224c0-.54.437-.98.98-.98zm7.227 0h3.224c.541 0 .98.44.98.98v3.224a.98.98 0 01-.98.98H17.61c-.54 0-.98-.44-.98-.98v-3.224c0-.54.437-.98.98-.98zm-14.479 0h3.224c.541 0 .98.44.98.98v3.224a.98.98 0 01-.98.98H3.13c-.54 0-.98-.44-.98-.98v-3.224c0-.54.44-.98.98-.98z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowBackLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.262 11.533H4.024l7.933-8.347a.578.578 0 00-.255-1.02.587.587 0 00-.583.233l-8.86 9.32a.158.158 0 00-.059.08.51.51 0 000 .093.57.57 0 000 .44.51.51 0 000 .092.323.323 0 00.06.092l8.697 9.143c.109.12.266.19.431.185a.566.566 0 00.406-.972l-7.77-8.185h17.238c.32 0 .58-.257.58-.577a.58.58 0 00-.58-.577c0 .003 0 .003 0 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowBackRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.843 11.073H4.801l7.241-7.658a.846.846 0 00-.062-1.194.842.842 0 00-1.165.034L2.23 11.336c-.037.04-.056.09-.087.135-.028.042-.062.08-.081.128a.872.872 0 00-.062.317v.006a.92.92 0 00.064.31c.02.05.054.09.084.132.028.042.045.093.082.132l8.431 8.919a.841.841 0 001.19.036s.003 0 .003-.003a.845.845 0 00.034-1.193L4.8 12.759h16.042a.845.845 0 00.843-.846.84.84 0 00-.843-.84"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.02 11.913c0-.151.028-.3.084-.44.176-.434.602-.7 1.106-.694l3.65-.003a.22.22 0 00.056-.04l.02-6.882c-.009-.616.145-1.07.467-1.383.322-.314.78-.463 1.393-.443h6.042c.42-.008 1.025.03 1.445.437.42.406.482 1.008.487 1.426v.008l-.002 6.712a.453.453 0 00.053.157l3.563-.006h.005c.857.006 1.149.414 1.247.658.168.418.014.9-.42 1.322l-8.712 8.659c-.084.086-.33.336-.689.333a.82.82 0 01-.594-.275L2.513 12.98c-.32-.305-.493-.691-.493-1.067z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownLeftFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.048 3.68h.022c.395.006.779.194 1.143.56l5.047 5.026.017.017c.32.347.44.709.362 1.078-.073.336-.303.605-.521.824l-.014.014-5.115 4.812 2.58 2.58.008.008c.317.331.409.894.219 1.34-.177.414-.566.66-1.04.66H4.664a.901.901 0 01-.717-.254.894.894 0 01-.252-.718L3.7 7.482a1.009 1.009 0 01.614-.955c.456-.205 1.047-.112 1.406.215l.017.014 2.378 2.378 4.79-4.904.005-.006c.356-.361.74-.543 1.138-.543z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownLeftLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.187 20.487a.653.653 0 01-.471-.185.672.672 0 01-.182-.538l.005-12.667a.766.766 0 01.474-.736c.372-.166.871-.09 1.16.176l.008.009 2.563 2.563a.155.155 0 00.11.042.195.195 0 00.134-.062l5.092-5.073c.325-.325.664-.49 1.006-.485.339.006.666.169.997.502l5.056 5.05.008.009c.684.745.115 1.32-.157 1.594l-.002.002-5.238 5.168c-.07.07-.082.183-.017.244l2.773 2.773.005.006c.253.263.325.731.171 1.09-.143.33-.442.518-.826.518h-12.6c-.022-.003-.047 0-.07 0zm.26-13.659a.532.532 0 00-.204.04.218.218 0 00-.143.22v.004l-.006 12.68c0 .009 0 .02-.003.028-.005.048.003.084.02.101s.056.025.1.02c.01 0 .02-.003.029-.003h12.613c.163 0 .26-.056.314-.18.073-.167.025-.386-.062-.478l-2.77-2.77a.707.707 0 01-.204-.524.744.744 0 01.224-.513l5.238-5.168c.403-.406.395-.54.145-.815l-5.044-5.042c-.222-.221-.426-.333-.611-.336-.188-.003-.384.1-.602.32L8.388 9.483a.762.762 0 01-.512.224.711.711 0 01-.524-.204l-2.56-2.56a.532.532 0 00-.345-.116z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownLeftRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.585 20.591a.89.89 0 01-.641-.258.89.89 0 01-.252-.717l.005-12.145a1.009 1.009 0 01.614-.956c.457-.204 1.048-.112 1.406.216a.07.07 0 00.017.014l2.378 2.378 4.79-4.905.006-.005c.728-.728 1.568-.72 2.305.017l5.05 5.025.017.017c.32.347.44.708.361 1.078-.072.336-.302.605-.52.824l-.015.014-5.12 4.815 2.58 2.577.008.008c.317.33.41.894.219 1.34-.177.414-.566.66-1.042.66H4.664c-.028.003-.053.003-.079.003zm.183-1.078H16.75a.184.184 0 00.053-.006c.022-.036.017-.137-.009-.177l-2.652-2.652a.95.95 0 01-.275-.7.995.995 0 01.294-.676l.012-.01 5.187-4.877c.168-.171.21-.247.222-.275a.604.604 0 00-.093-.129L14.45 4.994c-.157-.156-.3-.243-.4-.246-.127 0-.278.12-.382.227L8.812 9.947l-.005.005a.973.973 0 01-1.376.017L4.983 7.521c-.042-.03-.148-.045-.213-.03l-.002 12.022z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.939 21.883h-.003c-.154 0-.297-.07-.426-.204l-8.93-8.967c-.38-.361-.52-.854-.355-1.258.143-.35.473-.554.888-.549L6.89 10.9c.082 0 .146-.079.146-.174V3.827c-.008-.524.14-.936.44-1.23.31-.305.778-.456 1.353-.44h6.218c.658-.01 1.112.124 1.426.426.288.28.434.684.443 1.238v.006l-.003 6.902c0 .095.064.174.145.174l3.519-.023c.523-.017.991.244 1.165.653.165.384.045.818-.33 1.185l-8.959 8.902c-.17.176-.341.263-.515.263zm-8.843-10.39c-.163 0-.277.065-.325.183-.056.134-.03.372.218.608l.006.005 8.936 8.975.005.006c.003.005.009.008.011.01a.49.49 0 00.087-.075l.003-.003 8.96-8.907c.116-.112.292-.33.205-.532-.078-.183-.333-.306-.608-.295h-.008l-3.524.023a.75.75 0 01-.736-.762l.002-6.9c-.005-.386-.092-.655-.263-.82-.19-.185-.521-.269-1.008-.26H8.813c-.286-.009-.678.03-.924.271-.18.177-.27.446-.264.801v6.908a.75.75 0 01-.736.762l-3.782.005h-.006c.003-.002-.002-.002-.005-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.815 21.734h-.005a.82.82 0 01-.594-.275L2.513 12.98c-.449-.425-.608-1.016-.407-1.507.177-.431.591-.694 1.09-.694h.017l3.65-.003a.227.227 0 00.056-.04l.02-6.882c-.009-.616.145-1.07.467-1.386.322-.317.776-.46 1.392-.443h6.042c.42-.008 1.026.031 1.446.437.423.41.479 1.009.487 1.426v.008l-.003 6.712a.483.483 0 00.053.157l3.564-.006h.005c.857.006 1.149.415 1.247.658.168.418.014.9-.42 1.322l-8.712 8.659c-.09.09-.333.336-.692.336zM3.193 11.87a.162.162 0 00-.078.014c-.014.02-.017.151.148.308l.006.006 8.557 8.336 8.62-8.566.005-.005a.866.866 0 00.09-.098 1.182 1.182 0 00-.16-.012l-3.712.006c-.652 0-.994-.81-.994-1.247l.003-6.708c-.006-.336-.059-.563-.154-.656-.095-.092-.328-.137-.672-.129H8.767c-.207-.005-.478.012-.602.13-.12.12-.143.389-.14.596v.008l-.02 6.956c0 .585-.613 1.056-1.12 1.056l-3.678.002H3.2c0 .003-.003.003-.006.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownRightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.675 10.289v-.023c.006-.395.193-.779.56-1.143l5.026-5.047.016-.017c.348-.32.709-.44 1.079-.362.336.073.605.303.823.521l.014.014 4.813 5.115 2.58-2.58.008-.008c.33-.316.893-.409 1.339-.218.414.176.66.565.66 1.039v12.09c.02.28-.07.532-.254.717a.894.894 0 01-.717.252l-12.146-.006a1.009 1.009 0 01-.955-.613c-.204-.457-.112-1.05.216-1.407l.014-.016 2.378-2.379-4.905-4.79-.006-.005c-.36-.353-.543-.737-.543-1.134z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.831 20.474c-.022 0-.045 0-.07-.003l-12.667-.005h-.01a.772.772 0 01-.73-.474c-.164-.372-.089-.87.177-1.16l.009-.008 2.563-2.563a.155.155 0 00.042-.109.195.195 0 00-.062-.134l-5.067-5.096c-.325-.325-.487-.663-.485-1.005.006-.34.168-.667.502-.997L9.08 3.864l.009-.009c.745-.683 1.32-.115 1.594.157l.002.003 5.168 5.238a.191.191 0 00.135.059.143.143 0 00.11-.042l2.772-2.773.006-.006c.263-.252.731-.325 1.09-.17.33.142.52.445.518.828v12.6a.669.669 0 01-.182.538.638.638 0 01-.471.187zm-12.737-.566l12.681.006c.008 0 .02 0 .028.003.048.005.084-.003.1-.02.018-.017.026-.056.02-.1l-.002-.029V7.152c0-.162-.056-.26-.18-.314-.168-.072-.386-.025-.479.06l-2.77 2.77a.707.707 0 01-.524.204.744.744 0 01-.512-.224L10.288 4.41c-.407-.404-.541-.395-.816-.146l-5.044 5.05c-.222.222-.334.426-.337.611-.002.188.101.384.32.602l5.073 5.093a.76.76 0 01.224.512.711.711 0 01-.205.524l-2.56 2.56c-.112.127-.148.381-.073.55.056.126.146.142.222.142h.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDownRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.695 20.647c-.026 0-.05 0-.079-.003L7.471 20.64h-.012c-.42 0-.77-.23-.944-.614-.204-.456-.112-1.047.216-1.406.006-.006.011-.011.014-.017l2.378-2.378-4.902-4.79-.005-.005c-.729-.729-.72-1.57.016-2.306l5.026-5.047.016-.017c.348-.32.71-.44 1.079-.362.336.073.605.303.823.521l.014.014 4.813 5.115 2.58-2.58.008-.008c.33-.316.894-.409 1.339-.218.414.179.66.568.658 1.044v12.087a.9.9 0 01-.255.717.879.879 0 01-.638.258zM7.49 19.563l12.023.006V7.585a.175.175 0 00-.006-.05.241.241 0 00-.177.008l-2.65 2.65a.97.97 0 01-1.375-.02l-.01-.01-4.88-5.185c-.171-.168-.247-.21-.275-.222a.604.604 0 00-.129.093L4.994 9.885c-.156.157-.243.3-.246.4-.003.127.12.278.227.382l4.972 4.857.005.005c.384.384.393 1 .017 1.376l-2.448 2.448c-.03.04-.045.148-.03.21z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDropDownFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.753 7.863a1.304 1.304 0 00-1.182-.711L3.447 7c-.523-.01-1 .27-1.196.698a1.03 1.03 0 00.275 1.24l8.56 7.575a1.407 1.407 0 001.815 0l8.56-7.423c.356-.3.474-.798.292-1.227z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowDropUpFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.481 14.91L12.91 7.336a1.41 1.41 0 00-1.818 0L2.523 14.76a1.044 1.044 0 00-.28 1.23c.196.423.655.703 1.174.708l17.137.152c.52 0 .986-.275 1.185-.7a1.041 1.041 0 00-.275-1.239h.017z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowLeftFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.826 2.011c.152 0 .3.028.44.084.434.177.7.602.695 1.107l.003 3.65a.21.21 0 00.039.056l6.882.02c.616-.01 1.07.145 1.384.467.314.322.46.776.442 1.392v6.042c.009.42-.03 1.025-.436 1.446-.407.42-1.009.481-1.426.487h-.009l-6.711-.003a.453.453 0 00-.157.053l.006 3.563v.003c-.006.857-.415 1.149-.659 1.247-.417.168-.899.014-1.322-.42L2.34 12.492c-.087-.084-.336-.33-.333-.69a.82.82 0 01.274-.593l8.48-8.706c.302-.32.691-.493 1.066-.493z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowRightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.894 21.69c-.152 0-.3-.029-.44-.085-.434-.176-.7-.602-.695-1.106l-.003-3.65a.195.195 0 00-.039-.056l-6.882-.02c-.617.009-1.07-.146-1.384-.468-.314-.322-.46-.776-.443-1.392v-6.04C2 8.454 2.04 7.85 2.445 7.43c.407-.42 1.009-.48 1.426-.488h.009l6.711.003a.453.453 0 00.157-.053l-.009-3.56v-.006c.006-.857.415-1.149.659-1.247.417-.168.899-.014 1.322.42l8.658 8.712c.087.084.336.33.334.69a.82.82 0 01-.275.593L12.961 21.2c-.306.32-.692.49-1.067.49z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.805 21.814a.938.938 0 01-.35-.067c-.35-.143-.555-.473-.55-.888L10.9 17.08c0-.081-.079-.145-.174-.145H3.827c-.524.008-.936-.14-1.23-.44-.305-.311-.456-.779-.44-1.353V8.923c-.01-.66.124-1.112.426-1.425.28-.289.684-.435 1.238-.443h.006l6.902.003c.095 0 .174-.065.174-.146l-.023-3.518c-.017-.524.244-.992.653-1.165.384-.166.818-.045 1.185.33l8.904 8.958c.18.174.267.345.264.518 0 .154-.07.297-.205.426l-8.974 8.93c-.261.275-.589.423-.902.423zm-7.98-5.47h6.901c.42 0 .762.33.762.736l.006 3.782v.005c-.003.168.061.289.182.336.134.054.372.031.608-.218.002-.003.002-.006.005-.006l8.975-8.935.006-.006c.005-.003.008-.008.01-.011a.49.49 0 00-.075-.087l-.003-.003-8.907-8.96c-.112-.115-.33-.292-.532-.205-.183.079-.306.333-.295.608v.008l.023 3.524a.75.75 0 01-.762.737l-6.9-.003c-.386.006-.655.093-.82.263-.185.19-.269.521-.26 1.009v6.243c-.009.286.03.678.271.925.177.18.446.269.801.263 0-.005 0-.005.003-.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.894 21.689c-.152 0-.3-.028-.44-.084-.434-.176-.7-.6-.695-1.106l-.006-3.65a.227.227 0 00-.039-.056l-6.882-.02c-.616.008-1.067-.146-1.384-.468-.316-.322-.46-.776-.442-1.392v-6.04c-.009-.42.028-1.021.434-1.444.409-.423 1.008-.482 1.426-.488h.008l6.711.003a.471.471 0 00.157-.053l-.003-3.56v-.006c.006-.857.415-1.149.659-1.247.417-.168.899-.014 1.322.42l8.658 8.712c.087.084.336.33.333.692a.82.82 0 01-.274.594l-8.476 8.703c-.306.32-.692.49-1.067.49zm-8.062-6.006l6.958.02c.585 0 1.056.614 1.056 1.12l.006 3.678v.009c0 .053.01.078.014.084.02.014.15.017.308-.149l.005-.005 8.336-8.555-8.568-8.619-.006-.005a.866.866 0 00-.098-.09 1.193 1.193 0 00-.011.162l.006 3.712c0 .652-.81.994-1.247.994l-6.709-.003c-.336.006-.563.06-.655.154-.093.096-.137.328-.129.67v6.084c-.006.207.011.479.129.602.12.12.39.143.597.14.002-.003.005-.003.008-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowsLeftAndRightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.737 8.633a.75.75 0 01-.255.563l-4.21 4.16c-.014.01-.026.025-.04.036a.782.782 0 01-.831.098.753.753 0 01-.437-.683l-.014-1.824-2.902.006a1.206 1.206 0 01-1.205-1.202v-2.32a1.2 1.2 0 011.202-1.2l2.905-.004.014-1.823c0-.294.17-.56.437-.684a.788.788 0 01.87.138l4.214 4.179c.162.14.252.344.252.56zm-9.832 5.375v2.32c0 .664-.538 1.201-1.202 1.201l-2.902.003-.014 1.824c0 .294-.17.557-.437.68a.788.788 0 01-.871-.137l-4.21-4.174a.756.756 0 010-1.126l4.21-4.154c.014-.01.025-.025.04-.036a.782.782 0 01.831-.098c.266.123.437.39.437.683l.014 1.821 2.9-.005a1.2 1.2 0 011.204 1.198z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowsLeftAndRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.865 13.634a.533.533 0 01-.224-.05.485.485 0 01-.283-.443l-.02-2.244-3.389.005a.962.962 0 01-.96-.96v-2.46c0-.53.43-.96.96-.96l3.392-.003.02-2.247a.49.49 0 01.283-.44.515.515 0 01.569.084l4.47 4.429c.093.078.151.19.168.31a.488.488 0 01-.168.43l-4.473 4.414-.02.017a.526.526 0 01-.325.118zm-.468-3.303c.27 0 .493.216.502.485v.005l.017 2.177 4.341-4.286-4.341-4.308-.017 2.176v.006a.503.503 0 01-.502.484h-.008l-3.44.003a.4.4 0 00-.4.4v2.46a.4.4 0 00.4.4l3.44-.005a.01.01 0 00.008.003zm-9.254 9.852a.51.51 0 01-.342-.135l-4.474-4.437a.498.498 0 01-.168-.31.488.488 0 01.168-.43l4.474-4.414c.005-.006.014-.011.02-.017a.515.515 0 01.548-.064.485.485 0 01.283.442l.02 2.244 3.39-.006c.529 0 .96.432.96.961v2.46a.96.96 0 01-.96.96l-3.393.003-.02 2.25a.491.491 0 01-.282.44.488.488 0 01-.224.053zM2.75 15.24l4.342 4.308.017-2.176v-.006a.501.501 0 01.51-.484l3.44-.003a.4.4 0 00.4-.4v-2.46a.4.4 0 00-.4-.4l-3.44.005a.501.501 0 01-.51-.484v-.006l-.017-2.177L2.75 15.24z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowsLeftAndRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.72 13.548a.806.806 0 01-.34-.075.758.758 0 01-.437-.68l-.014-1.824-2.902.005a1.201 1.201 0 01-1.201-1.201v-2.32a1.2 1.2 0 011.201-1.201l2.905-.003.014-1.824c0-.294.168-.554.437-.683a.788.788 0 01.871.137l4.21 4.18a.757.757 0 010 1.13l-4.21 4.15-.042.036a.779.779 0 01-.493.173zm-.438-3.703c.412 0 .754.33.768.745v.012l.011 1.353 3.384-3.34-3.384-3.358-.011 1.35v.011a.772.772 0 01-.768.746h-.01l-3.242.002a.081.081 0 00-.081.082v2.319a.08.08 0 00.081.081l3.241-.005c.003.002.006.002.011.002zm-9.285 10.25a.773.773 0 01-.496-.177.271.271 0 01-.04-.036l-4.207-4.174a.754.754 0 010-1.129l4.21-4.154c.014-.014.028-.025.042-.036a.793.793 0 01.832-.098c.27.129.434.39.437.68l.014 1.821 2.902-.005c.664 0 1.202.537 1.202 1.201v2.32c0 .663-.538 1.201-1.202 1.201l-2.907.006-.014 1.823a.754.754 0 01-.437.684.825.825 0 01-.336.073zm-3.72-4.95l3.378 3.353.011-1.347v-.012a.77.77 0 01.779-.745l3.238-.002a.081.081 0 00.081-.082v-2.319a.081.081 0 00-.081-.081l-3.238.005a.768.768 0 01-.779-.745v-.01l-.011-1.351-3.378 3.336z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpDownFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.154 21.742a.749.749 0 01-.563-.255l-4.16-4.212c-.01-.015-.025-.026-.036-.04a.782.782 0 01-.098-.832.753.753 0 01.683-.437l1.824-.014-.006-2.902c0-.663.538-1.201 1.202-1.204h2.32c.663 0 1.201.538 1.201 1.202l.003 2.904 1.826.014c.294 0 .56.171.684.437a.787.787 0 01-.098.832c-.012.014-.023.028-.037.04l-4.182 4.215a.756.756 0 01-.563.252zm-5.378-9.834H7.459a1.201 1.201 0 01-1.201-1.202l-.003-2.902L4.43 7.79a.749.749 0 01-.68-.437.788.788 0 01.137-.871l4.174-4.207a.756.756 0 011.126 0l4.154 4.21c.01.014.025.025.036.039.19.235.23.557.098.829a.753.753 0 01-.683.437l-1.821.014.003 2.902a1.197 1.197 0 01-1.2 1.202z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpDownLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.275 21.851a.481.481 0 01-.37-.17l-4.411-4.474-.017-.02a.515.515 0 01-.064-.549.485.485 0 01.442-.283l2.244-.02-.006-3.389c0-.529.432-.96.961-.96h2.46c.529 0 .96.431.96.96l.003 3.393 2.247.02a.49.49 0 01.44.282.515.515 0 01-.085.569l-4.434 4.47a.481.481 0 01-.37.171zm-4.283-4.935l4.286 4.341 4.308-4.341-2.176-.017h-.006a.5.5 0 01-.484-.51l-.006-3.44a.4.4 0 00-.4-.4h-2.46a.4.4 0 00-.4.4l.005 3.44a.5.5 0 01-.484.51h-.006l-2.177.017zm-3.478-4.897a.962.962 0 01-.961-.96l-.003-3.39-2.247-.02a.489.489 0 01-.44-.282.515.515 0 01.085-.569l4.434-4.47a.498.498 0 01.31-.169.488.488 0 01.43.168l4.411 4.474c.006.005.011.014.017.02a.515.515 0 01.064.548.485.485 0 01-.442.283l-2.244.02.006 3.386c0 .53-.432.961-.961.961h-2.46zm-.404-4.4l.003 3.44c0 .22.18.4.4.4h2.46a.4.4 0 00.4-.4l-.005-3.437a.501.501 0 01.484-.51h.006l2.177-.017-4.286-4.342L4.44 7.09l2.176.017h.006c.274.011.49.238.487.513z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpDownRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.154 21.742a.76.76 0 01-.566-.255l-4.157-4.213a.793.793 0 01-.134-.874.758.758 0 01.68-.436l1.824-.017-.003-2.897c0-.663.538-1.201 1.202-1.201h2.32c.663 0 1.201.538 1.201 1.201l.003 2.905 1.826.014c.294 0 .555.168.684.437a.789.789 0 01-.138.872l-4.176 4.21a.752.752 0 01-.566.254zm-3.339-4.66l3.339 3.383 3.359-3.384-1.35-.011h-.012a.769.769 0 01-.748-.779l-.002-3.24a.081.081 0 00-.082-.082H14a.081.081 0 00-.081.081l.005 3.241a.768.768 0 01-.745.779h-.011l-1.353.011zm-2.04-5.172H7.46a1.201 1.201 0 01-1.201-1.201l-.003-2.902-1.824-.014a.754.754 0 01-.683-.437.788.788 0 01.1-.832c.012-.014.023-.028.037-.04L8.06 2.278a.75.75 0 011.129 0l4.154 4.208a.793.793 0 01.134.874.758.758 0 01-.68.437l-1.821.014.003 2.899c0 .66-.538 1.201-1.202 1.201zm-2.4-4.442l.003 3.238c0 .045.037.081.081.081h2.317a.081.081 0 00.081-.081l-.003-3.238a.768.768 0 01.745-.779h.012l1.35-.011-3.336-3.381-3.353 3.38 1.347.012h.011c.42.011.75.361.745.779z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.7 11.846c0 .151-.028.3-.084.44-.176.434-.602.7-1.106.694l-3.65.003a.253.253 0 00-.056.04l-.02 6.882c.009.616-.145 1.07-.467 1.384-.323.313-.776.459-1.393.442H8.882c-.42.008-1.025-.03-1.445-.437-.42-.406-.479-1.008-.487-1.426v-.008l.002-6.712a.453.453 0 00-.053-.156l-3.563.005h-.005c-.858-.005-1.149-.414-1.247-.658-.168-.417-.014-.9.42-1.322l8.712-8.658c.084-.087.33-.337.689-.334a.82.82 0 01.594.275l8.703 8.482c.325.3.498.689.498 1.064z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpLeftFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.605 14.048v.022c-.006.395-.196.779-.56 1.143l-5.025 5.045-.017.017c-.348.319-.709.44-1.079.36-.336-.072-.605-.302-.823-.52l-.014-.014-4.81-5.112-2.58 2.58-.008.008c-.33.317-.893.409-1.339.219-.414-.177-.66-.566-.66-1.04V4.664a.901.901 0 01.254-.717.894.894 0 01.717-.252l12.146.005c.414-.01.792.233.955.614.204.456.112 1.047-.216 1.406l-.014.017-2.38 2.378 4.904 4.79.006.005c.361.356.543.74.543 1.138z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpLeftLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.22 20.475c-.398 0-.703-.305-.885-.482l-.003-.003-5.168-5.238a.191.191 0 00-.134-.058.143.143 0 00-.11.042l-2.773 2.773-.005.005c-.264.252-.731.325-1.09.171-.33-.143-.52-.445-.518-.829V4.254a.669.669 0 01.182-.538.672.672 0 01.538-.182l12.666.005h.012c.327 0 .593.174.728.474.165.372.09.871-.177 1.16l-.008.008-2.563 2.563a.155.155 0 00-.042.11c.003.05.022.097.062.134l5.072 5.092c.65.65.645 1.345-.016 2.006l-5.048 5.056-.008.008c-.26.238-.499.325-.712.325zm-.487-.877c.406.404.54.395.815.146l5.047-5.05c.222-.222.334-.426.337-.611.002-.188-.101-.384-.32-.602l-5.075-5.096a.762.762 0 01-.224-.512.711.711 0 01.204-.524l2.56-2.56c.112-.126.149-.381.073-.55-.056-.125-.148-.142-.221-.142h-.003L4.246 4.09c-.009 0-.02 0-.029-.003-.047-.005-.084.003-.1.02-.017.017-.026.056-.02.1 0 .01.003.02.003.029V16.85c0 .163.056.26.179.314.168.073.387.025.479-.062l2.77-2.77a.707.707 0 01.524-.204.744.744 0 01.513.224l5.168 5.246z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpLeftRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.143 20.661a1.13 1.13 0 01-.216-.022c-.336-.073-.605-.303-.823-.521l-.014-.014-4.813-5.115-2.58 2.58-.008.008c-.33.317-.893.409-1.339.218-.414-.179-.66-.568-.658-1.044V4.664a.901.901 0 01.255-.717.89.89 0 01.717-.252l12.145.005a1.01 1.01 0 01.956.614c.204.456.112 1.047-.216 1.406a.074.074 0 00-.014.017l-2.384 2.375 4.905 4.79.006.006c.367.366.549.756.543 1.162-.006.395-.193.779-.56 1.143L15.02 20.26l-.017.017c-.278.255-.569.384-.86.384zm-.277-1.3c.17.168.246.21.274.222a.604.604 0 00.129-.093l5.017-5.039c.157-.157.243-.3.246-.4.003-.127-.12-.278-.227-.382l-4.972-4.857-.005-.005a.973.973 0 01-.017-1.376l2.448-2.448c.03-.042.045-.148.03-.213l-12.02-.005V16.75a.17.17 0 00.005.05c.037.02.137.017.177-.008l2.652-2.653a.954.954 0 01.7-.274.995.995 0 01.676.294l.01.01 4.878 5.191z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.842 21.882c-.616 0-1.045-.138-1.344-.426-.289-.28-.435-.684-.443-1.238v-.006l.003-6.902c0-.095-.065-.173-.146-.173l-3.518.022c-.524.017-.992-.244-1.165-.653-.166-.383-.045-.818.33-1.184L11.52 2.42c.174-.177.342-.264.515-.264h.003c.154 0 .297.07.426.205l8.93 8.966c.378.361.518.854.356 1.255-.14.345-.465.549-.874.549h-.017l-3.779.006c-.081 0-.145.078-.145.173v6.9c.008.523-.14.935-.44 1.23-.311.304-.779.456-1.353.439H8.923c-.025 0-.053.003-.08.003zm-1.196-1.673c.006.387.093.656.263.821.19.185.521.27 1.009.26h6.24c.286.01.679-.03.925-.271.18-.176.269-.445.263-.801V13.31c0-.42.33-.762.737-.762l3.782-.005h.014c.162 0 .277-.065.327-.182.054-.135.031-.373-.218-.608-.003-.003-.006-.003-.006-.006l-8.938-8.975-.006-.005c-.003-.006-.008-.009-.011-.011a.49.49 0 00-.087.075l-.003.003-8.96 8.908c-.115.112-.292.33-.205.532.079.182.333.305.608.294h.008l3.524-.022a.75.75 0 01.737.762l-.003 6.901z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.028 21.734c-.034 0-.067 0-.1-.003H8.881c-.42.008-1.025-.03-1.445-.437-.423-.409-.479-1.008-.487-1.426v-.008l.002-6.712a.471.471 0 00-.053-.156l-3.563.005H3.33c-.858-.005-1.149-.414-1.247-.658-.168-.417-.014-.9.42-1.322l8.712-8.658c.084-.087.327-.334.686-.334h.006a.82.82 0 01.593.275l8.703 8.481c.446.426.608 1.017.407 1.505-.177.434-.6.703-1.107.694l-3.65.003a.317.317 0 00-.056.037l-.02 6.882c.01.616-.145 1.067-.467 1.384-.297.302-.72.448-1.283.448zm-.095-1.093h.017c.207.006.479-.01.602-.128.12-.12.143-.39.14-.597v-.008l.02-6.956c0-.585.613-1.056 1.12-1.056l3.678-.005h.008a.193.193 0 00.084-.014c.014-.02.017-.152-.148-.308l-.006-.006-8.554-8.336-8.62 8.566-.005.005a.866.866 0 00-.09.098c.042.006.096.012.163.012l3.711-.006c.653 0 .995.81.995 1.246l-.003 6.71c.005.335.059.562.154.655.095.092.328.137.672.128h6.062z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpRightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.28 20.588h-.022c-.394-.006-.778-.196-1.142-.56l-5.048-5.025-.017-.017c-.32-.348-.44-.709-.361-1.079.073-.336.302-.605.52-.823l.015-.014 5.118-4.812-2.58-2.58-.009-.009c-.316-.33-.409-.893-.218-1.339.176-.414.566-.66 1.039-.66h12.09c.28-.02.532.07.717.254.185.185.274.44.252.717l-.006 12.146c.011.415-.232.793-.613.955-.457.205-1.05.112-1.406-.216l-.017-.014-2.376-2.378-4.79 4.905-.005.006c-.359.361-.742.543-1.14.543z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.934 20.486c-.34 0-.681-.168-1.017-.501l-5.053-5.048-.009-.008c-.683-.745-.115-1.32.157-1.594l.003-.003 5.238-5.168c.07-.07.081-.182.017-.244L6.497 5.147l-.006-.005c-.252-.264-.325-.731-.17-1.09.142-.33.442-.518.825-.518h12.606a.669.669 0 01.537.182.672.672 0 01.182.538l-.005 12.666a.766.766 0 01-.474.737c-.372.165-.87.09-1.16-.176l-.008-.009-2.563-2.563a.155.155 0 00-.109-.042.195.195 0 00-.134.062l-5.096 5.075c-.319.323-.652.482-.988.482zm-5.67-5.94l5.05 5.044c.443.442.782.448 1.213.017l5.093-5.07a.756.756 0 01.512-.224.711.711 0 01.524.204l2.56 2.56a.57.57 0 00.55.073c.126-.056.142-.148.142-.221v-.003l.006-12.68c0-.009 0-.02.003-.029.005-.047-.003-.084-.02-.1-.017-.017-.056-.026-.1-.02-.01 0-.02.003-.029.003H7.152c-.162 0-.26.056-.314.179-.072.168-.025.387.062.479l2.77 2.77c.138.138.21.325.205.524a.744.744 0 01-.224.513l-5.238 5.168c-.407.406-.398.54-.149.812z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconArrowUpRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.284 20.582c-.395 0-.793-.184-1.166-.557L4.068 15l-.017-.017c-.32-.347-.44-.709-.361-1.078.073-.337.302-.605.52-.824l.015-.014L9.34 8.255l-2.58-2.58-.009-.008c-.316-.331-.408-.894-.218-1.34.18-.414.569-.66 1.045-.658h12.087a.9.9 0 01.717.255.89.89 0 01.252.717l-.006 12.146c.003.426-.224.781-.613.955-.457.205-1.048.112-1.406-.216l-.017-.014-2.376-2.38-4.79 4.904-.005.006c-.359.361-.748.54-1.137.54zm-5.446-6.336l5.04 5.017c.156.157.3.244.4.247h.003c.126 0 .274-.124.378-.227l4.854-4.972.006-.006a.973.973 0 011.375-.017l2.448 2.449c.043.03.149.044.213.03l.006-12.022H7.572a.175.175 0 00-.05.006.241.241 0 00.008.176l2.653 2.653a.95.95 0 01.274.7.995.995 0 01-.294.675l-.011.011-5.185 4.88c-.168.17-.21.246-.221.274a.55.55 0 00.092.126z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAudioFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.938 5.441a1.042 1.042 0 00-1.481.079 1.087 1.087 0 00.067 1.512c.084.079 2.017 1.922 2.053 5.112.003.031.11 3.21-2.008 5.138a1.088 1.088 0 00-.084 1.515 1.042 1.042 0 001.49.084c2.854-2.597 2.717-6.658 2.708-6.796-.044-4.126-2.635-6.543-2.745-6.644zm-.829 6.678c-.028-2.781-1.79-4.423-1.865-4.49a1.041 1.041 0 00-1.488.081 1.085 1.085 0 00.079 1.515c.014.012 1.148 1.099 1.168 2.953.003.017.045 1.86-1.14 2.938a1.088 1.088 0 00-.084 1.516 1.038 1.038 0 001.49.084c1.938-1.765 1.843-4.516 1.84-4.597zm-6.045-7.605c-3.117 0-4.862 1.314-5.826 2.591l-3.182.003c-.28 0-.549.115-.745.316a1.075 1.075 0 00-.308.757l.008 7.54c0 .591.474 1.07 1.053 1.07l3.16-.002c.958 1.277 2.714 2.582 5.922 2.582.921 0 1.67-.762 1.67-1.7V6.223c0-.941-.754-1.709-1.752-1.709z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAudioLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.106 5.559c.11.1 2.686 2.49 2.73 6.577.007.145.147 4.165-2.694 6.73a.783.783 0 01-.532.205.806.806 0 01-.597-.269.815.815 0 01.065-1.14c2.28-2.059 2.162-5.448 2.16-5.482-.037-3.414-2.18-5.403-2.202-5.422a.815.815 0 01-.062-1.14.802.802 0 011.132-.06zm-.95 6.616c.006.087.098 2.765-1.8 4.479a.796.796 0 01-1.129-.064.812.812 0 01.064-1.14c1.325-1.197 1.269-3.216 1.266-3.236-.02-2.008-1.244-3.17-1.297-3.218a.814.814 0 01-.05-1.14.79.79 0 011.12-.06c.076.07 1.798 1.665 1.826 4.379zm-6.011 5.51V6.304c-2.146.033-3.664.745-4.583 2.12-.016.045-.061.067-.086.107a.73.73 0 01-.174.218l-.023.017a.785.785 0 01-.49.185l-3.039.003.008 6.095 3.023-.003c.308 0 .569.185.703.443.014.025.045.036.056.067.91 1.386 2.457 2.1 4.605 2.129zm.078-12.997c.872 0 1.519.655 1.519 1.456V17.85c0 .798-.642 1.448-1.432 1.448-3.285 0-5.022-1.358-5.944-2.641l-3.4.002a.801.801 0 01-.799-.803l-.01-7.71a.805.805 0 01.798-.806l3.425-.003c.925-1.288 2.656-2.65 5.843-2.65z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAudioRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.938 5.433c.11.1 2.7 2.518 2.745 6.641.006.137.146 4.2-2.708 6.796a1.05 1.05 0 01-.703.274c-.292 0-.58-.123-.787-.358a1.088 1.088 0 01.084-1.516c2.12-1.927 2.01-5.106 2.008-5.137-.036-3.188-1.97-5.034-2.053-5.112a1.087 1.087 0 01-.067-1.513 1.045 1.045 0 011.481-.075zm-.829 6.678c.003.08.098 2.832-1.843 4.593a1.038 1.038 0 01-1.49-.084 1.086 1.086 0 01.084-1.515c1.185-1.078 1.143-2.919 1.14-2.938-.02-1.852-1.154-2.942-1.168-2.953a1.088 1.088 0 01-.078-1.515 1.042 1.042 0 011.487-.081c.078.072 1.837 1.714 1.868 4.493zm-6.4 5.098V6.659c-1.843.085-3.115.715-3.925 1.92a1.03 1.03 0 01-.96.663c-.006 0-.012-.005-.014-.005-.009 0-.014.005-.023.005H4.112l.008 5.395 2.659-.003c.395 0 .728.233.91.56.017.034.059.051.073.085.79 1.204 2.118 1.851 3.947 1.93zm.355-12.703c1 0 1.754.767 1.754 1.708v11.448c0 .939-.748 1.7-1.67 1.7-3.207 0-4.963-1.305-5.921-2.582l-3.16.003c-.58 0-1.053-.48-1.053-1.07l-.008-7.54c0-.284.109-.555.308-.757.199-.202.465-.317.745-.317l3.182-.002c.96-1.278 2.706-2.591 5.823-2.591z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAutenticationSuccessFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.709 15.591a.573.573 0 01.806 0 .558.558 0 01.006.79l-.006.006-2.428 2.4a.578.578 0 01-.807 0L4.19 17.71a.557.557 0 01-.008-.787l.008-.009a.573.573 0 01.807 0l.686.678 2.026-2zm5.148-10.045c1.235 0 2.202.322 2.868.961.695.661 1.048 1.641 1.048 2.91 0 1.27-.353 2.247-1.048 2.908-.666.63-1.633.952-2.868.952-1.235 0-2.199-.319-2.865-.955-.692-.658-1.042-1.636-1.042-2.905s.35-2.249 1.042-2.91c.666-.639 1.63-.96 2.865-.96zm7.16 8.754c.375-2.138.431-6.768.448-8.49-1.742.072-2.818-.611-3.843-1.286-1.031-.675-2.009-1.311-3.756-1.32h-.009c-1.74 0-2.717.645-3.75 1.32-1.043.683-2.124 1.375-3.84 1.294.008 1.375.05 4.591.26 6.921.29-.039.585-.058.88-.056 1.747 0 3.041.547 3.758 1.69.098-.009.205-.009.308-.009h4.768c1.619 0 2.963.499 3.882 1.448.025.026.05.05.081.09.423-.543.723-1.081.813-1.602zM6.403 20.19c2.238 0 3.19-.94 3.19-3.15 0-2.205-.952-3.152-3.19-3.152-2.232 0-3.182.95-3.182 3.151 0 2.213.95 3.151 3.182 3.151zM21.686 5.143c0 .274.017 6.616-.465 9.356-.633 3.616-7.795 6.986-8.098 7.128a.56.56 0 01-.26.056.56.56 0 01-.26-.056 28.896 28.896 0 01-2.751-1.5c-.748.859-1.928 1.268-3.451 1.268C3.619 21.398 2 20.014 2 17.039c0-2.123.83-3.434 2.32-4.011-.292-3.07-.278-7.686-.278-7.885a.613.613 0 01.748-.588c1.653.257 2.53-.314 3.639-1.037C9.513 2.812 10.748 2 12.857 2h.009c2.117.008 3.344.812 4.434 1.518 1.098.723 1.977 1.294 3.647 1.037a.663.663 0 01.504.137.598.598 0 01.235.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAutenticationSuccessLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.66 15.397a.41.41 0 01.58.58l-3.187 3.185a.41.41 0 01-.58.003l-.003-.003-1.434-1.432a.41.41 0 01.58-.58l1.142 1.14c.003 0 2.902-2.893 2.902-2.893zm6.804-3.543c.535-.513.807-1.314.807-2.376 0-1.064-.272-1.865-.807-2.38-.518-.5-1.3-.751-2.33-.751-1.025 0-1.807.252-2.322.75-.533.516-.804 1.317-.804 2.381 0 1.065.271 1.863.8 2.376.514.496 1.298.745 2.323.745 1.034 0 1.815-.252 2.333-.745zm-2.33-6.328c1.25 0 2.224.33 2.899.98.703.675 1.059 1.675 1.059 2.97 0 1.294-.356 2.29-1.059 2.966-.675.644-1.65.975-2.9.975-1.246 0-2.22-.328-2.893-.975-.697-.672-1.053-1.67-1.053-2.966 0-1.297.353-2.295 1.053-2.97.673-.65 1.647-.98 2.894-.98zm7.442 9.006c.395-2.289.443-7.362.443-8.91-1.818.148-2.919-.567-3.972-1.264-1.02-.684-2.078-1.381-3.908-1.381h-.008c-1.826 0-2.885.697-3.905 1.378-1.061.698-2.162 1.429-3.972 1.272 0 1.246.034 4.759.255 7.28a7.08 7.08 0 011.126-.098c1.866 0 3.208.63 3.913 1.927h4.992c1.58 0 2.885.485 3.773 1.412.05.05.14.17.23.294.54-.622.919-1.272 1.033-1.91zm-7.442 6.442c.776-.378 3.899-1.994 5.846-3.916a6.072 6.072 0 00-.255-.344c-.731-.757-1.832-1.157-3.182-1.157h-4.661a6.05 6.05 0 01.238 1.722c0 .928-.171 1.684-.46 2.314 1.118.69 2.096 1.19 2.474 1.381zm-6.496-.042c2.493 0 3.658-1.165 3.658-3.653 0-2.495-1.165-3.652-3.658-3.652-2.49 0-3.658 1.157-3.658 3.652 0 2.488 1.168 3.653 3.658 3.653zM21.843 5.16c.008.272.025 6.728-.46 9.51-.625 3.585-7.762 6.991-8.067 7.132a.432.432 0 01-.18.042.478.478 0 01-.173-.042c-.05-.026-1.258-.6-2.731-1.51-.756.974-1.972 1.46-3.594 1.46-2.832 0-4.482-1.43-4.482-4.474 0-2.266.913-3.628 2.55-4.185-.286-3.132-.27-7.883-.27-7.933a.4.4 0 01.149-.32c.098-.08.23-.106.353-.08 1.767.28 2.73-.353 3.832-1.093 1.075-.706 2.294-1.51 4.364-1.51h.008c2.073 0 3.289.804 4.359 1.51 1.109.74 2.073 1.37 3.84 1.092a.471.471 0 01.345.09.417.417 0 01.157.311z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconAutenticationSuccessRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.709 15.591a.573.573 0 01.806 0 .558.558 0 01.006.79l-.006.006-2.428 2.4a.578.578 0 01-.807 0L4.19 17.71a.557.557 0 01-.008-.787l.008-.009a.573.573 0 01.807 0l.686.678 2.026-2zm7.173-4.14c.449-.423.673-1.106.673-2.036 0-.93-.227-1.617-.675-2.042-.435-.412-1.115-.622-2.023-.622-.907 0-1.585.21-2.017.622-.442.425-.67 1.112-.67 2.042 0 .93.225 1.616.67 2.036.429.409 1.11.619 2.017.619.91 0 1.591-.21 2.025-.619zm-2.025-5.905c1.235 0 2.202.322 2.868.961.695.661 1.048 1.641 1.048 2.91 0 1.27-.353 2.247-1.048 2.908-.666.63-1.633.952-2.868.952-1.235 0-2.199-.319-2.865-.955-.692-.658-1.042-1.636-1.042-2.905s.35-2.249 1.042-2.91c.666-.639 1.63-.96 2.865-.96zm7.16 8.754c.375-2.138.431-6.768.448-8.49-1.742.072-2.818-.611-3.843-1.286-1.031-.675-2.009-1.311-3.756-1.32h-.009c-1.74 0-2.717.645-3.75 1.32-1.043.683-2.124 1.375-3.84 1.294.008 1.375.05 4.591.26 6.921.29-.039.585-.058.88-.056 1.747 0 3.041.547 3.758 1.69.098-.009.205-.009.308-.009h4.768c1.619 0 2.963.499 3.882 1.448.025.026.05.05.081.09.423-.543.723-1.081.813-1.602zm-7.151 6.117c1.366-.666 3.848-2.075 5.5-3.633-.05-.056-.089-.103-.122-.137-.684-.706-1.726-1.076-3.003-1.076H10.65c.106.435.162.925.162 1.471 0 .796-.112 1.479-.35 2.05a34.64 34.64 0 002.404 1.325zm-6.463-.227c2.238 0 3.19-.94 3.19-3.15 0-2.205-.952-3.152-3.19-3.152-2.232 0-3.182.95-3.182 3.151 0 2.213.95 3.151 3.182 3.151zM21.686 5.143c0 .274.017 6.616-.465 9.356-.633 3.616-7.795 6.986-8.098 7.128a.56.56 0 01-.26.056.56.56 0 01-.26-.056 28.896 28.896 0 01-2.751-1.5c-.748.859-1.928 1.268-3.451 1.268C3.619 21.398 2 20.014 2 17.039c0-2.123.83-3.434 2.32-4.011-.292-3.07-.278-7.686-.278-7.885a.613.613 0 01.748-.588c1.653.257 2.53-.314 3.639-1.037C9.513 2.812 10.748 2 12.857 2h.009c2.117.008 3.344.812 4.434 1.518 1.098.723 1.977 1.294 3.647 1.037a.663.663 0 01.504.137.598.598 0 01.235.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBacteriaFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.457 11.26h-.188c-.403 0-1.938-.156-1.938-2.07 0-1.904 1.518-2.044 1.93-2.053h.187c.395.009 1.947.174 1.947 2.07 0 1.897-1.552 2.045-1.938 2.054m.42 4.63l-.14.025a1.715 1.715 0 01-.353.034c-.485 0-1.241-.188-1.47-1.314-.312-1.47.837-1.824 1.15-1.888.048-.009.098-.025.146-.03.065-.01.188-.026.336-.026.485 0 1.258.18 1.496 1.305.303 1.46-.871 1.818-1.165 1.894m-5.283-3.776h-.107c-.238-.009-1.126-.09-1.126-1.207 0-1.11.88-1.19 1.118-1.19h.106c.239.007 1.135.097 1.135 1.198 0 1.106-.902 1.19-1.126 1.199m12.476-.888h-2.235c-.107-1.824-.673-3.129-1.454-4.056l1.42-1.42a.606.606 0 000-.871.62.62 0 00-.871 0l-1.437 1.437c-1.42-1.118-3.137-1.37-4.034-1.429V2.616a.616.616 0 10-1.232 0v2.258c-.905.042-2.644.28-4.073 1.412L5.751 4.882a.617.617 0 00-.869 0 .606.606 0 000 .872l1.412 1.411c-.748.936-1.288 2.241-1.378 4.065h-2.3a.616.616 0 100 1.232h2.3c.106 1.824.65 3.12 1.395 4.048l-1.429 1.42a.616.616 0 000 .88.63.63 0 00.435.179.64.64 0 00.434-.18l1.437-1.436c1.411 1.131 3.12 1.386 4.039 1.437v2.266a.616.616 0 101.232 0V18.81c.88-.042 2.62-.289 4.056-1.412l1.412 1.412c.123.114.28.179.434.179a.61.61 0 00.435-.18.616.616 0 000-.879L17.4 16.535c.77-.927 1.33-2.232 1.428-4.073h2.235c.345 0 .617-.28.617-.616a.604.604 0 00-.611-.62"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBacteriaLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.983 11.313c.33-.005 1.644-.132 1.644-1.745 0-1.61-1.314-1.745-1.653-1.753-.042-.003-.09-.003-.134-.003h-.028c-.345.003-1.633.123-1.633 1.745 0 1.624 1.297 1.75 1.644 1.756h.048c.039.003.078 0 .112 0zm.01-4.336c1.23.03 2.471.843 2.471 2.594 0 1.753-1.24 2.563-2.467 2.585l-.126.003h-.062c-1.23-.02-2.47-.83-2.47-2.597s1.235-2.571 2.464-2.582h.037l.154-.003zm-4.996 5.235c.182-.003.916-.073.916-.969s-.732-.972-.92-.978h-.092c-.193.003-.907.07-.907.97 0 .904.722.974.916.977h.087zm.016-2.787c.838.02 1.737.597 1.737 1.815 0 1.222-.902 1.793-1.74 1.81h-.114c-.838-.014-1.74-.586-1.74-1.818 0-1.233.902-1.801 1.734-1.81h.037l.086.003zm5.429 6.653c.232-.053 1.14-.336.905-1.474-.182-.874-.785-1.016-1.163-1.016a1.655 1.655 0 00-.375.044c-.244.054-1.135.328-.896 1.474.182.874.77 1.022 1.148 1.022.118 0 .213-.014.272-.028.033-.005.075-.017.109-.022zm-.258-3.33c1.023 0 1.762.63 1.983 1.686.289 1.392-.563 2.238-1.54 2.462l-.135.028a2.417 2.417 0 01-.431.042c-1.011 0-1.748-.633-1.97-1.692-.29-1.406.561-2.25 1.539-2.462l.142-.028c.09-.017.236-.037.412-.037zm2.518 3.873c.93-.93 1.611-2.364 1.611-4.605 0-5.56-4.202-6.255-6.003-6.308h-.647c-.067 0-.134 0-.21.008-.067 0-.143 0-.218.009a6.998 6.998 0 00-1.031.134 4.202 4.202 0 00-.695.185c-.075.025-.16.04-.235.076-.076.025-.151.05-.227.084-.008 0-.017.008-.034.017-.134.05-.269.109-.403.185-.05.025-.092.05-.143.075-.386.21-.756.47-1.09.804 0 .009 0 .017-.016.017-.017.017-.025.034-.042.05 0 0-.009.017-.017.017a2.584 2.584 0 00-.317.367c-.1.126-.193.252-.285.395-.009.025-.026.042-.042.067a5.43 5.43 0 00-.236.429c-.008.017-.016.033-.016.05a2.84 2.84 0 00-.21.488 3.95 3.95 0 00-.118.336 7.7 7.7 0 00-.218.941 2.59 2.59 0 00-.034.252c-.025.16-.042.32-.05.487-.018.127-.018.253-.026.387s-.008.269-.008.409c0 5.619 4.176 6.291 5.969 6.317h.218c.143 0 .283 0 .412-.009 1.048-.017 2.916-.269 4.283-1.585.017-.009.017-.026.034-.042.01-.02.028-.02.044-.037zm4.72-5.039a.42.42 0 010 .84h-2.288c-.076 2.09-.72 3.533-1.602 4.521l1.425 1.426a.416.416 0 01-.29.714.456.456 0 01-.303-.117l-1.426-1.434c-1.633 1.367-3.698 1.568-4.518 1.593v2.3c0 .235-.185.42-.42.42a.421.421 0 01-.42-.42v-2.3c-.9-.025-2.911-.252-4.497-1.61l-1.45 1.45a.456.456 0 01-.303.118c-.1 0-.21-.042-.291-.117a.431.431 0 010-.597l1.448-1.45c-.855-.99-1.474-2.432-1.558-4.497H2.576a.427.427 0 01-.42-.42c0-.235.194-.42.42-.42h2.356c.076-2.09.686-3.532 1.544-4.521L5.04 5.627a.421.421 0 010-.588.416.416 0 01.597 0l1.426 1.428c1.61-1.375 3.655-1.577 4.518-1.594V2.576c0-.235.193-.42.42-.42.235 0 .42.185.42.42v2.306c.855.033 2.886.26 4.502 1.602l1.442-1.443a.416.416 0 01.597 0 .406.406 0 010 .589L17.52 7.072c.88.989 1.524 2.432 1.611 4.513h2.291v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBacteriaRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.412 11.053c.266-.005 1.339-.106 1.339-1.42 0-1.308-1.07-1.42-1.345-1.426-.033 0-.073-.003-.11-.003h-.021c-.283.003-1.328.101-1.328 1.42 0 1.32 1.056 1.426 1.339 1.43h.126zm.02-3.829c1.148.028 2.305.784 2.305 2.412 0 1.63-1.157 2.38-2.311 2.403l-.101.003h-.053c-1.149-.017-2.308-.767-2.308-2.412 0-1.644 1.156-2.392 2.302-2.403h.034l.131-.003zM9.1 12.087c.148-.003.745-.059.745-.79 0-.728-.594-.79-.748-.793h-.073c-.157.003-.736.056-.736.79 0 .737.588.793.745.796H9.1v-.003zm.022-2.572c.821.023 1.706.589 1.706 1.78 0 1.198-.888 1.758-1.711 1.775h-.104c-.826-.011-1.714-.574-1.714-1.779 0-1.157.862-1.767 1.708-1.773h.037l.078-.003zm4.572 6.138c.182-.065.888-.384.582-1.28-.201-.589-.596-.715-.899-.715-.154 0-.283.034-.35.053-.028.009-.062.02-.092.028-.19.068-.883.376-.577 1.278.201.59.593.72.893.72.154 0 .286-.034.353-.056l.09-.028zm-.317-2.98c.852 0 1.538.517 1.832 1.383.437 1.283-.308 2.207-1.188 2.524l-.112.039a2.143 2.143 0 01-.655.104c-.846 0-1.53-.521-1.826-1.39-.44-1.291.305-2.213 1.196-2.526l.112-.037a2.17 2.17 0 01.641-.098zm-1.207 4.915c1.633-.033 5.442-.65 5.442-5.722 0-5.082-3.834-5.723-5.484-5.762-.149 0-.32-.009-.493-.009h-.123c-1.62.017-5.387.608-5.387 5.729 0 1.708.535 5.697 5.443 5.764h.602zm8.899-6.361c.336 0 .616.28.616.616 0 .336-.28.616-.616.616h-2.24c-.099 1.83-.656 3.146-1.43 4.073l1.404 1.404a.617.617 0 010 .868.649.649 0 01-.434.182.616.616 0 01-.434-.182l-1.412-1.412c-1.446 1.123-3.185 1.373-4.065 1.412v2.266c0 .336-.28.616-.616.616a.622.622 0 01-.616-.616v-2.258c-.927-.058-2.636-.31-4.048-1.437L5.75 18.804a.634.634 0 01-.437.182.617.617 0 01-.434-1.05l1.428-1.429c-.748-.93-1.288-2.235-1.395-4.048H2.616A.622.622 0 012 11.843c0-.336.28-.616.616-.616h2.3c.098-1.824.633-3.135 1.378-4.065L4.882 5.751a.615.615 0 01.871-.868l1.404 1.403c1.428-1.124 3.16-1.37 4.073-1.412V2.616A.62.62 0 0111.846 2c.336 0 .616.28.616.616v2.275c.894.05 2.61.31 4.04 1.428l1.436-1.437a.615.615 0 01.872.869l-1.42 1.42c.77.927 1.335 2.232 1.436 4.056h2.244z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBalanceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.237 2.15a.56.56 0 01.384.154l5.462 5.182a.56.56 0 01.177.406v12.843c0 .589-.518 1.107-1.107 1.107H5.856c-.588 0-1.106-.518-1.106-1.107V3.256c0-.568.538-1.106 1.106-1.106zm1.673 10.77a.42.42 0 00-.42.42v.309c-.824.148-1.334.73-1.334 1.565 0 .555.241 1.241 1.333 1.474v1.577a2.422 2.422 0 01-.764-.348.51.51 0 00-.27-.086.42.42 0 00-.42.414c0 .154.068.278.2.37.375.258.806.426 1.257.49v.3a.42.42 0 10.84 0v-.308c.401-.06.737-.202.99-.42.336-.292.515-.703.512-1.19 0-.592-.266-1.323-1.504-1.525v-1.49c.196.048.384.12.56.219a.539.539 0 00.247.07.406.406 0 00.406-.407c0-.09-.031-.257-.238-.383a2.542 2.542 0 00-.975-.33v-.3a.42.42 0 00-.42-.42zm-3.995-1.453a.562.562 0 00-.56.56v7.056c0 .308.252.56.56.56.308 0 .56-.252.56-.56v-7.056a.562.562 0 00-.56-.56zM8.156 7.083a.562.562 0 00-.56.56v11.426c0 .308.252.56.56.56.308 0 .56-.252.56-.56V7.643a.562.562 0 00-.56-.56zm7.177 9.742c.58.143.666.415.666.695 0 .383-.246.655-.666.756zm-.84-2.336v1.32c-.43-.152-.5-.399-.5-.631 0-.342.18-.583.5-.69zm-.976-10.74v1.958c0 .65.205 1.2.589 1.583.383.384.93.588 1.582.588h2.182L13.517 3.75z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBalanceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.223 2.15a.31.31 0 01.069.008l-.069-.008a.279.279 0 01.184.069.09.09 0 01.015.012l5.462 5.462c.022.022.04.047.053.073l.007.019c.007.013.01.027.014.04a.312.312 0 01.008.067v13.11c0 .44-.387.826-.827.826H5.576c-.431 0-.826-.395-.826-.826V2.976c0-.417.409-.826.826-.826h7.647zm-.28.56H5.576c-.106 0-.266.16-.266.266v18.026c0 .12.146.266.266.266H18.14c.13 0 .266-.138.266-.266V8.172h-2.45c-.88 0-1.634-.288-2.18-.832-.546-.543-.832-1.296-.832-2.179V2.71zm-2.148 9.023a.28.28 0 01.28.28v7.336a.28.28 0 01-.28.28.28.28 0 01-.28-.28v-7.336a.28.28 0 01.28-.28zm4.053 1.257a.28.28 0 01.28.28l.001.368a2.46 2.46 0 011.07.336c.128.078.198.19.198.31a.322.322 0 01-.322.323.463.463 0 01-.202-.056l-.003-.003a2.211 2.211 0 00-.741-.257l-.001 1.664.006.002c.711.09 1.56.414 1.56 1.46-.005.872-.596 1.446-1.565 1.546v.372a.28.28 0 01-.281.28.28.28 0 01-.28-.28l-.001-.369a2.828 2.828 0 01-1.346-.491.345.345 0 01-.163-.3.334.334 0 01.336-.33.426.426 0 01.224.073c.316.21.634.342.95.393l-.001-1.752-.048-.008c-1.102-.206-1.34-.87-1.34-1.407 0-.83.535-1.398 1.388-1.5v-.374a.28.28 0 01.281-.28zM8.036 7.35a.28.28 0 01.28.28v11.706a.28.28 0 01-.28.28.28.28 0 01-.28-.28V7.629a.28.28 0 01.28-.28zm7.094 9.29l-.001 1.679c.558-.075.893-.393.893-.871 0-.32-.112-.663-.892-.808zm-1.28-1.534c0 .276.09.6.717.76v-1.57c-.449.084-.716.378-.716.81zm4.16-7.493l-4.507-4.504v2.053c0 1.488.964 2.451 2.451 2.451h2.056z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBalanceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.237 2.15c.143 0 .283.056.387.154l5.462 5.182a.557.557 0 01.174.406v12.843c0 .589-.518 1.107-1.107 1.107H5.856c-.588 0-1.106-.518-1.106-1.107V3.256c0-.568.538-1.106 1.106-1.106h7.381zm-.84 1.12H5.893a.085.085 0 00-.023.023V20.71a.061.061 0 00.014.011h12.25l.005-.005V8.998h-2.45c-.956 0-1.78-.316-2.376-.915-.597-.6-.916-1.42-.916-2.376V3.27zm2.515 9.65a.42.42 0 01.42.42v.297c.364.048.701.161.975.33.208.127.239.295.239.385a.406.406 0 01-.407.406.528.528 0 01-.24-.067l-.006-.003a2.18 2.18 0 00-.56-.219l-.001 1.49.06.01c1.191.214 1.448.933 1.448 1.512 0 .487-.18.899-.516 1.19-.255.224-.592.368-.99.43l-.001.304a.42.42 0 11-.84 0v-.3a2.95 2.95 0 01-1.258-.49.432.432 0 01-.2-.37.42.42 0 01.42-.414.51.51 0 01.27.086c.255.17.512.286.768.348l-.002-1.578c-1.094-.231-1.332-.92-1.332-1.475 0-.835.51-1.418 1.333-1.566v-.306a.42.42 0 01.42-.42zm-3.997-1.453c.308 0 .56.252.56.56v7.056c0 .31-.249.56-.56.56a.562.562 0 01-.56-.56v-7.056c0-.308.252-.56.56-.56zM8.156 7.083c.308 0 .56.252.56.56v11.426c0 .308-.252.56-.56.56a.562.562 0 01-.56-.56V7.643c0-.308.252-.56.56-.56zm7.179 9.739l-.002 1.45c.419-.102.666-.374.666-.758 0-.278-.088-.55-.664-.692zm-1.339-1.65c0 .233.07.478.494.63l.001-1.319a.683.683 0 00-.495.69zm3.874-7.294l-4.353-4.13v1.96c0 .652.205 1.198.589 1.582.383.384.933.588 1.582.588h2.182z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBandAidFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.728 18.732c1.921-1.922 1.986-3.784.196-5.695a1.097 1.097 0 00-.101-.1l-.093-.09-.627-.625-5.893 5.89.165.163c.115.132.201.21.288.295l.177.17c1.98 1.975 3.907 1.975 5.888-.008zM3.75 8.247c.017.947.521 1.922 1.496 2.897l.165.17c.084.087.165.174.255.253l.053.053 5.897-5.894-.577-.577c-.956-.924-1.897-1.386-2.843-1.386-.978 0-1.956.496-2.95 1.49C4.235 6.261 3.733 7.27 3.75 8.247zm16.367 3.723c2.373 2.532 2.291 5.345-.258 7.89-1.313 1.317-2.697 1.976-4.08 1.976-1.379 0-2.76-.656-4.07-1.97l-.15-.142a5.268 5.268 0 01-.355-.365l-.656-.655c-.01-.011-.025-.014-.036-.025l-5.364-5.362c-.009-.008-.011-.02-.02-.028l-.552-.551a4.844 4.844 0 01-.327-.323l-.138-.142c-1.274-1.275-1.935-2.62-1.96-3.995-.026-1.428.633-2.829 1.963-4.157C6.7 1.533 9.56 1.491 12.16 4.01l1.135 1.135c.005.005.014.005.02.011l5.363 5.361c.003.003.006.012.011.017l1.241 1.238c.065.067.132.13.188.2zm-8.605-.484a.61.61 0 10.864.862.61.61 0 00-.864-.862zm-.54 2.784a.61.61 0 10.863.863.61.61 0 00-.864-.863zm4.254-3.392a.61.61 0 10-.862.863.61.61 0 00.862-.863zm-6.442 1.185a.61.61 0 10.863.862.61.61 0 00-.863-.862zm3.392-3.395a.61.61 0 10.863.862.61.61 0 00-.863-.862z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBandAidLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.328 19.33c2.172-2.169 2.242-4.368.216-6.53-.045-.054-.084-.088-.12-.124l-.09-.087-.95-.95-6.743 6.747.468.465c.107.123.205.215.305.31l.18.174c2.233 2.233 4.499 2.23 6.734-.005zM4.66 11.4l.171.177c.095.098.188.199.289.286l.327.327 6.746-6.746-.896-.896C10.215 3.5 9.123 2.974 8.033 2.974c-1.126 0-2.255.558-3.373 1.678-2.238 2.241-2.238 4.51 0 6.75zm1.381 1.381l5.01 5.01 6.742-6.747-5.009-5.009-6.743 6.746zm14.125-.54c2.311 2.468 2.23 5.2-.25 7.679-1.277 1.277-2.621 1.919-3.963 1.919s-2.681-.636-3.956-1.913l-.165-.16c-.12-.115-.241-.23-.342-.348l-.709-.708c-.011-.009-.025-.014-.033-.023l-5.6-5.6c-.009-.009-.012-.023-.023-.034l-.574-.574c-.101-.084-.213-.202-.328-.322l-.157-.163c-2.555-2.555-2.555-5.37 0-7.928 2.519-2.519 5.292-2.555 7.813-.11l1.18 1.18c.005.006.014.008.02.014l5.605 5.597c.003.003.003.009.009.014L20 12.068c.056.056.115.112.165.174zm-8.67-.78a.637.637 0 110 .902.643.643 0 010-.901zm-.563 2.909c.249-.25.65-.25.899 0 .25.25.25.653 0 .9a.634.634 0 01-.9 0 .634.634 0 010-.9zm4.443-3.544a.637.637 0 11-.901.902.637.637 0 01.9-.902zm-6.727 1.238c.25-.25.653-.25.9 0a.637.637 0 11-.9 0zm3.544-3.544a.636.636 0 110 .9.634.634 0 010-.9z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBandAidRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.016 19.018c2.06-2.058 2.126-4.053.208-6.103-.048-.056-.082-.084-.113-.115l-.086-.084-.787-.787-6.309 6.308.311.31c.112.127.205.217.3.306l.174.168c1.033 1.034 2.073 1.566 3.095 1.583 1.028.011 2.137-.513 3.207-1.586zm-7.952-1.644l6.305-6.31-4.61-4.611-6.306 6.31 4.61 4.611zM5.4 11.707l.188.188 6.308-6.31-.734-.735c-1.025-.991-2.037-1.49-3.048-1.49-1.047 0-2.092.532-3.154 1.594-2.123 2.123-2.123 4.185 0 6.308l.168.174c.09.098.177.19.272.271zm14.74.393c2.341 2.498 2.26 5.269-.255 7.784-1.295 1.294-2.647 1.95-4.02 1.95h-.076c-1.35-.023-2.675-.678-3.938-1.942l-.154-.148c-.123-.12-.247-.238-.353-.359l-.683-.683c-.012-.009-.026-.014-.034-.023L5.15 13.2c-.009-.008-.012-.02-.017-.028l-.566-.565c-.095-.079-.21-.2-.325-.32l-.148-.154c-1.266-1.266-1.92-2.59-1.944-3.94-.026-1.404.627-2.782 1.944-4.099 2.552-2.555 5.367-2.591 7.93-.112l1.157 1.157c.005.005.014.008.02.011l5.475 5.48a.061.061 0 00.009.013l1.269 1.269c.064.062.126.123.184.188zm-8.64-.63a.62.62 0 01.88 0 .62.62 0 010 .879.62.62 0 01-.88 0 .626.626 0 010-.88zm-.551 2.845a.62.62 0 01.88 0 .62.62 0 010 .88.62.62 0 01-.88 0 .626.626 0 010-.88zm4.347-3.465a.62.62 0 010 .88.62.62 0 01-.88 0 .62.62 0 010-.88.62.62 0 01.88 0zm-6.58 1.21a.62.62 0 01.88 0 .62.62 0 010 .88.62.62 0 01-.88 0 .62.62 0 010-.88zm3.468-3.467a.62.62 0 01.88 0 .62.62 0 010 .88.62.62 0 01-.88 0 .62.62 0 010-.88z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryChargingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.217 18.339V7.479c0-.742-.165-1.266-.507-1.602-.342-.34-.874-.502-1.63-.502H9.573c-.745 0-1.277.168-1.625.516-.344.341-.512.863-.512 1.59V18.34c0 .748.165 1.277.51 1.61.338.334.87.494 1.627.494h5.51c.753 0 1.288-.16 1.627-.493.342-.334.507-.863.507-1.611zM10.892 3.333c-.073.07-.087.233-.087.353v.446h3.048v-.446c0-.103-.011-.285-.084-.358-.076-.073-.26-.084-.364-.084h-2.149c-.129 0-.291.014-.364.09zM17.604 5c.588.583.874 1.392.874 2.479v10.86c0 1.098-.289 1.913-.883 2.493-.588.574-1.412.854-2.515.854H9.573c-1.104 0-1.927-.28-2.516-.854-.593-.583-.882-1.398-.882-2.496V7.48c0-1.073.286-1.88.874-2.465.591-.588 1.409-.877 2.493-.882v-.446c0-.515.151-.93.454-1.23C10.3 2.155 10.724 2 11.25 2h2.148c.535 0 .958.151 1.258.451.3.297.45.714.45 1.235v.446c1.096.005 1.914.288 2.497.868zm-2.541 5.84a.54.54 0 01.574.748l-2.916 6.647a.547.547 0 01-1.047-.215l.005-3.804-2.09.285a.53.53 0 01-.506-.204.534.534 0 01-.073-.535l2.736-6.55a.547.547 0 01.617-.321c.255.05.437.274.437.532l-.048 3.737 2.311-.32z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryChargingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.606 18.479V7.387c0-.818-.193-1.404-.585-1.788-.398-.386-1-.574-1.843-.574H9.475c-.835 0-1.434.193-1.838.588-.398.393-.59.97-.59 1.774v11.092c0 .824.192 1.412.59 1.796.395.38.995.565 1.838.565h5.706c.843 0 1.442-.185 1.837-.565.395-.384.588-.972.588-1.796zm-7.075-14.97v.667h3.59V3.51c0-.367-.114-.48-.15-.516-.04-.036-.152-.148-.53-.148h-2.227c-.372 0-.487.115-.526.154-.04.036-.157.151-.157.51zM17.637 5c.566.552.84 1.33.84 2.387v11.092c0 1.062-.277 1.846-.848 2.398-.563.546-1.367.812-2.448.812H9.475c-1.084 0-1.885-.266-2.451-.812-.572-.55-.849-1.334-.849-2.395V7.389c0-1.036.277-1.812.843-2.37.577-.565 1.378-.84 2.457-.84h.187v-.67c0-.467.138-.84.407-1.106.269-.266.655-.403 1.145-.403h2.227c.49 0 .877.134 1.146.398.274.266.406.63.406 1.112v.666h.188c1.084 0 1.888.27 2.456.824zm-4.983 11.104l1.877-4.216-2.277.308a.444.444 0 01-.348-.1.422.422 0 01-.148-.323l.025-2.25-1.68 3.97 2.06-.277a.44.44 0 01.345.1.417.417 0 01.149.32l-.003 2.468zm2.524-5.157a.446.446 0 01.406.165c.095.12.115.283.053.423l-3.022 6.787a.435.435 0 01-.488.247.43.43 0 01-.347-.415l.009-4.034-2.317.311a.438.438 0 01-.403-.16.415.415 0 01-.06-.42l2.836-6.689a.436.436 0 01.49-.254.428.428 0 01.347.42l-.045 3.963 2.54-.344z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryFullFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.542 18.499V7.639c0-.742-.165-1.266-.507-1.602-.342-.34-.874-.502-1.63-.502H8.898c-.745 0-1.278.168-1.625.516-.344.341-.513.862-.513 1.59v10.86c0 .751.166 1.278.51 1.611.34.334.871.493 1.628.493h5.51c.753 0 1.288-.162 1.627-.493.342-.336.507-.862.507-1.613zM10.217 3.49c-.073.072-.09.232-.09.355v.443h3.048v-.446c0-.103-.011-.285-.084-.358-.073-.073-.26-.084-.364-.084h-2.149c-.126.003-.288.017-.36.09zm6.712 1.666c.588.583.873 1.392.873 2.482v10.86c0 1.098-.288 1.913-.882 2.493-.588.577-1.412.854-2.515.854H8.898c-1.104 0-1.927-.28-2.516-.854-.593-.58-.882-1.395-.882-2.496V7.64c0-1.07.286-1.877.874-2.465.591-.588 1.409-.877 2.493-.882v-.449c0-.515.151-.93.454-1.226.302-.303.725-.457 1.255-.457h2.148c.532 0 .955.151 1.258.451.3.297.45.714.45 1.235v.448c1.096.003 1.914.286 2.497.863zM15.164 6.52c.347 0 .63.28.63.622v10.731c0 1.219-1.006 2.207-2.24 2.207H9.748c-1.235 0-2.24-.988-2.24-2.207V7.144c0-.343.282-.623.63-.623h7.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryFullRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.931 18.636V7.544c0-.818-.193-1.404-.588-1.787-.395-.387-.997-.575-1.84-.575H8.797c-.835 0-1.434.194-1.838.589-.397.392-.59.969-.59 1.773v11.092c0 .827.193 1.415.59 1.796.395.38.995.566 1.838.566h5.706c.84 0 1.442-.185 1.837-.566.395-.381.589-.97.591-1.796zM9.853 3.67v.666h3.591V3.67c0-.367-.115-.48-.151-.516-.037-.036-.152-.148-.53-.148H10.54c-.372 0-.49.115-.53.154-.038.036-.156.151-.156.51zm7.106 1.49c.566.552.84 1.33.84 2.384v11.092c0 1.065-.277 1.849-.848 2.398-.566.546-1.367.812-2.448.812H8.797c-1.081 0-1.882-.266-2.448-.812-.572-.55-.849-1.333-.849-2.398V7.544c0-1.037.275-1.81.843-2.367.574-.566 1.378-.84 2.457-.84h.187V3.67c0-.468.138-.84.407-1.104.268-.272.655-.406 1.142-.406h2.225c.49 0 .876.132 1.145.398.272.263.406.638.406 1.112v.666h.188c1.087 0 1.894.27 2.46.824zM15.211 18V7.463H8.085V18c0 .661.552 1.2 1.233 1.2h4.661c.678 0 1.232-.539 1.232-1.2zm.435-11.383c.24 0 .434.187.434.423V18c0 1.13-.941 2.045-2.104 2.045H9.318c-1.16 0-2.104-.916-2.104-2.045V7.04c0-.236.196-.423.434-.423h7.998z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.306 18.632c0 .827-.193 1.415-.59 1.796-.396.38-.998.566-1.838.566H9.172c-.84 0-1.443-.185-1.838-.566-.397-.384-.59-.97-.59-1.796V7.54c0-.804.193-1.38.59-1.773.404-.395 1.003-.588 1.838-.588h5.706c.843 0 1.445.187 1.84.574.395.386.588.97.588 1.787v11.092zM10.323 3.666c0-.358.118-.473.154-.51.04-.039.157-.154.53-.154h2.224c.38 0 .493.112.532.149.036.036.151.148.151.515v.667h-3.59v-.667zm7.011 1.49c-.568-.554-1.372-.823-2.459-.823h-.092v-.667c0-.476-.138-.849-.407-1.112-.269-.263-.655-.398-1.145-.398h-2.224c-.49 0-.874.138-1.149.404-.269.266-.406.638-.406 1.103v.667h-.28c-1.079 0-1.88.274-2.457.84-.565.558-.84 1.334-.84 2.367V18.63c0 1.064.28 1.848.849 2.397.566.547 1.367.813 2.448.813h5.706c1.081 0 1.882-.266 2.448-.813.571-.549.849-1.333.849-2.397V7.537c0-1.05-.275-1.829-.84-2.38z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryLowFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.934 18.639V7.544c0-.818-.193-1.404-.588-1.787-.395-.387-.997-.575-1.84-.575H8.8c-.835 0-1.434.194-1.838.589-.398.392-.59.969-.59 1.773v11.092c0 .824.192 1.412.59 1.796.395.38.995.565 1.838.565h5.703c.843 0 1.442-.184 1.837-.565.398-.381.594-.97.594-1.793zM9.856 3.669v.667h3.59V3.67c0-.367-.114-.48-.15-.516-.04-.036-.152-.148-.53-.148H10.54c-.372 0-.49.115-.526.154-.04.036-.157.151-.157.51zm7.106 1.491c.566.552.84 1.33.84 2.387v11.092c0 1.062-.277 1.846-.848 2.398-.563.546-1.367.812-2.451.812H8.8c-1.084 0-1.885-.266-2.451-.812-.572-.55-.849-1.334-.849-2.395V7.544c0-1.037.277-1.813.843-2.37.577-.566 1.378-.84 2.457-.84h.187V3.67c0-.47.138-.843.407-1.107.268-.266.655-.403 1.145-.403h2.227c.49 0 .877.134 1.146.398.274.266.406.63.406 1.112v.666h.185c1.087 0 1.89.27 2.46.824zm-2.98 14.04c.636 0 1.162-.471 1.224-1.076H8.094a1.22 1.22 0 001.224 1.075h4.664zm1.666-1.922c.241 0 .435.19.435.423v.3c0 1.128-.942 2.044-2.101 2.044H9.32c-1.16 0-2.104-.916-2.104-2.045v-.3a.43.43 0 01.434-.422h7.997z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryLowRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.545 18.499V7.639c0-.742-.165-1.266-.507-1.602-.342-.34-.874-.502-1.63-.502h-5.51c-.745 0-1.278.168-1.625.516-.344.341-.51.863-.51 1.59v10.86c0 .749.166 1.278.51 1.611.339.334.874.493 1.628.493h5.51c.753 0 1.285-.162 1.627-.493.342-.336.507-.865.507-1.613zM10.22 3.493c-.073.07-.087.233-.087.353v.446h3.048v-.446c0-.1-.012-.283-.084-.355-.076-.076-.26-.085-.365-.085h-2.148c-.129-.002-.291.012-.364.087zm6.711 1.664c.589.583.874 1.392.874 2.482v10.86c0 1.098-.288 1.913-.882 2.493-.588.574-1.412.854-2.515.854h-5.51c-1.104 0-1.927-.28-2.516-.854-.593-.58-.882-1.398-.882-2.493V7.639c0-1.07.286-1.877.874-2.465.591-.588 1.409-.877 2.493-.882v-.446c0-.515.154-.93.454-1.23.305-.302.728-.456 1.255-.456h2.148c.535 0 .958.151 1.258.451.3.297.45.711.45 1.232v.446c1.099.008 1.917.291 2.5.868zm-1.764 11.801c.347 0 .63.278.63.622v.294c0 1.219-.941 2.21-2.095 2.21H9.609c-1.154 0-2.095-.991-2.095-2.21v-.294c0-.342.283-.622.63-.622h7.023z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryMediumFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.542 18.499V7.639c0-.742-.165-1.266-.507-1.605-.342-.336-.874-.501-1.63-.501H8.898c-.745 0-1.278.168-1.625.515-.344.342-.513.863-.513 1.591v10.857c0 .748.166 1.277.51 1.61.34.334.871.494 1.625.494h5.51c.753 0 1.288-.16 1.627-.493.345-.33.51-.86.51-1.608zM10.217 3.49c-.073.072-.09.232-.09.355v.446h3.048v-.446c0-.103-.011-.285-.087-.358-.073-.073-.258-.084-.361-.084h-2.149c-.126 0-.288.014-.36.087zm6.712 1.666c.588.583.873 1.392.873 2.482v10.86c0 1.098-.288 1.913-.882 2.493-.588.574-1.412.854-2.515.854H8.898c-1.104 0-1.927-.28-2.516-.854-.593-.583-.882-1.398-.882-2.496V7.64c0-1.073.286-1.88.874-2.465.591-.588 1.409-.877 2.493-.882v-.446c0-.515.151-.93.454-1.23.302-.302.725-.456 1.255-.456h2.148c.532 0 .955.151 1.258.451.3.3.454.714.454 1.235v.446c1.092.005 1.91.288 2.493.865zm-1.765 6.83c.347 0 .63.277.63.621v5.266c0 1.219-1.006 2.207-2.24 2.207H9.751c-1.235 0-2.24-.988-2.24-2.207v-5.266c0-.342.282-.622.63-.622h7.022z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryMediumRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.931 18.639V7.547c0-.818-.193-1.404-.588-1.788-.395-.386-.997-.574-1.84-.574H8.8c-.835 0-1.434.193-1.838.588-.398.393-.59.97-.59 1.774v11.092c0 .826.192 1.412.59 1.796.395.38.995.565 1.838.565h5.703c.843 0 1.442-.185 1.837-.565.398-.384.591-.972.591-1.796zM9.856 3.669v.667h3.59V3.67c0-.367-.114-.48-.15-.516-.037-.036-.152-.148-.53-.148H10.54c-.372 0-.487.115-.526.154-.042.036-.157.151-.157.51zm7.106 1.491c.566.552.84 1.33.84 2.387v11.092c0 1.062-.277 1.846-.848 2.398-.566.546-1.367.812-2.451.812H8.8c-1.084 0-1.885-.266-2.451-.81-.572-.551-.849-1.336-.849-2.397V7.549c0-1.036.277-1.812.843-2.37.577-.565 1.378-.84 2.457-.84h.185v-.67c0-.467.137-.84.406-1.106.271-.266.658-.403 1.148-.403h2.227c.49 0 .877.134 1.146.398.269.263.403.638.403 1.112v.666h.188c1.087 0 1.89.27 2.46.824zM15.212 18v-4.955H8.087V18c0 .661.552 1.2 1.233 1.2h4.66c.679 0 1.23-.539 1.23-1.2zm.434-5.8a.43.43 0 01.437.422V18c0 1.13-.944 2.045-2.104 2.045H9.321c-1.16 0-2.104-.916-2.104-2.045v-5.378c0-.235.196-.423.434-.423h7.995z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBatteryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.217 18.339c0 .748-.165 1.277-.51 1.61-.341.334-.874.494-1.627.494H9.573c-.754 0-1.289-.16-1.628-.493-.344-.334-.51-.863-.51-1.611V7.479c0-.728.166-1.25.513-1.591.348-.347.88-.515 1.625-.515h5.51c.756 0 1.288.165 1.63.5.342.34.507.864.507 1.606l-.003 10.86zM10.895 3.686c0-.123.014-.283.087-.353.073-.072.238-.09.361-.09h2.149c.103 0 .29.012.36.085.077.073.088.255.088.358v.446h-3.045v-.446zm6.709 1.311c-.569-.56-1.359-.837-2.404-.86v-.45c0-.522-.151-.936-.454-1.236-.3-.3-.722-.451-1.254-.451h-2.149c-.53 0-.952.154-1.255.457-.302.3-.454.711-.454 1.23v.445h-.061c-1.098 0-1.925.288-2.521.882-.588.585-.874 1.392-.874 2.465v10.86c0 1.098.288 1.913.882 2.493.588.574 1.412.854 2.516.854h5.51c1.103 0 1.927-.28 2.515-.854.594-.583.882-1.398.882-2.493V7.479c-.005-1.087-.291-1.9-.88-2.482z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBeachUmbrellaFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.324 14.163c-1.837-4.53-.356-7.893.583-9.378l4 6.672-4.583 2.706zM5.828 5.752c-.851 2.075-1.386 5.246.27 9.134l-2.11 1.246c-.09.054-.14.101-.356.043a.4.4 0 01-.252-.216c-.82-1.941-1.033-3.784-.636-5.476.401-1.743 1.443-3.325 3.084-4.731zm12.463 1.932l-5.168 3.054-4.06-6.768c1.648-.221 5.463-.18 9.228 3.714zm3.022-2.302a.378.378 0 01.1.291.391.391 0 01-.195.283L19.52 6.959c-2.86-3.05-5.776-4.093-7.994-4.356 1.731-.515 3.386-.594 4.941-.221 1.762.423 3.392 1.431 4.846 3zm-13.515-.74l-.373-.622a.668.668 0 01.266-.93.735.735 0 01.975.255l.35.586-1.218.711zm5.33 6.12l6.025 10.054a.665.665 0 01-.266.93.76.76 0 01-.353.09.718.718 0 01-.619-.342L11.91 11.477l1.218-.714z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBeachUmbrellaLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.072 7.009l-1.728 1.04c-3.116-3.467-6.314-4.224-8.413-4.256 1.996-.798 3.9-.991 5.677-.558 1.678.412 3.224 1.388 4.601 2.905.112.12.164.29.147.45a.584.584 0 01-.284.419zM9.343 4.784c1.374-.251 5.368-.5 9.241 3.727l-5.21 3.137-4.03-6.864zM7.975 14.902c-2.029-4.83-.216-8.335.655-9.604l3.996 6.8-4.65 2.804zm-2.874 1.733a.602.602 0 01-.514.059.593.593 0 01-.368-.327c-.778-1.877-.98-3.66-.6-5.306.442-1.956 1.69-3.702 3.695-5.207-.95 1.883-1.929 5.262-.099 9.507l-2.114 1.274zM21.867 5.567c-1.494-1.645-3.192-2.71-5.046-3.166-2.493-.605-5.189-.117-8.024 1.456l-.442-.754a.445.445 0 00-.602-.158.42.42 0 00-.17.57l.01.015.452.775C5.113 6.11 3.335 8.32 2.757 10.873c-.418 1.816-.202 3.775.643 5.812.158.38.482.678.918.825.17.05.316.073.459.073.269 0 .547-.073.786-.217l7.505-4.522 5.657 9.632a.441.441 0 00.602.158.42.42 0 00.17-.57c-.004-.006-.007-.008-.01-.014l-5.674-9.656 7.724-4.654c.377-.228.625-.603.693-1.038a1.425 1.425 0 00-.363-1.135z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBeachUmbrellaRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.003 6.743l-1.473.89c-2.485-2.71-5.017-3.635-6.947-3.868 1.504-.456 2.94-.526 4.294-.196 1.53.376 2.944 1.272 4.21 2.664a.35.35 0 01.087.258.352.352 0 01-.171.252zM9.446 4.978c1.43-.196 4.745-.16 8.014 3.3l-4.49 2.709c.002 0-3.524-6.009-3.524-6.009zm-1.51 9.048c-1.597-4.023-.311-7.006.507-8.328l3.473 5.924c.003 0-3.98 2.404-3.98 2.404zm-2.897 1.75c-.078.048-.123.09-.31.037a.34.34 0 01-.219-.193c-.712-1.723-.9-3.356-.552-4.86.347-1.546 1.252-2.953 2.678-4.2-.74 1.847-1.204 4.66.232 8.11L5.04 15.777zm15.972-10.35c-1.428-1.574-3.056-2.596-4.834-3.033-2.337-.572-4.85-.132-7.488 1.291l-.314-.538a.627.627 0 00-.845-.224.598.598 0 00-.239.81l.009.014.33.563c-2.694 1.706-4.34 3.787-4.88 6.185-.403 1.742-.198 3.619.611 5.574.169.412.522.734.99.893.173.05.335.076.49.076.288 0 .588-.081.845-.232l6.85-4.135 5.195 8.86a.626.626 0 00.846.224.596.596 0 00.241-.81l-.008-.016-5.222-8.89 7.07-4.267c.404-.247.675-.647.745-1.123.05-.446-.09-.891-.392-1.222z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBicycleBikeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.978 11.667l1.257-2.563-.857-1.827h-.812a.54.54 0 01-.53-.552.54.54 0 01.53-.551h2.736a.54.54 0 01.53.551.541.541 0 01-.53.552h-.745L9.16 8.56h5.156V5.994c0-.26.174-.484.418-.54.154-.037 1.538-.33 2.353.353.255.213.56.613.56 1.305a.541.541 0 01-.53.552.542.542 0 01-.532-.552c0-.272-.086-.378-.165-.443-.23-.193-.68-.22-1.042-.193V8.98l1.336 2.7s-.35.135-.476.188c-.12.05-.51.23-.51.23l-.882-1.782-1.97 3.956c.306.285.48.714.48 1.263 0 .731-.303 1.25-.827 1.493l.317.658h.482c.294 0 .53.25.53.555a.541.541 0 01-.53.552h-.81a.522.522 0 01-.473-.306l-.639-1.33c-.653-.112-1.073-.546-1.193-1.216H9.47s.014-.21.014-.552c-.003-.361-.014-.554-.014-.554h.817c.082-.23.21-.418.373-.569l-1.846-3.924-.846 1.728s-.39-.18-.52-.233c-.113-.044-.449-.162-.471-.17l-1.7 3.473a.578.578 0 00.019.54.53.53 0 00.454.264h3.722c-.19 2.137-1.507 3.361-3.706 3.361-2.378 0-3.742-1.42-3.742-3.899s1.364-3.899 3.742-3.899c.446 0 .84.064 1.21.16zm.994.406c.868.549 1.38 1.498 1.501 2.764H6.62l1.353-2.764zm3.795 1.81c.037 0 .07.005.107.008l2.1-4.224H9.679l1.986 4.224c.036-.003.067-.009.103-.009zm0 1.106c-.403 0-.526.129-.526.549 0 .417.129.549.526.549.407 0 .527-.13.527-.55 0-.422-.12-.548-.527-.548zm6.205-3.482c2.378 0 3.742 1.423 3.742 3.9 0 2.478-1.364 3.898-3.742 3.898s-3.742-1.42-3.742-3.899c0-1.54.526-2.672 1.498-3.308l1.754 3.546c.095.19.28.3.473.3a.52.52 0 00.244-.062.565.565 0 00.23-.745l-1.71-3.46c.379-.1.79-.17 1.253-.17z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBicycleBikeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.23 18.073c-1.872 0-2.78-.953-2.78-2.908 0-1.218.353-2.045 1.07-2.498l1.32 2.68a.412.412 0 00.56.188.443.443 0 00.18-.586l-1.272-2.582c.28-.065.577-.107.921-.107 1.871 0 2.782.953 2.782 2.908-.003 1.952-.914 2.905-2.782 2.905zm-6.337-4.34c-.064 0-.12.01-.18.015l-2.15-4.6h4.792l-2.28 4.6c-.059-.006-.115-.017-.182-.014zm0 2.258c-.476 0-.661-.193-.661-.694 0-.499.185-.695.66-.695.48 0 .665.196.665.695 0 .501-.185.694-.664.694zM5.77 18.073c-1.871 0-2.779-.953-2.779-2.908s.908-2.907 2.779-2.907c.322 0 .61.039.876.098l-1.268 2.596a.45.45 0 00.016.426.406.406 0 00.356.207h2.776c-.132 1.664-1.028 2.488-2.756 2.488zm2.753-3.359H6.431l1.008-2.067c.647.39 1 1.078 1.084 2.067zm.359-5.028l2.039 4.359a1.336 1.336 0 00-.443.672H9.352c-.098-1.339-.624-2.305-1.54-2.835l1.07-2.196zm9.344 1.7c-.487 0-.918.07-1.31.188l-1.46-2.963V5.893c.39-.042.966-.039 1.269.216.092.079.216.219.216.558a.426.426 0 00.417.434.427.427 0 00.417-.434c0-.659-.285-1.037-.526-1.239-.787-.66-2.143-.37-2.297-.333a.435.435 0 00-.325.426V8.28H9.153l-.739-1.577h.96a.427.427 0 00.418-.434.424.424 0 00-.417-.434H6.582a.427.427 0 00-.417.434.428.428 0 00.417.437h.905l.935 2.003-1.395 2.857a4.48 4.48 0 00-1.263-.174c-2.325-.006-3.608 1.336-3.608 3.773 0 2.437 1.283 3.779 3.614 3.779 2.19 0 3.44-1.196 3.585-3.359h1.065c.09.709.515 1.157 1.19 1.255l.68 1.429c.07.148.216.24.373.24h.827a.427.427 0 00.417-.433.428.428 0 00-.417-.437h-.569l-.417-.874c.565-.205.888-.72.888-1.465 0-.56-.188-.99-.524-1.252l2.173-4.381 1.101 2.235c-.991.6-1.526 1.703-1.526 3.266 0 2.437 1.283 3.779 3.613 3.779s3.614-1.342 3.614-3.779-1.283-3.782-3.617-3.782z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBicycleBikeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.933 17.992c-1.715 0-2.513-.832-2.513-2.62 0-1.039.277-1.745.838-2.162l1.185 2.4a.516.516 0 00.714.238.565.565 0 00.23-.744l-1.135-2.294c.21-.037.431-.056.68-.056 1.718 0 2.516.831 2.516 2.621 0 1.785-.798 2.617-2.515 2.617zm-6.194-4.143c-.036 0-.067.008-.103.008l-1.98-4.216h4.288l-2.095 4.216c-.037 0-.07-.005-.11-.008zm0 1.106c.401 0 .527.135.527.55 0 .42-.123.548-.527.548-.403 0-.526-.129-.526-.549 0-.417.129-.549.526-.549zm-5.988 3.037c-1.715 0-2.516-.832-2.516-2.62 0-1.787.799-2.621 2.516-2.621.23 0 .44.017.638.047L5.261 15.11a.564.564 0 00.022.538.525.525 0 00.45.263h2.502c-.154 1.415-.952 2.082-2.484 2.082zm1.641-4.81c.476.336.754.868.84 1.622H6.597l.795-1.622zm1.404-2.863l1.843 3.92c-.168.156-.297.35-.373.568h-.815c-.12-1.264-.63-2.21-1.499-2.76l.844-1.728zm9.137 1.16c-.462 0-.871.07-1.252.174l-1.336-2.698V6.457c.364-.031.812 0 1.042.193.075.064.162.17.162.442 0 .306.238.552.53.552a.54.54 0 00.529-.552c0-.689-.305-1.09-.56-1.302-.816-.684-2.196-.384-2.35-.35a.549.549 0 00-.415.538v2.56H9.137l-.6-1.28h.743a.54.54 0 00.53-.552.54.54 0 00-.53-.552H6.546a.54.54 0 00-.53.552c0 .305.239.552.53.552h.81l.854 1.82-1.252 2.563a4.728 4.728 0 00-1.204-.162c-2.376 0-3.737 1.42-3.737 3.894 0 2.473 1.361 3.89 3.737 3.89 2.193 0 3.507-1.221 3.697-3.355h.742c.118.672.538 1.103 1.19 1.215l.637 1.325c.09.188.274.306.473.306h.81a.539.539 0 00.529-.55v-.002a.54.54 0 00-.53-.552h-.484l-.314-.656c.524-.243.824-.759.824-1.49 0-.549-.171-.977-.476-1.26l1.966-3.95.88 1.779c-.97.636-1.496 1.765-1.496 3.302 0 2.474 1.361 3.894 3.734 3.894 2.375 0 3.736-1.417 3.736-3.894-.003-2.476-1.364-3.896-3.74-3.896z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBlogFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M22.19 10.196a1.985 1.985 0 00-1.235-.566 1.793 1.793 0 00-.837.137v-3.96c0-1.14-.314-2.107-.93-2.76-.656-.694-1.605-1.044-2.818-1.044H6.75c-1.212 0-2.162.35-2.817 1.045-.616.652-.93 1.619-.93 2.759v12.112c0 1.14.314 2.05.93 2.703.655.694 1.602 1.045 2.818 1.045h9.619c1.213 0 2.162-.35 2.818-1.045.616-.653.93-1.563.93-2.703v-3.166c1.044-.93 1.932-1.722 2.067-1.854.375-.37.574-.829.577-1.328a1.99 1.99 0 00-.572-1.375zM6.807 6.202h9.563c.308 0 .56.252.56.56 0 .308-.252.56-.56.56H6.807a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56zm0 3.4h9.563a.561.561 0 010 1.12H6.807a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56zm0 3.4h9.535l-1.27 1.121H6.808a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56zm6.131 4.522H6.807a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56h6.507l-.376 1.12zm8.46-5.423c-.227.224-3.457 3.09-5.63 5.011l-1.698.56.557-1.66c.914-.808 5.342-4.718 5.65-5.026a.747.747 0 01.594-.24c.431.03.765.386.768.817a.74.74 0 01-.241.538z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBlogLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.588 2.156c1.168 0 2.07.33 2.689.983.582.617.88 1.485.88 2.583l-.002 4.603a1.58 1.58 0 011.136-.362 1.707 1.707 0 011.585 1.703c0 .434-.176.835-.504 1.16a174.7 174.7 0 01-2.216 1.986v3.4c0 1.098-.294 1.967-.88 2.583-.618.653-1.523.983-2.691.983h-9.86c-1.168 0-2.07-.33-2.69-.983-.582-.616-.879-1.485-.879-2.583V5.722c.003-1.095.3-1.964.883-2.583.616-.652 1.52-.983 2.689-.983h9.86zm.002.56H6.73c-2.484 0-3.005 1.636-3.005 3.006v12.49c0 1.373.52 3.006 3.005 3.006h9.86c2.485 0 3.006-1.636 3.006-3.006V15.31c-1.485 1.318-3.032 2.687-3.151 2.793a.263.263 0 01-.098.056l-2.958.975a.337.337 0 01-.09.017.28.28 0 01-.266-.37l.427-1.275H6.725a.28.28 0 01-.28-.28.28.28 0 01.28-.28h6.923l.377-1.12a.257.257 0 01.08-.12L16.038 14H6.725a.28.28 0 01-.28-.28.28.28 0 01.28-.28h9.91l.03.003a557.858 557.858 0 002.932-2.607l-.001-5.114c0-1.372-.521-3.006-3.006-3.006zm3.813 8.138c-.16.16-1.472 1.33-2.822 2.526l-.45.399a1246.587 1246.587 0 01-2.6 2.296l-.79 2.353 2.373-.784 2.053-1.819.612-.542a317.064 317.064 0 003.198-2.858c.224-.221.339-.476.339-.762a1.17 1.17 0 00-.336-.81 1.18 1.18 0 00-.731-.333c-.219-.016-.54.028-.846.334zm-3.818-.919a.28.28 0 01.28.28.28.28 0 01-.28.28h-9.86a.28.28 0 01-.28-.28.28.28 0 01.28-.28h9.86zm0-3.507a.28.28 0 01.28.28.28.28 0 01-.28.28h-9.86a.28.28 0 01-.28-.28.28.28 0 01.28-.28h9.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBlogRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.37 2.003c2.347 0 3.748 1.423 3.748 3.804v3.959c.736-.305 1.558-.08 2.07.43.361.367.566.86.568 1.375a1.85 1.85 0 01-.577 1.328c-.131.13-1.02.926-2.065 1.855.003.02.004.039.004.058v3.107c0 1.14-.314 2.05-.93 2.703-.656.692-1.605 1.045-2.818 1.045H6.75c-1.212 0-2.162-.35-2.817-1.045-.616-.653-.93-1.563-.93-2.703V5.807c0-2.381 1.4-3.804 3.748-3.804h9.619zm0 1.12H6.75c-.887 0-1.56.241-1.996.717-.418.454-.63 1.115-.63 1.967v12.112c0 1.742.884 2.627 2.627 2.627h9.619c1.742 0 2.627-.885 2.627-2.627v-2.172c-1.194 1.06-2.324 2.06-2.574 2.281a.527.527 0 01-.196.112l-2.871.95a.56.56 0 01-.706-.711l.285-.855H6.807a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56l6.504-.001.3-.89a.56.56 0 01.16-.241l1.3-1.148H6.806a.562.562 0 01-.56-.561c0-.308.252-.56.56-.56h9.53a641.357 641.357 0 002.649-2.355l.011-.01v-4.83c0-.852-.213-1.513-.63-1.967-.437-.476-1.11-.717-1.997-.717zm3.91 7.866c-.155.154-1.34 1.208-2.6 2.325l-.447.396-2.606 2.304-.557 1.661 1.698-.56 1.763-1.562.408-.362c1.694-1.502 3.301-2.932 3.459-3.087.16-.16.243-.34.243-.535a.853.853 0 00-.24-.58c-.157-.157-.662-.46-1.12 0zm-3.91-1.387a.561.561 0 010 1.12H6.807a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h9.563zm0-3.4c.308 0 .56.252.56.56 0 .308-.252.56-.56.56H6.807a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h9.563z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoatFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.26 4.289v.983H6.015v-.983c0-.334.269-.606.602-.606h4.042c.334 0 .603.272.603.606zm3.311 13.008c.667 0 1.208-.546 1.208-1.216 0-.67-.54-1.215-1.208-1.215-.666 0-1.207.546-1.207 1.215 0 .67.54 1.216 1.207 1.216zm-4.036 0c.667 0 1.207-.546 1.207-1.216 0-.67-.543-1.215-1.207-1.215-.667 0-1.207.546-1.207 1.215 0 .67.543 1.216 1.207 1.216zm-4.036 0c.666 0 1.207-.546 1.207-1.216 0-.67-.54-1.215-1.207-1.215s-1.208.546-1.208 1.215c0 .67.544 1.216 1.208 1.216zm14.613-5.18c.333 0 .602.272.602.606 0 2.66-.683 4.658-2.03 5.938a5.221 5.221 0 01-3.494 1.423c-.064 0-.103-.003-.112-.003H3.667c-.956 0-1.34-.877-1.367-1.465l-.272-5.888a.6.6 0 01.6-.636l1.344.003.02-2.426a.977.977 0 01.212-.703c.14-.17.41-.378.9-.383.128-.003.462-.003.907-.006V6.482h5.247V8.58c1.218.003 2.165.003 2.274.003.045.002 1.703-.06 2.874 1.072.633.611.98 1.443 1.07 2.457l3.636.006zM6.499 15.673a.406.406 0 010 .813.406.406 0 010-.812zm4.036 0a.406.406 0 010 .812.406.406 0 010-.812zm4.036 0a.406.406 0 010 .813.404.404 0 01-.403-.407c0-.224.18-.406.403-.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoatLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.283 18.202c1.09-1.048 1.672-2.698 1.737-4.913l-18.023-.02.255 5.602c.006.084.048.516.373.516H16.33c.034-.006 1.647.067 2.953-1.185zM5.109 9.667c-.112.003-.148.025-.151.025l.003 2.675 11.762-.017c-.068-.792-.334-1.42-.796-1.868-.88-.857-2.196-.815-2.213-.815-.025.02-3.493-.006-6.025-.006-1.277 0-2.322 0-2.58.006zm1.936-4.224h3.305v-.801H7.045v.8zm0 3.386h3.305V6.27H7.045v2.56zm14.39 3.63a.41.41 0 01.408.415c0 2.67-.675 4.667-2.008 5.938a5.094 5.094 0 01-3.42 1.404c-.062 0-.099-.003-.11-.003H3.625c-.897 0-1.171-.854-1.19-1.305l-.278-6.034a.41.41 0 01.386-.431h.023l1.574.003.022-2.732a.752.752 0 01.171-.551c.115-.143.342-.314.762-.32.151-.002.566-.002 1.132-.002V4.227c0-.23.185-.415.409-.415h4.126a.41.41 0 01.409.415v4.608l2.526.003c.045.003 1.656-.06 2.79 1.042.647.627.99 1.501 1.045 2.577l3.902.003zM6.517 15.9a.414.414 0 00-.412.418c0 .23.185.417.412.417a.418.418 0 000-.835zm0 1.664a1.243 1.243 0 01-1.232-1.246 1.24 1.24 0 011.232-1.247c.68 0 1.233.56 1.233 1.247 0 .686-.555 1.246-1.233 1.246zm4.118-1.666a.418.418 0 000 .834.418.418 0 000-.834zm0 1.666a1.24 1.24 0 01-1.233-1.246c0-.687.555-1.247 1.233-1.247s1.232.56 1.232 1.247a1.24 1.24 0 01-1.232 1.246zm4.12-1.666a.416.416 0 00-.414.417c0 .23.185.417.414.417a.415.415 0 00.412-.417.415.415 0 00-.412-.417zm0 1.666a1.243 1.243 0 01-1.232-1.246 1.24 1.24 0 011.232-1.247c.678 0 1.233.56 1.233 1.247 0 .686-.555 1.246-1.233 1.246z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoatRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.843 17.77c.989-.95 1.535-2.442 1.625-4.44l-17.236-.02.241 5.256s.026.308.166.308h12.445c.048-.006 1.552.056 2.76-1.104zM5.171 9.796l-.017 2.23 11.092-.015c-.09-.622-.324-1.117-.697-1.479-.795-.764-2.006-.73-2.017-.736-.07-.009-3.428-.006-5.905-.006-1.154.003-2.117.003-2.456.006zM7.19 5.56h2.837v-.664H7.19v.664zm0 3.014h2.837V6.77H7.19v1.804zm13.893 3.544c.333 0 .602.271.602.605 0 2.66-.683 4.658-2.03 5.938a5.221 5.221 0 01-3.494 1.423c-.064 0-.103-.003-.112-.003H3.64c-.956 0-1.342-.877-1.367-1.465l-.27-5.888a.6.6 0 01.6-.636l1.345.003.02-2.426a.977.977 0 01.212-.703c.14-.17.41-.378.9-.383.131-.003.462-.003.91-.003V4.289c0-.334.269-.606.602-.606h4.042c.333 0 .602.272.602.606v4.294l2.275.002c.045 0 1.703-.058 2.874 1.073.633.61.98 1.443 1.07 2.457l3.63.003zm-14.61 3.554a.406.406 0 000 .812.406.406 0 000-.812zm0 1.625a1.213 1.213 0 01-1.208-1.216c0-.67.54-1.215 1.207-1.215s1.208.546 1.208 1.215c0 .67-.544 1.216-1.208 1.216zm4.033-1.625a.406.406 0 000 .813.404.404 0 00.403-.407.404.404 0 00-.403-.406zm0 1.625A1.213 1.213 0 019.3 16.08c0-.67.543-1.215 1.207-1.215.667 0 1.207.546 1.207 1.215a1.21 1.21 0 01-1.207 1.216zm4.036-1.625a.406.406 0 000 .812.404.404 0 00.404-.406.404.404 0 00-.404-.406zm0 1.625a1.213 1.213 0 01-1.207-1.216c0-.67.54-1.215 1.207-1.215s1.208.546 1.208 1.215c0 .67-.54 1.216-1.208 1.216z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBookmarkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.478 3.286v17.109c0 .496-.272.941-.723 1.16a1.413 1.413 0 01-.577.134 1.3 1.3 0 01-.79-.269l-3.731-3.67a.463.463 0 00-.644 0l-3.698 3.637c-.442.336-.96.386-1.412.168a1.283 1.283 0 01-.73-1.16V3.285A1.296 1.296 0 017.471 2h9.703c.726 0 1.303.58 1.303 1.286"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBookmarkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.36 20.554a.44.44 0 01-.255.4c-.157.079-.336.06-.431-.008l-3.687-3.636a1.309 1.309 0 00-.918-.372c-.33 0-.667.123-.922.372l-3.664 3.603a.452.452 0 01-.473.044.437.437 0 01-.252-.4V3.442c0-.247.201-.445.45-.445h9.704c.25 0 .45.198.45.445v17.112h-.002zm-.45-18.398H7.205c-.717 0-1.3.577-1.3 1.283v17.115c0 .493.278.936.726 1.154.448.219.972.168 1.409-.168l3.703-3.633a.464.464 0 01.644-.006l3.731 3.673a1.304 1.304 0 001.37.131c.448-.218.725-.66.725-1.154V3.436a1.302 1.302 0 00-1.305-1.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBookmarkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.338 16.443c.38 0 .756.142 1.042.43l3.551 3.55c.031.02.115-.011.157-.034a.2.2 0 00.118-.187V3.479a.209.209 0 00-.205-.21h-9.35a.204.204 0 00-.207.204v16.729c0 .112.073.168.118.187.044.023.131.05.218-.02l3.507-3.498a1.508 1.508 0 011.05-.428m4.659 5.243c-.317 0-.63-.103-.897-.308l-3.616-3.605a.21.21 0 00-.302.006l-3.566 3.546c-.51.398-1.107.457-1.616.204a1.472 1.472 0 01-.824-1.327V3.479C6.175 2.664 6.836 2 7.651 2h9.35c.813 0 1.477.664 1.477 1.482v16.72a1.47 1.47 0 01-.827 1.327 1.43 1.43 0 01-.655.157"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoxFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.235 20.008c0 .238-.176.448-.378.448H3.824c-.202 0-.376-.21-.376-.448V8.56c0-.238.174-.448.376-.448h5.044v2.462c0 .34.325.614.726.614h4.18c.4 0 .725-.275.725-.614l-.003-2.462h5.361c.202 0 .378.21.378.448v11.448zM4.843 3.546a.502.502 0 00.02-.143c0-.095.092-.173.204-.173h4.26l-.386 3.655H3.9l.944-3.339zm13.98-.143c0 .05.006.098.023.146l.966 3.333h-5.397l-.463-3.655h4.664c.115.003.207.078.207.176zm2.832 4.883a.533.533 0 00-.01-.23l-1.373-4.737c-.054-.734-.773-1.316-1.653-1.316H5.07c-.882 0-1.605.585-1.653 1.32L2.084 8.061c-.003.014 0 .025-.003.039a1.513 1.513 0 00-.078.465v11.448c0 .924.818 1.678 1.826 1.678h16.034c1.008 0 1.826-.754 1.826-1.678V8.566a1.744 1.744 0 00-.034-.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoxLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.85 20.338c0 .367-.285.667-.635.667H3.781c-.347 0-.633-.3-.633-.667V8.646c0-.367.286-.666.633-.666h5.417v2.72c0 .23.222.417.496.417h4.286c.274 0 .496-.188.496-.417l-.003-2.72h5.745c.35 0 .636.3.636.666v11.692h-.003zM4.583 3.476a.377.377 0 00.014-.098c0-.213.205-.387.46-.387h4.638l-.44 4.151H3.781c-.084 0-.163.011-.241.023l1.042-3.69zm8.902 4.504v2.302H10.19l-.003-2.302h3.297zm-.594-4.983l.53 4.145h-3.174l.44-4.145h2.204zm6.513.383c0 .034.005.068.017.098l1.072 3.692a1.547 1.547 0 00-.277-.025h-5.801l-.527-4.151h5.06c.251 0 .456.173.456.386zm2.409 4.978a.376.376 0 00-.003-.177l-1.417-4.857c-.031-.65-.67-1.168-1.449-1.168H5.055c-.781 0-1.417.518-1.45 1.168L2.231 8.181c-.003.012 0 .026-.003.037-.045.14-.07.283-.073.428v11.692c0 .83.729 1.505 1.625 1.505h16.437c.896 0 1.625-.676 1.625-1.505V8.646c0-.1-.012-.196-.031-.288z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBoxRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.996 3.25a1.748 1.748 0 011.582.985l.04.102.938 2.968c.128.41.194.837.194 1.267V19A1.75 1.75 0 0119 20.75H5A1.75 1.75 0 013.25 19V8.571c0-.43.066-.856.195-1.266l.862-2.731a1.75 1.75 0 011.69-1.324zm1.254 5.538h-4.5V11a.75.75 0 01-.648.743L14 11.75h-4a.75.75 0 01-.743-.648L9.25 11V8.788h-4.5V19a.25.25 0 00.193.243L5 19.25h14a.25.25 0 00.25-.25V8.788zm-6 0h-2.5v1.462h2.5V8.788zM9.698 4.75H6.003c-.114 0-.213.078-.254.233l-.727 2.305h4.325l.351-2.538zm3.069 0h-1.555l-.352 2.538h2.277l-.37-2.538zm5.233 0h-3.717l.371 2.538h4.323l-.767-2.426-.012-.02a.249.249 0 00-.14-.086L18 4.75z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBrainFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.25 4.605v14.476c0 .207.006.868.003 1.132-.078.851-.644 1.473-1.759 1.473-.988 0-1.658-.398-2.033-1.145a3 3 0 00.748-.35c.53-.337.88-.746 1.044-1.216a.499.499 0 00-.319-.633.514.514 0 00-.647.31c-.09.258-.302.494-.636.706-.313.202-.61.323-.88.289-.019.003-.039.011-.058.014-.017-.003-.037-.008-.053-.008-3.544 0-3.821-3.345-3.821-4.37 0-.406.059-1.706.7-2.779.286.132.602.23.978.26l.117.006c-.014.695.446 1.196 1.017 1.415l.104.036a.45.45 0 00.154.028c.199 0 .37-.134.448-.339.098-.255-.078-.557-.339-.655-.414-.16-.398-.443-.347-.622.916-.32 1.347-1.137 1.426-1.9l.014-.17a.501.501 0 00-.468-.535.506.506 0 00-.55.457l-.013.156c-.059.569-.348 1.233-1.476 1.132-.381-.03-.667-.137-.869-.302-.826-1.118-.896-2.625-.896-3.068 0-1.025.274-4.37 3.907-4.37h.003c.978-.019 1.314.757 1.432 1.096l.058.17a.509.509 0 00.64.328.495.495 0 00.335-.621l-.07-.205c-.246-.692-.81-1.403-1.683-1.658.378-.742 1.045-1.137 2.03-1.137 1.219 0 1.74.94 1.754 1.529.003.216-.006.9.006 1.07zm7.872 7.308c.38.03.67.137.868.303.826 1.114.896 2.621.896 3.067 0 1.025-.274 4.37-3.907 4.37h-.003c-.977.02-1.314-.757-1.434-1.093l-.059-.17a.509.509 0 00-.639-.328.495.495 0 00-.336.621l.07.205c.25.692.81 1.4 1.684 1.655-.376.743-1.045 1.14-2.031 1.14-1.218 0-1.72-.708-1.753-1.529a38.69 38.69 0 000-1.078V3.49C12.475 2.748 13.119 2 14.23 2c.989 0 1.658.398 2.034 1.146-.25.075-.499.19-.748.35-.53.336-.88.745-1.045 1.218-.09.26.053.544.32.63a.514.514 0 00.646-.31c.09-.258.303-.493.636-.706.314-.202.608-.32.877-.289.02-.003.04-.011.059-.014.02 0 .036.009.053.009 3.543 0 3.82 3.344 3.82 4.372 0 .406-.058 1.706-.7 2.779a2.848 2.848 0 00-.977-.26c-.04-.003-.079-.003-.118-.006.014-.695-.445-1.196-1.02-1.415l-.103-.036a.45.45 0 00-.154-.028c-.199 0-.37.134-.448.339-.098.255.078.554.339.655.417.16.4.44.347.622-.916.32-1.347 1.137-1.426 1.9l-.014.17a.501.501 0 00.468.535.506.506 0 00.549-.457l.014-.154c.062-.571.353-1.238 1.482-1.137z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBrainLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.51 11.308c-.575-.426-1.216-.608-1.76-.678.118-.474-.059-.936-.38-1.264-.003-.002-.068-.07-.07-.07-.18-.173-.435-.143-.62.028-.182.171-.154.488.02.667.252.26.17.47.067.605l-.123.008a7.81 7.81 0 00-.348.042 3.872 3.872 0 00-.4.073.452.452 0 00-.347.544c.056.243.31.395.554.339a5.976 5.976 0 01.636-.092c.375-.043 1.67-.096 2.507.786.782 1.02.843 2.426.843 2.835 0 .922-.252 3.908-3.46 3.96h-.005c-.243.032-.51-.078-.798-.262-.3-.191-.496-.407-.577-.64a.47.47 0 00-.588-.282.448.448 0 00-.292.566c0 .003.003.005.003.008.149.426.468.801.947 1.104.196.126.395.221.59.288-.338.698-.949 1.07-1.859 1.07-1.106 0-1.513-1.131-1.591-1.386a37.86 37.86 0 000-.978V5.428c0-.188.006-.89.008-1.129.107-.26.575-1.238 1.586-1.238.905 0 1.515.37 1.854 1.062-.74.257-1.218.874-1.434 1.476l-.064.188a.451.451 0 00.305.565.46.46 0 00.58-.3l.053-.153c.11-.303.493-.995 1.291-.992 3.205.008 3.457 3.04 3.457 3.97-.009.355-.056 1.475-.586 2.43m-9.574 9.63c-.896 0-1.504-.36-1.846-1.038.227-.068.454-.171.678-.317.48-.305.798-.678.947-1.104a.45.45 0 00-.28-.571c-.003 0-.006-.003-.011-.003a.467.467 0 00-.589.283c-.08.233-.274.448-.577.642-.285.184-.554.29-.795.263-.02 0-.037.008-.053.011-.017-.003-.034-.008-.05-.008-3.217 0-3.469-3.037-3.469-3.97 0-.37.056-1.549.636-2.523.258.12.546.21.888.238.037.003.07.003.107.003-.017.63.4 1.086.921 1.285l.093.034a.423.423 0 00.14.025c.179 0 .333-.123.406-.308.09-.233-.073-.504-.308-.594-.378-.146-.362-.4-.314-.569.832-.29 1.224-1.03 1.294-1.725l.014-.154a.457.457 0 00-.423-.487h-.006a.456.456 0 00-.495.414l-.012.143c-.053.515-.316 1.12-1.338 1.028-.348-.028-.608-.126-.79-.275-.751-1.014-.815-2.383-.815-2.784 0-.93.252-3.969 3.546-3.969h.003c.887-.017 1.193.686 1.302.994l.053.154a.465.465 0 00.58.3.449.449 0 00.305-.566l-.064-.185c-.224-.63-.734-1.274-1.53-1.504.342-.675.95-1.033 1.847-1.033 1.106 0 1.512 1.131 1.59 1.386-.002.202-.008.824 0 .978v13.14c0 .187-.005.89-.008 1.129-.098.26-.566 1.238-1.577 1.238M21.014 8.873c0-.79-.2-4.65-4.13-4.857-.442-1.201-1.436-1.86-2.837-1.86-1.042 0-1.689.605-2.064 1.135-.404-.589-1.067-1.135-2.048-1.135-1.4 0-2.395.656-2.837 1.852-3.925.168-4.13 4.07-4.13 4.868 0 .448.065 1.919.85 3.12-.782 1.205-.85 2.678-.85 3.13 0 .79.2 4.65 4.13 4.857.442 1.201 1.437 1.86 2.84 1.86 1.04 0 1.686-.606 2.062-1.135.403.588 1.07 1.135 2.047 1.135 1.398 0 2.392-.653 2.838-1.852 3.927-.165 4.129-4.07 4.129-4.866 0-.448-.065-1.918-.85-3.123.785-1.204.85-2.678.85-3.129"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBrainRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.377 18.552l-.011-.003c-.169 0-.404-.067-.642-.221-.25-.16-.409-.334-.47-.513a.682.682 0 00-.86-.414.655.655 0 00-.423.84c.162.468.501.868 1.01 1.196.132.084.267.154.399.213-.309.47-.807.709-1.513.709-.885 0-1.24-.908-1.325-1.169.003-.226.006-.787 0-.924V5.417c0-.173.006-.795.008-1.058.115-.264.519-1.034 1.317-1.034.711 0 1.202.23 1.507.7-.661.314-1.106.91-1.314 1.488l-.06.182 1.294.395.045-.138c.112-.308.389-.812 1.025-.82h.008c2.846 0 3.154 2.557 3.154 3.658 0 .308-.042 1.221-.431 2.056a3.928 3.928 0 00-1.362-.527 1.561 1.561 0 00-.459-1.196l-.07-.073c-.258-.266-.655-.243-.927.009s-.252.703.006.966c.092.095.112.163.092.227h-.006a5.537 5.537 0 00-.76.115.662.662 0 00-.506.795.675.675 0 00.813.496 3.22 3.22 0 01.288-.053c.098-.011.207-.025.303-.034.341-.036 1.501-.084 2.246.692.714.939.77 2.247.77 2.628.009 1.098-.297 3.613-3.145 3.66m-6.518 1.81c-.698 0-1.18-.224-1.488-.678.157-.064.317-.142.474-.243.51-.328.851-.729 1.01-1.196a.66.66 0 00-.422-.84.68.68 0 00-.86.414c-.062.18-.221.353-.47.513-.239.154-.466.22-.642.218-.031-.003-.059.008-.09.011-.008 0-.017-.003-.022-.003-2.846 0-3.154-2.56-3.154-3.658 0-.322.044-1.31.49-2.176.199.07.414.12.65.145.064.617.501 1.06 1.028 1.255.01.006.106.04.117.042.07.025.14.034.208.034.269 0 .507-.177.61-.448.13-.34-.09-.731-.434-.86-.129-.048-.174-.104-.182-.174.824-.339 1.207-1.115 1.283-1.829l.017-.18a.671.671 0 00-.639-.7.667.667 0 00-.717.625l-.011.12c-.093.888-.82.824-1.062.81-.274-.022-.482-.098-.622-.204-.672-.933-.73-2.194-.73-2.566 0-1.101.307-3.659 3.232-3.659h.005c.636 0 .942.51 1.05.816l.054.162c.092.275.35.443.63.443a.674.674 0 00.65-.888l-.05-.149c-.216-.602-.678-1.21-1.39-1.512.311-.446.796-.675 1.482-.675.885 0 1.241.91 1.325 1.168-.003.226-.006.787 0 .924v12.852c0 .173-.006.792-.008 1.058-.118.258-.521 1.028-1.322 1.028M20.887 8.79c0-2.185-1.065-4.717-4.093-4.958-.49-1.17-1.532-1.83-2.927-1.83-.955 0-1.602.477-2.017.967-.437-.524-1.081-.966-1.991-.966-1.393 0-2.432.655-2.925 1.82-3.011.213-4.095 2.768-4.095 4.97 0 .56.084 1.893.787 3.05-.703 1.16-.787 2.496-.787 3.056 0 2.185 1.064 4.717 4.092 4.96.49 1.169 1.533 1.83 2.928 1.83.955 0 1.602-.476 2.016-.966.437.523 1.082.966 1.992.966 1.392 0 2.431-.655 2.924-1.82 3.014-.214 4.096-2.768 4.096-4.97 0-.56-.084-1.89-.788-3.05.704-1.163.788-2.499.788-3.06"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBriefcaseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.818 16.656v-1.42c3.11-.219 6.104-1 8.028-2.087v7.227c0 .81-.652 1.467-1.456 1.467H3.617a1.463 1.463 0 01-1.457-1.467v-7.418c1.916 1.171 4.913 2.014 8.025 2.26v1.438c0 .347.157.636.434.818.205.131.46.199.787.199h1.2c.319 0 .582-.068.778-.2a.94.94 0 00.434-.817zm1.883-9.48v-.35c0-1.89-1.62-3.428-3.605-3.428h-.185c-1.99 0-3.605 1.538-3.605 3.429v.35H15.7zm4.689 0c.804 0 1.456.66 1.456 1.469v3.044c-1.91 1.384-5.955 2.376-9.767 2.376-3.885 0-8.02-1.09-9.919-2.6v-2.82c0-.81.653-1.468 1.46-1.468h3.456v-.35c0-2.575 2.17-4.667 4.837-4.667h.185c2.667 0 4.838 2.095 4.838 4.667v.35h3.454zm-8.975 9.258v-1.131h1.174v1.131h-1.174z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBriefcaseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.009 20.555a.444.444 0 01-.44.448H3.44a.444.444 0 01-.442-.442v-7.23c1.708 1.14 4.128 1.706 7.79 1.807l-.009.008v1.61c0 .253.076.457.227.608.151.143.35.219.594.219h.804c.252 0 .453-.076.594-.219.15-.15.226-.355.226-.607v-1.611c3.636-.092 6.065-.625 7.782-1.723.003 0 .003 7.132.003 7.132zm-9.19-5.4l.57-.009v.008l-.008 1.586-.762.017-.016-1.594.215-.009zM2.997 8.582a.444.444 0 01.437-.448h17.128c.244 0 .443.196.446.442v3.835c-1.692 1.283-4.356 1.871-8.605 1.908h-.325c-4.558 0-7.356-.633-9.081-2.034V8.583zm5.02-1.866c0-2.042 1.75-3.714 3.896-3.714h.182c2.154 0 3.896 1.672 3.896 3.714v.575H8.017v-.575zm12.548.575H16.83v-.575c0-2.507-2.12-4.557-4.736-4.557h-.182c-2.608 0-4.734 2.05-4.734 4.557v.575H3.44c-.703 0-1.28.574-1.28 1.291v11.972c0 .72.577 1.291 1.28 1.291h17.123a1.28 1.28 0 001.283-1.291V8.583a1.28 1.28 0 00-1.28-1.291z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBriefcaseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.617 12.289c-1.664 1.221-4.306 1.776-8.538 1.776-4.34 0-7.031-.586-8.687-1.891V8.647a.23.23 0 01.23-.224h16.773c.124 0 .222.101.222.224v3.642zm-9.196 4.146h1.173v-1.132h-1.173v1.132zm9.196 3.94c0 .132-.098.23-.222.23H3.62a.229.229 0 01-.23-.23v-6.7c1.583.942 3.723 1.446 6.799 1.586v1.395c0 .347.157.636.429.818.204.131.467.199.787.199H12.6c.328 0 .582-.068.787-.2a.94.94 0 00.434-.817v-1.39c3.059-.123 5.202-.602 6.793-1.512v6.622h.003zM8.303 6.828c0-1.883 1.625-3.429 3.61-3.429h.188c1.986 0 3.602 1.546 3.602 3.429v.355h-7.4v-.355zm12.09.355h-3.46v-.355c0-2.569-2.165-4.667-4.832-4.667h-.187c-2.667 0-4.84 2.098-4.84 4.667v.355H3.618A1.46 1.46 0 002.16 8.645v11.73c0 .81.655 1.471 1.46 1.471h16.772c.804 0 1.454-.658 1.454-1.47V8.645c0-.81-.647-1.463-1.454-1.463z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBroadbandFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.692 4.364a.562.562 0 01.765-.82l.014.014c.736.711 1.109 1.759 1.109 3.114 0 1.35-.373 2.395-1.104 3.107a.561.561 0 01-.781-.804c.507-.493.764-1.266.764-2.3 0-1.033-.257-1.818-.767-2.31zm3.501 2.308c0 1.653-.42 2.897-1.246 3.7a.561.561 0 00.773.813l.008-.008c1.054-1.023 1.589-2.538 1.589-4.505 0-1.972-.538-3.493-1.597-4.515a.561.561 0 00-.779.807c.83.804 1.252 2.05 1.252 3.708zm8.502 10.353v1.373c0 1.028-.278 1.835-.824 2.403-.568.591-1.398.888-2.468.888H5.291c-1.07 0-1.899-.3-2.467-.888C2.277 20.233 2 19.426 2 18.398v-1.373c0-1.028.277-1.834.824-2.403.568-.591 1.397-.888 2.467-.888H6.64V6.672c0-.308.252-.56.56-.56.308 0 .56.252.56.56v7.065h10.642c1.07 0 1.899.3 2.467.888.55.566.827 1.375.827 2.4zM5.966 18.532c.166-.168.25-.397.25-.686 0-.583-.364-.944-.95-.944-.585 0-.95.361-.95.944 0 .289.085.518.25.686.165.168.409.258.7.258s.532-.09.7-.258zm2.74 0c.165-.168.25-.397.25-.686 0-.583-.365-.944-.95-.944-.586 0-.95.361-.95.944 0 .289.084.518.25.686.165.168.408.258.7.258.29 0 .535-.09.7-.258z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBroadbandLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.355 6.273a.28.28 0 01.28.28v7.632l11.188.001c.989 0 1.753.269 2.266.804.496.513.745 1.255.745 2.207v1.639c0 .952-.252 1.695-.745 2.207-.513.535-1.277.804-2.266.804H5.167c-.988 0-1.753-.272-2.266-.804-.493-.512-.745-1.255-.745-2.207v-1.639c0-.952.252-1.694.745-2.207.513-.532 1.278-.804 2.266-.804h1.907l.001-7.633a.28.28 0 01.28-.28zm11.468 8.473H5.167c-.831 0-1.459.213-1.862.633-.39.406-.589 1.017-.589 1.818v1.639c0 .801.2 1.414.589 1.818.403.42 1.03.633 1.862.633h13.656c.832 0 1.46-.213 1.863-.633.389-.406.588-1.017.588-1.818v-1.639c0-.8-.199-1.414-.588-1.818-.404-.42-1.031-.633-1.863-.633zm-13.91 2.605c.406 0 .672.213.669.664 0 .219-.059.381-.168.49-.118.12-.289.177-.501.177-.213 0-.384-.059-.502-.177-.106-.109-.168-.271-.168-.49 0-.454.263-.664.67-.664zm2.437 0c.406 0 .672.213.669.664 0 .219-.059.381-.168.49-.118.12-.289.177-.501.177-.213 0-.384-.059-.502-.177-.106-.109-.168-.271-.168-.49 0-.454.263-.664.67-.664zm5.327-15.115c1.003.967 1.513 2.418 1.513 4.314 0 1.888-.504 3.336-1.502 4.303a.287.287 0 01-.198.08.28.28 0 01-.28-.28c0-.075.03-.148.084-.2.885-.858 1.333-2.172 1.333-3.903 0-1.737-.451-3.05-1.342-3.91a.28.28 0 01-.006-.398.28.28 0 01.398-.006zm-2.249 1.407c.68.655 1.025 1.635 1.025 2.91 0 1.272-.342 2.25-1.02 2.905a.28.28 0 01-.473-.202c0-.076.031-.148.084-.202.563-.546.852-1.389.852-2.501 0-1.112-.289-1.96-.855-2.507a.28.28 0 11.387-.403z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBroadbandRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.199 6.14c.308 0 .56.252.56.56v7.062h10.644c1.07 0 1.9.3 2.468.888.546.566.824 1.375.824 2.403v1.373c0 1.028-.278 1.835-.824 2.403-.568.591-1.4.888-2.468.888H5.291c-1.07 0-1.899-.3-2.467-.888C2.277 20.261 2 19.454 2 18.426v-1.373c0-1.028.277-1.835.824-2.403.568-.591 1.397-.888 2.467-.888h1.347V6.7c0-.308.253-.56.56-.56zm11.204 8.742H5.291c-.753 0-1.31.185-1.66.547-.34.35-.51.896-.51 1.624v1.373c0 .728.17 1.274.51 1.624.35.362.907.547 1.66.547h13.112c.754 0 1.311-.185 1.661-.547.34-.35.51-.896.51-1.624v-1.373c0-.728-.17-1.274-.51-1.624-.35-.362-.907-.547-1.66-.547zM5.266 16.93c.586 0 .95.361.95.944 0 .288-.084.518-.25.686-.165.168-.409.258-.7.258s-.532-.09-.7-.258c-.168-.168-.25-.398-.25-.686 0-.583.365-.944.95-.944zm2.742 0c.586 0 .95.361.95.944 0 .288-.084.518-.25.686-.165.168-.411.258-.7.258-.29 0-.532-.09-.7-.258-.168-.168-.25-.398-.25-.686 0-.583.365-.944.95-.944zm4.706-14.745c1.062 1.022 1.6 2.54 1.6 4.515 0 1.967-.535 3.482-1.589 4.504a.564.564 0 01-.952-.4c0-.151.062-.3.171-.403.826-.804 1.246-2.048 1.246-3.7 0-1.659-.422-2.905-1.254-3.71a.559.559 0 01-.014-.792.559.559 0 01.792-.014zM10.471 3.59c.736.706 1.109 1.754 1.109 3.11 0 1.35-.373 2.394-1.104 3.106a.562.562 0 01-.95-.403c0-.152.062-.298.171-.401.507-.493.765-1.266.765-2.3 0-1.034-.258-1.815-.77-2.305a.561.561 0 01.779-.807z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBugFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.894 4.084c-2.743 0-3.225.6-3.225 1.86 0 .333.042.58.107.77.812-.397 1.837-.596 3.11-.596 1.276 0 2.302.201 3.114.602.064-.19.115-.431.115-.776.003-1.26-.48-1.86-3.221-1.86zm7.585 7.868c.336 0 .61.275.61.617v1.644a.613.613 0 01-.61.616.61.61 0 01-.608-.616v-1.028h-1.224c0 .061.003.115.003.18 0 1.585-.126 2.951-.499 4.06l1.975.609a.62.62 0 01.431.621l-.131 2.477a.612.612 0 01-.608.582h-.034a.614.614 0 01-.577-.647l.107-1.994-1.687-.518c-.832 1.316-2.28 2.05-4.742 2.05-2.473 0-3.921-.74-4.75-2.062l-1.726.53.106 1.994a.612.612 0 01-.577.647h-.033a.614.614 0 01-.608-.582l-.132-2.477a.62.62 0 01.432-.624l2.014-.62c-.367-1.106-.493-2.47-.493-4.05l.002-.179H4.9v1.03a.613.613 0 01-.609.617.615.615 0 01-.61-.616v-1.644c0-.342.274-.617.61-.617h1.871c.079-1.288.295-2.554.863-3.571l-2.428-.745a.617.617 0 01-.432-.625l.132-2.476a.613.613 0 01.639-.583c.336.02.593.308.577.647l-.107 1.995 2.286.703c-.16-.384-.244-.83-.244-1.353 0-1.838.975-2.602 2.322-2.908a.618.618 0 01.031-.829.602.602 0 01.852-.008l.008.008.644.653c.384-.014.765-.017 1.149-.003l.644-.653a.603.603 0 01.854-.005l.006.005a.614.614 0 01.03.824c1.357.3 2.343 1.064 2.343 2.91 0 .516-.082.956-.236 1.334l2.216-.681-.107-1.994a.612.612 0 01.577-.647.614.614 0 01.642.582l.132 2.476a.614.614 0 01-.432.622l-2.39.731c.491.863.771 2.014.866 3.583.006.008 1.88.008 1.88.008zm-7.658-3.294a.61.61 0 00-.608.616v7.933c0 .34.272.616.608.616.336 0 .61-.277.61-.616V9.274a.615.615 0 00-.61-.616z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBugLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.277 19.713c3.871 0 5.112-1.54 5.112-6.347 0-3.017-.504-4.67-1.689-5.524-.764-.555-1.885-.824-3.423-.824-1.549 0-2.678.275-3.445.838-1.168.86-1.667 2.507-1.667 5.51 0 4.806 1.241 6.347 5.112 6.347zm.009-16.03c-3.12 0-3.69.71-3.69 2.108 0 .457.085.807.239 1.087.874-.462 1.997-.7 3.442-.7 1.457 0 2.583.244 3.457.709.157-.283.24-.636.24-1.096 0-1.4-.57-2.109-3.688-2.109zm8.165 8.453c.24 0 .437.185.437.417v1.678a.43.43 0 01-.437.42.429.429 0 01-.437-.42v-1.258h-1.76c.004.132.012.252.012.39 0 1.694-.148 3.14-.608 4.285l2.353.687c.19.056.32.232.308.423l-.14 2.53a.43.43 0 01-.437.397h-.022a.43.43 0 01-.415-.44v-.003l.124-2.201-2.163-.625c-.851 1.37-2.364 2.14-4.991 2.14-2.634 0-4.146-.773-4.998-2.151l-2.201.638.12 2.202a.424.424 0 01-.409.44H4.76a.43.43 0 01-.434-.398l-.14-2.53a.419.419 0 01.31-.422l2.396-.698c-.457-1.14-.602-2.582-.602-4.271 0-.138.008-.258.01-.39H4.542v1.258a.429.429 0 01-.437.42.429.429 0 01-.437-.42v-1.678c0-.232.196-.42.437-.42h2.22c.102-1.787.435-3.067 1.054-3.98l-2.88-.84a.419.419 0 01-.31-.424l.14-2.53a.431.431 0 01.46-.397c.24.011.425.21.414.443l-.12 2.201 2.834.827c.022.005.042.022.062.033l.131-.117c-.252-.418-.39-.928-.39-1.563 0-1.844 1.037-2.583 2.715-2.835l-.25-.238a.408.408 0 01-.016-.577l.017-.017a.454.454 0 01.619 0l.767.737c.233-.009.465-.02.712-.02.24 0 .462.011.689.017l.767-.734a.454.454 0 01.62 0 .41.41 0 010 .594l-.247.235c1.692.25 2.734.989 2.734 2.838 0 .638-.137 1.15-.395 1.57.034.032.07.06.104.09.01-.005.02-.013.033-.016l2.838-.827-.123-2.201a.428.428 0 01.411-.443h.003a.418.418 0 01.46.398l.14 2.53a.42.42 0 01-.309.422l-2.834.827c.627.91.96 2.179 1.056 3.991l2.221.006zm-8.244-3.364c.241 0 .437.187.437.42v8.1a.429.429 0 01-.437.42.429.429 0 01-.437-.42v-8.1c0-.233.196-.42.437-.42z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBugRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.977 19.342c3.484 0 4.546-1.404 4.546-6.009 0-2.882-.446-4.453-1.488-5.246-.675-.516-1.675-.765-3.058-.765-1.395 0-2.404.255-3.079.779-1.03.798-1.468 2.361-1.468 5.232 0 4.605 1.062 6.009 4.547 6.009zm.008-15.286c-2.742 0-3.224.6-3.224 1.86 0 .333.042.58.106.773.813-.4 1.838-.597 3.11-.597 1.277 0 2.302.202 3.115.603.064-.19.114-.432.114-.776.003-1.264-.479-1.863-3.22-1.863zm7.585 7.868c.337 0 .608.278.608.617v1.644a.613.613 0 01-.608.616.613.613 0 01-.607-.616v-1.028h-1.224l.002.176c0 1.586-.126 2.953-.498 4.062l1.975.608a.617.617 0 01.43.622l-.13 2.476a.612.612 0 01-.609.582h-.033a.616.616 0 01-.577-.647l.106-1.994-1.686-.518c-.832 1.316-2.28 2.05-4.745 2.05-2.474 0-3.922-.74-4.75-2.061l-1.726.529.106 1.994a.61.61 0 01-.577.647h-.034a.615.615 0 01-.607-.582l-.132-2.476a.615.615 0 01.431-.622l2.017-.62c-.367-1.106-.493-2.47-.493-4.05 0-.059.003-.12.003-.176H4.991v1.028a.613.613 0 01-.608.616.613.613 0 01-.608-.616V12.54c0-.34.272-.617.608-.617h1.871c.078-1.285.297-2.554.863-3.568L4.688 7.61a.617.617 0 01-.431-.622l.131-2.476a.613.613 0 01.642-.583c.336.02.594.308.577.647L5.5 6.571l2.286.704c-.16-.384-.244-.83-.244-1.356 0-1.838.978-2.602 2.323-2.908a.619.619 0 01.028-.829.602.602 0 01.86 0l.644.653a13.518 13.518 0 011.148 0l.645-.653a.605.605 0 01.862 0c.224.227.23.583.031.824 1.356.3 2.342 1.064 2.342 2.91 0 .515-.081.955-.235 1.333l2.215-.68-.106-1.995a.614.614 0 01.577-.647c.322-.025.624.244.641.583l.132 2.476a.612.612 0 01-.431.622l-2.39.734c.49.862.77 2.014.866 3.582h1.876zM11.912 8.63c.336 0 .608.278.608.616v7.933a.613.613 0 01-.608.616.613.613 0 01-.608-.616V9.246a.61.61 0 01.608-.616z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBusFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.51 12.052c-2.112-2.025-5.448-1.897-5.594-1.888h-.465V5.735h1.053c.205 0 5.006.087 5.006 6.171v.146zm-4.135 6.025c-1.26 0-1.899-.644-1.899-1.913 0-1.269.639-1.913 1.9-1.913 1.26 0 1.899.644 1.899 1.913 0 1.269-.64 1.913-1.9 1.913zM8.86 10.164h4.39V5.735H8.86v4.429zm-1.992 7.913c-1.26 0-1.899-.644-1.899-1.913 0-1.269.639-1.913 1.9-1.913 1.26 0 1.899.644 1.899 1.913 0 1.269-.64 1.913-1.9 1.913zm-3.636-7.913v-3.33c0-.258.13-.538.342-.754.216-.219.49-.345.748-.345h3.336v4.429H3.232zm16.527-3.82c-1.807-1.813-4.174-1.822-4.255-1.819H4.32c-.574 0-1.16.255-1.6.698-.442.442-.694 1.03-.694 1.613v8.454c0 .58.252 1.168.695 1.61.356.36.804.58 1.308.662.445 1.09 1.448 1.728 2.838 1.728 1.375 0 2.366-.628 2.82-1.692h3.863c.454 1.064 1.445 1.692 2.82 1.692 1.376 0 2.368-.628 2.821-1.692h.225c.574 0 1.16-.255 1.599-.7.44-.443.692-1.031.692-1.61v-3.382c.008-2.39-.65-4.26-1.947-5.563z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBusLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.724 4.595c.2.009 2.454.06 4.183 1.808 1.283 1.3 1.936 3.174 1.936 5.575v3.476c0 .54-.239 1.092-.65 1.51-.412.417-.953.658-1.488.658h-.35c-.398 1.109-1.367 1.74-2.756 1.74-1.392 0-2.359-.634-2.76-1.74H9.653c-.4 1.109-1.37 1.74-2.76 1.74-1.397 0-2.369-.645-2.764-1.768a2.187 2.187 0 01-1.322-.63c-.414-.418-.65-.97-.65-1.51v-8.69c0-.543.238-1.095.65-1.512.412-.42.955-.658 1.488-.658zm.872 9.581c-1.4 0-2.143.754-2.143 2.177 0 1.426.742 2.176 2.143 2.176 1.403 0 2.143-.753 2.143-2.176s-.742-2.177-2.143-2.177zm-9.703 0c-1.4 0-2.143.754-2.143 2.177 0 1.426.742 2.176 2.143 2.176 1.403 0 2.143-.753 2.143-2.176s-.742-2.177-2.143-2.177zm8.41-2.953h-.105l-.067.001H2.977v4.23c0 .322.148.658.409.921.165.166.358.275.577.342-.011-.12-.028-.235-.028-.364 0-1.882 1.106-3.006 2.96-3.006 1.855 0 2.962 1.124 2.962 3.006 0 .154-.02.294-.034.437h3.849c-.014-.143-.034-.283-.034-.437 0-1.882 1.106-3.006 2.96-3.006 1.855 0 2.962 1.124 2.962 3.006 0 .154-.02.294-.034.437h.18c.319 0 .65-.151.91-.415.257-.263.409-.6.409-.921v-1.306c-1.296-2.74-4.892-2.92-5.722-2.925zm.408-5.797h-1.28v4.969h.68c.163-.009 3.866-.157 5.914 2.244v-.661c0-6.471-5.098-6.552-5.314-6.552zm-7.81 0h-3.61c-.317 0-.647.15-.908.414-.258.264-.409.6-.409.925v3.63h4.927v-4.97zm5.712 0h-4.89v4.969h4.89v-4.97z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBusRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.56 4.526c.439.014 2.534.175 4.171 1.817 1.297 1.303 1.955 3.174 1.958 5.56v3.381c0 .583-.252 1.171-.692 1.614-.442.445-1.025.7-1.602.7h-.224c-.454 1.064-1.446 1.692-2.82 1.692-1.376 0-2.368-.628-2.822-1.692H9.664c-.454 1.064-1.446 1.692-2.82 1.692-1.393 0-2.396-.642-2.841-1.731a2.332 2.332 0 01-1.308-.658C2.252 16.455 2 15.867 2 15.287v-8.45c0-.583.252-1.172.695-1.614.44-.443 1.022-.698 1.6-.698zm.787 9.725c-1.26 0-1.899.644-1.899 1.913 0 1.269.639 1.913 1.9 1.913 1.26 0 1.898-.644 1.898-1.913 0-1.269-.638-1.913-1.899-1.913zm-9.507 0c-1.26 0-1.899.644-1.899 1.913 0 1.269.639 1.913 1.9 1.913 1.26 0 1.898-.644 1.898-1.913 0-1.269-.638-1.913-1.899-1.913zm8.255-2.875H3.204v3.911c0 .26.124.535.342.754.056.058.132.086.196.128 0-1.935 1.188-3.134 3.101-3.134s3.101 1.199 3.101 3.126c0 .078-.014.149-.017.224h3.34c-.006-.075-.02-.146-.02-.224 0-1.927 1.19-3.126 3.103-3.126 1.913 0 3.101 1.199 3.101 3.126 0 .076-.014.143-.017.219.244-.012.507-.135.709-.34.216-.218.339-.492.339-.753v-1.216c-1.227-2.504-4.58-2.687-5.387-2.695zm.42-5.64h-1.092v4.428h.465c.146-.009 3.482-.135 5.594 1.888v-.146c0-5.87-4.47-6.155-4.968-6.17zm-7.885 0H4.294c-.258 0-.532.125-.748.344-.215.216-.342.498-.342.753v3.33H7.63V5.736zm5.591 0h-4.39v4.428h4.39V5.735z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.47 18.378c-.5 0-.901.143-1.193.423-.305.294-.46.706-.46 1.23s.155.935.46 1.23c.292.28.695.422 1.194.422.498 0 .902-.142 1.193-.423.305-.294.46-.705.46-1.23 0-.523-.155-.935-.46-1.229-.291-.28-.692-.423-1.193-.423zm5.463 0c-.502 0-.902.143-1.194.423-.305.294-.459.706-.459 1.23s.154.935.46 1.23c.29.28.694.422 1.193.422.498 0 .902-.142 1.193-.423.303-.294.46-.705.46-1.23 0-.523-.155-.935-.46-1.229-.291-.28-.692-.423-1.193-.423zm5.613-11.53a.557.557 0 00-.442-.215h-3.401v-1.19c0-.477-.42-.846-1.252-1.096-.653-.196-1.515-.305-2.423-.305-.908 0-1.77.11-2.423.305-.832.25-1.252.62-1.252 1.096v1.19H7.098c-.216-1.255-.39-2.25-.44-2.521-.218-1.218-1.367-2.1-2.736-2.1h-1.35a.562.562 0 00-.56.56c0 .308.251.56.56.56h1.352c.813 0 1.513.507 1.633 1.176a1671.9 1671.9 0 011.636 9.527c.163 1.025.544 1.829 1.138 2.389.565.535 1.31.815 2.148.815h6.255c.829 0 1.532-.283 2.092-.84.53-.53.916-1.286 1.182-2.308.118-.457.507-2.017.883-3.53.31-1.243.602-2.42.756-3.028a.565.565 0 00-.1-.484zm-9.532-1.744c.555-.143 1.269-.222 2.011-.222.742 0 1.457.079 2.011.222.513.131.72.271.796.339l-.003.002-.003.003-.008.006-.003.003a.155.155 0 01-.022.016l-.003.003-.011.009-.003.002-.011.009-.006.003-.011.008-.003.003a.234.234 0 00-.034.022l-.005.003-.014.008-.009.003-.014.009-.008.005-.017.009-.005.002-.023.012-.005.002-.02.012-.008.005-.017.009-.011.005-.017-.003-.011.006-.023.008-.008.003-.034.014-.011.003-.025.008-.014.006-.023.008-.014.006-.025.008-.014.006-.03.011-.012.003-.042.014-.014.006-.03.008-.018.006-.03.008-.02.006-.034.008-.016.006-.054.014c-.554.143-1.269.221-2.01.221-.743 0-1.457-.078-2.012-.221l-.053-.014-.017-.006-.034-.008-.02-.006-.03-.008-.017-.006-.03-.008-.015-.006-.042-.014-.01-.003-.032-.01-.014-.007-.025-.008-.014-.006-.022-.008-.014-.006-.026-.008-.01-.003-.034-.014-.009-.003-.022-.008-.011-.006-.017-.008-.011-.006-.017-.008-.009-.006-.02-.008-.005-.003-.025-.011-.006-.003-.016-.008-.009-.006-.014-.008-.008-.003-.014-.008-.006-.003c-.011-.009-.025-.014-.034-.023L11.3 5.5l-.012-.009-.005-.003-.011-.008-.003-.003-.011-.008-.003-.003-.023-.017-.002-.003-.009-.005-.003-.003-.002-.003c.078-.061.285-.199.798-.33zm4.849 8.126c-.037.042-.213.21-.827.37-.554.142-1.269.22-2.01.22-.743 0-1.457-.078-2.012-.22-.613-.157-.787-.326-.826-.37v-1.628l.01.006c.023.011.048.02.07.028l.023.008.09.034.011.003c.028.01.056.02.084.028l.025.008c.034.011.065.022.098.03.653.197 1.516.306 2.423.306.908 0 1.773-.106 2.426-.302.034-.012.067-.02.098-.031l.025-.009c.028-.008.056-.02.084-.028l.012-.002c.03-.012.058-.023.09-.034l.022-.008c.025-.009.047-.02.07-.028l.01-.006.004 1.625zm0-2.605l-.006.005-.003.003v.003l-.005.005-.003.003-.006.006-.003.003-.005.005-.003.003-.006.006-.002.002-.006.006-.006.003-.008.005-.006.003-.008.006-.006.003-.008.005-.006.006-.008.005-.008.006-.009.006-.008.005-.011.006-.009.005-.011.006-.008.006-.012.005-.01.006-.012.005-.011.006-.014.006-.014.005-.014.006-.014.005-.014.006-.014.008-.014.006-.017.008-.017.006-.017.008-.016.006-.02.009-.017.005-.02.009-.02.005-.022.009-.02.008-.022.008-.02.009-.022.008-.02.006-.024.008-.028.009-.028.008-.026.008-.028.009-.033.008-.023.006-.056.014c-.554.143-1.269.221-2.01.221-.743 0-1.457-.078-2.012-.221l-.056-.014-.022-.006-.034-.008-.028-.009-.025-.008-.028-.008-.023-.006-.025-.008-.02-.006-.022-.008-.02-.009-.022-.008-.02-.009-.022-.008-.02-.006-.02-.008-.016-.006-.02-.008-.016-.006-.017-.008-.017-.006-.017-.008-.014-.006-.014-.008-.014-.006-.014-.005-.014-.006-.014-.006-.014-.005-.011-.006-.011-.005-.011-.006-.012-.006-.01-.005-.012-.006-.009-.005-.01-.006-.01-.006-.01-.005-.009-.006-.008-.005-.006-.006-.008-.006-.006-.002-.008-.006-.006-.003-.008-.005-.003-.003-.006-.006-.002-.003-.006-.005-.003-.003-.005-.006-.003-.002-.006-.006-.003-.003-.005-.005v-.003l-.003-.003-.003-.003-.003-.003v-1.63l.012.006a.6.6 0 00.07.028l.022.008.09.034.01.003c.029.01.057.02.085.028l.025.008c.034.011.065.022.098.03.653.197 1.516.306 2.426.306.91 0 1.767-.106 2.42-.302.034-.012.067-.02.098-.031l.025-.009c.028-.008.056-.02.084-.028l.012-.002c.03-.012.058-.023.09-.034l.022-.008c.025-.009.047-.02.07-.028l.01-.006.004 1.625zm0-2.605l-.006.005-.003.003v.003l-.005.005-.003.003-.006.006-.003.003-.005.005-.003.003-.006.006-.002.002-.006.006-.006.003-.008.005-.006.003-.008.006-.006.003-.008.005-.006.006-.008.005-.008.006-.009.006-.008.005-.011.006-.009.005-.011.006-.008.006-.012.005-.01.006-.012.005-.011.006-.014.006-.014.005-.014.006-.014.005-.014.006-.014.008-.014.006-.017.008-.017.006-.017.008-.016.006-.02.008-.017.006-.02.008-.02.006-.022.008-.02.009-.022.008-.02.009-.022.008-.02.006-.024.008-.023.006-.028.008-.025.009-.028.008-.034.008-.022.006-.056.014c-.555.143-1.269.221-2.011.221-.743 0-1.457-.078-2.011-.221l-.056-.014-.023-.006-.033-.008-.028-.008-.026-.009-.028-.008-.022-.006-.025-.008-.02-.006-.022-.008-.02-.009-.022-.008-.02-.009-.022-.008-.02-.006-.02-.008-.016-.006-.02-.008-.017-.006-.017-.008-.016-.006-.017-.008-.014-.006-.014-.008-.014-.006-.014-.005-.014-.006-.014-.005-.014-.006-.011-.006-.012-.005-.01-.006-.012-.005-.011-.006-.012-.006-.008-.005-.011-.006-.009-.005-.01-.006-.01-.006-.008-.005-.005-.006-.009-.005-.005-.003-.009-.006-.005-.003-.009-.005-.002-.003-.006-.006-.003-.002-.005-.006-.003-.003-.006-.005-.003-.003-.005-.006-.003-.003-.006-.005v-.003l-.002-.003-.003-.003-.003-.002V6.39l.011.005c.023.008.048.02.07.028l.023.008c.028.012.059.023.09.034l.01.003c.029.011.057.02.085.028l.025.008c.033.011.064.023.098.031.652.196 1.515.305 2.426.305.91 0 1.77-.109 2.423-.305l.098-.03.025-.01.084-.027.011-.003.09-.034.022-.008c.025-.008.048-.02.07-.028l.011-.006-.005 1.63z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.63 19.089c.87 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.872 0-1.373-.501-1.373-1.372 0-.872.501-1.373 1.373-1.373zm5.462 0c.871 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.871 0-1.373-.501-1.373-1.372 0-.872.502-1.373 1.373-1.373zm-5.462.56c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zm5.462 0c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zM4.075 2.156c.588 0 1.16.185 1.608.524.456.342.759.82.854 1.347.057.32.265 1.552.514 3.045h3.59V5.598c0-.866 1.835-1.26 3.538-1.26 1.697 0 3.525.391 3.537 1.25v1.485l3.838.001a.28.28 0 01.272.35c-.154.61-.446 1.784-.757 3.028-.208.84-.421 1.696-.59 2.369l-.094.38-.198.78c-.252.975-.616 1.69-1.106 2.183-.507.498-1.143.753-1.897.753H10.63c-.765 0-1.443-.255-1.956-.74-.546-.515-.899-1.263-1.053-2.226-.066-.415-.386-2.35-.727-4.401l-.172-1.029a825.1 825.1 0 00-.74-4.397 1.61 1.61 0 00-.638-.997 2.103 2.103 0 00-1.269-.412H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.639zM17.716 13.42c0 .865-1.831 1.257-3.537 1.257-1.703 0-3.538-.395-3.538-1.26V7.632H7.144c.433 2.594.947 5.694 1.03 6.233.253 1.608 1.127 2.496 2.455 2.496h6.554c.608 0 1.098-.196 1.499-.597.414-.414.737-1.062.96-1.924.086-.326.31-1.232.572-2.279l.123-.491.062-.25.126-.504c.258-1.037.504-2.028.67-2.68l-3.48-.002v5.786zm-.56-1.883a3.192 3.192 0 01-.158.077l.158-.077c-.074.04-.155.079-.241.114l-.057.022c-.12.048-.25.09-.39.13l-.07.018-.116.03-.068.015c-.151.035-.31.065-.473.09l-.035.006a8.742 8.742 0 01-.712.08 10.906 10.906 0 01-1.068.027l.253.003a11.108 11.108 0 01-1.025-.048 8.849 8.849 0 01-.514-.064l-.019-.003a6.8 6.8 0 01-.477-.09l-.067-.017a2.837 2.837 0 01-.117-.028l-.069-.02a3.844 3.844 0 01-.392-.129l-.05-.021a2.26 2.26 0 01-.248-.115v1.883c0 .039.135.238.754.423.588.176 1.378.274 2.224.274.846 0 1.633-.098 2.224-.274.622-.188.753-.387.753-.423v-1.883zM11.201 8.93v1.883c0 .039.135.238.754.423.588.179 1.378.277 2.224.277.846 0 1.633-.098 2.224-.275.622-.187.753-.386.753-.422V8.932c-.308.167-.724.294-1.192.381l-.074.013-.107.02-.13.019a8.626 8.626 0 01-.659.072 10.926 10.926 0 01-1.068.027l.253.003a11.1 11.1 0 01-1.025-.048 8.932 8.932 0 01-.682-.092 6.627 6.627 0 01-.458-.097 4.653 4.653 0 01-.394-.118l-.042-.015a2.763 2.763 0 01-.373-.164c0-.002-.002-.003-.004-.004zm0-2.605v1.883c0 .039.135.238.754.423.588.176 1.378.277 2.224.277.846 0 1.633-.098 2.224-.275.622-.187.753-.386.753-.423V6.327c-.672.364-1.854.535-2.977.535-.979 0-2-.132-2.693-.406-.005-.004-.012-.007-.018-.01a2.33 2.33 0 01-.267-.122zm2.978-1.423c-.843 0-1.633.098-2.224.275-.572.173-.73.356-.751.414l-.003.012c0 .039.135.238.754.423.588.176 1.378.274 2.224.274.846 0 1.633-.098 2.224-.274.61-.184.748-.38.753-.424v-.006c-.023-.066-.182-.249-.753-.422-.591-.174-1.378-.272-2.224-.272z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.476 18.37c.499 0 .902.143 1.193.423.306.294.46.706.46 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm5.462 0c.499 0 .902.143 1.194.423.302.294.459.706.459 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm-5.462 1.12c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .532-.124.532-.533 0-.409-.123-.532-.532-.532zm5.462 0c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .533-.124.533-.533 0-.409-.124-.532-.533-.532zM3.924 2.011c1.367 0 2.519.883 2.737 2.101.049.272.221 1.267.438 2.52h3.248v-1.19a.429.429 0 01.005-.08l-.005.078c0-.476.42-.846 1.252-1.095.653-.197 1.516-.306 2.423-.306.908 0 1.77.11 2.423.306.743.222 1.158.541 1.238.946a.476.476 0 01.02.152v1.192h3.4a.562.562 0 01.544.698c-.154.611-.445 1.782-.756 3.026l-.126.504-.063.25-.122.493c-.262 1.048-.487 1.955-.574 2.285-.267 1.025-.653 1.778-1.182 2.308-.558.557-1.261.84-2.09.84h-6.258c-.837 0-1.58-.283-2.148-.815-.591-.557-.975-1.361-1.138-2.39-.128-.82-1.45-8.492-1.635-9.526-.12-.672-.821-1.176-1.633-1.176h-1.35a.562.562 0 01-.56-.56.56.56 0 01.56-.56h1.352zm13.78 11.247c0 .476-.421.846-1.253 1.095-.653.199-1.515.305-2.426.305-.91 0-1.77-.109-2.426-.305-.831-.25-1.252-.62-1.252-1.095V7.753H7.293l.133.773.118.685c.353 2.052.69 4.027.759 4.45.123.776.389 1.361.798 1.748.358.339.823.513 1.378.513h6.255c.683 0 1.653-.239 2.188-2.311.117-.451.504-2.012.882-3.521.216-.866.423-1.7.583-2.334h-2.685l.001 5.502zm-.841-1.656a4.24 4.24 0 01-.412.149c-.653.196-1.515.305-2.423.305-.908 0-1.77-.11-2.426-.305a4.005 4.005 0 01-.412-.149l-.002 1.628c.036.042.213.21.826.37.555.142 1.269.22 2.011.22.743 0 1.457-.078 2.011-.22.614-.157.79-.325.827-.37v-1.628zm0-2.608l-.01.006c-.073.03-.15.06-.23.088l-.172.055c-.653.196-1.515.305-2.423.305h-.003c-.91 0-1.77-.11-2.426-.305a3.863 3.863 0 01-.41-.147l-.001 1.623c.033.042.207.21.826.37.555.143 1.269.221 2.011.221.743 0 1.457-.078 2.011-.221.62-.16.793-.33.827-.37V8.994zm0-2.605a4.24 4.24 0 01-.412.149c-.653.196-1.515.305-2.423.305-.908 0-1.77-.11-2.423-.305l-.118-.04-.06-.018a4.01 4.01 0 01-.02-.007l.198.065a3.94 3.94 0 01-.4-.143l-.012-.006-.005 1.625c.033.042.207.21.826.37.555.143 1.269.221 2.011.221.743 0 1.457-.078 2.011-.221.62-.16.793-.33.827-.37V6.389zm-2.838-1.51c-.742 0-1.456.079-2.011.222-.513.134-.72.272-.796.339.059.052.195.147.489.248a3.655 3.655 0 00.162.051l.145.04c.555.143 1.269.221 2.011.221.743 0 1.457-.078 2.011-.221a4.46 4.46 0 00.386-.12l.094-.037a1.92 1.92 0 00.108-.05 1.187 1.187 0 00.208-.132c-.076-.067-.283-.205-.796-.34-.554-.142-1.268-.22-2.01-.22z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDevicesFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.47 18.378c.502 0 .903.143 1.194.423.305.294.46.706.46 1.23s-.155.935-.46 1.23c-.291.28-.695.422-1.193.422-.499 0-.902-.142-1.194-.423-.305-.294-.46-.705-.46-1.23 0-.523.155-.935.46-1.229.292-.28.692-.423 1.194-.423zm5.463 0c.501 0 .902.143 1.193.423.305.294.46.706.46 1.23s-.157.935-.46 1.23c-.291.28-.695.422-1.193.422-.499 0-.902-.142-1.194-.423-.305-.294-.459-.705-.459-1.23 0-.523.154-.935.46-1.229.29-.28.691-.423 1.193-.423zm-.037-16.372c1.21 0 1.824.619 1.824 1.843v2.784h3.384a.557.557 0 01.543.7c-.154.611-.448 1.785-.756 3.028l-.59 2.368-.095.38c-.09.355-.158.63-.198.782-.266 1.022-.652 1.778-1.182 2.308-.56.557-1.263.84-2.092.84h-6.255c-.838 0-1.583-.28-2.148-.815-.594-.56-.975-1.364-1.138-2.39-.14-.89-1.484-8.68-1.636-9.526-.12-.67-.82-1.176-1.633-1.176H2.571a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56h1.35c1.37 0 2.519.882 2.737 2.1.05.272.224 1.266.44 2.521h3.227V3.849c0-1.205.63-1.843 1.823-1.843zm.003.84h-3.75c-.726 0-.984.26-.984 1.003v7.38c0 .76.241 1.003.983 1.003H15.9c.745 0 .983-.243.983-1.002V3.849c0-.76-.24-1.003-.983-1.003zm-1.877 7.314c.359 0 .591.187.589.59 0 .197-.054.34-.149.438-.104.106-.255.156-.44.156s-.336-.05-.44-.156c-.095-.098-.148-.244-.148-.437 0-.404.23-.591.588-.591z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDevicesLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.63 19.089c.87 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.872 0-1.373-.501-1.373-1.372 0-.872.501-1.373 1.373-1.373zm5.462 0c.871 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.871 0-1.373-.501-1.373-1.372 0-.872.502-1.373 1.373-1.373zm-5.462.56c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zm5.462 0c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zM4.075 2.156c.588 0 1.16.185 1.608.524.456.342.759.82.854 1.347.057.32.265 1.552.514 3.045h3.567V3.858c0-1.131.566-1.703 1.684-1.703h3.75c1.132 0 1.684.558 1.684 1.703v3.215l3.818.001a.28.28 0 01.272.35c-.154.61-.446 1.784-.757 3.028-.208.84-.421 1.696-.59 2.369l-.094.38-.198.78c-.252.975-.616 1.69-1.106 2.183-.507.498-1.143.753-1.897.753H10.63c-.765 0-1.443-.255-1.956-.74-.546-.515-.899-1.263-1.053-2.226-.066-.415-.386-2.35-.727-4.401l-.172-1.029a825.1 825.1 0 00-.74-4.397 1.61 1.61 0 00-.638-.997 2.103 2.103 0 00-1.269-.412H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.639zm6.543 5.476H7.145c.433 2.594.947 5.694 1.03 6.233.253 1.608 1.127 2.496 2.455 2.496h6.554c.608 0 1.098-.196 1.499-.597.414-.414.737-1.062.96-1.924.086-.326.31-1.232.572-2.279l.123-.491.062-.25.126-.504c.258-1.037.504-2.028.67-2.68l-3.46-.002v3.755c-.003 1.148-.552 1.706-1.683 1.706h-3.751c-1.132 0-1.684-.558-1.684-1.703v-3.76zm5.435-4.916h-3.751c-.807 0-1.123.323-1.123 1.143v7.53c0 .423.084.714.255.888.17.173.453.255.868.255h3.75c.415 0 .7-.084.869-.255.168-.171.255-.465.255-.888v-7.53c0-.834-.305-1.143-1.123-1.143zm-1.877 7.606c.358 0 .59.187.588.59 0 .197-.053.34-.148.438-.104.106-.255.156-.44.156s-.336-.05-.44-.156c-.095-.099-.148-.244-.148-.437 0-.404.23-.591.588-.591z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyDevicesRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.476 18.37c.499 0 .902.143 1.193.423.306.294.46.706.46 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm5.462 0c.499 0 .902.143 1.194.423.302.294.459.706.459 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm-5.462 1.12c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .532-.124.532-.533 0-.409-.123-.532-.532-.532zm5.462 0c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .533-.124.533-.533 0-.409-.124-.532-.533-.532zM15.9 2.006c1.21 0 1.824.619 1.824 1.843v2.787h3.38a.562.562 0 01.544.697c-.154.611-.445 1.782-.756 3.026l-.189.755-.182.732-.22.883-.095.38c-.09.356-.16.63-.2.782-.266 1.025-.652 1.778-1.181 2.308-.558.557-1.261.84-2.09.84h-6.258c-.837 0-1.58-.283-2.148-.815-.591-.557-.975-1.361-1.138-2.39l-.012-.076-.062-.377c-.126-.749-.374-2.201-.637-3.735l-.114-.66c-.36-2.095-.72-4.174-.81-4.678-.12-.672-.821-1.176-1.633-1.176h-1.35a.562.562 0 01-.56-.56.56.56 0 01.56-.56h1.352c1.367 0 2.519.882 2.737 2.1.049.272.221 1.267.438 2.52h3.225V3.85c0-1.208.631-1.843 1.824-1.843H15.9zm-5.575 5.747H7.293c.428 2.481.926 5.384 1.01 5.908.123.776.389 1.361.798 1.748.358.339.823.513 1.378.513h6.255c.683 0 1.653-.239 2.188-2.311l.197-.778.094-.38.465-1.862.126-.504c.216-.866.423-1.7.583-2.33l-2.665-.001v3.474c-.002 1.224-.616 1.846-1.823 1.846h-3.75c-1.21 0-1.824-.62-1.824-1.844v-3.48zM15.9 2.846h-3.75c-.726 0-.984.263-.984 1.003v7.38c0 .76.238 1.003.983 1.003H15.9c.742 0 .983-.243.983-1.002V3.849c0-.76-.238-1.003-.983-1.003zm-1.877 7.314c.359 0 .591.187.589.59 0 .197-.054.34-.149.438-.103.106-.255.157-.44.157-.184 0-.336-.05-.44-.157-.095-.098-.148-.244-.148-.437 0-.404.23-.591.588-.591z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyHomeProductsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.476 18.37c.499 0 .902.143 1.193.423.306.294.46.706.46 1.23 0 .523-.154.935-.46 1.229-.288.28-.691.423-1.193.423-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm5.462 0c.499 0 .902.143 1.194.423.302.294.459.706.459 1.23 0 .523-.154.935-.46 1.229-.288.28-.691.423-1.193.423-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zM3.924 2.01c1.367 0 2.519.883 2.737 2.101.049.272.222 1.267.439 2.52l3.034.001h.014l3.474-3.65a.557.557 0 01.406-.173c.154 0 .3.064.406.173l.938.989v-.056c0-.308.253-.56.56-.56h1.64c.307 0 .56.252.56.56v2.752a.555.555 0 01.179-.03h2.793a.562.562 0 01.543.698c-.154.61-.445 1.784-.756 3.028l-.59 2.369-.095.38-.043.17-.075.297-.08.314c-.266 1.025-.652 1.778-1.182 2.308-.56.554-1.263.837-2.092.837h-6.258c-.837 0-1.58-.283-2.148-.815-.591-.557-.975-1.361-1.138-2.39-.14-.89-1.484-8.683-1.635-9.526-.12-.672-.821-1.176-1.633-1.176h-1.35a.562.562 0 01-.56-.56.56.56 0 01.56-.56h1.352zm10.104 2.174l-3.89 4.09h.333c.308 0 .56.252.56.56v3.806h5.98V8.83c0-.307.252-.56.56-.56h.336l-.742-.78a.561.561 0 01-.154-.387V4.476h-.518v.902a.562.562 0 01-.966.387l-1.499-1.58z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyHomeProductsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.63 19.089c.87 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.872 0-1.373-.501-1.373-1.372 0-.872.501-1.373 1.373-1.373zm5.462 0c.871 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.871 0-1.373-.501-1.373-1.372 0-.872.502-1.373 1.373-1.373zm-5.462.56c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zm5.462 0c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zM4.075 2.156c.588 0 1.16.185 1.608.524.456.342.759.82.854 1.347.057.32.265 1.552.514 3.045h3.338l3.571-3.753a.303.303 0 01.443 0l1.378 1.453v-.697c0-.168.137-.305.305-.305h1.639c.168 0 .305.137.305.305v3h3.524a.28.28 0 01.272.35c-.154.61-.446 1.784-.757 3.028-.208.84-.421 1.696-.59 2.369l-.094.38-.198.78c-.252.975-.616 1.69-1.106 2.183-.507.498-1.143.753-1.897.753H10.63c-.765 0-1.443-.255-1.956-.74-.546-.515-.899-1.263-1.053-2.226-.066-.415-.386-2.35-.727-4.401l-.172-1.029a825.1 825.1 0 00-.74-4.397 1.61 1.61 0 00-.638-.997 2.103 2.103 0 00-1.269-.412H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.639zm15.51 6.625a.305.305 0 01-.221.515H18.03v3.519c0 .54-.31.851-.851.851H11.17c-.54 0-.851-.31-.851-.851V9.296H8.985a.306.306 0 01-.22-.515l1.09-1.149h-2.71c.433 2.594.947 5.694 1.03 6.233.253 1.608 1.127 2.496 2.455 2.496h6.554c.608 0 1.098-.196 1.499-.597.414-.414.737-1.062.96-1.924.086-.326.31-1.232.572-2.279l.123-.491.062-.25.126-.504c.258-1.037.504-2.028.67-2.68l-2.699-.002 1.088 1.147zM14.18 3.974L10.893 7.43a.282.282 0 01-.175.186l-1.021 1.07h.927c.168 0 .305.137.305.305v3.824c0 .198.042.24.241.24h6.009c.199 0 .24-.042.24-.24V8.99c0-.168.138-.305.306-.305h.927l-1.148-1.213a.306.306 0 01-.084-.21V4.38h-1.028v1.157a.306.306 0 01-.527.21L14.18 3.974z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyHomeProductsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.476 18.37c.499 0 .902.143 1.193.423.306.294.46.706.46 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm5.462 0c.499 0 .902.143 1.194.423.302.294.459.706.459 1.23 0 .523-.154.935-.46 1.23-.288.28-.691.422-1.193.422-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.291-.28.695-.422 1.193-.422zm-5.462 1.12c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .532-.124.532-.533 0-.409-.123-.532-.532-.532zm5.462 0c-.409 0-.532.123-.532.532 0 .41.123.533.532.533.41 0 .533-.124.533-.533 0-.409-.124-.532-.533-.532zM3.924 2.011c1.367 0 2.519.883 2.737 2.101.049.272.221 1.267.438 2.52l3.035.001h.014l3.474-3.65a.557.557 0 01.406-.173c.154 0 .3.064.406.173l.939.989v-.056c0-.308.252-.56.56-.56h1.638c.309 0 .56.252.56.56v2.75a.555.555 0 01.183-.03h2.79a.562.562 0 01.543.697c-.154.611-.445 1.782-.756 3.026l-.126.504c-.335 1.342-.652 2.624-.76 3.028-.266 1.025-.652 1.778-1.181 2.308-.558.557-1.261.84-2.09.84h-6.258c-.837 0-1.58-.283-2.148-.815-.591-.557-.975-1.361-1.138-2.39-.128-.82-1.45-8.492-1.635-9.526-.12-.672-.821-1.176-1.633-1.176h-1.35a.562.562 0 01-.56-.56.56.56 0 01.56-.56h1.352zm15.692 6.434a.561.561 0 01-.406.947h-1.078v3.263c0 .681-.426 1.107-1.107 1.107h-6.008c-.684 0-1.107-.423-1.107-1.107V9.392H8.832a.562.562 0 01-.406-.947l.657-.692h-1.79l.133.773.118.685c.353 2.052.69 4.027.759 4.45.123.776.389 1.361.798 1.748.358.339.823.513 1.378.513h6.255c.683 0 1.653-.239 2.188-2.311.085-.326.31-1.23.57-2.277l.123-.492.126-.503.063-.252c.216-.866.423-1.7.583-2.33h-1.424l.653.688zm-5.588-4.26l-3.89 4.09h.333c.308 0 .56.252.56.56v3.806h5.98v-3.81c0-.307.252-.56.56-.56h.337l-.743-.78a.561.561 0 01-.154-.387V4.476h-.518v.902a.562.562 0 01-.966.387l-1.499-1.58z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyPlansFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.664 18.804c.305.294.46.706.46 1.23 0 .523-.155.935-.46 1.23-.291.28-.695.422-1.193.422-.499 0-.902-.143-1.194-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.292-.28.695-.422 1.194-.422.498 0 .902.143 1.193.423zm4.269-.423c-.502 0-.902.143-1.194.423-.305.294-.459.706-.459 1.23 0 .523.154.935.46 1.23.29.28.694.422 1.193.422.498 0 .902-.143 1.193-.423.303-.294.46-.706.46-1.23 0-.523-.155-.935-.46-1.23-.291-.28-.692-.422-1.193-.422zM14.58 2.135l.03.02-.03-.02zm-.23-.082h.04-.04zm.083.013l.04.01-.04-.01zm.116.047l.03.02-.03-.02zm-.043-.026l-.03-.01.03.01zm.053.035l-.1-.06c.025.02.059.04.1.06zm-.042-.03l-.09-.03.09.03zm-.139-.042l.1.03a.193.193 0 00-.1-.03zm.115.025c.036.02.064.04.1.07-.036-.02-.064-.05-.1-.07zm-.093-.019c-.03 0-.07 0-.1-.01.04.01.07.01.1.01zm.039.01c-.03-.01-.07-.01-.1-.02.03.01.07.02.1.02zm.18.098c-.03-.02-.05-.04-.08-.06.03.02.05.04.08.06zm3.034 3.04l.02.03-.02-.03zm.043.061l-.02-.03.02.03zm.025.043l.01.03-.01-.03zm.024.07l-.01-.04.01.04zm.01.084v-.04.04zM16.099 7.19a.42.42 0 01-.42.42h-4.37a.42.42 0 110-.84h4.37a.42.42 0 01.42.42c.003-.002.003 0 0 0zm0 1.91a.42.42 0 01-.42.421h-4.37a.42.42 0 110-.84h4.37a.42.42 0 01.42.42c.003 0 .003 0 0 0zm0 1.914a.42.42 0 01-.42.42h-4.37a.42.42 0 110-.84h4.37a.42.42 0 01.42.42c.003-.003.003 0 0 0zm1.66-5.502v-.1.1zm-.038-.214l.03.09c-.01-.03-.02-.07-.03-.09zm.046.166c0-.03-.01-.07-.02-.1 0 .039.01.07.02.1zm-.16-.316c.03.03.06.07.09.1a.284.284 0 01-.09-.1zm.143.201l-.06-.1c.02.034.03.067.06.1zm-.015-.021l.03.1a.155.155 0 01-.03-.1zm-.084-.136c.02.03.04.05.06.08a.156.156 0 01-.06-.08zm.083.124c-.02-.037-.04-.064-.06-.1.01.036.03.072.06.1zm-3.17-3.2c.03.03.07.06.1.09-.03-.03-.07-.06-.1-.09zm7.095 5.217c-.154.608-.445 1.779-.753 3.02-.378 1.515-.768 3.081-.885 3.538-.267 1.025-.65 1.778-1.183 2.31-.56.558-1.263.841-2.092.841h-6.269c-.837 0-1.58-.283-2.148-.815-.591-.558-.975-1.362-1.138-2.39a1538.72 1538.72 0 00-1.633-9.54c-.12-.672-.82-1.177-1.633-1.177h-1.35a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h1.348c1.367 0 2.518.882 2.736 2.1.06.323.23 1.309.44 2.536h2.409V2.798c0-.476.308-.784.787-.784H14.3c.008 0 .02 0 .028.003h.01c.012 0 .026.003.037.005l.034.009.011.003.025.008.009.003.033.017h.003c.011.005.02.01.031.02l.008.005c.009.005.014.011.023.017l.008.005.028.025L17.6 5.148c.009.009.017.02.026.028l.005.009.017.022.006.009.016.03v.003l.017.034.003.008.008.026.003.01.009.034v.003a.164.164 0 01.005.037v1.232h3.39a.562.562 0 01.543.698l.011.002zm-4.776-1.465h-1.498c-.661-.002-1.014-.305-1.194-.557-.21-.3-.313-.703-.316-1.235V2.857h-3.527v9.916h6.538c-.003-.6-.003-4.437-.003-6.905zm-.594-.84l-1.574-1.577v.622c.003.88.32.955.672.955h.902z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyPlansLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.63 19.089c.87 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.872 0-1.373-.501-1.373-1.372 0-.872.501-1.373 1.373-1.373zm5.462 0c.871 0 1.372.501 1.372 1.373 0 .87-.498 1.372-1.372 1.372-.871 0-1.373-.501-1.373-1.372 0-.872.502-1.373 1.373-1.373zm-5.462.56c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zm5.462 0c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zM4.075 2.156c.588 0 1.16.188 1.608.524.456.342.759.82.854 1.347.057.32.265 1.552.514 3.045h2.752V2.8c0-.395.247-.645.647-.645h4a.29.29 0 01.2.081l3.01 3.012a.277.277 0 01.082.199v1.626l3.812.001a.28.28 0 01.272.35c-.154.61-.446 1.784-.757 3.028-.208.837-.421 1.692-.59 2.364l-.094.38-.198.78c-.252.975-.616 1.69-1.106 2.182-.507.504-1.143.76-1.897.76H10.63c-.765 0-1.443-.256-1.956-.74-.546-.516-.899-1.264-1.053-2.227-.066-.415-.386-2.35-.727-4.401l-.172-1.029a825.1 825.1 0 00-.74-4.397 1.618 1.618 0 00-.638-.997 2.103 2.103 0 00-1.269-.412H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.639zm5.728 5.476H7.145c.433 2.594.947 5.694 1.03 6.233.253 1.608 1.127 2.496 2.455 2.496h6.554c.608 0 1.098-.196 1.499-.597.414-.414.737-1.062.96-1.924.086-.326.31-1.232.572-2.279l.123-.491.062-.25.126-.504c.258-1.037.504-2.028.67-2.68l-3.455-.002v5.368c0 .39-.243.633-.632.633l-.505.003H10.45c-.406 0-.647-.244-.647-.653V7.632zm4.361-4.916h-3.716a.253.253 0 00-.079.012l-.008.037v10.22c0 .028.003.056.01.082.026.008.054.01.08.008h.063l.36.001h.167l1.354.001H17.1a.239.239 0 00.065-.008.276.276 0 00.008-.067V5.725l-1.288.003h-.348c-.484-.003-.849-.171-1.081-.499-.193-.274-.289-.653-.291-1.154V2.716zm1.67 8.18a.28.28 0 01.28.28.28.28 0 01-.28.28h-4.37a.28.28 0 01-.28-.28.28.28 0 01.28-.28h4.37zm0-1.91a.28.28 0 01.28.28.28.28 0 01-.28.28h-4.37a.28.28 0 01-.28-.28.28.28 0 01.28-.28h4.37zm0-1.914a.28.28 0 01.28.28.28.28 0 01-.28.28h-4.37a.28.28 0 01-.28-.28.28.28 0 01.28-.28h4.37zm-1.107-3.957v.957c.003.961.393 1.093.813 1.095h1.236l-2.049-2.052z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconBuyPlansRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.476 18.373c.499 0 .902.142 1.193.423.306.294.46.705.46 1.23 0 .523-.154.935-.46 1.229-.288.28-.691.423-1.193.423-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23s.155-.935.46-1.23c.291-.28.695-.422 1.193-.422zm5.462 0c.499 0 .902.142 1.194.423.302.294.459.705.459 1.23 0 .523-.154.935-.46 1.229-.288.28-.691.423-1.193.423-.501 0-.902-.143-1.193-.423-.305-.294-.46-.706-.46-1.23s.155-.935.46-1.23c.291-.28.695-.422 1.193-.422zm-5.462 1.12c-.409 0-.532.123-.532.532 0 .41.123.532.532.532.41 0 .532-.123.532-.532 0-.409-.123-.532-.532-.532zm5.462 0c-.409 0-.532.123-.532.532 0 .41.123.532.532.532.41 0 .533-.123.533-.532 0-.409-.124-.532-.533-.532zM3.922 2c1.367 0 2.518.882 2.736 2.1.058.323.23 1.31.441 2.536h2.28a.53.53 0 01.126.015V2.804c0-.476.307-.784.786-.784h4a.42.42 0 01.297.123L17.6 5.154a.42.42 0 01.124.297l-.001 1.184h3.39a.562.562 0 01.543.698c-.154.611-.445 1.785-.756 3.026a709.939 709.939 0 01-.882 3.532c-.266 1.025-.65 1.781-1.182 2.31-.558.558-1.26.841-2.09.841h-6.269c-.837 0-1.58-.283-2.148-.815-.591-.558-.975-1.361-1.138-2.39a1538.72 1538.72 0 00-1.633-9.54c-.12-.672-.82-1.177-1.633-1.177h-1.35a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h1.348zm5.456 5.756H7.292c.43 2.496.928 5.402 1.008 5.908.123.776.39 1.361.798 1.748.359.339.824.51 1.378.51h6.266c.684 0 1.653-.239 2.188-2.311.105-.401.422-1.679.756-3.018l.126-.503.355-1.423.157-.628.071-.283h-2.673v5.087c0 .468-.302.773-.772.773l-.502.003h-6.154c-.487 0-.79-.302-.79-.793l.001-5.084a.557.557 0 01-.127.014zm4.495-4.894h-3.52v9.917h6.532V5.873h-1.501c-.661-.002-1.014-.304-1.194-.556-.21-.3-.313-.704-.316-1.236l-.001-1.219zm1.808 7.737a.42.42 0 110 .84h-4.37a.42.42 0 110-.84h4.37zm0-1.91a.42.42 0 110 .84h-4.37a.42.42 0 110-.84h4.37zm0-1.913a.42.42 0 110 .84h-4.37a.42.42 0 110-.84h4.37zm-.967-3.32v.622c.003.88.32.956.673.956h.902l-1.575-1.577z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCafeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.964 17.288c1.288-.114 3.481-.767 3.481-3.893 0-3.112-2.182-3.784-3.481-3.91v7.803zm0-9.03c1.338.12 4.75.846 4.75 5.137 0 4.367-3.518 5.028-4.804 5.123-.109.93-.431 1.664-.997 2.205-.7.666-1.683.991-3.011.991H6.084c-1.328 0-2.31-.325-3.011-.991-.706-.673-1.048-1.628-1.048-2.916V7.249c0-.339.286-.613.636-.613h13.664c.35 0 .636.274.636.613v1.009h.003zM7.482 5.625c0-.21-.081-.336-.236-.563-.165-.236-.37-.53-.372-.953-.003-.431.21-.717.364-.93.149-.201.247-.336.244-.619a.54.54 0 01.546-.535h.006c.302 0 .549.236.551.524.006.625-.266.997-.448 1.244-.123.165-.162.227-.16.308 0 .1.065.196.185.37.18.257.426.61.423 1.154a.54.54 0 01-.551.53.538.538 0 01-.552-.53zm2.734.047c-.017-.067-.13-.238-.188-.327-.137-.21-.269-.407-.275-.64-.01-.285.16-.529.309-.741.053-.079.145-.208.16-.258-.015-.294.218-.516.52-.53.289.009.56.239.574.533.017.333-.182.616-.341.846a8.805 8.805 0 00-.084.123l.067.1c.148.228.336.508.356.816a.537.537 0 01-.513.566l-.04.002a.55.55 0 01-.545-.49z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCafeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.983 17.764c1.137-.056 4.005-.569 4.005-4.207 0-3.616-2.849-4.16-4.005-4.23v8.437zm-.855.297V7.683H3.011v10.375c0 1.028.246 1.762.753 2.244.504.479 1.26.714 2.32.714h6.971c1.06 0 1.816-.232 2.32-.714.507-.482.753-1.216.753-2.241zm5.715-4.507c0 4.521-3.846 4.989-4.897 5.034-.084.983-.395 1.75-.969 2.302-.67.639-1.625.95-2.919.95H6.083c-1.294 0-2.249-.311-2.918-.953-.681-.644-1.009-1.568-1.009-2.826V7.274a.42.42 0 01.426-.412h13.972c.235 0 .429.185.429.41V8.5c1.131.067 4.86.616 4.86 5.053zm-14.124-7.9c0-.167-.112-.346-.243-.551-.171-.272-.367-.577-.37-.975-.003-.403.193-.717.367-.994.131-.21.246-.395.246-.566a.42.42 0 01.426-.412c.235 0 .429.185.429.41 0 .4-.196.713-.367.988-.132.213-.247.395-.247.566.003.17.115.347.247.552.17.271.37.58.37.98a.42.42 0 01-.43.409.417.417 0 01-.428-.406zm2.751 0c0-.038-.095-.159-.146-.226-.14-.18-.316-.403-.319-.714-.003-.314.174-.547.317-.731.056-.073.148-.194.148-.236a.42.42 0 01.426-.411.42.42 0 01.428.408v.003c0 .314-.176.54-.316.726-.053.067-.149.193-.149.235 0 .04.093.157.149.227.134.17.32.409.32.723a.42.42 0 01-.43.409.425.425 0 01-.428-.412z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCafeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.936 17.289c1.288-.115 3.481-.768 3.481-3.894 0-3.112-2.182-3.784-3.481-3.91v7.804zm-1.272.515V7.857H3.272v9.947c0 .944.221 1.613.672 2.048.448.428 1.14.635 2.115.635h6.818c.975 0 1.666-.207 2.115-.635.45-.432.672-1.101.672-2.048zm6.022-4.409c0 4.367-3.518 5.028-4.804 5.123-.109.93-.431 1.664-.997 2.205-.7.666-1.683.991-3.011.991H6.059c-1.328 0-2.311-.325-3.011-.991C2.342 20.05 2 19.095 2 17.807V7.249c0-.339.286-.613.636-.613H16.3c.35 0 .636.274.636.613v1.012c1.336.114 4.75.84 4.75 5.134zM7.454 5.625c0-.21-.081-.336-.236-.563-.165-.236-.37-.53-.372-.953-.003-.431.21-.717.364-.93.149-.201.247-.336.244-.619A.54.54 0 018 2.025h.006c.302 0 .549.236.551.524.006.625-.266.997-.448 1.244-.123.165-.162.227-.16.308 0 .1.065.196.185.37.18.257.426.61.423 1.154a.54.54 0 01-.551.53.538.538 0 01-.552-.53zm2.734.047c-.017-.067-.13-.238-.188-.327-.137-.21-.269-.407-.275-.64-.01-.285.16-.529.309-.741.053-.079.145-.208.16-.258-.015-.294.218-.516.52-.53.289.009.56.239.575.533.016.333-.183.616-.342.846a8.805 8.805 0 00-.084.123l.067.1c.148.228.336.508.356.816a.537.537 0 01-.513.566l-.04.002a.55.55 0 01-.545-.49z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCalendarFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.062 3.68H4.602a2.599 2.599 0 00-2.594 2.594v11.23a2.599 2.599 0 002.594 2.594H18.98a2.68 2.68 0 002.675-2.675V6.274a2.599 2.599 0 00-2.593-2.593zm-2.846 1.468c.484 0 .812.328.812.816a.81.81 0 01-.219.585.801.801 0 01-.593.23.806.806 0 01-.594-.23c-.104-.104-.219-.286-.219-.585 0-.488.328-.816.813-.816zm-8.754 0c.485 0 .812.328.812.816a.81.81 0 01-.218.585.801.801 0 01-.594.23.801.801 0 01-.594-.23.81.81 0 01-.218-.585c0-.488.328-.816.812-.816zm6.247 11.667H9.922a.929.929 0 01-.034-.277c0-.364.095-.608.347-.91l1.154-1.407c.661-.798.939-1.19.939-1.683 0-.252-.079-.443-.236-.574-.182-.157-.476-.227-.902-.227a6.982 6.982 0 00-1.162.112v-.92a6.205 6.205 0 011.38-.164c.852 0 1.415.19 1.78.554.277.278.425.661.425 1.154 0 .74-.33 1.303-1.269 2.328l-1.033 1.129h2.398v.885zm6.633-8.21H3.322c-.277 0-.504-.182-.504-.406 0-.224.227-.406.504-.406H20.34c.277 0 .504.182.504.406 0 .224-.224.406-.501.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCalendarLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.428 3.797a2.397 2.397 0 012.395 2.395l.001 1.67.002.027-.004.027v9.791a2.482 2.482 0 01-2.478 2.48H4.55a2.397 2.397 0 01-2.395-2.396v-11.6A2.397 2.397 0 014.55 3.797h14.877zm1.842 4.369H2.707l.001 9.625c0 1.017.826 1.843 1.843 1.843h14.793a1.93 1.93 0 001.927-1.927V8.166zm-9.56 2.7c.662 0 1.152.147 1.477.435.3.266.451.642.451 1.129 0 .244-.034.468-.104.672a2.82 2.82 0 01-.347.664c-.162.238-.398.538-.703.902l-1.426 1.678h2.684v.574h-3.474a.675.675 0 01-.033-.202c0-.12.022-.232.07-.333.047-.1.14-.235.277-.403l1.364-1.667c.348-.428.591-.776.728-1.048.14-.268.208-.537.208-.803 0-.359-.107-.617-.322-.768-.213-.154-.533-.23-.956-.23-.417 0-.834.045-1.249.132v-.566c.44-.11.89-.165 1.356-.165zm7.718-6.517H4.551a1.845 1.845 0 00-1.843 1.843v1.42H21.27l.001-1.42a1.845 1.845 0 00-1.843-1.843zM7.593 5.439c.342 0 .544.204.544.546a.55.55 0 01-.14.395.574.574 0 01-.407.148.54.54 0 01-.4-.148.548.548 0 01-.14-.395c0-.342.201-.547.543-.547zm8.754 0c.16 0 .294.047.39.137a.55.55 0 01.153.409c0 .165-.047.3-.14.395a.574.574 0 01-.406.148.54.54 0 01-.4-.148.548.548 0 01-.14-.395c0-.342.201-.547.543-.547z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCalendarRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.062 3.68a2.597 2.597 0 012.593 2.595v11.148a2.68 2.68 0 01-2.675 2.675H4.602a2.597 2.597 0 01-2.594-2.594V6.274a2.597 2.597 0 012.594-2.593h14.46zm1.517 4.925H3.083l.001 8.9c0 .837.68 1.517 1.518 1.517H18.98a1.6 1.6 0 001.6-1.599V8.605zm-9.173 2.154c.815 0 1.41.185 1.779.555.283.283.426.67.426 1.154 0 .364-.093.714-.278 1.047-.185.334-.515.76-.988 1.28l-1.034 1.13h2.398v.885H9.922a.823.823 0 01-.034-.272c0-.18.025-.34.078-.48a1.55 1.55 0 01.27-.433l1.153-1.407c.359-.434.605-.764.737-.994.135-.23.199-.46.199-.689 0-.255-.079-.445-.235-.574-.174-.151-.474-.227-.902-.227-.37 0-.76.036-1.163.112v-.922c.185-.047.404-.084.656-.117.252-.031.493-.048.725-.048zm7.656-6.003H4.602a1.52 1.52 0 00-1.518 1.519v1.257h17.495V6.275a1.52 1.52 0 00-1.517-1.519zm-11.6.591c.485 0 .813.328.813.815 0 .297-.118.482-.219.583a.801.801 0 01-.594.23.801.801 0 01-.594-.23.81.81 0 01-.218-.583c0-.487.328-.815.812-.815zm8.754 0a.81.81 0 01.574.21c.11.104.238.292.238.603a.8.8 0 01-.218.582c-.101.107-.289.233-.594.233a.801.801 0 01-.594-.23.81.81 0 01-.219-.583c0-.487.328-.815.813-.815z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallCenterUserSupportFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.127 14.02c1.827 0 3.328.554 4.34 1.605.93.966 1.42 2.305 1.42 3.87v1.64c0 .31-.25.56-.56.56H3.393a.562.562 0 01-.56-.56v-1.64c0-1.565.49-2.904 1.42-3.87 1.01-1.05 2.512-1.605 4.338-1.605h6.535zM11.87 4.188c2.837 0 4.4 1.563 4.4 4.4 0 .149-.005.294-.014.437h-2.23c-.263-.238-.618-.367-1.03-.367-.437 0-.807.143-1.081.415-.275.272-.418.644-.418 1.078 0 .429.143.799.41 1.07.274.278.649.423 1.089.423.414 0 .776-.131 1.042-.38H15.6c-.712 1.128-1.978 1.725-3.731 1.725-2.838 0-4.4-1.563-4.4-4.4 0-2.838 1.562-4.401 4.4-4.401zM11.864 2c1.992 0 3.546.524 4.616 1.557 1.112 1.073 1.678 2.667 1.67 4.743v.008l-.009.544c0 .565-.176 1.039-.504 1.364-.328.325-.779.49-1.339.49H13.78a.702.702 0 01-.098.123c-.162.168-.403.255-.69.255-.285 0-.526-.09-.688-.255-.163-.165-.247-.395-.247-.678 0-.574.362-.933.939-.933.353 0 .624.135.781.367h2.53c.252 0 .44-.056.551-.168.14-.143.171-.389.171-.574v-.008l.009-.544c-.003-1.753-.451-3.075-1.34-3.927-.856-.826-2.148-1.244-3.84-1.244-1.529 0-2.736.345-3.582 1.017C7.419 4.824 6.9 5.88 6.74 7.283a.56.56 0 01-1.112-.129c.196-1.706.851-3.017 1.952-3.894C8.631 2.423 10.074 2 11.864 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallCenterUserSupportLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.264 14.716c1.748 0 3.18.527 4.137 1.521.88.914 1.342 2.185 1.342 3.678v1.639a.28.28 0 01-.28.28H3.53a.28.28 0 01-.28-.28v-1.639c0-1.493.465-2.764 1.342-3.678.958-.994 2.386-1.52 4.137-1.52h6.535zm0 .563H8.729c-1.616 0-2.871.454-3.734 1.348-.776.807-1.185 1.944-1.185 3.288v1.359h16.373v-1.359c0-1.344-.41-2.481-1.185-3.288-.863-.894-2.118-1.348-3.734-1.348zM11.97 2.156c1.919 0 3.406.499 4.423 1.48 1.056 1.016 1.59 2.543 1.59 4.537v.006l-.008.546c0 .498-.142.893-.42 1.168-.277.274-.66.409-1.145.409l-.366.001a3.472 3.472 0 01-.797 1.195c-.745.717-1.832 1.081-3.232 1.081-1.398 0-2.488-.364-3.233-1.084-.773-.745-1.165-1.863-1.165-3.316 0-1.454.392-2.572 1.165-3.317.748-.717 1.835-1.081 3.233-1.081 1.397 0 2.487.364 3.232 1.084.773.748 1.165 1.863 1.165 3.316a6.2 6.2 0 01-.182 1.56h.18c.33 0 .582-.083.75-.249.168-.165.255-.428.255-.773v-.005l.009-.547c0-3.616-1.835-5.45-5.454-5.45-3.247 0-5.062 1.484-5.398 4.408a.28.28 0 01-.554-.064c.184-1.63.806-2.88 1.845-3.706 1-.795 2.381-1.199 4.107-1.199zm2.818 8.147a.524.524 0 01-.123.203c-.115.115-.283.171-.49.171-.208 0-.376-.056-.49-.17-.107-.107-.166-.267-.166-.48 0-.445.26-.652.658-.652.3 0 .52.117.609.365l.863.003a5.47 5.47 0 00.203-1.562c0-1.296-.336-2.277-.994-2.913-.636-.616-1.594-.927-2.843-.927-1.25 0-2.205.311-2.843.927-.661.636-.995 1.617-.995 2.913 0 1.297.336 2.278.995 2.914.638.616 1.593.927 2.843.927 1.249 0 2.204-.311 2.843-.927a2.82 2.82 0 00.573-.793z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallCenterUserSupportRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.979 14.605c3.488 0 5.998.87 7.458 2.585 1.628 1.913 1.289 4.143 1.273 4.237a.75.75 0 01-.74.63H4.034a.75.75 0 01-.74-.625c-.016-.094-.372-2.327 1.246-4.242 1.448-1.716 3.95-2.585 7.439-2.585zm0 1.5c-3.012 0-5.123.684-6.278 2.034a4.022 4.022 0 00-.948 2.418h14.492a4.058 4.058 0 00-.967-2.413c-1.165-1.353-3.285-2.039-6.3-2.039zM12 1.95c4.33 0 6.807 2.309 6.976 6.502.003.063.005.304.007.575l.001.33.001.158v.267l.001.154a.75.75 0 01-.75.75h-1.68c-.55 1.967-2.12 3.028-4.556 3.028-3.081 0-4.777-1.698-4.777-4.78 0-3.08 1.696-4.776 4.777-4.776 3.08 0 4.777 1.696 4.777 4.777 0 .084-.001.168-.004.25l.711.001a67.43 67.43 0 00-.006-.675C17.34 5.106 15.548 3.45 12 3.45c-3.692 0-5.487 1.794-5.487 5.485a.75.75 0 01-1.5 0C5.013 4.43 7.495 1.95 12 1.95zm0 3.708c-2.236 0-3.277 1.04-3.277 3.277s1.04 3.279 3.277 3.279c1.537 0 2.51-.493 2.967-1.528h-.862c-.22.323-.597.477-1.105.477-.84 0-1.324-.42-1.324-1.325 0-.904.485-1.324 1.324-1.324.6 0 1.02.216 1.21.671h1.062c.003-.081.005-.165.005-.25 0-2.236-1.041-3.277-3.277-3.277z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallDetailsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.618 7.336l-5.463-5.182A.56.56 0 0015.772 2H8.39c-.569 0-1.107.538-1.107 1.106v1.507c-.417-.26-.846-.395-1.277-.403-.711-.014-1.423.317-2.115.978-.244.232-.473.551-.549.655l-.008.011-.017.023c-.636.921-.625 2.336.03 3.983.676 1.695 1.99 3.543 3.796 5.35l.006.006.053.056.006.005c.044.045.092.09.137.135a.568.568 0 00-.062.252v4.921c0 .589.519 1.107 1.107 1.107h12.297c.588 0 1.106-.518 1.106-1.107V7.742a.56.56 0 00-.176-.406zm-1.213.392h-2.182c-.653 0-1.2-.204-1.583-.588-.384-.384-.588-.933-.588-1.583V3.6l4.353 4.13zM4.39 9.448c-.504-1.26-.56-2.325-.154-2.924l.016-.025c.202-.28.337-.429.415-.502.93-.888 1.67-.89 2.55-.008.173.17.324.361.45.568l.008.017c.267.426.513 1.101-.417 2.028a2.729 2.729 0 01-.333.292l-.065.058c-.19.208-.389.577-.24 1.154.078.311.249.656.523 1.054.392.574.978 1.238 1.897 2.157l.064.064c.919.919 1.583 1.501 2.157 1.896.398.275.742.446 1.053.524.577.146.947-.05 1.154-.24a.422.422 0 00.059-.065c.09-.118.188-.23.294-.334.927-.927 1.602-.683 2.028-.417l.017.008c.207.127.4.278.569.451.882.883.88 1.62-.009 2.55-.073.075-.218.21-.501.414l-.025.017c-.603.406-1.667.35-2.928-.154-1.96-.782-3.784-2.359-4.969-3.544l-.028-.028-.011-.01-.03-.029c-1.186-1.188-2.763-3.01-3.544-4.972z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallDetailsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.067 2.156a.26.26 0 01.068.009l-.068-.009a.279.279 0 01.183.07.09.09 0 01.016.011L20.728 7.7l.014.017.013.016-.027-.033a.24.24 0 01.052.072l.006.015c.007.015.012.03.015.045l.005.024a.27.27 0 01.003.043v13.109c0 .44-.386.826-.826.826H7.42c-.432 0-.827-.395-.827-.826v-5.462c0-.045.011-.088.03-.125-.062-.06-.124-.121-.186-.184l-.003-.002-.062-.06-.003-.002c-1.778-1.781-3.07-3.6-3.73-5.258-.623-1.557-.642-2.876-.062-3.72a.05.05 0 01.01-.014l.012-.016c.073-.101.291-.404.515-.617 1.179-1.126 2.348-1.199 3.48-.223V2.983c0-.418.408-.827.826-.827h7.647zm-.28.56H7.42c-.107 0-.266.16-.266.267v2.73a.274.274 0 01-.04.143c.112.136.214.281.306.435.442.711.706 1.82-.538 3.064-.12.123-.25.235-.387.342-.196.246.146.823.367 1.148.47.687 1.252 1.49 1.799 2.037l.064.064c.546.546 1.35 1.328 2.036 1.796.325.224.902.563 1.149.367.106-.138.218-.266.342-.387 1.243-1.244 2.35-.98 3.064-.538.272.163.518.356.74.583 1.207 1.207 1.21 2.462.002 3.723-.213.224-.518.442-.616.515l-.017.011-.014.011c-.406.28-.927.423-1.53.423-.643 0-1.386-.16-2.19-.481-1.435-.573-2.99-1.618-4.537-3.042v5.08c0 .121.145.267.266.267h12.563c.129 0 .266-.137.266-.266V8.178h-2.451c-.88 0-1.633-.288-2.18-.831-.546-.544-.831-1.297-.831-2.18v-2.45zM3.503 5.952a4.03 4.03 0 00-.448.54l-.02.026c-.913 1.336.073 4.599 3.728 8.257l.037.037.03.028c3.659 3.658 6.92 4.644 8.258 3.73l.025-.019c.241-.173.42-.322.541-.448.994-1.042.997-1.95.006-2.941a3.156 3.156 0 00-.628-.496l-.008-.006c-.796-.495-1.572-.347-2.376.457-.112.112-.218.23-.313.359l-.031.033c-.602.555-1.55-.092-1.857-.305-.726-.496-1.555-1.303-2.118-1.863l-.064-.064c-.563-.563-1.367-1.392-1.863-2.118-.213-.31-.863-1.255-.305-1.857a.366.366 0 01.033-.03 3.58 3.58 0 00.359-.315c.8-.8.952-1.58.456-2.375l-.005-.008a3.058 3.058 0 00-.496-.628c-.992-.991-1.9-.989-2.941.006zm16.35 1.666l-4.508-4.504v2.053c0 1.488.962 2.451 2.452 2.451h2.055z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallDetailsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.772 2c.143 0 .283.056.386.154l5.462 5.182a.557.557 0 01.174.406v12.843c0 .589-.518 1.107-1.106 1.107H8.39c-.589 0-1.107-.518-1.107-1.107v-4.918c0-.092.023-.179.062-.255a6.683 6.683 0 01-.14-.138l-.067-.067c-1.807-1.806-3.118-3.655-3.793-5.35-.656-1.647-.667-3.062-.028-3.983l.017-.022.008-.012c.076-.106.305-.423.55-.655.694-.664 1.405-.992 2.114-.978.433.01.86.144 1.277.403V3.106C7.284 2.538 7.822 2 8.391 2h7.38zm-.841 1.12H8.427a.085.085 0 00-.022.023l.001 2.507c.081.109.156.22.226.336.697 1.126.49 2.333-.58 3.406a4.4 4.4 0 01-.362.325c-.002.064.028.342.505.986.465.63 1.157 1.342 1.638 1.82l.065.065c.479.48 1.19 1.174 1.82 1.639.645.476.922.507.986.504a4.4 4.4 0 01.325-.361c1.07-1.073 2.278-1.278 3.404-.583.291.174.557.384.792.625.642.641.975 1.313.986 2 .014.708-.316 1.423-.977 2.115-.233.243-.552.473-.656.549l-.01.008-.023.017c-.457.313-1.031.47-1.692.47-.684 0-1.46-.168-2.297-.501-1.321-.526-2.736-1.44-4.151-2.674v4.164c.003.006.008.009.01.011h12.253l.006-.005V8.848h-2.451c-.956 0-1.78-.316-2.376-.915-.596-.6-.916-1.42-.916-2.376V3.12zM4.665 5.994a3.82 3.82 0 00-.414.502l-.017.025c-.403.597-.347 1.661.154 2.924.781 1.961 2.358 3.785 3.543 4.972l.031.028.042.042c1.185 1.185 3.009 2.762 4.97 3.544 1.26.504 2.324.56 2.924.154l.025-.017c.28-.202.428-.336.501-.415.888-.93.891-1.669.009-2.549a2.94 2.94 0 00-.569-.45l-.017-.009c-.425-.266-1.1-.513-2.028.417a3.016 3.016 0 00-.294.334c-.02.022-.04.045-.059.064-.207.19-.577.39-1.154.241-.31-.078-.655-.25-1.053-.524-.574-.392-1.238-.977-2.157-1.896l-.064-.065c-.919-.918-1.502-1.582-1.897-2.156-.274-.398-.445-.743-.523-1.054-.146-.577.05-.946.24-1.154a.422.422 0 01.065-.058c.118-.09.23-.188.333-.295.927-.927.684-1.602.418-2.028l-.009-.016a2.858 2.858 0 00-.45-.569c-.883-.882-1.62-.88-2.55.008zm15.74 1.734l-4.353-4.13v1.96c0 .652.204 1.198.588 1.582.384.384.933.588 1.583.588h2.182z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallLandlineFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.094 2.15c.846.017 1.683.432 2.487 1.236.303.297.569.633.785 1 .431.694.588 1.412.465 2.131-.124.72-.524 1.423-1.196 2.096a5.707 5.707 0 01-.496.442c-.065.118-.025.488.496 1.25.602.88 1.61 1.918 2.316 2.624l.084.084c.706.706 1.745 1.712 2.625 2.317.759.52 1.131.56 1.25.496a5.28 5.28 0 01.442-.496c.672-.673 1.375-1.073 2.095-1.196.72-.124 1.437.033 2.132.465.366.218.7.481 1 .787.803.804 1.218 1.641 1.235 2.487.017.877-.395 1.765-1.227 2.633-.291.306-.698.597-.832.695l-.017.011a.154.154 0 00-.025.02c-.563.38-1.277.574-2.104.574-.865 0-1.857-.213-2.924-.639-2.182-.87-4.571-2.566-6.908-4.902l-.005-.005-.076-.073-.005-.006C5.354 13.845 3.66 11.46 2.789 9.274c-.832-2.09-.852-3.874-.056-5.028l.016-.025.012-.017c.103-.132.395-.538.7-.83.868-.829 1.753-1.24 2.633-1.224z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallLandlineLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.807 21.84c-.855 0-1.838-.213-2.91-.64-2.216-.885-4.646-2.611-7.029-4.991l-.003-.003-.08-.081v-.003c-2.383-2.383-4.11-4.813-4.993-7.03-.824-2.06-.855-3.803-.092-4.908.002-.005.008-.011.01-.014l.018-.022c.255-.356.485-.63.678-.816 1.65-1.578 3.288-1.575 4.869.003a4.8 4.8 0 01.768.975c1.042 1.677.19 3.1-.71 3.997a5.378 5.378 0 01-.518.46c-.3.356.095 1.102.482 1.665.636.928 1.69 2.015 2.425 2.75l.086.087c.738.737 1.822 1.788 2.75 2.424.566.387 1.309.782 1.665.482.14-.182.294-.356.46-.518.9-.897 2.32-1.75 3.997-.71.356.214.684.471.975.769 1.578 1.58 1.58 3.217.003 4.868a6.339 6.339 0 01-.816.681l-.022.017-.014.011c-.53.365-1.208.547-1.999.547zm-9.54-6.026c2.328 2.326 4.691 4.01 6.838 4.866.959.384 1.836.583 2.607.6.723.013 1.317-.135 1.769-.446l.036-.025c.328-.236.575-.443.737-.612.704-.737 1.04-1.426 1.029-2.107-.011-.653-.348-1.3-1.023-1.976a4.32 4.32 0 00-.863-.682l-.009-.005c-.535-.334-1.079-.457-1.612-.367-.563.095-1.132.429-1.698.995a5.036 5.036 0 00-.429.487c-.008.012-.02.023-.03.034-1.052.967-3.123-.827-5.209-2.912l-.086-.087C8.238 11.492 6.444 9.42 7.41 8.369c.011-.011.02-.022.034-.03.174-.133.336-.275.488-.43.563-.563.9-1.135.995-1.698.09-.533-.034-1.074-.368-1.612l-.005-.008a4.222 4.222 0 00-.681-.864c-.676-.675-1.323-1.012-1.976-1.023-.676-.01-1.365.328-2.102 1.032a5.562 5.562 0 00-.637.773c-.308.452-.46 1.046-.445 1.769.014.77.215 1.648.6 2.607.857 2.147 2.539 4.513 4.868 6.839l.042.042.006.006.036.042z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCallLandlineRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.607 21.809c-.866 0-1.857-.213-2.924-.639-2.183-.871-4.572-2.566-6.908-4.902l-.006-.006-.075-.072-.006-.006c-2.336-2.336-4.03-4.726-4.902-6.908-.829-2.09-.849-3.874-.053-5.025l.017-.025.011-.017c.098-.134.39-.54.695-.832.868-.829 1.756-1.24 2.633-1.227.846.017 1.683.432 2.487 1.236.303.297.569.633.787 1 .432.694.588 1.411.465 2.131-.123.72-.524 1.423-1.196 2.096a5.707 5.707 0 01-.496.442c-.064.118-.025.488.496 1.25.602.879 1.61 1.918 2.317 2.624l.084.084c.706.706 1.745 1.712 2.624 2.317.76.52 1.132.56 1.25.495a5.28 5.28 0 01.442-.495c.672-.673 1.376-1.073 2.095-1.196.72-.124 1.437.033 2.132.465.364.218.7.481 1 .787.804.804 1.219 1.638 1.235 2.487.017.877-.395 1.765-1.227 2.633-.29.305-.697.597-.831.695l-.017.011c-.009.006-.017.011-.025.02-.566.383-1.28.577-2.104.577zm-9.04-6.328c2.228 2.227 4.485 3.835 6.527 4.65 1.698.675 3.143.74 3.967.179l.033-.022c.303-.219.53-.407.675-.558 1.222-1.277 1.224-2.342.009-3.554a3.898 3.898 0 00-.776-.614l-.017-.008c-.465-.289-.91-.392-1.359-.317-.484.081-.985.378-1.49.883a4 4 0 00-.395.448c-.02.022-.039.045-.058.064-.239.221-.667.448-1.345.275-.384-.098-.815-.311-1.317-.656-.955-.655-2.044-1.711-2.781-2.448l-.084-.084c-.737-.737-1.793-1.826-2.448-2.784-.345-.502-.56-.933-.656-1.317-.17-.678.056-1.106.275-1.344a.422.422 0 01.064-.06 4 4 0 00.448-.394c.505-.504.802-1.006.883-1.49.075-.451-.028-.894-.317-1.359l-.008-.017a3.82 3.82 0 00-.614-.776C6.57 2.965 5.506 2.968 4.23 4.19a5.223 5.223 0 00-.558.675l-.025.033c-.56.824-.493 2.27.182 3.967.815 2.042 2.423 4.3 4.65 6.526l.04.04.01.01.04.04z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCancelFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.641 15.776a.615.615 0 11-.87.871l-3.934-3.933-3.921 3.922a.61.61 0 01-.434.18.615.615 0 01-.434-1.05l3.921-3.923-3.921-3.921a.612.612 0 010-.869c.24-.24.63-.24.868 0l3.921 3.922 3.933-3.936a.615.615 0 11.871.871l-3.935 3.933 3.935 3.933zM11.841 2C5.62 2 2 5.14 2 11.846c0 6.706 3.622 9.84 9.84 9.84 6.219 0 9.846-3.134 9.846-9.84C21.686 5.14 18.06 2 11.84 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCancelLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.974 8.022c.16.16.16.42 0 .58l-3.4 3.4 3.4 3.404a.408.408 0 01-.011.58.408.408 0 01-.569 0l-3.4-3.404-3.392 3.392a.41.41 0 01-.58-.58l3.392-3.392-3.392-3.39a.41.41 0 01.58-.579l3.392 3.392 3.403-3.403c.16-.16.418-.16.577 0zm-3.977 13c5.988 0 9.025-3.034 9.025-9.02 0-5.989-3.037-9.025-9.025-9.025-5.986 0-9.02 3.036-9.02 9.025 0 5.986 3.034 9.02 9.02 9.02zm0-18.866c6.218 0 9.846 3.14 9.846 9.846 0 6.706-3.628 9.84-9.846 9.84-6.219 0-9.84-3.134-9.84-9.84 0-6.706 3.621-9.846 9.84-9.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCancelRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.641 7.04c.241.24.241.63 0 .868l-3.935 3.935 3.933 3.933a.615.615 0 11-.857.885l-.014-.014-3.93-3.933-3.922 3.922a.615.615 0 01-.868.003l-.003-.003a.615.615 0 010-.871l3.921-3.922-3.921-3.921a.612.612 0 01-.031-.869.612.612 0 01.868-.03l.031.03 3.922 3.922 3.933-3.933a.616.616 0 01.873-.003c-.002 0-.002 0 0 0zm-4.8 13.417c5.795 0 8.616-2.818 8.616-8.611 0-5.796-2.818-8.616-8.614-8.616-5.795 0-8.61 2.818-8.61 8.616-.003 5.793 2.815 8.61 8.607 8.61zM11.84 2c6.218 0 9.845 3.143 9.845 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84C2 5.143 5.622 2 11.84 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.048 14.006a6.873 6.873 0 01-.947-1.2c-.376-.588-.633-1.17-.765-1.736-.146-.613-.025-1.123.333-1.434.21-.182.493-.289.802-.305.028-.003.053-.003.08-.003.3 0 .606.084.889.243.106.06.215.124.333.197a.09.09 0 00.076 0l.336-.197a1.83 1.83 0 01.97-.24c.307.016.593.123.8.305.359.31.48.82.334 1.434-.132.563-.39 1.148-.765 1.737a7 7 0 01-.936 1.187l-.011.012c-.04.042-.18.182-.294.269a.915.915 0 01-.328.15.616.616 0 01-.103.015h-.079a.862.862 0 01-.434-.165 2.78 2.78 0 01-.291-.27zm5.137 3.624c.03-.028.05-.053.056-.081.017-.056-.014-.115-.065-.21-.005-.008-.014-.011-.02-.02-.1-.16-.265-.218-.422-.162l-2.983 1.042c-.009.003-.02.003-.028.003-.023.002-.045.005-.065.005a1.47 1.47 0 01-.787.233H8.137a.617.617 0 01-.616-.622c0-.036.014-.067.02-.1.008-.049.01-.096.028-.141.014-.034.042-.062.061-.092.023-.034.04-.073.07-.104a.614.614 0 01.434-.182h3.734c.101 0 .208-.079.275-.174a.303.303 0 00.07-.168v-.003a.348.348 0 00-.073-.218.214.214 0 00-.17-.087l-.2.003c-.557.011-1.638.033-2.736-.488a4.885 4.885 0 01-.471-.257c-.008-.009-.6-.322-2.403-.39v.003h-.003v3.137l3.33 1.617.135.064c.246.14.526.207.877.207.193 0 .358-.028.512-.067.081-.02.165-.04.233-.07.014-.008 3.322-1.672 4.605-2.448.064-.036.126-.076.179-.11l.07-.053c.028-.02.062-.042.078-.056l.009-.01zM4.067 16.32a.554.554 0 00.569-.575.556.556 0 00-.569-.571.55.55 0 00-.566.571c0 .333.238.574.566.574zm13.168.38a.34.34 0 00.042.076c.404.779.19 1.527-.59 2.025-1.174.748-4.768 2.555-4.914 2.63a2.99 2.99 0 01-1.272.258c-.574 0-1.058-.123-1.45-.356l-2.905-1.4c-.073.74-.69 1.328-1.443 1.328H3.465c-.804 0-1.46-.664-1.46-1.477v-4.711c0-.812.656-1.476 1.46-1.476h1.238c.468 0 .877.232 1.149.571 2.428.042 3.249.507 3.389.597.919.58 1.96.554 2.51.546h.246c.745.008 1.336.588 1.437 1.344l1.902-.672c.726-.26 1.53.045 1.9.717zm2.384-8.187a.551.551 0 00.566-.575.553.553 0 00-.566-.574.551.551 0 00-.566.574c0 .328.241.575.566.575zm-2.09-.244V5.132l-3.327-1.617-.135-.067c-.246-.14-.524-.207-.877-.207a2.03 2.03 0 00-.512.067c-.081.02-.163.04-.23.07-.014.009-3.322 1.672-4.605 2.448-.064.04-.129.076-.18.11-.033.022-.05.036-.072.053-.025.02-.062.042-.078.056-.003.003-.003.003-.003.005a.193.193 0 00-.056.082c-.017.056.014.114.064.21.006.008.017.008.023.02.1.159.266.218.42.162l2.983-1.042c.011-.006.02-.003.028-.006a.602.602 0 01.064-.005 1.47 1.47 0 01.788-.233h3.733a.62.62 0 01.617.622c0 .036-.014.067-.02.1-.008.048-.011.096-.028.14-.014.037-.042.062-.062.093-.022.034-.039.073-.07.104a.61.61 0 01-.434.182h-3.734c-.098 0-.204.078-.274.174a.303.303 0 00-.07.17v.003a.34.34 0 00.073.219c.039.05.092.084.168.087l.199-.003h.002c.558-.011 1.639-.037 2.737.487.157.076.314.16.47.258 0 .017.592.33 2.398.395zm2.695-5.838c.804 0 1.462.664 1.462 1.477v4.711c0 .812-.655 1.476-1.462 1.476h-1.238c-.468 0-.877-.232-1.148-.571-2.429-.042-3.25-.507-3.387-.597-.919-.58-1.96-.554-2.51-.546h-.246c-.748-.008-1.336-.588-1.437-1.345l-1.902.673a1.572 1.572 0 01-1.905-.72.34.34 0 00-.042-.076c-.4-.779-.188-1.526.591-2.022 1.174-.745 4.768-2.555 4.913-2.63a2.99 2.99 0 011.272-.258c.574 0 1.059.126 1.454.358l2.904 1.4c.073-.739.69-1.327 1.443-1.327h1.238v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.42 18.215c.378-.246.378-.406.226-.694a.582.582 0 00-.705-.289L12.88 18.3c-.033.009-.066.009-.1.009-.219.143-.47.23-.731.23H8.23a.418.418 0 01-.421-.424c0-.238.185-.423.42-.423h3.82c.278 0 .564-.288.564-.568 0-.255-.16-.518-.454-.527l-.218.009c-.622.008-1.942.042-3.169-.737-.016-.008-.68-.381-2.778-.431v3.56l3.66 1.77c.27.16.597.23.992.23.337 0 .622-.05.85-.152.019-.02 3.764-1.893 4.924-2.63zm-11.264.992v-3.908a.449.449 0 00-.445-.448H3.442a.45.45 0 00-.445.448v4.807c0 .246.201.448.445.448h1.269a.45.45 0 00.445-.448v-.832a.096.096 0 010-.067zm12.205-2.146c.294.569.411 1.289-.488 1.866-1.201.762-4.862 2.602-5.022 2.678-.345.16-.748.238-1.202.238-.546 0-1.008-.11-1.386-.33l-3.266-1.586v.179c0 .72-.58 1.297-1.286 1.297H3.442a1.292 1.292 0 01-1.286-1.297v-4.807c0-.72.58-1.297 1.286-1.297h1.269c.445 0 .84.23 1.064.586 2.572.025 3.378.518 3.46.577 1 .627 2.1.602 2.686.594.1-.009.185-.009.244-.009.722.017 1.285.62 1.285 1.373 0 .025-.008.059-.008.084l2.218-.779a1.406 1.406 0 011.7.633zM4.568 16.14a.513.513 0 01-.53.526.511.511 0 01-.52-.526.51.51 0 01.52-.527c.303 0 .53.221.53.527zm16.437-7.435V3.893a.449.449 0 00-.445-.448h-1.27a.45.45 0 00-.445.448v.832c0 .025.009.042 0 .067v3.916c0 .247.202.448.446.448h1.269a.451.451 0 00.445-.45zm-2.997-.142V5.01l-3.664-1.779c-.269-.151-.597-.23-.992-.23-.336 0-.622.05-.848.16-.026.008-3.765 1.89-4.922 2.627-.378.239-.378.398-.227.695a.592.592 0 00.706.289l3.056-1.068c.034-.016.076-.016.118-.016.21-.135.453-.23.714-.23v.008h3.823c.236 0 .42.188.42.423 0 .23-.184.423-.42.423h-3.82v-.008c-.278 0-.563.288-.563.569 0 .263.16.526.454.526.058.009.134 0 .218 0 .63-.017 1.938-.042 3.165.728.017.009.681.393 2.782.435zm2.552-5.967c.705 0 1.285.586 1.285 1.297v4.815c0 .712-.58 1.297-1.285 1.297h-1.27c-.445 0-.84-.238-1.067-.585-2.568-.025-3.375-.518-3.459-.577-.997-.636-2.1-.61-2.686-.594h-.252c-.715-.009-1.275-.61-1.275-1.373 0-.025.009-.05.009-.075l-2.219.77a1.388 1.388 0 01-1.697-.636c-.294-.568-.412-1.288.487-1.865 1.202-.762 4.863-2.603 5.014-2.678.773-.348 1.908-.306 2.594.092l3.269 1.586v-.18c0-.711.58-1.297 1.286-1.297h1.266v.003zm-.101 5.264a.511.511 0 01-.521.526.506.506 0 01-.521-.526.51.51 0 01.52-.527c.295 0 .522.23.522.527zm-6.745 3.16c.033-.144.092-.485-.068-.628a.602.602 0 00-.319-.11h-.042c-.202 0-.344.06-.504.143-.1.05-.202.118-.32.188 0 0-.008 0-.025.008-.042.017-.134.06-.176.076a1.13 1.13 0 01-.252.042h-.017a.96.96 0 01-.454-.118c-.126-.075-.235-.142-.336-.196a1.045 1.045 0 00-.504-.143c-.168.009-.286.05-.353.11-.168.143-.11.482-.076.627.118.482.345.992.673 1.51.277.431.487.695.865 1.092.067.068.151.143.193.177h.009a1.25 1.25 0 01.151-.151v-.009l.025-.025a6.1 6.1 0 00.857-1.084c.34-.527.563-1.034.673-1.51zm.479-1.273c.37.323.487.84.344 1.465a5.897 5.897 0 01-.79 1.77 6.93 6.93 0 01-.958 1.214c0 .008-.008.008-.008.016-.042.042-.185.188-.303.272a.866.866 0 01-.336.151.396.396 0 01-.109.017h-.084a.381.381 0 01-.1-.017.866.866 0 01-.337-.15 1.755 1.755 0 01-.303-.273 7.254 7.254 0 01-.974-1.23c-.378-.601-.647-1.195-.782-1.77-.151-.627-.025-1.145.345-1.465.21-.187.504-.296.815-.313h.084c.31 0 .622.084.916.246.11.06.218.126.344.205.009 0 .026.008.034.008.017 0 .034-.008.042-.008a6.75 6.75 0 01.345-.205 1.89 1.89 0 01.907-.246h.084c.32.017.608.129.824.313z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.064 17.75c.272-.174.247-.216.149-.407-.098-.182-.272-.24-.443-.182l-2.986 1.045c-.033.008-.064 0-.098.008-.238.14-.501.233-.79.233H8.154a.62.62 0 01-.616-.622c0-.34.28-.622.616-.622h3.742c.166 0 .345-.182.345-.347 0-.14-.073-.3-.238-.308l-.205.008c-.633.008-1.958.042-3.215-.748-.009-.008-.6-.325-2.41-.39v3.138l3.471 1.683c.247.14.535.2.88.2.305 0 .552-.043.748-.132.014-.012 3.666-1.843 4.792-2.558zM4.938 19.782v-4.714a.227.227 0 00-.232-.233H3.465c-.123 0-.233.1-.233.233v4.714a.23.23 0 00.233.224h1.24c.135 0 .233-.1.233-.224zm10.426-3.801a1.572 1.572 0 011.908.714c.445.863.23 1.61-.552 2.106-1.177.748-4.77 2.555-4.924 2.63a3.13 3.13 0 01-1.275.25c-.569 0-1.062-.115-1.457-.347l-2.91-1.404a1.461 1.461 0 01-1.448 1.32H3.465A1.467 1.467 0 012 19.783v-4.714c0-.813.658-1.477 1.465-1.477h1.24c.471 0 .88.224 1.152.572 2.443.042 3.255.507 3.395.596.922.58 1.964.555 2.516.55.098-.009.19-.009.246-.009.748.017 1.342.588 1.44 1.345l1.91-.664zm-11.272-.558c.283 0 .488.205.488.49a.475.475 0 01-.488.496.48.48 0 01-.493-.496c0-.285.21-.49.493-.49zm16.365-6.81V3.9a.223.223 0 00-.225-.224h-1.24a.227.227 0 00-.233.224v4.715c0 .123.1.232.233.232h1.24a.232.232 0 00.225-.232zm-2.93-.35V5.128l-3.471-1.683c-.255-.14-.535-.199-.88-.199-.302 0-.551.042-.747.132-.017.008-3.675 1.843-4.793 2.557-.272.174-.255.216-.149.406a.352.352 0 00.446.182l2.983-1.044c.034-.009.064-.009.098-.009.23-.148.501-.232.782-.232h3.75a.62.62 0 01.616.621c0 .34-.28.622-.616.622h-3.75c-.157 0-.337.182-.337.34 0 .148.073.307.238.307h.197c.641-.016 1.963-.042 3.224.745.008.012.593.328 2.409.393zm2.705-5.831A1.46 1.46 0 0121.69 3.9v4.715c0 .812-.65 1.476-1.457 1.476h-1.24a1.47 1.47 0 01-1.152-.571c-2.442-.042-3.255-.507-3.395-.597-.921-.58-1.963-.566-2.515-.55h-.255c-.748-.008-1.342-.587-1.429-1.344l-1.907.673a1.578 1.578 0 01-1.91-.711c-.446-.872-.23-1.612.543-2.107 1.185-.748 4.779-2.555 4.933-2.63.823-.373 1.997-.331 2.73.1l2.911 1.404a1.46 1.46 0 011.448-1.32h1.238v-.005zm-.588 4.837c.28 0 .48.208.48.49 0 .28-.2.482-.48.482a.464.464 0 01-.479-.482c.003-.282.202-.49.48-.49zm-9.106 3.297c-.146.126-.11.387-.076.532.087.37.263.762.518 1.163.21.33.373.535.664.837.02.02.09.096.152.138.022.005.044.008.064.014.062-.062.126-.132.146-.152.297-.308.453-.51.663-.837.255-.4.432-.793.519-1.163.033-.145.07-.409-.073-.532a.463.463 0 00-.275-.098.867.867 0 00-.445.115l-.381.224-.333.008-.423-.232a.839.839 0 00-.41-.115h-.033a.483.483 0 00-.277.098zm.283 3.347a5.95 5.95 0 01-.81-1.022c-.325-.513-.552-1.025-.666-1.52-.163-.687 0-1.3.442-1.684a1.6 1.6 0 01.967-.376 2 2 0 011.061.258l.009.006c.002-.003.008-.003.01-.006a1.988 1.988 0 011.062-.258c.365.02.706.152.964.376.445.383.608.997.445 1.683a4.929 4.929 0 01-.67 1.521 5.87 5.87 0 01-.795 1.008 2.97 2.97 0 01-.313.283c-.14.104-.306.177-.468.213l-.23.025h-.003a1.448 1.448 0 01-.238-.025 1.246 1.246 0 01-.465-.213 2.766 2.766 0 01-.302-.269z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareShieldFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.417 15.41c0-.012.25-3.309.221-4.382a.544.544 0 00-.02-.157c-.008.003-.038-.008-.097-.008-.112.003-.177.053-.194.135l-.518 2.526c-.005.028-.022.045-.03.073a1.336 1.336 0 01-.177.675l-.003.003v.003l-1.538 2.602a.596.596 0 01-.826.213.613.613 0 01-.21-.835l1.538-2.605.003-.003v-.003c.033-.056-.003-.199-.06-.235 0 0-.117-.067-.162.008l-.078.135c-.258.46-.793 1.415-1.883 1.978 0 0-.252.15-.703.736a8.025 8.025 0 00-1.02 1.773l-.086.208h2.913c.037 0 .073.008.112.01l1.793-1.531a8.87 8.87 0 01.479-.379c.12-.09.235-.23.344-.414a1.31 1.31 0 00.202-.527zm1.426-4.415c.03 1.134-.216 4.39-.227 4.53-.04.35-.16.691-.364 1.036-.19.319-.412.577-.656.761-.145.11-.285.216-.423.331l-1.479 1.266c.143.221.227.487.227.77v.712c0 .795-.641 1.44-1.431 1.44h-3.457a1.438 1.438 0 01-1.431-1.44v-.712c0-.448.207-.84.527-1.106l.423-1.014a9.235 9.235 0 011.179-2.045c.622-.812 1.02-1.033 1.129-1.084.742-.386 1.143-1.1 1.358-1.484l.101-.177a1.29 1.29 0 011.524-.54l.305-1.494a1.395 1.395 0 011.37-1.106c.849.053 1.305.546 1.325 1.356zM6.515 18.252h2.913l-.087-.207a7.916 7.916 0 00-1.02-1.773c-.45-.585-.702-.737-.705-.74-1.084-.562-1.622-1.518-1.877-1.977l-.078-.137c-.045-.076-.163-.009-.165-.006-.056.034-.093.177-.06.233v.002l.004.003 1.537 2.605a.606.606 0 01-.515.919.602.602 0 01-.518-.297l-1.538-2.605v-.003l-.003-.003a1.336 1.336 0 01-.176-.675c-.009-.025-.026-.044-.031-.072l-.518-2.527a.172.172 0 00-.16-.137.726.726 0 00-.14.016c.003.012-.009.056-.011.149-.028 1.073.221 4.37.224 4.403.017.135.084.314.199.507a1.4 1.4 0 00.347.415c.16.12.322.244.476.375l1.793 1.532c.036.009.07 0 .11 0zm3.936-.68l.425 1.014c.317.263.524.66.524 1.106v.712c0 .795-.641 1.442-1.428 1.442H6.515a1.438 1.438 0 01-1.428-1.442v-.712c0-.283.084-.546.224-.767l-1.48-1.266c-.137-.118-.28-.225-.42-.334a2.649 2.649 0 01-.658-.762 2.579 2.579 0 01-.361-1.016c-.011-.16-.258-3.415-.23-4.552.02-.813.48-1.306 1.255-1.348.731.006 1.305.443 1.443 1.104l.305 1.493a1.288 1.288 0 011.524.538l.1.176c.216.384.617 1.098 1.384 1.496.084.04.482.263 1.104 1.076a9.17 9.17 0 011.174 2.042zM14.739 7.14a.612.612 0 000-.86.6.6 0 00-.854 0L11.03 9.163 9.983 8.104a.597.597 0 00-.852 0 .612.612 0 000 .86l1.474 1.487c.117.118.271.18.428.18a.603.603 0 00.426-.18l3.28-3.31zm2.39 2.88c-.393 2.272-4.474 4.274-4.939 4.496a.597.597 0 01-.515 0c-.465-.222-4.54-2.224-4.93-4.496-.294-1.68-.283-5.55-.28-5.712a.608.608 0 01.748-.591c.87.135 1.322-.173 1.958-.596.638-.429 1.434-.961 2.762-.961h.005c1.325 0 2.118.535 2.756.96.636.424 1.096.735 1.998.592a.611.611 0 01.711.594c.003.165.014 4.028-.274 5.714z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareShieldLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.786 15.495c.003-.02.255-3.395.227-4.501-.006-.32-.093-.356-.311-.37-.252.008-.375.126-.41.3l-.529 2.582c-.005.026-.02.048-.03.073.005.216-.042.434-.157.625l-.003.003-1.571 2.66a.409.409 0 01-.56.146.417.417 0 01-.144-.568l1.572-2.658.003-.003v-.003c.092-.157.022-.429-.132-.521-.143-.09-.344-.09-.445.076l-.084.145c-.252.451-.779 1.392-1.832 1.936-.009.005-.289.162-.785.812a8.34 8.34 0 00-1.07 1.854l-.207.499h3.283a.95.95 0 01.18.02l1.896-1.622c.14-.12.291-.236.44-.348.181-.137.316-.3.442-.51.129-.226.207-.436.227-.627zm-2.756 5.079v-.726a.437.437 0 00-.435-.437h-3.529a.437.437 0 00-.434.437v.726c0 .24.196.437.434.437h3.53a.437.437 0 00.434-.437zm3.804-9.6c.03 1.149-.219 4.462-.23 4.602-.037.32-.151.642-.345.97a2.439 2.439 0 01-.619.72c-.173.131-.31.235-.44.347l-1.658 1.417c.188.221.306.504.306.818v.726c0 .697-.564 1.266-1.255 1.266h-3.53a1.262 1.262 0 01-1.255-1.266v-.726c0-.412.2-.776.502-1.005l.448-1.082a9.161 9.161 0 011.18-2.039c.621-.81 1.002-1.014 1.075-1.045.82-.426 1.25-1.19 1.476-1.602l.1-.176c.32-.519.984-.67 1.53-.362l.364-1.779a1.2 1.2 0 011.194-.963c.467.025 1.134.21 1.157 1.18zm-11.482 9.6v-.726a.435.435 0 00-.434-.437h-3.53a.437.437 0 00-.434.437v.726c0 .24.193.437.434.437h3.53c.24 0 .434-.196.434-.437zm-6.516-3.97c.177.135.33.253.48.379l1.896 1.621a.95.95 0 01.179-.02h3.283l-.207-.498a8.144 8.144 0 00-1.07-1.854c-.496-.65-.78-.81-.782-.81-1.056-.546-1.583-1.484-1.835-1.935l-.087-.149c-.1-.165-.3-.165-.448-.075-.151.092-.221.364-.129.52.003 0 .003.004.003.004l.003.002 1.569 2.661a.411.411 0 01-.35.625.41.41 0 01-.353-.204l-1.57-2.659s-.002 0-.002-.003a1.215 1.215 0 01-.157-.627c-.008-.025-.025-.048-.03-.073l-.527-2.58a.39.39 0 00-.367-.305c-.277.017-.347.067-.356.373-.028 1.109.224 4.484.227 4.518.022.176.098.386.233.608.117.21.254.37.397.481zm6.838 2.241c.302.23.501.594.501 1.006v.725a1.26 1.26 0 01-1.252 1.264h-3.53a1.258 1.258 0 01-1.251-1.264v-.725c0-.314.117-.597.305-.818l-1.658-1.417a9.388 9.388 0 00-.418-.33 2.45 2.45 0 01-.638-.738 2.392 2.392 0 01-.342-.955c-.011-.154-.26-3.468-.233-4.616.023-.97.69-1.151 1.084-1.176a1.204 1.204 0 011.261.96l.364 1.779c.546-.303 1.21-.154 1.527.364l.1.177c.23.411.662 1.173 1.494 1.607.056.026.437.23 1.058 1.04a9.2 9.2 0 011.177 2.039l.45 1.078zm1.32-5.145c1.276-.639 4.106-2.33 4.358-3.807.227-1.322.266-4.174.271-5.28-1.07.033-1.714-.392-2.341-.812-.63-.42-1.224-.818-2.286-.818h-.006c-1.061 0-1.655.397-2.285.818-.636.425-1.286.876-2.342.817.006 1.112.048 3.956.274 5.275.255 1.476 3.079 3.168 4.356 3.807zm5.167-3.661c-.386 2.243-4.52 4.274-4.991 4.498a.424.424 0 01-.174.04.437.437 0 01-.176-.04c-.471-.224-4.6-2.255-4.986-4.498-.3-1.726-.29-5.71-.29-5.877a.41.41 0 01.16-.325c.099-.079.228-.107.348-.079.997.157 1.53-.196 2.202-.647.672-.448 1.431-.955 2.74-.955h.005c1.308 0 2.067.51 2.74.958.672.448 1.21.804 2.215.644a.43.43 0 01.339.093.42.42 0 01.154.31c-.003.166.008 4.15-.286 5.878 0-.003 0-.003 0 0zm-2.997-3.684a.406.406 0 01.58 0c.16.16.16.423 0 .586l-3.398 3.43a.412.412 0 01-.288.121.424.424 0 01-.292-.12l-1.524-1.54a.418.418 0 010-.586.41.41 0 01.58 0l1.236 1.246 3.106-3.137z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCareShieldRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.417 15.41c0-.012.25-3.309.221-4.382a.544.544 0 00-.02-.157c-.008 0-.038-.008-.097-.008-.101.003-.177.053-.193.135l-.519 2.526c-.005.028-.022.048-.03.073a1.336 1.336 0 01-.177.675l-.003.003v.003l-1.538 2.602a.6.6 0 01-.826.213.613.613 0 01-.21-.835l1.538-2.605s.003 0 .003-.003v-.003c.033-.056-.003-.198-.06-.235 0 0-.117-.067-.162.009l-.078.134c-.258.46-.793 1.415-1.882 1.978 0 0-.253.15-.704.736a7.916 7.916 0 00-1.02 1.773l-.086.208h2.913c.037 0 .073.008.112.01l1.793-1.531c.154-.132.316-.255.479-.379.12-.09.235-.23.344-.414.118-.19.185-.37.202-.527zm-2.7 4.994v-.709a.225.225 0 00-.224-.224h-3.457c-.123 0-.224.1-.224.224v.711c0 .124.1.225.224.225h3.457a.226.226 0 00.224-.227zm4.126-9.406c.03 1.134-.216 4.389-.227 4.529-.04.35-.16.692-.364 1.036a2.63 2.63 0 01-.656.762c-.145.11-.288.216-.423.334l-1.479 1.266c.14.221.227.487.227.77v.711c0 .796-.641 1.443-1.431 1.443h-3.457c-.79 0-1.428-.644-1.428-1.443v-.711c0-.448.207-.843.524-1.106l.423-1.014a9.235 9.235 0 011.179-2.045c.622-.813 1.02-1.037 1.129-1.084.742-.387 1.143-1.101 1.358-1.485l.101-.176c.322-.527.95-.731 1.524-.541l.305-1.493a1.396 1.396 0 011.37-1.106c.849.047 1.305.54 1.325 1.353zm-11.647 9.406v-.709a.224.224 0 00-.221-.224H6.518c-.123 0-.224.1-.224.224v.711c0 .124.1.225.224.225h3.457c.12 0 .22-.101.22-.227zM4.61 16.73l1.793 1.533c.037-.003.073-.012.11-.012h2.913l-.087-.207a8.025 8.025 0 00-1.02-1.773c-.45-.585-.703-.737-.706-.737-1.087-.563-1.622-1.518-1.877-1.977l-.078-.137c-.045-.076-.162-.009-.162-.006-.056.034-.093.176-.06.232v.003l.004.003 1.537 2.605a.61.61 0 01-.515.922.6.6 0 01-.518-.3l-1.538-2.605v-.003h-.003a1.373 1.373 0 01-.176-.675c-.009-.025-.026-.045-.031-.073l-.518-2.526a.172.172 0 00-.16-.138.628.628 0 00-.14.02c.003.011-.008.059-.011.148-.028 1.073.221 4.37.224 4.404.017.134.084.313.199.51a1.4 1.4 0 00.347.414c.157.118.32.241.473.375zm5.84.844l.427 1.014c.316.263.523.658.523 1.106v.711a1.44 1.44 0 01-1.428 1.443H6.515c-.79 0-1.428-.647-1.428-1.443v-.711c0-.286.084-.549.224-.77l-1.48-1.266c-.134-.115-.28-.224-.42-.33a2.662 2.662 0 01-.658-.766 2.549 2.549 0 01-.361-1.016c-.014-.16-.258-3.415-.23-4.552.02-.813.48-1.303 1.252-1.348.726.009 1.306.443 1.443 1.104l.308 1.493c.574-.19 1.199.014 1.521.538l.1.176c.217.384.617 1.098 1.382 1.496.084.04.482.263 1.103 1.073a9.084 9.084 0 011.18 2.048zm1.485-4.286c1.544-.782 3.801-2.3 4.006-3.48.204-1.187.25-3.68.258-4.856-.98-.025-1.605-.44-2.168-.818-.605-.406-1.132-.757-2.093-.76h-.003c-.963 0-1.487.354-2.095.757-.571.384-1.204.807-2.168.826.011 1.182.056 3.664.263 4.85.2 1.184 2.457 2.7 4 3.48zm5.194-3.27c-.393 2.273-4.477 4.275-4.939 4.5a.597.597 0 01-.515 0c-.465-.222-4.544-2.225-4.933-4.5-.291-1.68-.283-5.548-.283-5.71 0-.188.087-.362.233-.48a.61.61 0 01.515-.112c.871.132 1.325-.173 1.96-.596.64-.429 1.435-.961 2.76-.961h.006c1.324.003 2.12.535 2.759.96.636.424 1.095.735 1.994.592a.622.622 0 01.714.596c.006.163.014 4.028-.271 5.712zM13.885 6.28a.597.597 0 01.851 0 .612.612 0 010 .86l-3.282 3.311a.602.602 0 01-.855 0L9.126 8.964a.612.612 0 010-.86.597.597 0 01.851 0l1.045 1.059 2.863-2.883z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.605 16.472c-.938 0-1.398-.443-1.398-1.353 0-.91.457-1.353 1.398-1.353.938 0 1.395.443 1.395 1.353 0 .91-.457 1.353-1.395 1.353m-8.552-.006c-.938 0-1.398-.442-1.398-1.353 0-.91.457-1.355 1.398-1.355.941 0 1.398.442 1.398 1.355 0 .91-.457 1.353-1.398 1.353m14.031-4.56c-1.106-1.86-3.011-2.32-3.768-2.434-.613-.818-2.84-3.294-7.305-3.294-2.815 0-4.697 1.26-5.781 2.32-1.538 1.5-2.219 3.282-2.21 4.344-.087 1.431.148 2.383.156 2.425a.611.611 0 00.597.454H4.49c.23 1.208 1.168 1.939 2.566 1.939s2.333-.729 2.566-1.939h3.42c.23 1.213 1.168 1.944 2.566 1.944 1.4 0 2.336-.73 2.566-1.944h2.383a.623.623 0 00.4-.145c.063-.056 1.525-1.328.127-3.67"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.701 14.869h-2.627c-.157-1.255-1.042-2.023-2.406-2.023-1.361 0-2.25.768-2.406 2.023h-3.81c-.154-1.26-1.042-2.031-2.406-2.031s-2.252.77-2.406 2.03H3.07a9.379 9.379 0 01-.073-1.921c-.008-.924.653-2.53 1.93-3.807a7.047 7.047 0 015.098-2.1c4.678 0 6.583 3.047 6.661 3.176a.42.42 0 00.328.199c.025.003 2.34.173 3.493 2.053.874 1.426.4 2.17.193 2.4m-5.033 2.015c-1.056 0-1.614-.558-1.614-1.608s.558-1.608 1.614-1.608 1.613.557 1.613 1.608c0 1.05-.557 1.608-1.613 1.608m-8.622-.009c-1.056 0-1.616-.554-1.616-1.608 0-1.05.56-1.607 1.616-1.607s1.613.557 1.613 1.607c0 1.054-.557 1.608-1.613 1.608m14.168-4.835c-1.174-1.91-3.26-2.336-3.933-2.422-.512-.729-2.697-3.398-7.252-3.398-2.77 0-4.622 1.271-5.686 2.341-1.501 1.505-2.177 3.334-2.168 4.367-.084 1.451.143 2.41.154 2.451a.41.41 0 00.4.314h1.91c.166 1.247 1.051 2.006 2.407 2.006s2.24-.76 2.406-2.006h3.813c.16 1.252 1.047 2.014 2.406 2.014 1.358 0 2.243-.762 2.406-2.014h2.787c.087 0 .17-.028.24-.078.015-.014 1.578-1.182.11-3.575"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarMovingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.457 15.661c.703 0 1.03-.328 1.03-1.034 0-.705-.327-1.033-1.03-1.033-.704 0-1.031.328-1.031 1.033 0 .706.327 1.034 1.03 1.034zm-6.933-.006c.703 0 1.03-.327 1.03-1.033s-.327-1.034-1.03-1.034c-.703 0-1.031.328-1.031 1.034-.003.706.325 1.033 1.03 1.033zm11.616-3.79c1.048 1.715.353 2.877-.157 3.25a.597.597 0 01-.353.115h-2.014c-.218 1.016-1 1.633-2.16 1.633-1.16 0-1.94-.617-2.16-1.633h-2.615c-.222 1.014-1.003 1.624-2.16 1.624-1.157 0-1.936-.61-2.16-1.624h-1.31a.599.599 0 01-.583-.46c-.009-.033-.202-.848-.132-2.064-.008-.905.552-2.432 1.82-3.712.894-.902 2.443-1.977 4.76-1.977 3.605 0 5.44 2.042 5.98 2.773.678.112 2.306.532 3.244 2.076zM4.328 12.883a.6.6 0 010 1.2H3.022a.6.6 0 010-1.2h1.306zm.255-2a.6.6 0 010 1.2H2.599a.6.6 0 010-1.2h1.984zM5.81 9.507a.6.6 0 01-.6.6H3.67a.6.6 0 010-1.2h1.54a.6.6 0 01.6.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarMovingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.803 14.368c.171-.205.49-.79-.187-1.922-.933-1.554-2.813-1.7-2.832-1.7a.415.415 0 01-.325-.202c-.065-.109-1.622-2.65-5.44-2.65-2.028 0-3.384.956-4.162 1.754-1.04 1.067-1.577 2.4-1.572 3.165-.04.692.009 1.233.05 1.555h1.171c.152-1.067.908-1.714 2.05-1.714 1.147 0 1.9.647 2.054 1.714h3.02c.154-1.062.907-1.709 2.05-1.709 1.143 0 1.896.644 2.05 1.709h2.073zm-4.126 1.7c.838 0 1.264-.431 1.264-1.288 0-.855-.426-1.289-1.264-1.289-.84 0-1.263.434-1.263 1.289 0 .857.423 1.288 1.263 1.288zm-7.123-.006c.838 0 1.263-.43 1.263-1.288 0-.854-.425-1.289-1.263-1.289-.837 0-1.263.435-1.263 1.289 0 .854.426 1.289 1.263 1.289zm11.76-4.05c.996 1.661.363 2.76-.11 3.11a.397.397 0 01-.241.08h-2.238c-.157 1.06-.91 1.7-2.05 1.7-1.14 0-1.894-.64-2.05-1.7h-3.02c-.157 1.057-.91 1.695-2.051 1.695-1.137 0-1.89-.638-2.048-1.694H5.991a.412.412 0 01-.398-.32c-.008-.033-.201-.851-.129-2.09-.008-.882.558-2.448 1.81-3.73.888-.914 2.434-2 4.745-2 3.742 0 5.566 2.215 6.028 2.873.594.084 2.3.463 3.266 2.076zm-16.936 1.16c.226 0 .409.187.409.417 0 .23-.185.417-.41.417h-1.34a.411.411 0 01-.41-.417c0-.23.186-.417.41-.417h1.342zm.226-2.084c.227 0 .41.187.41.417 0 .23-.185.417-.41.417H2.565a.411.411 0 01-.409-.417v-.003c0-.23.182-.417.41-.417 0 .003 2.038.003 2.038.003zm.521-2.06c.227 0 .41.189.41.418 0 .23-.185.418-.41.418H3.543a.413.413 0 01-.41-.418c0-.23.186-.417.41-.417h1.582z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarMovingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.375 14.028c.126-.202.272-.678-.252-1.538-.854-1.398-2.582-1.535-2.6-1.538a.605.605 0 01-.475-.29c-.06-.099-1.53-2.444-5.126-2.444a5.383 5.383 0 00-3.908 1.62c-.975.983-1.479 2.201-1.473 2.896a7.95 7.95 0 00.028 1.291h.795c.216-1.025 1-1.644 2.163-1.644 1.165 0 1.946.619 2.162 1.644h2.608c.216-1.02 1-1.638 2.162-1.638 1.163 0 1.944.616 2.163 1.638l1.753.003zm-3.918 1.633c.703 0 1.03-.328 1.03-1.034 0-.705-.327-1.036-1.03-1.036-.703 0-1.031.328-1.031 1.036 0 .706.328 1.034 1.03 1.034zm-6.933-.006c.703 0 1.03-.327 1.03-1.036 0-.706-.327-1.034-1.03-1.034-.703 0-1.031.328-1.031 1.034s.328 1.036 1.03 1.036zm11.619-3.79c1.045 1.718.353 2.877-.16 3.25a.597.597 0 01-.353.115h-2.014c-.218 1.016-1 1.633-2.16 1.633-1.16 0-1.94-.614-2.16-1.633h-2.615c-.222 1.014-1.003 1.624-2.157 1.624-1.157 0-1.939-.61-2.157-1.624H6.056a.597.597 0 01-.583-.457c-.008-.034-.201-.849-.131-2.064-.009-.905.552-2.429 1.82-3.712a6.556 6.556 0 014.76-1.977c3.605 0 5.437 2.039 5.98 2.773.672.109 2.3.53 3.24 2.073zM4.33 12.883a.6.6 0 010 1.2H3.025a.6.6 0 010-1.2h1.306zm.252-2a.6.6 0 010 1.2H2.599a.597.597 0 01-.599-.6c0-.334.269-.6.6-.6h1.983zm1.23-1.372a.6.6 0 01-.6.6h-1.54a.6.6 0 010-1.2h1.54c.33-.002.6.266.6.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.269 14.528h-2.095c-.227-1.218-1.166-1.952-2.569-1.952s-2.344.734-2.569 1.952H9.625c-.224-1.221-1.166-1.96-2.572-1.96-1.406 0-2.347.739-2.571 1.96h-1.19a8.956 8.956 0 01-.048-1.658c-.006-.852.627-2.34 1.854-3.535.919-.9 2.518-1.967 4.91-1.967 4.513 0 6.356 2.852 6.429 2.97a.62.62 0 00.493.288c.084.003 2.056.14 3.09 1.874.658 1.104.425 1.756.249 2.028m-4.664 1.944c-.941 0-1.395-.443-1.395-1.353 0-.91.457-1.353 1.395-1.353S17 14.21 17 15.12c0 .91-.457 1.353-1.395 1.353m-8.552-.006c-.941 0-1.395-.442-1.395-1.353 0-.913.457-1.355 1.395-1.355.939 0 1.398.442 1.398 1.355-.003.91-.46 1.353-1.398 1.353m14.031-4.56c-1.106-1.86-3.014-2.322-3.767-2.434-.614-.818-2.84-3.294-7.306-3.294-2.815 0-4.697 1.26-5.781 2.32-1.54 1.5-2.222 3.282-2.21 4.344-.087 1.431.148 2.383.156 2.426a.612.612 0 00.597.453H4.49c.23 1.208 1.168 1.936 2.563 1.936 1.398 0 2.334-.728 2.566-1.936h3.42c.227 1.213 1.168 1.944 2.569 1.944 1.4 0 2.336-.73 2.566-1.944h2.38c.15 0 .292-.05.401-.145.065-.056 1.527-1.328.129-3.67"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarWithClockFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.26 18.434c.188-.32.443-1.103-.238-2.386-1.044-1.986-3.056-2.124-3.072-2.124a.615.615 0 01-.507-.322c-.073-.131-1.914-3.35-6.415-3.35-2.238 0-3.773 1.079-4.672 1.983-1.364 1.381-2.093 3.236-2.084 4.272-.042.84 0 1.507.056 1.927h1.176c.221-1.269 1.168-2.033 2.574-2.033 1.407 0 2.353.767 2.575 2.033h3.406c.213-1.269 1.154-2.025 2.557-2.025 1.406 0 2.353.76 2.566 2.025h2.078zm-3.243.616v-.008c0-.947-.457-1.398-1.398-1.398-.938 0-1.39.454-1.39 1.398v.008c0 .939.449 1.401 1.39 1.401.938 0 1.398-.462 1.398-1.4zm-8.54 0v-.016c0-.947-.457-1.401-1.399-1.401-.94 0-1.397.454-1.397 1.4 0 .947.456 1.41 1.397 1.41.933 0 1.39-.454 1.398-1.393zm11.621-4.938c.367.356.72.798 1.014 1.359 1.356 2.577-.064 3.969-.123 4.025a.616.616 0 01-.426.17h-2.378c-.23 1.261-1.168 2.017-2.566 2.017s-2.336-.756-2.557-2.016H9.644c-.23 1.252-1.168 2.008-2.566 2.008-1.397 0-2.339-.756-2.565-2.008H2.798a.617.617 0 01-.596-.485c-.009-.04-.238-1.104-.157-2.7-.009-1.244.753-3.4 2.445-5.112.712-.726 1.773-1.55 3.202-2-.009-.098-.009-.205-.009-.303C7.683 4.51 10.176 2 14.695 2c4.526 0 7.02 2.51 7.02 7.064 0 2.157-.547 3.855-1.617 5.048zm-3.734-3.871a.615.615 0 00.434-1.053l-1.546-1.56V5.526a.614.614 0 10-1.227 0v2.355c0 .166.065.32.18.437l1.728 1.74c.12.12.277.18.431.182z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarWithClockLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.684 18.94c.207-.302.644-1.201-.174-2.75-1.11-2.118-3.221-2.272-3.314-2.277a.429.429 0 01-.341-.219c-.076-.143-2.003-3.532-6.734-3.532-2.362 0-3.972 1.134-4.916 2.084-1.451 1.473-2.202 3.39-2.196 4.515-.05 1 .025 1.765.084 2.177H4.67c.157-1.294 1.05-2.084 2.437-2.084 1.378 0 2.277.79 2.437 2.084h3.854c.16-1.286 1.05-2.076 2.429-2.076 1.386 0 2.277.793 2.437 2.076 0 .003 2.42.003 2.42.003zm-4.857 2.062c1.075 0 1.635-.571 1.635-1.65 0-1.075-.557-1.647-1.635-1.647-1.07 0-1.628.572-1.628 1.65 0 1.076.56 1.647 1.628 1.647zm-8.72-.008c1.067 0 1.636-.572 1.636-1.65 0-1.079-.566-1.647-1.636-1.647-1.068 0-1.636.571-1.636 1.647s.568 1.65 1.636 1.65zm7.778-17.997c-4.056 0-6.117 2.07-6.117 6.165 0 .1.008.193.008.286a7.722 7.722 0 011.345-.126c4.63 0 6.843 2.974 7.35 3.775.37.05 1.137.236 1.938.723 1.059-1.017 1.602-2.588 1.602-4.658-.002-4.095-2.064-6.165-6.126-6.165zm5.208 11.327c.467.42.86.92 1.16 1.47 1.307 2.5-.026 3.819-.085 3.87a.399.399 0 01-.283.117h-2.621c-.16 1.28-1.062 2.062-2.437 2.062-1.37 0-2.27-.782-2.429-2.062H9.544c-.168 1.286-1.042 2.053-2.437 2.053-1.395 0-2.278-.765-2.437-2.053H2.734a.41.41 0 01-.4-.328c-.017-.042-.241-1.1-.16-2.706-.008-1.238.753-3.38 2.437-5.087.737-.739 1.846-1.58 3.339-2.016a8.551 8.551 0 01-.017-.48c0-4.585 2.403-7.008 6.952-7.008 4.547 0 6.958 2.423 6.958 7.006 0 2.244-.599 3.977-1.75 5.162zm-3.208-4.297a.417.417 0 01-.3.126.433.433 0 01-.293-.126l-1.76-1.773a.413.413 0 01-.126-.302V5.546c0-.236.185-.42.418-.42.235 0 .417.184.417.42v2.238l1.644 1.65c.16.165.16.425 0 .593z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCarWithClockRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.502 10.405a.602.602 0 01-.435-.182l-1.728-1.74a.617.617 0 01-.18-.437V5.688a.614.614 0 111.228 0v2.1l1.549 1.56a.625.625 0 010 .875.614.614 0 01-.434.182zm3.896 8.193c.188-.322.443-1.104-.238-2.387-1.045-1.983-3.056-2.123-3.073-2.123a.61.61 0 01-.507-.322c-.073-.132-1.913-3.35-6.414-3.35-2.239 0-3.774 1.078-4.673 1.983-1.364 1.384-2.092 3.235-2.084 4.272-.042.84 0 1.507.056 1.927h1.177c.221-1.269 1.168-2.034 2.574-2.034s2.353.765 2.574 2.034h3.406c.213-1.269 1.154-2.025 2.558-2.025 1.406 0 2.353.756 2.566 2.025h2.078zm-3.244.616v-.008c0-.947-.456-1.398-1.397-1.398-.942 0-1.39.454-1.39 1.398v.008c0 .939.448 1.4 1.39 1.4.94 0 1.397-.461 1.397-1.4zm-8.54 0v-.017c0-.946-.457-1.397-1.398-1.397-.938 0-1.398.453-1.398 1.397 0 .947.457 1.41 1.398 1.41.933 0 1.39-.454 1.398-1.393zm.434-9.986v.031c.35-.056.728-.081 1.118-.081 4.487 0 6.717 2.798 7.322 3.711a5.533 5.533 0 011.748.636c.924-.972 1.389-2.414 1.389-4.297 0-3.868-1.953-5.829-5.793-5.829C11 3.4 9.048 5.357 9.048 9.23zm11.185 5.048c.367.353.72.798 1.014 1.358 1.355 2.577-.065 3.97-.124 4.028a.621.621 0 01-.425.174H18.32c-.23 1.26-1.169 2.017-2.566 2.017-1.398 0-2.336-.756-2.558-2.017H9.782c-.23 1.252-1.168 2.009-2.566 2.009s-2.336-.757-2.566-2.009H2.936a.618.618 0 01-.597-.487c-.008-.04-.238-1.104-.154-2.7-.008-1.244.75-3.401 2.443-5.113.711-.725 1.773-1.549 3.204-2.002-.008-.098-.008-.205-.008-.303 0-4.552 2.493-7.064 7.011-7.064 4.527 0 7.02 2.512 7.02 7.064-.003 2.154-.55 3.852-1.622 5.045z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCasinoFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.297 18.452c.664-.876 1.04-2.053 1.12-3.51h-1.39c-.08.975-.346 1.793-.803 2.435l1.073 1.075zm-2.359-1.44c.594-.574.897-1.481.897-2.703 0-1.22-.303-2.131-.9-2.708-.07-.067-.16-.12-.238-.177a8.585 8.585 0 01-.465 2.112c-.33.894-.812 1.653-1.45 2.266a5.658 5.658 0 01-1.149.846 6.873 6.873 0 01-1.602.647c.56.362 1.31.552 2.26.552 1.18 0 2.07-.28 2.647-.834zm-3.257 3.423v-1.389c-.97-.078-1.785-.342-2.426-.793l-1.081 1.082c.88.652 2.056 1.022 3.507 1.1zm-4.3-6.655c.067 0 .12-.011.185-.011a6.03 6.03 0 00.742-.062 4.16 4.16 0 00.501-.109c.493-.14.902-.353 1.213-.65.474-.456.754-1.132.852-1.997.025-.224.045-.454.045-.703 0-.199-.02-.381-.037-.563-.047-.53-.162-.983-.344-1.37a2.534 2.534 0 00-.521-.776 2.524 2.524 0 00-.387-.288c-.563-.362-1.314-.552-2.257-.552-1.174 0-2.062.283-2.636.84-.594.574-.897 1.488-.897 2.709s.3 2.132.894 2.703c.073.07.162.12.246.185.325.24.723.414 1.194.518.09.02.173.042.269.059.296.036.599.067.938.067zm-.616 2.588v-1.392c-.149-.014-.314-.011-.454-.033-.048-.006-.087-.023-.132-.031a4.908 4.908 0 01-1.25-.392 4.041 4.041 0 01-.59-.337l-1.081 1.084c.504.376 1.109.653 1.804.838.403.11.837.185 1.302.23.135.01.266.025.4.033zm-5.499-6.73h1.39c.078-.981.336-1.805.79-2.452L4.372 6.111c-.656.885-1.028 2.064-1.107 3.526zm6.737-5.533v1.392c.98.081 1.798.353 2.442.815l1.082-1.08c-.883-.67-2.065-1.046-3.524-1.127zm4.112 6.77a6.202 6.202 0 01-.137.891 4.381 4.381 0 01-.667 1.543l.465.465.608.611c.151-.202.288-.42.409-.653.21-.403.38-.845.501-1.341.11-.46.18-.955.21-1.493v-.023h-1.39zm4.328-1.574c-.507-.386-1.12-.667-1.821-.857.081.496.123 1.025.134 1.585.219.101.42.219.608.35l1.079-1.078zM19.7 8.75c1.311 1.266 1.978 3.14 1.978 5.566 0 2.426-.667 4.294-1.98 5.557-1.258 1.21-3.079 1.824-5.41 1.824-2.33 0-4.148-.613-5.4-1.826-.672-.647-1.168-1.457-1.499-2.423-1.395-.258-2.546-.804-3.417-1.647-1.305-1.258-1.966-3.13-1.966-5.555 0-2.426.66-4.3 1.966-5.563 1.255-1.221 3.073-1.837 5.403-1.837 2.328 0 4.149.616 5.41 1.834.672.647 1.17 1.457 1.5 2.415 1.393.263 2.544.812 3.415 1.655zm-8.711 2.563a5.703 5.703 0 01-.65.801 2.849 2.849 0 01-.294.264c-.115.084-.244.14-.378.176-.023.006-.04.017-.065.02a.957.957 0 01-.16.025l-.055.003-.079-.003a1.216 1.216 0 01-.583-.218 2.536 2.536 0 01-.266-.236l-.025-.022a5.391 5.391 0 01-.74-.93c-.03-.05-.053-.101-.083-.151a4.436 4.436 0 01-.535-1.25c-.152-.636.002-1.207.417-1.563.24-.207.56-.333.902-.35.342-.017.678.065.989.238.31-.17.652-.255.986-.238.025.003.05.011.078.014.311.034.602.143.826.333.14.12.239.272.317.432.157.322.202.709.1 1.131-.019.082-.058.163-.083.247a3.81 3.81 0 01-.258.639c-.084.17-.168.341-.277.512-.028.045-.056.084-.084.126z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCasinoLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.375 8.623h-.044a.65.65 0 00-.39.143c-.221.19-.18.535-.134.723.033.143.092.291.151.44.104.263.23.532.403.803l.056.082c.2.302.367.512.65.8.025.029.11.113.18.163a.274.274 0 00.109.05l.03.004h.003a.273.273 0 00.13-.056c.07-.05.153-.135.176-.16a5.48 5.48 0 00.708-.888c.126-.199.227-.392.32-.586.103-.226.185-.445.238-.66.053-.23.075-.544-.135-.723a.652.652 0 00-.392-.143l-.033.003a.98.98 0 00-.519.137c-.08.048-.165.092-.255.148l-.086.05-.012.01s-.064.044-.126.041a.282.282 0 01-.123-.036l-.008-.003-.115-.056a9.257 9.257 0 00-.269-.154c-.006-.003-.011-.003-.011-.006a1.205 1.205 0 00-.502-.126zm-.972-.484c.233-.202.55-.322.888-.34.325-.019.684.068.998.244.033.017.064.037.095.054.033-.017.064-.037.098-.054.21-.117.437-.176.664-.21.112-.016.227-.039.333-.033.336.017.653.14.888.341.014.012.02.026.03.037.376.347.513.89.37 1.504-.033.146-.098.294-.15.443-.08.21-.172.42-.286.636-.076.142-.14.282-.23.425a6.337 6.337 0 01-.801 1.003c-.045.045-.182.185-.3.269a1.299 1.299 0 01-.42.188.844.844 0 01-.146.022l-.05.003H9.38a1.184 1.184 0 01-.216-.025 1.185 1.185 0 01-.403-.185 2.41 2.41 0 01-.294-.264 6.472 6.472 0 01-.801-1.005c-.068-.104-.11-.205-.168-.308-.224-.404-.407-.804-.496-1.196-.151-.639-.003-1.202.4-1.55zm12.065 10.773c.851-1.011 1.314-2.415 1.378-4.18h-1.798c-.065 1.157-.384 2.096-.95 2.807l1.37 1.373zm-4.754 1.947c1.757-.065 3.154-.521 4.166-1.367l-1.365-1.367c-.711.56-1.647.874-2.8.935v1.799zm-.826-2.625c.137.005.263.025.406.025.149 0 .28-.02.42-.028 1.079-.064 1.933-.367 2.513-.924.605-.583.927-1.457.997-2.577.011-.143.03-.275.03-.426 0-.143-.019-.266-.027-.4-.065-1.135-.392-2.02-1-2.608a2.977 2.977 0 00-.485-.367c-.059 1.058-.257 1.997-.594 2.815-.324.8-.775 1.49-1.36 2.05-.29.28-.614.524-.964.74-.65.4-1.401.689-2.25.868a.435.435 0 00-.059.011c.05.042.107.081.16.12.557.415 1.3.648 2.213.7zm0 2.625V19.06c-1.151-.061-2.09-.375-2.801-.933l-1.37 1.37c1.014.846 2.412 1.3 4.171 1.362zm-5.563-3.283c.21.501.479.95.804 1.339l1.344-1.348a11.463 11.463 0 01-2.148.009zm-1.177-1.02c.283.067.577.12.886.16.302.039.616.061.938.073V14.99a6.418 6.418 0 01-1.21-.176c-.11-.028-.224-.045-.325-.079-.165-.053-.314-.126-.468-.196-.014-.008-.028-.014-.042-.02a3.871 3.871 0 01-.756-.462l-1.37 1.37c.633.527 1.415.908 2.347 1.129zm-4.31-5.894c.064 1.768.523 3.171 1.372 4.183l1.373-1.373c-.569-.711-.888-1.65-.95-2.81H2.838zm1.36-5.022C3.354 6.657 2.9 8.066 2.839 9.833h1.795c.059-1.162.375-2.106.938-2.823L4.2 5.64zM8.97 3.67c-1.767.062-3.173.527-4.185 1.385l1.364 1.367c.715-.572 1.659-.891 2.821-.953V3.671zm.406 2.6c-.143 0-.269.017-.406.026-1.081.061-1.938.364-2.518.93-.605.588-.93 1.473-.994 2.607-.009.135-.026.258-.026.4 0 .152.02.284.028.427.06.921.295 1.664.71 2.224.089.12.173.25.28.353.092.084.204.151.305.23.061.047.117.097.187.14a3.42 3.42 0 00.813.358c.36.11.773.17 1.215.196.137.008.263.025.406.025.056 0 .104-.01.16-.01.09-.004.174-.012.26-.018.197-.014.39-.022.57-.05.024-.003.047-.011.075-.017.778-.134 1.409-.415 1.87-.857.606-.58.928-1.457.998-2.577.006-.081.017-.16.017-.247.003-.061.011-.114.011-.179 0-.143-.02-.266-.028-.4l-.017-.25c-.067-.686-.232-1.274-.512-1.75a2.887 2.887 0 00-.47-.608c-.046-.045-.105-.076-.15-.115-.574-.485-1.37-.756-2.363-.815-.14-.006-.272-.023-.42-.023zm.42-2.6v1.802c1.16.062 2.107.384 2.818.955l1.367-1.364c-1.016-.86-2.42-1.328-4.184-1.392zm4.166 11.749l-.011-.009-1.356-1.358c-.132.103-.26.216-.406.302-.51.3-1.11.496-1.796.589-.19.025-.398.03-.6.042v1.798c.08-.003.16-.003.233-.008.303-.017.591-.045.869-.087.916-.135 1.717-.398 2.389-.79.246-.14.465-.303.678-.48zm-.465-1.633l1.053 1.056c.244-.289.454-.61.636-.964a5.8 5.8 0 00.356-.863c.227-.691.353-1.476.383-2.35H14.13a5.91 5.91 0 01-.221 1.378 4.149 4.149 0 01-.729 1.429l.317.314zm1.854-6.83a5.31 5.31 0 00-.787-1.31l-1.305 1.308-.065.061c.177.224.328.471.454.737.092.19.177.387.241.6.112.358.182.756.221 1.176.009.1.017.202.023.308h1.795c0-.04-.003-.075-.005-.112a8.756 8.756 0 00-.278-1.905 6.363 6.363 0 00-.294-.862zm3.546 2.177c-.638-.54-1.425-.927-2.364-1.157.137.628.213 1.308.227 2.042.283.132.538.294.773.48l1.364-1.365zm1.95 4.773c-.062-1.765-.515-3.174-1.364-4.19l-1.37 1.372c.563.715.88 1.658.938 2.818h1.796zm-1.14-5.165c1.314 1.266 1.98 3.143 1.98 5.571 0 2.429-.666 4.3-1.98 5.56-1.26 1.213-3.081 1.827-5.415 1.827-2.33 0-4.148-.614-5.403-1.826-.672-.648-1.17-1.46-1.499-2.423-1.397-.26-2.549-.807-3.42-1.65C2.664 14.54 2 12.668 2 10.242c0-2.431.661-4.305 1.966-5.571 1.258-1.219 3.076-1.838 5.407-1.838 2.333 0 4.154.62 5.417 1.835.672.65 1.17 1.46 1.501 2.417 1.395.264 2.54.813 3.415 1.656z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCasinoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.25 17.574c.66-.877 1.036-2.047 1.117-3.498H18.98c-.084.972-.347 1.787-.804 2.425l1.073 1.073zm-4.368 1.975c1.446-.081 2.62-.448 3.493-1.1l-1.075-1.08c-.642.449-1.451.712-2.418.793v1.387zm-2.874-3.129c.558.359 1.306.552 2.253.552 1.173 0 2.058-.28 2.635-.832.594-.571.897-1.479.897-2.695 0-1.215-.303-2.126-.897-2.7-.07-.067-.16-.12-.238-.18a8.67 8.67 0 01-.462 2.107c-.328.891-.81 1.647-1.445 2.26a5.815 5.815 0 01-1.146.844 7.051 7.051 0 01-1.597.644zm1.64 3.129v-1.387c-.967-.078-1.78-.341-2.421-.79l-1.079 1.079c.88.653 2.054 1.02 3.5 1.098zm-4.37-1.97l.854-.854c-.255.014-.513.026-.78.026-.2 0-.394-.012-.587-.02.145.311.319.588.512.849zm-2.23-2.347c.4.11.837.185 1.3.23.131.011.263.025.397.034v-1.387c-.148-.014-.314-.011-.454-.03-.047-.009-.087-.023-.131-.031a4.864 4.864 0 01-1.202-.373l-.042-.02a3.92 3.92 0 01-.591-.333l-1.079 1.079c.505.37 1.11.647 1.802.831zM3.263 10.02c.084 1.453.457 2.627 1.115 3.504l1.073-1.073c-.454-.641-.717-1.457-.798-2.429h-1.39v-.002zm1.101-4.754c-.653.882-1.025 2.059-1.103 3.516h1.386c.078-.978.336-1.802.787-2.446l-1.07-1.07zM8.748 3.27c-1.457.078-2.639.454-3.516 1.118l1.079 1.078c.644-.46 1.462-.731 2.44-.81V3.27h-.003zm.61 2.58c-1.17 0-2.055.28-2.63.834-.59.575-.893 1.485-.893 2.7 0 1.22.3 2.127.89 2.695.073.07.163.12.244.183.322.24.72.411 1.19.518.093.02.174.042.272.059.286.044.589.072.925.072.067 0 .12-.01.185-.014.26-.008.51-.025.742-.061a3.95 3.95 0 00.501-.112c.488-.138.897-.35 1.208-.647.473-.457.75-1.13.848-1.992.026-.224.045-.454.045-.703 0-.199-.022-.378-.036-.56-.048-.527-.163-.98-.342-1.364a2.725 2.725 0 00-.518-.776 2.439 2.439 0 00-.384-.286c-.557-.356-1.302-.546-2.246-.546zm.622-2.58v1.386c.978.082 1.793.353 2.437.813l1.076-1.076c-.88-.667-2.059-1.042-3.513-1.123zm3.493 11.123l-1.075-1.078a3.344 3.344 0 01-.432.263 4.685 4.685 0 01-1.193.415c-.112.025-.238.033-.356.053a4.865 4.865 0 01-.22.03c-.074.009-.141.023-.217.031v1.387c.398-.025.774-.07 1.13-.137a6.232 6.232 0 001.688-.555c.241-.123.468-.255.675-.409zm-.196-1.947l.465.465.608.608c.151-.201.286-.42.406-.652.21-.401.381-.844.499-1.337.11-.459.18-.955.21-1.49v-.022h-1.387a6.136 6.136 0 01-.137.888c-.137.59-.356 1.106-.664 1.54zm1.082-7.173l-.821.82-.247.247c.138.199.252.417.356.644.053.112.118.213.16.334.143.406.218.87.266 1.364.064-.003.12-.014.185-.014.218 0 .417.028.622.044.198.017.4.031.585.065v.006h.025a.076.076 0 00-.025-.006 8.715 8.715 0 00-.188-1.417 6.107 6.107 0 00-.395-1.202v-.02h-.005c-.009-.017-.014-.033-.025-.05a4.813 4.813 0 00-.493-.815zm4.036 3.176c-.507-.384-1.118-.666-1.815-.854.081.493.123 1.022.134 1.58.216.1.418.215.605.35l1.076-1.076zm1.972 4.392c-.078-1.453-.451-2.63-1.106-3.512l-1.068 1.07c.454.644.712 1.465.79 2.442h1.384zM19.65 7.9c1.308 1.262 1.972 3.128 1.972 5.545 0 2.42-.664 4.283-1.972 5.541-1.255 1.207-3.07 1.818-5.392 1.818-2.325 0-4.138-.614-5.387-1.82-.67-.645-1.165-1.457-1.493-2.415-1.392-.258-2.54-.801-3.406-1.642-1.303-1.255-1.96-3.117-1.96-5.538 0-2.42.66-4.285 1.96-5.546 1.252-1.216 3.064-1.832 5.387-1.832 2.322 0 4.137.616 5.395 1.832.669.644 1.168 1.454 1.495 2.41 1.387.257 2.533.803 3.4 1.646zm-11.588.18c-.143.12-.096.4-.068.518.02.084.062.174.09.26.1.3.235.603.437.917a4.858 4.858 0 00.675.849c.022.025.093.098.151.143l.02.014h.003a5.415 5.415 0 00.636-.711c.064-.09.131-.183.201-.292.185-.289.311-.569.412-.843.04-.112.09-.225.115-.334.03-.137.064-.384-.059-.504-.003-.003-.003-.011-.008-.014a.452.452 0 00-.266-.092.8.8 0 00-.44.112c-.037.02-.073.042-.11.064-.047.025-.092.05-.14.081l-.148.09-.347.006-.12-.056-.04-.017a8.809 8.809 0 00-.288-.166c-.02-.01-.04-.014-.062-.025a.847.847 0 00-.347-.087h-.034a.407.407 0 00-.263.087zm-1.27.804c-.167-.711.004-1.344.466-1.745.269-.23.624-.367 1.005-.386a2.03 2.03 0 011.101.266 2.048 2.048 0 011.101-.266c.028.002.056.014.084.016a1.7 1.7 0 01.922.37c.154.135.263.303.35.482.173.361.224.79.112 1.263-.02.09-.065.182-.093.275a4.548 4.548 0 01-.285.711 5.486 5.486 0 01-.311.572l-.096.14a6.099 6.099 0 01-.725.89c-.05.056-.199.202-.325.295a1.352 1.352 0 01-.423.196c-.025.005-.048.016-.07.022a.917.917 0 01-.176.025l-.062.003-.09-.003a.867.867 0 01-.176-.03 1.292 1.292 0 01-.474-.213 3.199 3.199 0 01-.296-.264l-.026-.025a5.888 5.888 0 01-.826-1.036c-.036-.056-.059-.112-.092-.168-.275-.465-.485-.933-.594-1.39z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCertificateFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.59 7.653l-4.054-3.986V5.43c0 .659.213 1.213.614 1.608.406.4.983.61 1.664.61h1.776v.004zm1.65.106c.03.073.047.154.047.238v12.305c0 .751-.636 1.384-1.387 1.384H5.91c-.737 0-1.387-.647-1.387-1.384l.04-3.296-.04-7.972v-5.65C4.522 2.658 5.183 2 5.91 2h7.3a.86.86 0 01.607.252l5.21 5.123c.11.104.174.241.213.384zm-7.079 2.373c1.74 0 2.515.79 2.515 2.56s-.775 2.557-2.515 2.557c-1.74 0-2.515-.79-2.515-2.557 0-1.77.776-2.56 2.515-2.56zm2.882 4.568c-.005-.011-.014-.02-.02-.028.292-.512.452-1.165.452-1.977 0-2.294-1.222-3.37-3.314-3.37s-3.31 1.076-3.31 3.37c0 .692.122 1.257.332 1.73-.022.029-.047.054-.061.088l-1.538 3.394a.614.614 0 00.078.64c.143.181.376.262.647.195l.936-.35.37 1a.595.595 0 00.53.325h.016a.6.6 0 00.53-.353l1.35-2.983 1.35 2.983c.095.21.3.347.53.353h.016c.221 0 .426-.123.549-.373l.35-.952.983.367a.602.602 0 00.597-.213.614.614 0 00.078-.639l-1.45-3.207zm-4.117-1.479l-.076.465a.669.669 0 00.263.653.627.627 0 00.678.04l.373-.208.37.207a.634.634 0 00.675-.04.675.675 0 00.266-.655l-.076-.462.314-.325a.672.672 0 00.154-.683.638.638 0 00-.516-.443l-.42-.064-.193-.415c-.218-.465-.947-.462-1.16 0l-.19.41-.42.064a.65.65 0 00-.516.445.68.68 0 00.154.684l.32.327z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCertificateLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.166 21.016c.207 0 .4-.185.4-.378V8.758h-2.543c-.972 0-1.81-.316-2.423-.915-.616-.603-.941-1.429-.941-2.384V2.985H5.84c-.182 0-.4.205-.4.379v5.761l.041 8.149-.042 3.367c0 .182.202.372.4.372h12.326v.003zm.187-13.087l-4.876-4.764v2.291c0 .728.238 1.347.691 1.79.457.445 1.098.683 1.852.683h2.333zm1-.016a.38.38 0 01.034.162v12.563c0 .653-.558 1.205-1.219 1.205H5.843c-.65 0-1.218-.564-1.218-1.205l.042-3.364-.042-8.143v-5.77c0-.63.583-1.205 1.218-1.205h7.502c.18 0 .353.07.479.194l5.358 5.235c.09.09.14.204.171.328zm-4.65 10.044l.894.33-1.255-2.753c-.482.44-1.14.687-1.944.76l1.311 2.88.333-.911a.516.516 0 01.661-.306zm-4.87 1.213l1.319-2.893c-.796-.112-1.42-.42-1.869-.922l-1.339 2.939.897-.337c.26-.098.557.04.658.303l.333.91zm2.06-9.1c-1.901 0-2.789.896-2.789 2.82 0 1.925.885 2.818 2.79 2.818s2.79-.896 2.79-2.818c0-1.924-.885-2.82-2.79-2.82zm2.889 4.946l1.473 3.238a.517.517 0 01-.577.723l-1.095-.403-.395 1.07c-.106.207-.28.313-.468.313h-.014a.514.514 0 01-.454-.302l-1.481-3.25-1.482 3.253a.516.516 0 01-.451.302h-.014a.518.518 0 01-.454-.274l-.412-1.107-1.056.392a.508.508 0 01-.549-.168.524.524 0 01-.067-.543l1.58-3.465c.005-.011.017-.02.022-.028-.249-.502-.395-1.115-.395-1.871 0-2.345 1.252-3.44 3.404-3.44 2.151 0 3.403 1.098 3.403 3.44 0 .88-.18 1.585-.518 2.12zm-3.448-2.501l-.563.09.44.484c.07.07.103.185.086.283l-.103.641.551-.283a.312.312 0 01.25-.022l.594.325-.098-.661a.339.339 0 01.09-.283l.439-.451-.613-.126a.326.326 0 01-.236-.174l-.274-.588-.283.583a.313.313 0 01-.28.182zm-.667.905l-.336-.345a.648.648 0 01-.149-.658.62.62 0 01.496-.426l.454-.07.204-.44c.208-.442.908-.445 1.118 0l.207.443.454.067c.23.036.42.199.496.426.076.23.02.482-.148.655l-.337.348.082.49a.642.642 0 01-.258.627.626.626 0 01-.65.04l-.4-.222-.401.224a.618.618 0 01-.653-.04.637.637 0 01-.257-.626l.078-.493z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCertificateRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.903 20.47c.096 0 .19-.095.19-.167V8.868h-2.276c-.998 0-1.86-.33-2.493-.952-.64-.63-.978-1.487-.978-2.482V3.216H5.912c-.073 0-.185.109-.19.168V9.03l.039 7.977-.04 3.3c0 .05.098.16.19.16h11.992v.003zM17.59 7.654l-4.054-3.986V5.43c0 .659.213 1.213.614 1.608.406.4.983.61 1.664.61h1.776v.004zm1.65.106c.03.073.047.154.047.238v12.306c0 .75-.636 1.383-1.386 1.383H5.909c-.737 0-1.387-.647-1.387-1.383l.04-3.297-.04-7.972v-5.65C4.522 2.658 5.183 2 5.91 2h7.3c.227 0 .448.092.608.252l5.21 5.123a.815.815 0 01.212.384zm-4.314 9.801l.644.241-1.112-2.456c-.44.372-1.011.593-1.703.672l1.16 2.563.24-.664a.606.606 0 01.77-.356zm-4.762 1.023l1.174-2.591c-.681-.112-1.239-.373-1.65-.796l-1.182 2.61.647-.243a.602.602 0 01.767.356l.244.664zm1.997-8.451c-1.74 0-2.515.79-2.515 2.56s.776 2.557 2.515 2.557c1.74 0 2.515-.79 2.515-2.557 0-1.77-.775-2.56-2.515-2.56zm2.882 4.568l1.451 3.208a.614.614 0 01-.078.638.602.602 0 01-.597.213l-.983-.367-.35.953c-.126.249-.328.372-.549.372h-.017a.6.6 0 01-.53-.353l-1.35-2.983-1.35 2.983a.597.597 0 01-.529.353h-.017a.598.598 0 01-.53-.325l-.369-1-.935.35c-.272.065-.505-.017-.648-.196a.614.614 0 01-.078-.638l1.538-3.395c.014-.034.042-.06.061-.087-.212-.474-.333-1.042-.333-1.731 0-2.294 1.219-3.37 3.311-3.37 2.093 0 3.314 1.076 3.314 3.37 0 .812-.16 1.465-.451 1.977.005.009.014.017.02.028zm-3.428-2.333l-.544.087.451.406a.38.38 0 01.096.31l-.101.628.437-.288c.014-.009.025-.02.039-.028l.003-.003a.334.334 0 01.356.017l.459.255-.11-.58a.388.388 0 01.099-.314l.428-.442-.574-.056a.355.355 0 01-.258-.19l-.269-.578-.201.571a.348.348 0 01-.311.205zm-.69.854l-.313-.322a.68.68 0 01-.154-.683.646.646 0 01.515-.446l.42-.064.191-.41c.213-.464.941-.464 1.16 0l.193.415.42.065a.647.647 0 01.516.442.678.678 0 01-.155.684l-.313.325.075.462a.675.675 0 01-.266.656.634.634 0 01-.675.039l-.37-.208-.372.208a.633.633 0 01-.678-.04.663.663 0 01-.263-.652l.07-.47z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangePlanFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.479 10.4a.42.42 0 00.42-.42v-.832c0-.714.168-1.238.504-1.56.322-.31.835-.468 1.521-.468h.729l-.435.376a.418.418 0 10.54.641c.004-.003.007-.003.007-.005.137-.118.826-.71.95-.835.369-.37.366-.832-.006-1.207-.25-.25-.92-.818-.947-.844a.418.418 0 00-.591.048.418.418 0 00.047.591c.003.003.225.19.451.392h-.747c-.91 0-1.62.236-2.104.703-.504.488-.762 1.216-.762 2.166v.832c.003.235.19.423.423.423zm4.485 2.97l-2.426-2.43a.555.555 0 00-.395-.165H2.852c-.502.003-.852.353-.852.851v8.157c0 .51.342.855.852.855h5.436c.493 0 .84-.348.84-.84v-6.034a.55.55 0 00-.164-.395zm-1.85 5.434H4.023a.42.42 0 110-.84h3.096a.42.42 0 11-.003.84zm0-1.457H4.023a.42.42 0 110-.84h3.096a.42.42 0 11-.003.84zm0-1.456H4.023a.42.42 0 110-.84h3.096a.42.42 0 11-.003.84zm.177-2.238c-.736 0-1.036-.3-1.036-1.037v-.372l1.409 1.409H7.29zm14.4-5.101a.216.216 0 00-.005-.042c0-.006 0-.009-.003-.014-.002-.017-.008-.031-.01-.048v-.005l-.018-.048-.002-.006-.02-.042-.003-.008c-.005-.014-.014-.025-.022-.037-.003-.002-.003-.005-.006-.01l-.025-.034-.008-.012a.5.5 0 00-.037-.039l-4.37-4.37c-.014-.013-.025-.025-.042-.036l-.01-.008-.034-.026-.009-.005a.256.256 0 00-.036-.023l-.006-.002a.283.283 0 00-.042-.02h-.003l-.047-.017h-.006a.344.344 0 00-.048-.01l-.01-.004a.218.218 0 00-.043-.005c-.014 0-.036-.003-.056-.003h-5.21c-.672 0-1.092.414-1.092 1.081v14.798c0 .678.42 1.098 1.095 1.101h9.162c.44 0 .673-.199.793-.364.163-.227.182-.499.182-.709V8.605c-.005-.017-.005-.036-.008-.053zm-2.708 8.815h-5.81a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h5.81c.308 0 .56.252.56.56 0 .308-.252.56-.56.56zm0-2.754h-5.81a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h5.81c.308 0 .56.252.56.56 0 .308-.252.56-.56.56zm0-2.733h-5.81a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56h5.81a.561.561 0 010 1.12zm-.033-3.832c-.519 0-.936-.143-1.21-.418-.275-.274-.415-.689-.415-1.207V5.59l2.456 2.457h-.831z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangePlanLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.86 3.782h2.321c.065 0 .125.023.174.06l.007.008a.091.091 0 01.018.014l4.37 4.37.014.017a.283.283 0 01.022.027l-.036-.045c.02.02.036.042.048.066a.28.28 0 01.036.136l-.003.017V19.41c0 .18-.014.387-.131.549-.118.162-.306.246-.563.246h-9.429c-.518 0-.815-.3-.815-.82V4.586c0-.51.297-.8.812-.804h3.155zm-8.844 7.101c.023 0 .046.003.067.009l-.067-.009a.28.28 0 01.162.051l.02.017a.1.1 0 01.017.014l2.429 2.428.016.02a.283.283 0 01.008.01l-.024-.03a.28.28 0 01.05.07l.012.03c.005.01.008.02.01.03l.001.005.008.064v6.03c0 .34-.219.561-.56.561l-2.675.003H2.728c-.353 0-.572-.221-.572-.577v-8.157c0-.35.219-.569.572-.569h3.288zm10.887-6.538h-5.195c-.218 0-.252.06-.252.244v14.799c0 .212.045.26.255.26h.319l.781-.001h.245l2.689-.001h5.392a.286.286 0 00.109-.015.595.595 0 00.025-.221V8.714l-1.902.001c-1.52 0-2.465-.944-2.465-2.465V4.345zm-11.168 7.1l-3.019.001v8.18h5.449V13.87l-.692.001c-.56 0-.995-.151-1.292-.445-.296-.294-.445-.731-.445-1.292v-.69zm1.259 6.486a.28.28 0 01.28.28.28.28 0 01-.28.28H3.899a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.095zm0-1.457a.28.28 0 01.28.28.28.28 0 01-.28.28H3.899a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.095zm12.409-.12a.28.28 0 01.28.28.28.28 0 01-.28.28h-6.076a.28.28 0 01-.28-.28.28.28 0 01.28-.28h6.076zm-12.41-1.336a.28.28 0 01.28.28.28.28 0 01-.28.28H3.9a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.095zm12.41-1.418a.28.28 0 01.28.28.28.28 0 01-.28.28h-6.076a.28.28 0 01-.28-.28.28.28 0 01.28-.28h6.076zm-11.637-.289l-1.47-1.47v.294c0 .813.364 1.177 1.177 1.177h.293zm11.637-2.447a.28.28 0 01.28.28.28.28 0 01-.28.28h-6.076a.28.28 0 01-.28-.28.28.28 0 01.28-.28h6.076zM7.548 5.189c.028.025.695.59.939.834.322.323.325.692.005 1.009-.123.123-.86.756-.944.826a.28.28 0 01-.364-.426c.217-.186.52-.45.718-.625H6.798c-.726 0-1.27.172-1.62.508-.36.347-.546.907-.546 1.66v.833a.277.277 0 01-.277.28.28.28 0 01-.28-.28v-.832c0-.91.24-1.605.717-2.065.457-.44 1.132-.664 2.006-.664l1.11.001a30.6 30.6 0 00-.724-.634.28.28 0 11.364-.425zm13.327 2.965l-3.41-3.414v1.51c0 1.21.694 1.905 1.904 1.905h1.506z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangePlanRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.765 3.675a.55.55 0 01.395.165l4.37 4.37a.55.55 0 01.165.395v10.978c0 .21-.02.481-.182.708-.118.166-.35.364-.793.364-.269.003-.54.003-.812.003h-8.35c-.676 0-1.096-.423-1.096-1.1v-14.8c0-.667.42-1.081 1.093-1.084h5.21zm-10.625 7.1c.149 0 .291.06.398.163l2.428 2.429a.55.55 0 01.166.395v6.03c0 .497-.345.841-.84.841l-2.676.006H2.852c-.51 0-.852-.345-.852-.857v-8.157c0-.499.35-.85.852-.85H6.14zm10.064-5.977h-4.621v14.74h8.991V9.168H18.95c-.824 0-1.516-.258-2.003-.745-.488-.487-.743-1.18-.743-2V4.798zm-10.79 7.098H3.12v7.622h4.888v-5.026l-.717.001c-.6 0-1.067-.165-1.389-.487-.322-.323-.487-.79-.487-1.39l-.001-.72zm1.704 6.068a.42.42 0 110 .84H4.022a.42.42 0 110-.84h3.096zm11.865-1.718a.561.561 0 010 1.12h-5.81a.562.562 0 01-.56-.56c0-.307.253-.56.56-.56h5.81zm-11.865.261a.42.42 0 110 .84H4.022a.42.42 0 110-.84h3.096zm0-1.457a.42.42 0 110 .84H4.022a.42.42 0 110-.84h3.096zm11.865-1.557c.308 0 .56.252.56.56 0 .308-.252.56-.56.56h-5.81a.562.562 0 01-.56-.56c0-.308.253-.56.56-.56h5.81zm-11.32.16l-1.409-1.41v.373c0 .737.3 1.037 1.037 1.037h.372zm11.32-2.897a.561.561 0 010 1.12h-5.81a.562.562 0 01-.56-.56c0-.308.253-.56.56-.56h5.81zM7.762 5.255c.028.025.697.594.947.843.372.375.375.838.005 1.207-.126.126-.815.717-.95.835a.444.444 0 01-.274.098.42.42 0 01-.274-.74c.145-.124.3-.257.438-.378h-.73c-.686 0-1.199.157-1.52.468-.334.322-.505.846-.505 1.56v.832a.42.42 0 11-.84 0v-.832c0-.95.255-1.68.762-2.165.484-.465 1.19-.703 2.103-.703h.741c-.227-.2-.443-.383-.447-.386a.418.418 0 01-.047-.591.418.418 0 01.59-.048zM19.78 8.047L17.324 5.59v.833c0 .518.144.936.415 1.207.272.272.69.418 1.21.418h.832z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangeWifiPasswordFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.73 12.395c-.014-1.076-.32-1.91-.91-2.476-.572-.546-1.384-.824-2.418-.824H7.903V6.462c0-1.888 1.628-3.426 3.63-3.426h.185c2 0 3.63 1.538 3.63 3.426a.52.52 0 001.037.034v-.034c0-2.46-2.092-4.462-4.667-4.462h-.184C8.959 2 6.867 4.003 6.867 6.465V9.19c-.588.124-1.076.367-1.457.734-.59.569-.89 1.404-.89 2.482v.037l.002.232-.002 5.653c0 1.078.3 1.913.89 2.481.569.55 1.381.827 2.418.827h7.577c1.033 0 1.846-.278 2.417-.824.591-.568.9-1.4.91-2.476v-5.935c-.002 0-.002-.003-.002-.006zm-6.605 6.75c-.118.118-.289.177-.502.177-.213 0-.384-.056-.501-.176-.11-.11-.168-.272-.168-.49 0-.454.263-.664.67-.664.405 0 .669.21.669.663.002.219-.06.381-.168.49zm2.627-1.64a.52.52 0 01-.734-.012c-.512-.53-1.316-.798-2.39-.798-1.072 0-1.882.269-2.394.8a.518.518 0 11-.748-.72c.717-.741 1.773-1.12 3.14-1.12 1.364 0 2.417.376 3.134 1.112a.52.52 0 01-.008.737c0-.003 0-.003 0 0zm1.431-2.264a.52.52 0 01-.733-.011c-.832-.858-2.118-1.292-3.821-1.292-1.709 0-2.997.437-3.827 1.3a.518.518 0 11-.747-.72c1.033-1.073 2.574-1.616 4.574-1.616 1.994 0 3.53.54 4.563 1.605a.518.518 0 01-.009.734z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangeWifiPasswordLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.1 2.156c2.498 0 4.535 1.941 4.535 4.325a.276.276 0 01-.278.277.276.276 0 01-.277-.277c0-2.081-1.784-3.77-3.98-3.77h-.19c-2.194 0-3.981 1.692-3.981 3.77l-.002 2.78c.114-.008.232-.012.352-.012h7.429c.997 0 1.776.263 2.316.781.56.535.849 1.334.863 2.373v6.255c-.014 1.039-.303 1.837-.863 2.372-.54.521-1.32.782-2.316.782H8.279c-.997 0-1.776-.264-2.314-.782-.557-.538-.84-1.339-.84-2.375l.003-5.801-.002-.282-.001-.166c0-1.04.283-1.838.84-2.376.363-.35.835-.583 1.41-.698V6.484c0-2.387 2.033-4.328 4.534-4.328h.19zm3.605 7.69H8.279c-.84 0-1.482.207-1.905.616-.44.414-.664 1.07-.664 1.944v.034c.002.048.003.146.003.308v.109L5.71 18.66c0 .872.222 1.53.661 1.953.423.409 1.065.616 1.905.616h7.429c1.723 0 2.568-.84 2.59-2.569v-6.246c-.022-1.728-.867-2.569-2.59-2.569zm-3.7 8.697c.285 0 .473.148.473.47a.475.475 0 01-.12.345c-.082.084-.205.123-.353.123-.149 0-.27-.039-.353-.123-.079-.076-.12-.19-.12-.345 0-.322.187-.47.473-.47zm.002-2.384c1.334 0 2.359.359 3.045 1.07a.298.298 0 01-.005.417.298.298 0 01-.418-.005c-.574-.591-1.456-.89-2.622-.89-1.165 0-2.056.302-2.627.895a.316.316 0 01-.213.087.294.294 0 01-.213-.498c.69-.715 1.714-1.076 3.053-1.076zm0-2.83c1.98 0 3.499.53 4.513 1.578a.298.298 0 01-.006.417.298.298 0 01-.417-.005c-.9-.927-2.277-1.398-4.09-1.398-1.82 0-3.199.473-4.098 1.406a.298.298 0 01-.213.087.294.294 0 01-.212-.499c1.014-1.053 2.537-1.585 4.523-1.585z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChangeWifiPasswordRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.718 2.025c2.575 0 4.667 2.003 4.667 4.465a.52.52 0 01-1.036.034V6.49c0-1.888-1.628-3.426-3.63-3.426h-.185c-2 0-3.63 1.538-3.63 3.426l-.001 2.633h7.499c1.034 0 1.846.278 2.417.824.591.568.9 1.4.91 2.476v5.933c-.013 1.075-.319 1.91-.91 2.476-.571.549-1.383.826-2.417.826H7.828c-1.034 0-1.849-.277-2.418-.826-.59-.569-.89-1.406-.89-2.482l.002-5.65-.001-.183-.001-.086c0-1.078.3-1.913.89-2.481.38-.366.867-.612 1.457-.735V6.49c0-2.462 2.092-4.465 4.667-4.465h.184zm3.687 8.132H7.828c-1.544.003-2.264.717-2.27 2.252l.001.137.003.146v.003l-.003 5.655c0 1.55.72 2.269 2.269 2.269h7.577c1.543 0 2.271-.723 2.291-2.274V12.43c-.02-1.551-.748-2.274-2.291-2.274zm-3.779 7.863c.406 0 .67.21.67.663 0 .219-.06.381-.169.49-.117.121-.288.177-.5.177-.214 0-.385-.059-.502-.176-.107-.11-.168-.272-.168-.49 0-.454.263-.664.67-.664zm.003-2.334c1.364 0 2.417.376 3.134 1.112a.52.52 0 01-.01.734.52.52 0 01-.735-.011c-.512-.53-1.316-.798-2.39-.798-1.072 0-1.882.269-2.394.8a.519.519 0 01-.745-.717c.717-.742 1.773-1.12 3.14-1.12zm.003-2.756c1.994 0 3.53.54 4.563 1.605a.52.52 0 01-.012.734.52.52 0 01-.733-.011c-.832-.857-2.118-1.292-3.821-1.292-1.709 0-2.997.437-3.826 1.3a.519.519 0 11-.745-.72c1.033-1.073 2.574-1.616 4.574-1.616z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChatFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.812 2.845H4.832a2.822 2.822 0 00-2.826 2.812v9.65c0 1.383.924 2.507 2.187 2.759v2.35c0 .51.482.975 1.009.975.518 0 .77-.336.854-.449l2.207-2.823h10.55a2.82 2.82 0 002.823-2.812V5.654a2.82 2.82 0 00-2.824-2.81zm-1.03 6.036H5.848a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56H17.78a.561.561 0 010 1.12zm-3.824 4.37h-8.11a.562.562 0 01-.56-.56c0-.309.253-.56.56-.56h8.11a.561.561 0 010 1.12z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChatLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.167 2.719a2.638 2.638 0 012.634 2.636v9.459a2.64 2.64 0 01-2.636 2.636H8.08c-.418.622-2.219 3.291-2.328 3.45-.21.306-.474.37-.656.37-.411 0-.77-.341-.77-.728v-3.109a2.324 2.324 0 01-1.501-.767c-.432-.482-.67-1.14-.67-1.852v-9.46a2.64 2.64 0 012.64-2.634h14.372zm-.002.56l-14.37.003a2.08 2.08 0 00-2.079 2.075v9.457c0 1.202.793 2.076 1.888 2.076a.28.28 0 01.28.28v3.372c0 .065.099.168.21.168.054 0 .118-.014.194-.126l1.116-1.653.25-.371 1.043-1.547a.28.28 0 01.232-.123h11.238a2.076 2.076 0 002.073-2.076v-9.46c0-1.145-.93-2.072-2.075-2.075zm-4.762 8.703a.28.28 0 01.28.28.28.28 0 01-.28.28h-8.67a.28.28 0 01-.28-.28.28.28 0 01.28-.28h8.67zm3.823-4.37a.28.28 0 01.28.28.28.28 0 01-.28.28H5.733a.28.28 0 01-.28-.28.28.28 0 01.28-.28h12.493z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChatRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.84 2.853a2.839 2.839 0 012.843 2.83v9.649a2.84 2.84 0 01-2.843 2.83H8.297l-2.202 2.817c-.341.454-.74.454-.868.454-.546 0-1.028-.465-1.028-.995v-2.336c-1.263-.257-2.188-1.384-2.188-2.773V5.682c0-1.56 1.278-2.83 2.846-2.83H18.84zm-.002 1.12H4.854c-.95 0-1.722.768-1.722 1.71v9.649c0 .975.7 1.709 1.627 1.709.308 0 .56.252.56.56v2.552l2.264-2.894a.566.566 0 01.442-.216h10.813c.95 0 1.722-.767 1.722-1.708V5.682c0-.944-.773-1.709-1.722-1.709zm-4.852 8.185a.561.561 0 010 1.12h-8.11a.562.562 0 01-.56-.56c0-.308.253-.56.56-.56h8.11zm3.824-4.37c.308 0 .56.253.56.56a.562.562 0 01-.56.561H5.877a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56H17.81z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCheckedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.064 4.426c-1.67-1.608-4.098-2.423-7.22-2.423-3.124 0-5.553.815-7.22 2.426-1.73 1.669-2.607 4.162-2.607 7.408 0 3.247.877 5.737 2.608 7.407 1.666 1.607 4.095 2.423 7.218 2.423s5.552-.816 7.221-2.423c1.731-1.67 2.611-4.16 2.611-7.407 0-3.246-.877-5.742-2.61-7.411zm-2.467 3.818l-5.77 7.72a.51.51 0 01-.404.207h-.008a.514.514 0 01-.404-.193l-2.638-3.32a.515.515 0 01.803-.641l2.225 2.795 5.37-7.187a.514.514 0 01.72-.104.52.52 0 01.106.723z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCheckedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.994 2.156c3.14 0 5.574.813 7.238 2.418 1.725 1.663 2.602 4.162 2.602 7.423.003 6.434-3.4 9.837-9.84 9.837-6.434 0-9.838-3.4-9.838-9.837 0-6.437 3.4-9.84 9.838-9.84zm0 .56c-6.154 0-9.278 3.124-9.278 9.28 0 6.155 3.12 9.278 9.278 9.278 6.16 0 9.28-3.12 9.28-9.277.003-6.16-3.12-9.28-9.28-9.28zm4.82 5.202c.115.09.138.258.048.373l-6.14 7.935a.27.27 0 01-.21.104.261.261 0 01-.21-.104l-2.586-3.378a.264.264 0 01.05-.372.264.264 0 01.373.05l2.373 3.1 5.93-7.66a.267.267 0 01.373-.048z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCheckedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.83 2c3.122 0 5.551.815 7.22 2.423 1.734 1.67 2.611 4.162 2.611 7.409 0 3.246-.88 5.737-2.61 7.406-1.67 1.608-4.099 2.423-7.222 2.423s-5.552-.815-7.218-2.423c-1.731-1.667-2.608-4.157-2.608-7.403 0-3.247.877-5.74 2.608-7.41C6.277 2.819 8.709 2 11.829 2zm0 1.09c-5.8 0-8.74 2.94-8.74 8.745 0 5.798 2.94 8.74 8.74 8.74 5.8 0 8.744-2.942 8.744-8.74 0-5.801-2.944-8.745-8.745-8.745zm4.646 4.434c.227.17.275.493.104.72l-5.765 7.72a.51.51 0 01-.403.207H10.4a.514.514 0 01-.404-.193L7.36 12.66a.515.515 0 01.803-.641l2.225 2.795 5.37-7.188a.514.514 0 01.72-.103z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCheckRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.416 19.5a.997.997 0 01-.77-.353l-5.033-6.065a.916.916 0 01.155-1.322 1.012 1.012 0 011.379.149L9.39 17.02 19.633 3.877a1.01 1.01 0 011.373-.19.915.915 0 01.198 1.317L10.207 19.121a.988.988 0 01-.77.379h-.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChemistryFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.32 19.605h-.127c-.361-.008-.759-.123-1.062-.38-.305-.258-.515-.653-.515-1.25 0-1.182.843-1.613 1.569-1.613h.134c.726.016 1.566.456 1.566 1.622 0 1.173-.843 1.605-1.566 1.621m-4.54-7.383l.338-.457a.604.604 0 00.126-.373V3.404h3.505v7.988c0 .14.042.267.126.373l.344.465c-1.383.207-3.075.207-4.44-.008m.185 4.826h-.075c-.521-.008-1.053-.347-1.053-1.093 0-.736.529-1.075 1.053-1.075h.075c.53.008 1.062.347 1.062 1.084 0 .737-.532 1.076-1.062 1.084m11.667 2.888l-5.804-7.658-.818-1.084v-7.79h.785a.627.627 0 00.633-.622.627.627 0 00-.633-.622H8.22a.634.634 0 00-.633.622c0 .339.286.622.633.622h.756v7.79l-.81 1.075-5.837 7.832a1.12 1.12 0 00-.016 1.16c.201.364.599.588 1.02.588h17.251c.462 0 .894-.24 1.112-.639.219-.395.202-.86-.067-1.274"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChemistryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.962 20.887a.181.181 0 00-.009-.185l-5.79-7.652c-.896.263-2.058.406-3.28.406-1.137 0-2.22-.126-3.08-.356l-5.785 7.737c-.009.025 0 .067.017.095.016.034.05.067.103.067h17.633a.222.222 0 00.19-.112zm-11.06-9.269l-.548.737c1.549.33 3.759.314 5.25-.042l-.525-.695a.412.412 0 01-.086-.246V2.999H9.99v7.356c.008.034 0 .067 0 .11v.904c0 .09-.034.182-.087.25zm11.757 8.6c.233.356.241.745.05 1.081a1.06 1.06 0 01-.938.54H3.138a.975.975 0 01-.851-.49.936.936 0 01.017-.98l6.826-9.14v-.762a.237.237 0 010-.11V3.003h-.997A.434.434 0 017.7 2.58c0-.238.196-.423.432-.423h7.745c.232 0 .431.185.431.423 0 .23-.199.423-.431.423h-1.025v8.227l6.806 8.989zm-7.305-.882c.235-.006 1.182-.093 1.182-1.233 0-1.137-.944-1.232-1.185-1.238h-.12c-.25.003-1.171.087-1.171 1.232 0 1.146.933 1.236 1.182 1.239h.112zm.017-3.317c1.005.022 2.025.678 2.025 2.084 0 1.409-1.017 2.059-2.025 2.076h-.143c-1.011-.014-2.03-.664-2.03-2.084 0-1.423 1.016-2.068 2.027-2.076h.146zm-4.462.703c.131-.003.658-.05.658-.686 0-.63-.524-.684-.661-.686H9.84c-.137.002-.652.05-.652.686s.52.686.658.689h.022c.014 0 .028-.003.04-.003zm.016-2.216c.723.017 1.499.507 1.499 1.533 0 1.033-.779 1.518-1.501 1.529h-.09c-.726-.011-1.504-.496-1.504-1.535 0-1.042.781-1.524 1.504-1.53h.025l.067.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChemistryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.52 20.605h17.073l-5.577-7.344c-.877.24-1.97.372-3.127.372-1.07 0-2.09-.117-2.93-.322l-5.44 7.294zm6.602-8.848l-.345.453c1.348.233 3.107.224 4.412-.025l-.32-.428a.592.592 0 01-.125-.365V3.401h-3.496v6.997c0 .008-.008.034-.008.05 0 .017.008.034.008.05v.894a.604.604 0 01-.126.365zm11.507 8.168c.269.423.286.893.067 1.283a1.262 1.262 0 01-1.103.638H3.333a1.19 1.19 0 01-1.02-.588 1.142 1.142 0 01.016-1.168l6.653-8.908v-.677a.347.347 0 010-.132V3.4h-.768a.631.631 0 01-.63-.622.628.628 0 01.633-.619h7.574a.622.622 0 010 1.244h-.781v7.781l6.619 8.74zm-6.165-1.947c0-1.112-.925-1.205-1.163-1.213-.03 0-.061-.003-.092-.003h-.023c-.243.003-1.145.084-1.145 1.205 0 1.12.913 1.21 1.157 1.213h.112c.23 0 1.154-.087 1.154-1.202zm-1.252-2.042l.112.003c.986.025 1.983.664 1.983 2.039 0 1.378-.997 2.017-1.983 2.034h-.14c-.99-.014-1.986-.65-1.986-2.04 0-1.392.994-2.025 1.983-2.033l.03-.003zm-4.255.692c.129-.003.644-.05.644-.673 0-.619-.515-.669-.647-.672h-.065c-.134 0-.638.048-.638.67 0 .624.51.672.644.675h.062zm.02-2.171c.705.017 1.467.493 1.467 1.501 0 1.012-.765 1.485-1.473 1.499h-.087c-.712-.011-1.474-.485-1.474-1.502 0-1.022.762-1.492 1.471-1.498h.095z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChevronLeftLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.953 21.843a.772.772 0 01-.515-.197l-9.944-9a.73.73 0 01-.244-.543.77.77 0 01.244-.56l9.944-9.168a.775.775 0 011.078 0c.291.3.291.773 0 1.073l-9.384 8.638 9.34 8.443c.296.294.299.77.005 1.067l-.006.006a.809.809 0 01-.518.24z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChevronLeftRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.606 21.686c-.266 0-.523-.1-.72-.283l-9.341-8.675a1.107 1.107 0 01-.056-1.566c.014-.016.03-.03.047-.047l9.345-8.824c.42-.4 1.087-.386 1.49.037a1.112 1.112 0 01-.04 1.571l-8.486 8.017 8.481 7.865c.437.407.468 1.099.07 1.547a1.072 1.072 0 01-.79.358"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChevronRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.032 21.84a.757.757 0 01-.564-.245.771.771 0 010-1.075l9.384-8.6-9.336-8.445a.76.76 0 111.03-1.118l9.945 8.995a.773.773 0 01.03 1.09l-.03.03-9.944 9.177a.796.796 0 01-.515.19z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChevronRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.262 21.714c-.3 0-.586-.129-.787-.35a1.112 1.112 0 01.061-1.546l8.488-8.02-8.482-7.865a1.112 1.112 0 01-.07-1.546 1.051 1.051 0 011.485-.098l.025.022 9.344 8.67c.224.207.35.498.35.803.003.306-.12.6-.341.81l-9.348 8.829a1.045 1.045 0 01-.725.291"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChildFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.028 16.44a.599.599 0 01.84 0 .58.58 0 010 .83c-.565.557-1.176.848-1.817.856h-.037c-.65 0-1.274-.288-1.851-.86a.58.58 0 010-.829.599.599 0 01.84 0c.353.35.703.519 1.03.519.32-.006.656-.18.995-.516zm-2.823-2.16a.589.589 0 01-.594.586.59.59 0 01-.594-.586v-1.83a.59.59 0 01.594-.586.59.59 0 01.594.586v1.831zm4.134-2.417a.59.59 0 01.594.586v1.831a.589.589 0 01-.594.586.59.59 0 01-.594-.586v-1.83a.59.59 0 01.594-.586zm5.378 3.445c.622-.008.939-.344.939-.997 0-.647-.308-.975-.916-.986l-.04.353c0 .087-.013.165-.013.247a15.22 15.22 0 01-.152 1.38c.023.003.042.003.054.003h.128zm-1.162-3.383v-.849a.42.42 0 01-.011-.104c-.003-.106-.011-.199-.014-.302H5.41l-.01 2.106a.617.617 0 01.012.101c.115 4.308 1.233 6.146 3.731 6.146.157 0 .306-.009.448-.017l4.74-.003c.364.023.641.023.933.003h.1a.876.876 0 01.085-.014c1.263-.126 2.955-.9 3.095-6.112a.42.42 0 01.011-.104v-.851zm-8.68-6.55C8.831 6.374 8.23 7.76 8.07 9.497h1.19c.152-1.4.628-2.501 1.438-3.277.395-.378.89-.664 1.44-.885.549.224 1.042.507 1.437.885.81.773 1.288 1.877 1.437 3.277h1.193c-.163-1.737-.762-3.123-1.804-4.12a5.64 5.64 0 00-.563-.465l-.101-.068-3.199.003-.098.065a5.372 5.372 0 00-.566.465zm-5.466 9.933c.006 0 .014 0 .02-.002a15.351 15.351 0 01-.154-1.373c-.009-.084-.025-.165-.031-.255l-.028-.344c-.574.025-.871.35-.871.98 0 .653.314.989.938.997l.126-.003zm15.336-3.16c.97.01 2.098.58 2.098 2.16s-1.134 2.157-2.109 2.171h-.165c-.062 0-.151-.005-.263-.02l-.014-.002c-.465 1.72-1.449 3.395-3.566 3.683a.568.568 0 01-.207.04h-.216c-.132.01-.305.02-.488.02-.182 0-.352-.012-.52-.02H9.632c-.131.01-.305.02-.49.02-2.7 0-3.919-1.698-4.47-3.737-.101.01-.185.016-.241.016h-.166c-.969-.014-2.106-.59-2.106-2.17 0-1.56 1.104-2.135 2.062-2.157l.005-1.482H2.754a.59.59 0 01-.594-.586c0-.325.266-.585.594-.585h1.501c.168-3.118 1-5.843 4.891-5.843.182 0 .359.008.53.022h1.411a1.224 1.224 0 01-.103-.498c0-.334.092-.594.277-.768.174-.168.431-.252.756-.252s.58.084.756.252c.183.177.275.434.275.768 0 .193-.04.355-.1.498h1.386c.257-.02.672-.02 1.014.003l.19.017c.073.005.126.008.202.02 3.21.445 3.815 4.083 3.952 6.218.011.092.011.176.011.263l.042 1.734v.216z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChildLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.196 16.734a.411.411 0 01.572 0 .392.392 0 010 .56c-.538.527-1.115.802-1.714.81h-.034c-.61 0-1.199-.272-1.748-.812a.392.392 0 010-.56.411.411 0 01.571 0c.401.392.821.568 1.2.58.378-.006.767-.2 1.153-.578zm6.687-1.087c.431-.005 1.157-.17 1.157-1.204 0-1.03-.718-1.193-1.143-1.196-.082 0-.135 0-.216.003a17.153 17.153 0 01-.221 2.37.25.25 0 00.09.013c.106.014.159.014.195.017l.138-.003zm-1-2.65v-1.946a24.918 24.918 0 00-.023-.488H5.073l-.005.496.01 1.944c.121 4.49 1.323 6.403 4.01 6.403.164 0 .318-.008.473-.02h4.823c.353.02.658.023.966 0h.118a.355.355 0 01.079-.016c2.165-.216 3.224-2.24 3.336-6.372zM9.084 4.662c-2.728 0-3.8 1.35-3.986 5.112h3.07c.135-1.795.737-3.212 1.802-4.22.296-.284.627-.53.991-.74a9.181 9.181 0 00-1.622-.14l-.064-.003c-.081-.006-.107-.009-.19-.009zm3.06.474a4.79 4.79 0 00-1.609.986c-.904.857-1.423 2.087-1.549 3.652h6.317c-.129-1.568-.647-2.795-1.55-3.652a4.732 4.732 0 00-1.61-.986zm2.8-.465c-.582 0-1.12.05-1.622.14.362.213.692.456.992.74 1.062 1.008 1.667 2.425 1.801 4.22h2.695c-.289-3.26-1.34-4.887-3.266-5.083a3.349 3.349 0 00-.098-.009l-.073-.008c-.154-.009-.241-.003-.378-.006h-.05v.006zM4.261 15.647c.033 0 .17-.008.246-.016a17.28 17.28 0 01-.224-2.39c-.07.003-.109.003-.17.003-.426.003-1.143.165-1.143 1.196 0 1.034.725 1.199 1.156 1.205l.135.002zm15.644-3.193c.896.009 1.941.535 1.941 1.986s-1.05 1.983-1.952 1.997h-.163a2.51 2.51 0 01-.246-.016c-.064-.009-.115-.026-.182-.04-.454 1.888-1.423 3.493-3.552 3.765a.367.367 0 01-.157.034h-.221a6.496 6.496 0 01-1.02 0H9.586c-.143.01-.317.02-.499.02-2.703 0-3.89-1.732-4.412-3.79-.12.013-.347.027-.4.03h-.163c-.899-.014-1.95-.543-1.95-1.997 0-1.454 1.046-1.978 1.942-1.986h.003c.059 0 .098.003.162.006l-.008-1.407.005-.49H2.563a.398.398 0 01-.403-.395.4.4 0 01.403-.395h1.729C4.457 6.21 5.398 3.87 9.087 3.87c.185 0 .356.008.527.008l1.582.014c-.145-.174-.232-.4-.232-.7 0-.34.092-.6.28-.776.18-.171.44-.255.77-.255s.591.087.773.255c.188.176.283.44.283.776 0 .3-.086.526-.232.7h1.543a7.877 7.877 0 011.02 0l.182.011c.056.006.12.014.176.023 3.356.437 3.852 4.266 3.928 7.123v1.412c.098-.003.131 0 .218-.006zm-10.339-.291a.4.4 0 01.404.395v1.851a.4.4 0 01-.404.395.398.398 0 01-.403-.395v-1.851a.4.4 0 01.403-.395zm4.824 0a.4.4 0 01.403.395v1.851a.4.4 0 01-.403.395.398.398 0 01-.404-.395v-1.851a.4.4 0 01.404-.395z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChildRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.031 16.443a.595.595 0 01.838 0 .58.58 0 010 .829c-.566.557-1.177.849-1.818.857h-.037c-.65 0-1.274-.288-1.851-.86a.58.58 0 010-.829.595.595 0 01.837 0c.353.35.703.518 1.031.518.325-.005.661-.179 1-.515zm6.69-1.132c.621-.008.938-.344.938-.997 0-.647-.309-.975-.916-.986l-.04.347c-.002.09-.014.16-.016.25-.026.414-.07.888-.152 1.38.023 0 .04.003.054.003l.131.003zm-1.163-3.383v-.85a.56.56 0 01-.011-.103c-.003-.106-.012-.199-.014-.302H5.413l-.01 2.106a.412.412 0 01.012.1c.115 4.309 1.232 6.15 3.731 6.15.157 0 .305-.01.448-.017l4.74-.003c.364.022.641.022.932.003h.101c.028-.006.056-.012.084-.014 1.264-.127 2.958-.9 3.096-6.115a.42.42 0 01.01-.104v-.851zM9.146 4.829c-2.521 0-3.504 1.197-3.7 4.673h2.627c.163-1.737.762-3.124 1.804-4.12a5.65 5.65 0 01.566-.466 8.844 8.844 0 00-1.048-.078l-.249-.009zm2.994.507c-.549.225-1.042.507-1.44.886-.809.776-1.285 1.876-1.436 3.277h5.75c-.15-1.4-.627-2.504-1.437-3.277-.395-.379-.888-.661-1.437-.886zm2.712-.5c-.37 0-.678.041-1.014.08.199.146.39.297.563.465 1.042.997 1.644 2.384 1.804 4.12h2.244c-.395-3.882-1.869-4.523-3-4.638l-.146-.014a5.678 5.678 0 00-.42-.014h-.031zM4.412 15.31l.02-.003c-.07-.459-.12-.918-.152-1.372 0-.095-.016-.154-.016-.247l-.042-.355c-.575.025-.874.35-.874.98 0 .653.313.989.938.997h.126zm15.336-3.16c.97.009 2.098.58 2.098 2.16s-1.134 2.157-2.109 2.171h-.165a2.15 2.15 0 01-.264-.02c-.005 0-.008-.002-.014-.005-.465 1.72-1.448 3.395-3.565 3.683a.568.568 0 01-.208.04h-.215c-.132.01-.306.02-.488.02s-.353-.012-.52-.02H9.635c-.131.01-.305.02-.49.02-2.7 0-3.919-1.698-4.47-3.737a2.36 2.36 0 01-.244.016h-.166c-.972-.014-2.106-.59-2.106-2.17 0-1.56 1.104-2.135 2.062-2.157l.005-1.482H2.754a.59.59 0 01-.594-.586c0-.325.266-.585.594-.585h1.501c.168-3.118 1-5.843 4.891-5.843.185 0 .359.008.53.022h1.411a1.224 1.224 0 01-.103-.498c0-.334.092-.594.274-.768.177-.168.431-.252.756-.252s.58.084.757.252c.182.177.277.434.277.768 0 .193-.04.355-.1.498h1.386c.26-.02.672-.02 1.014.003l.179.011c.076.009.14.017.213.028 3.21.446 3.846 4.076 3.983 6.21.003.09.017.157.025.255l-.003 1.75.003.217zm-9.54 2.132a.589.589 0 01-.594.586.59.59 0 01-.594-.586V12.45c0-.325.266-.585.594-.585a.59.59 0 01.594.585v1.832zm4.134-2.417a.59.59 0 01.594.585v1.832a.589.589 0 01-.594.586.59.59 0 01-.594-.586V12.45a.59.59 0 01.594-.585z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipDeviceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.115 2c1.106 0 1.91.272 2.454.832.535.549.795 1.353.795 2.46v1.22h1.706c.692 0 1.14.449 1.143 1.143v7.014c0 .695-.448 1.143-1.143 1.143h-1.706V18.4c0 2.216-1.062 3.292-3.25 3.292H6.93c-2.188 0-3.25-1.076-3.25-3.292V5.291C3.68 3.106 4.774 2 6.93 2zm-3.602 15.308c-.58 0-.956.303-.956.958 0 .314.087.55.241.706.168.17.412.252.715.252.302 0 .546-.081.714-.252.151-.157.238-.39.24-.706 0-.653-.375-.958-.954-.958zm8.554-9.958h-2.963l-1.905 1.426v5.893c0 .236.067.303.302.303h4.566c.235 0 .303-.067.303-.303V7.653c0-.236-.068-.303-.303-.303zm-.582 2.84a.28.28 0 01.28.28v3.544a.28.28 0 01-.28.28h-3.376a.28.28 0 01-.28-.28v-3.543a.28.28 0 01.28-.28zm-1.41 2.98h-.562v.564h.563v-.563zm-1.123 0h-.56v.564h.56v-.563zm2.252 0h-.568v.564h.568v-.563zm0-1.296h-2.812v.737h2.812v-.737zm-1.128-1.123h-.563v.563h.563v-.563zm1.128 0h-.568v.563h.566l.002-.563zm-2.252 0h-.56v.563h.56v-.563z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipDeviceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.217 2.156c2.025 0 2.969.958 2.969 3.011v1.364h1.722c.62 0 1.003.384 1.003 1.003v6.745c0 .617-.386 1-1.003 1h-1.723v3.544c0 1.04-.235 1.784-.722 2.277-.487.493-1.221.734-2.246.734H7.032c-1.026 0-1.762-.24-2.25-.734-.487-.493-.72-1.238-.72-2.277V5.167c0-2.025.972-3.01 2.97-3.01h7.185zm0 .56H7.032c-1.69 0-2.41.734-2.41 2.451v13.656c0 .885.183 1.501.56 1.885.38.384.981.569 1.85.569h7.185c.868 0 1.473-.185 1.848-.569.376-.384.56-1 .56-1.885v-3.544H14.89c-.62 0-1.003-.383-1.003-1.002V8.445a.29.29 0 01.081-.2l1.639-1.632a.277.277 0 01.199-.081h.82V5.166c0-1.742-.697-2.45-2.408-2.45zm-3.591 15.11c.5 0 .829.266.831.834 0 .272-.075.477-.21.614-.145.148-.358.221-.621.221-.264 0-.477-.073-.622-.221-.135-.137-.21-.339-.21-.614 0-.568.327-.834.832-.834zm8.282-10.737h-2.986l-1.473 1.47v5.718c0 .31.132.442.443.442h4.016c.311 0 .443-.131.443-.442V7.532c0-.311-.132-.443-.443-.443zm-.322 2.58a.28.28 0 01.28.28v3.543a.282.282 0 01-.28.283h-3.375a.28.28 0 01-.28-.28V9.95a.28.28 0 01.28-.28h3.375zm-2.532 2.98h-.561v.566h.56v-.567zm1.123 0h-.564v.565h.564v-.566zm1.128 0h-.567v.565l.568.001v-.567zm-2.813-1.295v.734h2.813v-.734h-2.813zm.561-1.126l-.562.001v.565h.563v-.566zm1.123 0h-.563v.566h.564v-.566zm1.13.001h-.569v.565h.569v-.565z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipDeviceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.115 2c1.106 0 1.91.272 2.454.832.535.549.795 1.353.795 2.46v1.22h1.706c.695 0 1.143.449 1.143 1.143v7.017c-.003.692-.451 1.14-1.143 1.14h-1.706v2.589c0 2.215-1.064 3.29-3.25 3.29H6.93c-2.188 0-3.25-1.075-3.25-3.29V5.29C3.68 3.106 4.774 2 6.93 2h7.185zm0 1.12H6.93c-1.532 0-2.129.608-2.129 2.171v13.11c0 .806.157 1.358.48 1.686.321.328.86.484 1.649.484h7.185c.79 0 1.328-.16 1.65-.484.322-.325.479-.88.479-1.686v-2.589h-1.74c-.694 0-1.143-.448-1.143-1.143V8.566c0-.132.062-.258.168-.336l2.185-1.633a.432.432 0 01.252-.084l.278-.001v-1.22c0-.799-.157-1.35-.476-1.679-.32-.327-.863-.493-1.653-.493zm-3.602 14.188c.577 0 .952.303.955.958 0 .314-.087.55-.241.706-.168.17-.412.252-.714.252-.303 0-.547-.081-.715-.252-.154-.16-.24-.392-.24-.706 0-.653.378-.958.955-.958zm8.557-9.955h-2.964l-1.904 1.423v5.893c0 .236.067.303.302.303h4.566c.235 0 .303-.067.303-.303V7.655c0-.235-.068-.302-.303-.302zm-.585 2.837a.28.28 0 01.28.28v3.544a.28.28 0 01-.28.28h-3.376a.28.28 0 01-.28-.28v-3.543a.28.28 0 01.28-.28h3.376zm-2.533 2.98h-.561l.001.564.56-.001v-.563zm1.123 0h-.563v.563h.563v-.563zm1.129 0h-.568v.563h.568v-.563zm-2.814-1.297v.737h2.814v-.737H15.39zm.562-1.123h-.563v.563h.563v-.563zm1.123 0h-.563v.563h.563v-.563zm1.13 0h-.57v.563h.569v-.562z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipSimCardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.465 2.622C17.978 2.106 17.3 2 16.818 2H9.725a.566.566 0 00-.38.148L5.52 5.692a.56.56 0 00-.18.412v13.372c0 .65.191 1.193.553 1.577.484.516 1.162.622 1.647.622h9.277c.874 0 1.378-.339 1.647-.622.361-.384.552-.927.552-1.577V4.2c0-.65-.19-1.193-.552-1.577zm-7.098 8.274a.28.28 0 01.28-.28h1.05a.28.28 0 01.28.28v1.05a.28.28 0 01-.28.28h-1.05a.28.28 0 01-.28-.28v-1.05zm-2.726 0a.28.28 0 01.28-.28h1.045a.28.28 0 01.28.28v1.05a.28.28 0 01-.28.28H8.922a.28.28 0 01-.28-.28v-1.05zm1.605 6.93a.28.28 0 01-.28.28H8.922a.28.28 0 01-.28-.28v-1.05a.28.28 0 01.28-.28h1.044a.28.28 0 01.28.28v1.05zm2.732 0a.28.28 0 01-.28.28h-1.051a.28.28 0 01-.28-.28v-1.05a.28.28 0 01.28-.28h1.05a.28.28 0 01.28.28v1.05zm2.736 0a.28.28 0 01-.28.28h-1.059a.28.28 0 01-.28-.28v-1.05a.28.28 0 01.28-.28h1.06a.28.28 0 01.28.28v1.05zm0-2.73a.28.28 0 01-.28.28H8.922a.28.28 0 01-.28-.28v-1.469a.28.28 0 01.28-.28h6.512a.28.28 0 01.28.28v1.468zm0-3.15a.28.28 0 01-.28.28h-1.059a.28.28 0 01-.28-.28v-1.05a.28.28 0 01.28-.28h1.06a.28.28 0 01.28.28v1.05z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipSimCardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.634 2.156c.621 0 1.106.18 1.442.535.317.334.476.801.476 1.384v15.84c0 .583-.16 1.05-.476 1.384-.336.356-.82.535-1.442.535H7.356c-.622 0-1.106-.18-1.442-.535-.317-.333-.476-.801-.476-1.384V6.26a.29.29 0 01.08-.199l3.824-3.824a.277.277 0 01.2-.08h7.092zm0 .56H9.656L5.998 6.375v13.54c0 .902.456 1.359 1.358 1.359h9.278c.902 0 1.358-.457 1.358-1.359V4.075c0-.902-.456-1.359-1.358-1.359zm-.544 7.762a.28.28 0 01.28.28v8.611a.28.28 0 01-.28.28H7.897a.28.28 0 01-.28-.28v-8.61a.28.28 0 01.28-.28h8.193zm-5.748 6.44H8.177v2.171h2.165v-2.172zm2.73 0h-2.17v2.17h2.17v-2.17zm2.738 0h-2.177v2.17l2.177.001v-2.172zm-7.633-3.149v2.588h7.633V13.77H8.177zm2.165-2.73H8.177v2.17h2.165v-2.17zm2.73 0h-2.17v2.17h2.17v-2.17zm2.738 0h-2.177v2.17h2.177v-2.17z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconChipSimCardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.818 2c.482 0 1.16.106 1.647.622.361.384.552.927.552 1.577v15.277c0 .65-.19 1.193-.552 1.577-.269.283-.773.622-1.647.622H7.54c-.482 0-1.16-.106-1.647-.622-.362-.384-.552-.927-.552-1.577V6.104a.56.56 0 01.179-.412l3.82-3.544A.566.566 0 019.724 2h7.095zm0 1.12H9.944L6.462 6.347v13.13c0 .744.334 1.078 1.079 1.078h9.277c.745 0 1.078-.334 1.078-1.079V4.2c0-.745-.333-1.079-1.078-1.079zm-.543 6.376c.308 0 .56.252.56.56v8.61a.56.56 0 01-.56.56H8.08a.562.562 0 01-.56-.56v-8.61c0-.308.252-.56.56-.56h8.194zm-6.03 6.999H8.642v1.611h1.605v-1.611zm2.732 0h-1.61v1.611h1.61v-1.611zm2.737 0h-1.616v1.611h1.616v-1.611zm0-3.148H8.64v2.028h7.073v-2.028zm-5.468-2.731H8.64v1.61h1.605v-1.61zm2.73 0h-1.61v1.61h1.61v-1.61zm2.738 0h-1.616v1.61h1.616v-1.61z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClickToCallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.95 2.006c.848.014 1.686.431 2.49 1.235.305.297.568.633.787 1 .431.695.582 1.409.462 2.129-.12.72-.524 1.425-1.196 2.098a4.95 4.95 0 01-.496.442c-.064.118-.025.49.496 1.252.605.88 1.613 1.922 2.32 2.628l.083.084c.706.706 1.748 1.714 2.628 2.32.762.523 1.134.562 1.252.495.137-.174.286-.339.442-.496.673-.672 1.379-1.073 2.098-1.196.72-.123 1.44.034 2.135.465.364.219.7.482 1 .787.804.804 1.218 1.642 1.235 2.49.017.88-.398 1.768-1.224 2.64a5.783 5.783 0 01-.706.603l-.126.09-.017.012a.157.157 0 01-.025.02c-.563.389-1.277.582-2.103.582-.866 0-1.858-.215-2.928-.641-2.184-.871-4.577-2.569-6.916-4.908l-.005-.005-.073-.073c-2.345-2.345-4.042-4.737-4.913-6.922-.835-2.09-.854-3.877-.059-5.03l.017-.026.011-.017c.095-.134.39-.54.695-.832.854-.815 1.722-1.226 2.585-1.226zm12.479 1.89a.924.924 0 01.66.367l1.135 1.264c.18.201.263.467.23.733a.909.909 0 01-.367.625L17.07 9.541l.661.733c.196.216.252.49.154.737s-.33.406-.619.429l-4.6.356h-.064a.757.757 0 01-.748-.93l.97-4.535a.709.709 0 01.498-.558c.252-.07.518.02.712.233l.669.74 3.03-2.606a.886.886 0 01.696-.244z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClickToCallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.28 3.34c.297.292.555.617.765.975 1.042 1.675.19 3.098-.709 3.995a4.994 4.994 0 01-.518.456c-.3.356.095 1.101.482 1.664.635.927 1.689 2.014 2.423 2.748l.086.087c.737.736 1.821 1.787 2.748 2.423.566.386 1.308.781 1.664.482.14-.183.294-.356.46-.519.899-.896 2.319-1.748 3.994-.708.356.213.683.47.975.767 1.577 1.577 1.58 3.216.003 4.866a6.335 6.335 0 01-.816.68l-.022.017-.014.011c-.53.37-1.207.555-1.997.555-.855 0-1.838-.213-2.908-.639-2.215-.885-4.644-2.61-7.025-4.991l-.087-.087c-2.38-2.381-4.106-4.81-4.989-7.025-.82-2.056-.851-3.799-.09-4.905.004-.006.01-.011.012-.017l.017-.022a5.77 5.77 0 01.68-.815C5.064 1.76 6.7 1.763 8.28 3.34zm-2.373-.62c-.68-.014-1.37.322-2.106 1.025a5.418 5.418 0 00-.639.776c-.308.45-.459 1.045-.445 1.767.014.77.216 1.647.6 2.605.857 2.146 2.537 4.507 4.862 6.835l.048.048.042.039c2.328 2.328 4.689 4.008 6.835 4.863.958.383 1.834.582 2.605.599.722.014 1.316-.134 1.767-.445l.037-.026c.327-.235.574-.442.736-.61.703-.737 1.04-1.426 1.028-2.107-.011-.652-.347-1.3-1.022-1.974a4.318 4.318 0 00-.863-.681l-.008-.006c-.538-.333-1.079-.456-1.611-.367-.563.096-1.132.429-1.697.995a4.721 4.721 0 00-.429.487c-.008.011-.02.023-.03.034-1.051.966-3.121-.827-5.205-2.91l-.087-.087C8.246 11.497 6.454 9.424 7.42 8.377c.011-.011.02-.023.034-.031.173-.132.336-.274.487-.429.563-.565.9-1.137.994-1.697.09-.532-.033-1.073-.366-1.61l-.006-.01a4.203 4.203 0 00-.68-.859C7.206 3.066 6.56 2.73 5.906 2.719zm12.188 1.66a.65.65 0 01.468.267l1.146 1.274a.647.647 0 01-.107.953l-3.24 2.851.85.944c.124.137.16.3.104.446-.056.145-.196.238-.38.252l-4.6.355a.483.483 0 01-.415-.16.489.489 0 01-.103-.43l.969-4.536c.04-.179.146-.305.297-.344.151-.04.308.014.431.148l.846.936h.011l3.241-2.784a.617.617 0 01.482-.171zm-.04.564a.063.063 0 00-.044.01c-.006.006-.014.012-.02.02l-3.249 2.793a.57.57 0 01-.79-.05l-.672-.74-.894 4.182 4.219-.327-.658-.731a.555.555 0 01.042-.788c.002-.002.002-.002.005-.002l3.255-2.866.034-.025a.07.07 0 00.033-.053.104.104 0 00-.014-.065l-.002-.003-1.157-1.285c-.009-.009-.017-.017-.023-.028a.086.086 0 00-.064-.042z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClickToCallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.942 2c.849.017 1.687.432 2.49 1.236.306.3.57.636.788 1 .43.694.588 1.414.465 2.134-.124.72-.524 1.423-1.197 2.095a5.707 5.707 0 01-.495.443c-.068.118-.026.49.495 1.252.605.88 1.614 1.922 2.32 2.628l.084.084c.706.706 1.748 1.714 2.627 2.319.762.521 1.135.56 1.252.496a4.95 4.95 0 01.443-.496c.672-.672 1.378-1.076 2.098-1.196.72-.12 1.437.034 2.134.465a4.86 4.86 0 011 .787c.804.804 1.219 1.641 1.236 2.49.017.88-.398 1.765-1.227 2.636-.291.305-.698.597-.832.695l-.017.01a.154.154 0 00-.025.02c-.566.39-1.28.583-2.107.583-.868 0-1.857-.213-2.927-.641-2.185-.871-4.577-2.569-6.916-4.908l-.084-.084C5.208 13.712 3.514 11.32 2.64 9.135c-.832-2.092-.855-3.88-.056-5.034l.016-.025.012-.017c.095-.134.39-.54.694-.832C4.178 2.398 5.063 1.984 5.942 2zm-.02 1.12c-.57-.007-1.193.298-1.84.92a4.866 4.866 0 00-.56.678l-.025.033c-.56.827-.496 2.272.182 3.972.815 2.045 2.426 4.306 4.655 6.535l.05.05.043.034c2.23 2.233 4.49 3.84 6.535 4.656 1.7.678 3.145.745 3.972.182l.033-.023c.303-.218.53-.406.678-.56.62-.65.93-1.269.92-1.84-.012-.555-.309-1.118-.908-1.72a3.836 3.836 0 00-.78-.614l-.016-.008c-.465-.291-.91-.392-1.361-.316-.485.08-.986.38-1.493.885a4 4 0 00-.395.448c-.02.022-.04.045-.06.064-.237.222-.666.448-1.344.275-.383-.098-.815-.314-1.319-.658-.958-.656-2.048-1.715-2.787-2.451l-.084-.084c-.737-.737-1.793-1.83-2.451-2.785-.345-.504-.56-.935-.658-1.32-.171-.677.056-1.106.277-1.346a.422.422 0 01.064-.06 4 4 0 00.449-.394c.504-.504.8-1.006.885-1.493.075-.451-.028-.897-.317-1.362l-.008-.016a3.937 3.937 0 00-.614-.78c-.605-.593-1.168-.89-1.722-.901zm12.508.83a.924.924 0 01.66.367l1.135 1.263c.18.202.263.468.23.734a.909.909 0 01-.367.625L17.07 9.592l.661.733c.193.216.252.49.154.737s-.328.406-.619.429l-4.6.355c-.022.003-.044.003-.064.003a.757.757 0 01-.748-.93l.97-4.535a.71.71 0 01.498-.557c.252-.07.518.02.712.232l.67.74 3.03-2.605a.886.886 0 01.695-.244zm-.093 1.205l-3.103 2.669a.854.854 0 01-1.183-.076l-.3-.333-.7 3.28 3.278-.255-.28-.308a.837.837 0 01.07-1.188l3.14-2.764-.922-1.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipboardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.86 4.34c-.08-.25-.317-1.004-1.866-1.004-1.673 0-1.925.838-1.958 1.57l-.006.346c.011.267.023.653 1.964.653 1.94 0 1.952-.384 1.96-.61v-.323a2.405 2.405 0 00-.095-.633zm3.912-.749c.855 0 1.603.611 1.603 1.306V20.54c0 .709-.734 1.305-1.603 1.305H6.212c-.868 0-1.602-.6-1.602-1.305V4.894c0-.695.75-1.305 1.602-1.305h2.955c.471-.914 1.443-1.429 2.827-1.429 1.686 0 2.468.709 2.829 1.431h2.95zm-6.476 1.7a.55.55 0 01-.552-.548.55.55 0 01.552-.55h1.392c.306 0 .555.247.555.55 0 .302-.25.549-.555.549h-1.392z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipboardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.56 20.715V4.75c0-.081-.264-.33-.63-.33h-2.945c.012.098.028.193.031.294l.006.19-.003.093c-.045 1.302-1.244 1.574-3.03 1.574-1.785 0-2.984-.272-3.032-1.591v-.194l.006-.092c.003-.098.022-.182.036-.274H6.05c-.369 0-.63.252-.63.33v15.964c0 .112.275.33.63.33h11.878c.358 0 .633-.221.633-.33zM11.988 2.96c-1.454 0-2.157.569-2.213 1.79l-.005.154c.014.392.03.863 2.221.863 2.19 0 2.207-.474 2.218-.818v-.132a2.663 2.663 0 00-.109-.694c-.252-.782-.941-1.163-2.112-1.163zm5.939.658c.756 0 1.445.541 1.445 1.132v15.964c0 .613-.661 1.131-1.443 1.131H6.053c-.782 0-1.443-.518-1.443-1.131V4.75c0-.591.69-1.132 1.443-1.132h3.15c.418-.946 1.376-1.459 2.785-1.459 1.717 0 2.462.74 2.782 1.46h3.157zm-6.84 1.474a.405.405 0 01-.407-.4c0-.222.182-.401.406-.401h1.801c.224 0 .406.179.406.4 0 .222-.182.4-.406.4h-1.8z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipboardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.772 20.667c.233 0 .401-.126.426-.17l-.008-15.6c0 .014-.193-.13-.418-.13h-2.647c.003.029.009.054.012.085l.002.078.003.115-.003.107c-.05 1.51-1.543 1.722-3.145 1.722S8.9 6.661 8.845 5.126v-.08l.003-.127.006-.1c0-.02.005-.034.008-.054h-2.65c-.215 0-.398.132-.428.185l.01 15.588c.018.003.186.129.418.129h11.56zM11.994 3.339c-1.673 0-1.925.838-1.958 1.569l-.006.14c.011.269.023.653 1.964.653 1.94 0 1.952-.384 1.96-.614V4.97a2.384 2.384 0 00-.098-.628c-.078-.25-.313-1.003-1.862-1.003zm5.778.252c.855 0 1.603.611 1.603 1.306V20.54c0 .709-.734 1.305-1.603 1.305H6.212c-.868 0-1.602-.6-1.602-1.305V4.894c0-.695.75-1.305 1.602-1.305h2.955c.471-.914 1.443-1.429 2.827-1.429 1.686 0 2.468.709 2.829 1.431h2.95zm-6.476 1.7a.55.55 0 01-.552-.548.55.55 0 01.552-.55h1.392c.306 0 .555.247.555.55 0 .302-.25.549-.555.549h-1.392z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.063 5.542a.808.808 0 00-.818.798l-.011 11.09c0 1.913-.913 2.804-2.868 2.804-1.958 0-2.872-.89-2.872-2.804V5.44c0-1.185.516-1.69 1.729-1.69s1.728.505 1.728 1.692l.025 11.356c0 .373-.078.448-.46.448-.38 0-.456-.075-.456-.448V6.394a.812.812 0 00-.818-.801.81.81 0 00-.818.798v10.403c0 1.264.801 2.048 2.096 2.048 1.29 0 2.095-.784 2.095-2.048L14.59 5.44c-.003-2.06-1.26-3.289-3.367-3.289S7.859 3.38 7.859 5.439V17.43c0 2.798 1.641 4.406 4.507 4.406 2.862 0 4.504-1.605 4.504-4.403l.011-11.09a.81.81 0 00-.818-.8"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.981 21.843c-2.907 0-4.512-1.457-4.512-4.107V5.44c0-2.117 1.283-3.283 3.613-3.283 2.328 0 3.61 1.166 3.61 3.286v10.65c0 1.557-.98 2.454-2.694 2.454s-2.695-.894-2.695-2.454v-8.98c0-.227.202-.41.451-.41.25 0 .449.185.449.41v8.98c0 1.115.571 1.633 1.792 1.633 1.224 0 1.793-.518 1.793-1.633V5.442c0-1.658-.888-2.465-2.711-2.465-1.824 0-2.712.807-2.712 2.465v12.297c0 2.18 1.216 3.286 3.61 3.286 2.396 0 3.611-1.107 3.611-3.286l-.01-10.633c0-.227.2-.41.447-.41h.003c.25 0 .451.183.451.41l.014 10.636c.003 2.644-1.602 4.1-4.51 4.1"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconClipRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.363 21.836c-2.863 0-4.507-1.563-4.507-4.291V5.305c0-2.004 1.207-3.155 3.31-3.155 2.104 0 3.312 1.148 3.312 3.154l.025 11.053c0 1.166-.76 1.888-1.98 1.888-1.222 0-1.981-.722-1.981-1.885V6.28c0-.34.289-.61.641-.61.356 0 .642.274.642.61v10.078c0 .496.176.661.695.661.52 0 .694-.165.694-.66l-.028-11.054c0-1.316-.644-1.93-2.025-1.93-1.38 0-2.025.614-2.025 1.93v12.241c0 2.064 1.053 3.067 3.221 3.067s3.221-1.003 3.221-3.067l.012-11.32c0-.338.288-.61.641-.61.356 0 .642.274.642.613l-.012 11.32c.009 2.725-1.636 4.288-4.498 4.288"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.932 12l8.712-8.726a.63.63 0 00.028-.89c-.008-.012-.02-.02-.028-.029a.63.63 0 00-.89-.028c-.012.009-.02.02-.029.028L12 11.067 3.274 2.355a.63.63 0 00-.89-.028c-.012.009-.02.02-.029.028a.63.63 0 00-.028.891c.009.011.02.02.028.028L11.067 12l-8.712 8.725a.63.63 0 00-.028.89c.009.012.02.02.028.029.12.126.286.199.46.196a.618.618 0 00.46-.196L12 12.932l8.725 8.712a.63.63 0 00.89.028c.012-.008.02-.02.029-.028a.63.63 0 00.028-.89c-.008-.012-.02-.02-.028-.029L12.932 12z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.19 11.843l8.216-8.216A.952.952 0 1020.06 2.28l-8.216 8.216L3.627 2.28A.952.952 0 002.28 3.627l8.216 8.216L2.28 20.06a.952.952 0 101.347 1.344l8.216-8.215 8.216 8.215a.947.947 0 001.342.006l.005-.006a.948.948 0 000-1.344l-8.216-8.216z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.974 5.12a6.224 6.224 0 015.593 3.51h.06a5.22 5.22 0 015.215 5.215c0 2.877-2.345 5.21-5.219 5.21H6.203a4.06 4.06 0 01-4.053-4.053c0-.904.314-1.77.908-2.504a4.241 4.241 0 012.044-1.395c.054-1.627.628-3.11 1.633-4.19 1.073-1.157 2.58-1.793 4.239-1.793z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.761 18.881H6.033a3.882 3.882 0 01-3.877-3.876c0-.863.3-1.69.869-2.393a4.053 4.053 0 012.03-1.358.623.623 0 00.138-.05c.016-3.524 2.431-6.079 5.75-6.079a6.11 6.11 0 015.569 3.61l.006.012.033-.003a5.079 5.079 0 015.286 5.067 5.077 5.077 0 01-5.076 5.07zM10.943 5.685c-1.467 0-2.792.558-3.736 1.572C6.263 8.27 5.75 9.682 5.75 11.24c0 .398-.409.515-.543.552a3.49 3.49 0 00-1.748 1.173 3.22 3.22 0 00-.743 2.04 3.32 3.32 0 003.317 3.316h10.728a4.519 4.519 0 004.513-4.513 4.516 4.516 0 00-4.51-4.512c-.062 0-.12.003-.188.005l-.12.006c-.207.006-.359-.104-.448-.328-.003-.005-.003-.01-.006-.016a5.555 5.555 0 00-5.059-3.278z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.623 19.056H6.203a4.06 4.06 0 01-4.053-4.054c0-.904.314-1.77.908-2.504a4.241 4.241 0 012.044-1.395c.054-1.627.628-3.11 1.633-4.19 1.073-1.157 2.58-1.793 4.239-1.793a6.224 6.224 0 015.593 3.51h.06a5.22 5.22 0 015.215 5.215c0 2.877-2.345 5.21-5.219 5.21zM10.971 6.238c-.687 0-1.336.128-1.927.383a4.401 4.401 0 00-1.49 1.054c-.863.93-1.337 2.232-1.337 3.672 0 .277-.129.641-.74.812a3.131 3.131 0 00-1.551 1.042c-.297.37-.656.986-.656 1.801a2.937 2.937 0 002.933 2.933h10.42a4.1 4.1 0 004.096-4.095 4.1 4.1 0 00-4.096-4.095c-.05 0-.109.002-.168.005l-.123.006c-.151.005-.527-.034-.711-.502l-.003-.008a5.097 5.097 0 00-4.647-3.008z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudSereyeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.59 19.517c-.009.714-.406 1.084-1.171 1.084s-1.154-.361-1.154-1.067v-.149c.008-.484.216-1.07 1.123-1.084h.081c.908.017 1.115.591 1.124 1.076-.003 0-.003.14-.003.14zm-14.86-.14v.14c-.017.714-.41 1.084-1.171 1.084-.765 0-1.154-.361-1.163-1.067v-.149c.017-.493.225-1.092 1.171-1.092.939 0 1.154.59 1.163 1.084zm14.322-2.252v-1.849a.623.623 0 00-.625-.616h-6.88c.012-.042.026-.084.026-.132v-.93l3.232-.017c2 0 4.345-1.109 4.345-4.252 0-2.812-1.868-3.997-3.756-4.201-1.062-2.821-4.317-2.978-4.984-2.978-2.375 0-5.131 1.232-5.308 4.678-.88.372-1.96 1.232-1.96 3.232 0 2.633 1.944 3.56 3.613 3.56l3.571-.016v.921c0 .05.017.09.026.132H4.55a.619.619 0 00-.44.182.654.654 0 00-.185.445l.008 1.84c-1.269.264-1.759 1.317-1.784 2.23v.197c.017 1.053.647 2.285 2.409 2.285 1.753 0 2.4-1.24 2.417-2.3v-.182c-.016-.921-.515-1.974-1.795-2.238v-1.224h13.624v1.233c-1.271.255-1.77 1.316-1.787 2.23 0 .055-.008.131 0 .196.009 1.053.639 2.285 2.4 2.285 1.763 0 2.401-1.24 2.418-2.3v-.182c-.017-.921-.507-1.974-1.784-2.23z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudSereyeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.988 19.685c-.009.487-.202 1.31-1.41 1.31-1.204 0-1.392-.806-1.4-1.293v-.16c.017-.487.213-1.294 1.367-1.32a.076.076 0 00.042.01c.008 0 .025 0 .034-.01 1.162.026 1.358.833 1.367 1.309v.154zM5.8 19.542v.143c0 .496-.196 1.31-1.41 1.31-1.195 0-1.388-.806-1.388-1.293v-.16c.008-.496.212-1.32 1.409-1.32 1.193 0 1.38.824 1.389 1.32zm1.857-6.93c-.79 0-2.63-.252-2.63-2.588 0-1.314.577-2.143 1.697-2.454.185-.05.306-.31.306-.496 0-3.79 3.341-4.084 4.36-4.084.586 0 3.514.126 4.211 2.698a.432.432 0 00.398.308c.977.025 3.26.403 3.26 3.277 0 3.05-2.58 3.286-3.378 3.286l-8.224.053zm12.356 4.813v-2.681a.43.43 0 00-.423-.42h-7.216v-.9l3.504-.025c.706 0 4.227-.193 4.227-4.126 0-2.798-1.893-3.938-3.776-4.1C15.346 2.3 12.06 2.15 11.391 2.15c-.857 0-5.073.227-5.21 4.714-.857.328-2.003 1.143-2.003 3.16 0 2.53 1.801 3.429 3.479 3.429l3.871-.026v.9h-7.14a.455.455 0 00-.305.126.43.43 0 00-.118.3l.009 2.672c-1.3.184-1.807 1.21-1.824 2.1v.185c.008.983.602 2.126 2.238 2.126 1.647 0 2.25-1.151 2.258-2.134v-.185c-.017-.89-.518-1.913-1.827-2.1l-.008-2.253h14.35v2.26c-1.3.185-1.807 1.2-1.832 2.101v.185c.009.983.603 2.126 2.25 2.126 1.638 0 2.238-1.151 2.257-2.134v-.185c-.017-.89-.524-1.916-1.823-2.092z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudSereyeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.587 19.514c-.008.714-.406 1.084-1.17 1.084-.766 0-1.155-.361-1.155-1.067v-.149c.008-.484.216-1.07 1.12-1.084.017 0 .026.009.042.009.017 0 .026-.009.043-.009.907.017 1.114.591 1.123 1.076v.14h-.003zm-14.86-.14v.14c-.017.714-.406 1.084-1.17 1.084-.766 0-1.155-.361-1.163-1.067v-.149c.017-.493.224-1.092 1.17-1.092.939 0 1.155.591 1.163 1.084zm2.02-6.989c-.883 0-2.359-.294-2.359-2.327 0-1.19.49-1.916 1.504-2.205a.607.607 0 00.457-.591l-.009-.09c0-3.51 3.115-3.79 4.07-3.79.757 0 3.289.18 3.914 2.49a.633.633 0 00.59.454c1.113.031 2.992.468 2.992 3 0 2.723-2.168 3.017-3.106 3.017l-8.053.042zm12.3 4.737V15.27a.625.625 0 00-.623-.616h-6.876c.008-.042.025-.081.025-.131v-.928l3.232-.016c2 0 4.345-1.11 4.345-4.253 0-2.812-1.868-3.997-3.754-4.201-1.064-2.82-4.319-2.975-4.983-2.975-2.375 0-5.131 1.232-5.308 4.678-.88.37-1.96 1.232-1.96 3.232 0 2.63 1.943 3.56 3.613 3.56l3.571-.016v.921c0 .05.017.09.025.132H4.551a.614.614 0 00-.44.182.653.653 0 00-.182.443l.008 1.843c-1.272.263-1.762 1.316-1.787 2.23v.196c.017 1.053.647 2.285 2.409 2.285 1.753 0 2.4-1.24 2.417-2.302v-.182c-.016-.922-.515-1.975-1.795-2.238v-1.225h13.622v1.233c-1.272.255-1.77 1.316-1.787 2.23 0 .056-.009.131 0 .196.008 1.053.638 2.285 2.4 2.285s2.4-1.24 2.417-2.302v-.182c-.016-.919-.507-1.972-1.787-2.227z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudUploadFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.548 14.807a.338.338 0 01-.303.201h-1.854c-.076 0-.126.05-.132.126v4.594l-4.543-.008v-1.964c.008-.008.008-.008.008-.017v-2.52a.118.118 0 00-.123-.118l-1.868-.009a.312.312 0 01-.294-.204.316.316 0 01.064-.364l4.302-4.544a.313.313 0 01.233-.1c.09 0 .17.041.238.1l4.205 4.46c.09.103.114.238.067.367m.59-7.533c-1.176-3.73-5.265-3.924-6.086-3.924-1.062 0-6.294.297-6.4 6.092-1.054.39-2.502 1.407-2.502 4.02 0 3.188 2.18 4.33 4.23 4.33l2.515-.016v2.039c0 .423.361.762.798.762h4.591c.435 0 .799-.34.799-.754v-2.08l1.58-.01c.862 0 5.173-.254 5.173-5.246 0-4.364-3.283-5.1-4.697-5.213"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudUploadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.666 16.975l-2.098.009.008-1.583h1.67a.625.625 0 00.583-.4.671.671 0 00-.124-.707l-4.202-4.487a.632.632 0 00-.459-.196.609.609 0 00-.451.196l-4.3 4.574a.652.652 0 00-.132.706.633.633 0 00.583.41h1.678v1.523l-3.042.017c-1.02 0-3.404-.342-3.404-3.51 0-1.782.748-2.905 2.213-3.33a.426.426 0 00.297-.41l-.008-.12c0-5.076 4.277-5.468 5.586-5.468.74 0 4.482.18 5.37 3.619.05.188.204.314.386.314 1.266.042 4.202.546 4.202 4.412-.006 4.11-3.336 4.431-4.356 4.431zm-2.922.392l-.008 2.36H10.24v-4.43a.647.647 0 00-.633-.655H8.184l3.857-4.104 3.76 4.011h-1.415a.65.65 0 00-.633.656l-.009 2.162zm3.398-10.064C15.966 3.546 11.88 3.35 11.058 3.35c-1.062 0-6.292.297-6.4 6.12-1.054.401-2.508 1.424-2.508 4.054 0 3.21 2.188 4.362 4.227 4.362l3.042-.017v2.053c0 .367.289.656.633.656h3.874a.638.638 0 00.634-.656l.008-2.087 2.098-.008c.863 0 5.174-.255 5.174-5.28-.003-4.393-3.283-5.135-4.698-5.244z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloudUploadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.567 16.647l-1.846.008v-1.131h1.443c.33 0 .627-.208.756-.516a.878.878 0 00-.168-.921l-4.117-4.381a.837.837 0 00-1.177 0L7.237 14.17a.878.878 0 00-.168.921.817.817 0 00.764.516h1.443v1.073l-2.779.016c-.944 0-3.134-.308-3.134-3.215 0-1.63.678-2.65 2.014-3.042a.637.637 0 00.442-.617l-.008-.1c0-4.762 4.028-5.127 5.263-5.127.7 0 4.238.157 5.076 3.373a.605.605 0 00.563.465c1.176.034 3.916.499 3.916 4.09-.003 3.823-3.104 4.123-4.062 4.123zm-3.064 2.683H10.48v-4.112a.84.84 0 00-.83-.848l-.91-.009 3.305-3.49 3.2 3.406h-.903c-.45 0-.82.376-.829.849l-.011 4.204zm3.675-12.117c-1.24-3.673-5.277-3.863-6.11-3.863-1.055 0-6.277.291-6.461 6.042-1.073.44-2.457 1.504-2.457 4.087 0 3.288 2.24 4.462 4.345 4.462l2.778-.017v1.804c0 .465.362.846.821.846h3.795c.451 0 .821-.38.821-.846V17.9l1.855-.008c2.434 0 5.268-1.404 5.268-5.367.003-3.597-2.324-5.084-4.655-5.311z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloverFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.678 19.725c1.684 1.35 3.566 2.11 5.213 2.11.076 0 .152-.003.224-.006a.89.89 0 00.44-.143.592.592 0 00.163-.848.66.66 0 00-.757-.225c-1.333.04-2.977-.63-4.462-1.823l-.067-.053a10.506 10.506 0 01-2.123-2.325c.215.187.431.353.652.482.885.52 1.765.787 2.544.787.437 0 .843-.084 1.201-.255.541-.258 1.205-.827 1.393-2.07.955-.866 1.058-1.712.966-2.28-.168-1.048-1.123-1.998-2.62-2.603-.845-.344-2.052-.423-3.234-.383.991-.62 1.93-1.35 2.406-2.096.854-1.319 1.056-2.621.557-3.568-.272-.516-.865-1.149-2.173-1.328-.91-.913-1.796-1.011-2.393-.921-1.098.16-2.092 1.072-2.728 2.498-.361.804-.442 1.955-.4 3.084-.65-.944-1.418-1.84-2.2-2.294-1.386-.812-2.75-1.008-3.744-.532-.541.258-1.205.826-1.393 2.07-.955.865-1.058 1.711-.966 2.28.168 1.048 1.126 1.994 2.62 2.6.713.29 1.691.394 2.694.394.182 0 .361-.005.543-.01-.991.618-1.933 1.352-2.409 2.097-.854 1.32-1.056 2.622-.557 3.569.271.515.868 1.148 2.173 1.325.746.748 1.474.946 2.042.946.124 0 .244-.008.35-.025 1.101-.16 2.096-1.073 2.729-2.498.182-.404.291-.9.353-1.429a11.694 11.694 0 002.899 3.417"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloverLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.359 17.392c-.493 1.103-1.221 1.823-1.952 1.932-.55.078-1.096-.18-1.628-.776l-.115-.129-.176-.014c-.818-.07-1.359-.344-1.605-.815-.33-.63-.134-1.613.524-2.635.848-1.321 3.683-2.758 4.907-3.262.28 1.243.686 4.273.045 5.699m-6.3-6.469c-1.16-.468-1.918-1.162-2.027-1.86-.084-.52.19-1.041.815-1.548l.134-.11.017-.167c.073-.779.361-1.294.854-1.53.21-.1.462-.15.74-.15.588 0 1.3.224 2.028.65 1.389.809 2.898 3.505 3.428 4.67-1.308.269-4.493.655-5.989.045m6.793-5.998c.493-1.103 1.221-1.826 1.952-1.932.064-.012.129-.014.193-.014.482 0 .964.266 1.434.79l.115.128.177.017c.818.07 1.358.344 1.605.815.33.63.134 1.613-.527 2.635-.849 1.322-3.68 2.758-4.907 3.262-.275-1.243-.684-4.273-.042-5.701m6.299 6.468c1.157.47 1.916 1.165 2.028 1.86.084.52-.19 1.042-.812 1.548l-.138.11-.016.168c-.073.778-.362 1.293-.857 1.529-.662.316-1.695.128-2.768-.502-1.3-.753-2.689-3.139-3.297-4.407-.002-.003-.002-.006-.005-.009-.042-.087-.09-.185-.123-.257 1.31-.264 4.492-.653 5.988-.04m-2.258 8.331c1.684 1.347 3.555 2.106 5.185 2.106.073 0 .148-.003.221-.006a.7.7 0 00.336-.106.4.4 0 00.12-.574c-.122-.174-.313-.162-.548-.146-1.448.048-3.176-.647-4.75-1.91l-.07-.055a10.84 10.84 0 01-3.124-4.058c.575.77 1.216 1.462 1.871 1.843.872.512 1.731.772 2.485.772a2.61 2.61 0 001.131-.238c.516-.246 1.152-.798 1.314-2.03.96-.84 1.064-1.652.978-2.195-.16-.997-1.09-1.907-2.546-2.498-1.034-.42-2.622-.442-4.04-.333 1.222-.692 2.507-1.585 3.093-2.498.832-1.285 1.036-2.54.56-3.442-.258-.49-.837-1.095-2.131-1.251-.886-.916-1.737-1.017-2.306-.93-1.047.154-2.002 1.039-2.621 2.428-.443.983-.468 2.495-.35 3.842-.726-1.162-1.664-2.383-2.622-2.94-1.35-.793-2.67-.989-3.613-.535-.516.246-1.152.798-1.314 2.03-.96.84-1.064 1.652-.977 2.195.16.997 1.09 1.907 2.548 2.495.706.291 1.675.392 2.67.392.459 0 .921-.022 1.37-.059-1.225.692-2.508 1.585-3.096 2.498-.832 1.286-1.036 2.54-.56 3.442.258.49.838 1.095 2.132 1.249.728.756 1.436.955 1.983.955.115 0 .224-.012.325-.026 1.047-.15 2.002-1.038 2.621-2.425.266-.59.378-1.375.404-2.198a11.666 11.666 0 003.26 4.15"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCloverRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.183 17.207c-.446 1-1.115 1.678-1.745 1.77-.454.065-.93-.165-1.4-.691l-.169-.188-.26-.022c-.723-.062-1.194-.292-1.4-.687-.287-.546-.093-1.459.506-2.383.742-1.157 3.196-2.454 4.462-3.012.258 1.303.569 3.964.006 5.213m-5.885-6.445C4.25 10.339 3.538 9.7 3.44 9.098c-.07-.434.173-.882.722-1.33l.2-.163.022-.246c.064-.69.308-1.138.72-1.334.173-.084.386-.126.621-.126.538 0 1.205.21 1.88.608 1.213.706 2.574 3.045 3.157 4.252-1.364.244-4.154.538-5.465.003m6.759-5.608c.445-1 1.115-1.678 1.745-1.773.05-.006.104-.011.154-.011.409 0 .826.235 1.244.703l.168.188.26.022c.723.062 1.194.294 1.4.686.287.546.093 1.46-.506 2.387-.74 1.157-3.193 2.454-4.46 3.011-.254-1.305-.565-3.964-.005-5.213m5.885 6.443c1.048.423 1.762 1.061 1.857 1.664.07.437-.174.885-.725 1.333l-.2.16-.024.249c-.065.686-.306 1.134-.72 1.333-.569.272-1.53.09-2.502-.484-1.213-.706-2.574-3.045-3.157-4.255 1.373-.238 4.163-.535 5.471 0m-2.263 8.131c1.683 1.35 3.565 2.11 5.213 2.11.075 0 .15-.003.224-.006a.91.91 0 00.442-.143.59.59 0 00.185-.815l-.022-.034a.666.666 0 00-.757-.224c-1.333.04-2.977-.63-4.462-1.823l-.07-.053a10.474 10.474 0 01-2.123-2.325 4.3 4.3 0 00.653.481c.885.521 1.764.787 2.543.787a2.79 2.79 0 001.202-.254c.54-.258 1.204-.827 1.392-2.07.955-.869 1.059-1.712.966-2.28-.168-1.048-1.123-1.998-2.622-2.603-.846-.344-2.053-.423-3.235-.384.992-.619 1.93-1.35 2.406-2.095.855-1.32 1.06-2.622.56-3.568-.271-.516-.865-1.149-2.173-1.328-.908-.916-1.796-1.014-2.392-.925-1.098.163-2.093 1.073-2.729 2.5-.361.803-.442 1.954-.4 3.083-.653-.944-1.415-1.84-2.2-2.294-1.386-.812-2.75-1.008-3.744-.532-.54.26-1.205.826-1.392 2.07-.958.868-1.06 1.711-.967 2.28.168 1.048 1.126 1.997 2.62 2.602.714.291 1.691.395 2.694.395.18 0 .361-.005.543-.011-.991.622-1.932 1.353-2.409 2.098-.854 1.32-1.056 2.622-.557 3.569.272.515.868 1.148 2.174 1.325.745.747 1.473.946 2.042.946.126 0 .24-.008.35-.025 1.098-.162 2.095-1.073 2.728-2.499.182-.403.291-.899.353-1.428a11.723 11.723 0 002.9 3.417"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCocktailFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.479 9.305c-.045 0-.081-.005-.123-.005l.904-1.048c.202-.216.325-.51.325-.83 0-.671-.537-1.215-1.204-1.215h-.011l-2.913.014c.014-2.047.974-3.005 3.022-3.005 2.036 0 3.028.997 3.028 3.047 0 2.076-.964 3.042-3.028 3.042m-1.09-.84H6.496l-.933-.989 11.815-.056-.913 1.059c-.028 0-.05-.014-.076-.014M17.48 2c-2.717 0-4.216 1.501-4.233 4.227l-5.182.025-1.87-1.882a1.454 1.454 0 00-1.029-.426H2.63a.607.607 0 00-.605.608c0 .336.272.608.605.608h2.535c.065 0 .13.025.174.07L6.36 6.26l-.81.003a1.21 1.21 0 00-1.106.74c-.187.445-.095.963.236 1.313l6.15 6.51c.085.09.183.157.287.216v3.798l-3.642 1.687a.614.614 0 00-.339.683.605.605 0 00.588.476l8.331-.017a.603.603 0 00.591-.487.613.613 0 00-.359-.68l-3.966-1.676v-3.8c.11-.065.21-.144.294-.242l3.765-4.361c.339.062.7.098 1.092.098 2.731 0 4.236-1.513 4.236-4.26C21.714 3.512 20.21 2 17.479 2"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCocktailLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.708 9.61a5.17 5.17 0 01-.801-.059l1.294-1.501a.825.825 0 00.227-.569.82.82 0 00-.818-.826h-.008l-3.166.014c-.008-.123-.016-.244-.016-.373 0-2.23 1.075-3.313 3.29-3.313 2.217 0 3.295 1.084 3.295 3.313 0 2.233-1.078 3.314-3.297 3.314zm-5.88 4.569l-4.344-4.6h8.305l-.01.017-3.95 4.583zm-2.176 6.815l2.199-1.017 2.386 1.008c-.002.003-4.585.009-4.585.009zM17.604 7.48l-1.095 1.27H6.98a.415.415 0 00-.212.066l-1.21-1.283c0 .003 12.047-.053 12.047-.053zm.104-5.325c-2.653 0-4.112 1.47-4.112 4.143 0 .132.011.252.017.375L8.207 6.7c-.014-.02-.023-.042-.04-.062L6.053 4.512a1.27 1.27 0 00-.902-.378H2.568a.412.412 0 000 .826h2.588c.12 0 .236.048.32.135l1.599 1.607-1.521.009a.815.815 0 00-.75.501.833.833 0 00.159.894l6.272 6.638c.056.062.129.101.199.14v4.373l-3.835 1.776a.414.414 0 00.17.79l8.496-.017a.415.415 0 10.16-.795l-4.17-1.762v-4.381c.07-.042.14-.084.195-.149l3.852-4.465c.428.11.893.18 1.409.18 2.653 0 4.115-1.471 4.115-4.138 0-2.666-1.462-4.14-4.118-4.14z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCocktailRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.451 9.308c-.045 0-.081-.005-.123-.005l.904-1.05c.202-.22.328-.51.328-.83a1.21 1.21 0 00-1.204-1.216h-.014l-2.913.014c.014-2.047.972-3.005 3.022-3.005 2.036 0 3.028.997 3.028 3.047 0 2.076-.964 3.045-3.028 3.045zm-5.768 4.678L7.616 9.681h7.782l-3.715 4.305zm-1.21 6.479l1.236-.571 1.339.565-2.575.006zM17.35 7.423l-.916 1.056c-.025-.003-.047-.014-.073-.014H6.468l-.936-.989c0 .003 11.818-.053 11.818-.053zM17.451 2c-2.717 0-4.216 1.501-4.23 4.224L8.04 6.25 6.17 4.367a1.454 1.454 0 00-1.03-.427H2.605A.607.607 0 002 4.55c0 .336.272.608.605.608H5.14a.25.25 0 01.174.07l1.022 1.03-.807.004A1.214 1.214 0 004.423 7c-.188.445-.095.96.235 1.314l6.152 6.512c.08.087.182.157.285.216v3.798l-3.641 1.687a.608.608 0 00.25 1.16l8.33-.018a.61.61 0 00.232-1.168L12.3 18.824v-3.799c.112-.064.21-.145.294-.24l3.765-4.362c.338.062.7.098 1.09.098 2.73 0 4.234-1.513 4.234-4.26C21.686 3.515 20.183 2 17.451 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCodeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.258 18.127a.221.221 0 00.224-.215V8.248H3.204v9.664c0 .117.101.215.225.215h16.829zM5.188 6.732a.548.548 0 00-.558-.537.55.55 0 00-.56.535v.002c0 .297.25.538.557.538a.548.548 0 00.56-.538zm1.678 0a.548.548 0 00-.558-.537h-.003a.548.548 0 00-.557.537c0 .297.25.538.557.538a.548.548 0 00.56-.538zm1.677 0a.548.548 0 00-.557-.537h-.003a.55.55 0 00-.56.535v.002c0 .297.25.538.56.538a.548.548 0 00.56-.538zm11.715-2.21c.787 0 1.428.62 1.428 1.379v12.008c0 .759-.641 1.378-1.428 1.378H3.43C2.641 19.29 2 18.671 2 17.912V5.9c0-.76.641-1.379 1.431-1.379h16.827zM8.96 11.183a.528.528 0 01-.02.748c-.005.006-.014.012-.02.017l-1.84 1.608 1.843 1.641a.53.53 0 01.031.765.576.576 0 01-.795.028l-2.294-2.036a.53.53 0 01.005-.801l2.294-2.006a.579.579 0 01.796.036zm6.518-.036l2.294 2.006c.115.1.182.246.185.397a.53.53 0 01-.182.4l-2.294 2.043a.584.584 0 01-.384.146.57.57 0 01-.412-.174.53.53 0 01.031-.768l1.843-1.641-1.84-1.605a.528.528 0 01-.059-.745c.006-.009.014-.014.02-.023a.582.582 0 01.798-.036zm-2.499-.07a.534.534 0 01.283.717l-1.86 4.003a.564.564 0 01-.512.32.592.592 0 01-.23-.048.532.532 0 01-.283-.715l1.86-4.002a.57.57 0 01.742-.275z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCodeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.588 18.623a.428.428 0 00.434-.42v-9.53H2.977v9.53c0 .232.193.42.434.42h17.177zM3.41 5.452a.43.43 0 00-.434.42V7.88h18.045V5.872a.426.426 0 00-.434-.42H3.41zm17.177-.796c.691 0 1.255.546 1.255 1.216v12.333c0 .67-.564 1.216-1.255 1.216H3.41c-.692 0-1.255-.546-1.255-1.216V5.872c0-.67.563-1.216 1.255-1.216h17.177zM6.896 13.735l2.014 1.804c.165.148.176.4.022.563a.417.417 0 01-.302.126.432.432 0 01-.28-.107l-2.342-2.098a.395.395 0 01-.132-.294c0-.112.05-.218.135-.294l2.341-2.062a.422.422 0 01.58.028.389.389 0 01-.028.563l-2.008 1.77zM6.35 7.278a.563.563 0 01-.572-.552c0-.305.255-.554.572-.554.316 0 .568.246.568.554a.562.562 0 01-.568.552zm1.711 0a.563.563 0 01-.571-.552c0-.305.254-.554.571-.554a.56.56 0 01.571.554.563.563 0 01-.571.552zm-3.426 0a.563.563 0 01-.571-.552c0-.305.255-.554.571-.554.317 0 .572.246.572.554a.563.563 0 01-.572.552zM15.6 11.376l2.342 2.062a.393.393 0 01.002.588l-2.341 2.098a.421.421 0 01-.583-.02.391.391 0 01.022-.563l2.017-1.806-2.011-1.768a.389.389 0 01-.028-.563.422.422 0 01.58-.028zm-2.504-.045c.207.09.3.325.207.527l-1.9 4.11a.41.41 0 01-.543.198.394.394 0 01-.207-.527l1.9-4.109a.418.418 0 01.543-.199z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCodeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.23 18.105a.222.222 0 00.227-.218V8.842H3.23v9.042c0 .12.103.218.227.218H20.23v.003zM3.46 5.707a.222.222 0 00-.228.219v1.73H20.46v-1.73c0-.12-.1-.219-.227-.219H3.46zm16.77-1.182c.804 0 1.456.63 1.456 1.404v11.958c0 .773-.652 1.403-1.456 1.403H3.46c-.805 0-1.46-.63-1.46-1.403V5.929c0-.774.653-1.404 1.46-1.404h16.77zM6.157 7.15a.558.558 0 01-.569-.55c0-.304.255-.548.569-.548.316 0 .568.246.568.549a.558.558 0 01-.568.549zm1.709 0a.558.558 0 01-.57-.55c0-.304.256-.548.57-.548.316 0 .568.246.568.549a.556.556 0 01-.568.549zm-3.42 0a.558.558 0 01-.57-.55c0-.304.253-.548.57-.548.316 0 .568.246.568.549a.556.556 0 01-.569.549zm4.436 3.989a.54.54 0 01-.039.781L6.97 13.56l1.88 1.672a.539.539 0 01.03.782.578.578 0 01-.42.176.575.575 0 01-.389-.148L5.732 13.96a.543.543 0 01-.185-.406.54.54 0 01.188-.406l2.339-2.045a.585.585 0 01.81.037zm6.645-.04l2.339 2.045a.546.546 0 01.187.406.549.549 0 01-.185.41l-2.339 2.08a.591.591 0 01-.81-.03.539.539 0 01.032-.782l1.88-1.672-1.875-1.639a.539.539 0 01-.039-.781.59.59 0 01.81-.037zm-2.544-.07c.289.126.42.451.289.732l-1.897 4.078a.578.578 0 01-.523.328.63.63 0 01-.236-.048.542.542 0 01-.288-.728l1.896-4.079c.129-.283.468-.409.76-.283z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.406 18.007L5.603 18c-1.12 0-1.99-.311-2.58-.927-.574-.591-.863-1.437-.863-2.513V8.282C2.16 6.08 3.381 4.87 5.6 4.87l12.806.008c2.219 0 3.44 1.213 3.44 3.412v6.277c0 1.076-.288 1.922-.86 2.513-.594.616-1.462.927-2.58.927zm2.88 2.213L2.72 20.212a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56l18.566.008c.308 0 .56.252.56.56 0 .308-.252.56-.56.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.319 17.452c-1.042 0-1.84-.283-2.381-.84-.518-.538-.782-1.32-.782-2.32V8.015c0-1 .264-1.776.782-2.305.535-.55 1.336-.827 2.378-.827l13.356-.008c1.042 0 1.843.277 2.378.826.518.533.781 1.308.781 2.306v6.277c0 1-.263 1.781-.781 2.32-.538.557-1.34.84-2.381.84l-13.35.008zM18.674 5.435L5.32 5.444c-1.751 0-2.603.84-2.603 2.571v6.277c0 .852.21 1.499.625 1.93.429.446 1.093.67 1.978.67l13.355-.009c.883 0 1.55-.224 1.978-.67.415-.428.625-1.077.625-1.929V8.007c-.003-1.731-.855-2.572-2.603-2.572zM2.436 19.1a.28.28 0 01-.28-.28.28.28 0 01.28-.28l19.118-.009a.28.28 0 01.28.28.28.28 0 01-.28.28l-19.118.01z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.243 18.504a.75.75 0 01.102 1.493l-.102.007H3.3a.75.75 0 01-.101-1.493l.101-.007h17.943zM18.22 3.5c2.1 0 3.802 1.702 3.802 3.801v5.897c0 2.1-1.702 3.802-3.802 3.802H6.302A3.802 3.802 0 012.5 13.198V7.301a3.8 3.8 0 013.802-3.8zm0 1.5H6.302A2.301 2.301 0 004 7.301v5.897A2.302 2.302 0 006.302 15.5h11.917a2.302 2.302 0 002.302-2.302V7.301a2.3 2.3 0 00-2.302-2.3z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerUserFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.157 12.23c.353.347.53.857.53 1.51v4.114c0 .656-.177 1.168-.53 1.521-.364.367-.905.552-1.61.552l-9.037.006c-.703 0-1.244-.185-1.61-.552-.351-.353-.53-.863-.53-1.521v-4.115c0-.655.179-1.162.53-1.513.363-.358.904-.54 1.607-.54l9.036-.006c.71.003 1.253.185 1.614.544zm-.174 8.271a.6.6 0 01.61.594.603.603 0 01-.61.594h-11.8a.601.601 0 01-.612-.594c0-.327.275-.594.611-.594h11.801zM10.32 11.2c-1.406 0-2.518-.39-3.305-1.154-.818-.799-1.235-1.955-1.235-3.437 0-1.482.414-2.639 1.232-3.443.787-.77 1.9-1.162 3.306-1.162 1.406 0 2.52.39 3.31 1.16.824.803 1.241 1.96 1.241 3.442 0 1.482-.417 2.639-1.24 3.44-.788.765-1.903 1.154-3.309 1.154zm-2.179.871c-.314.457-.476 1.028-.476 1.712v4.114c0 .625.137 1.157.398 1.6h-4.98c-.597 0-1.082-.47-1.082-1.048v-1.33c0-1.429.468-2.659 1.356-3.555.96-.975 2.37-1.487 4.073-1.487h.711v-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerUserLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.434 21.025c.226.01.4.201.389.428a.406.406 0 01-.39.39H8.86a.408.408 0 01-.409-.41c0-.226.182-.408.41-.408h12.574zM7.174 3.89c-.65.63-.981 1.58-.981 2.826 0 1.247.33 2.197.98 2.821.628.605 1.555.91 2.754.91 1.201 0 2.128-.305 2.759-.91.655-.624.986-1.577.986-2.82 0-1.244-.33-2.2-.986-2.827-.63-.608-1.558-.916-2.76-.916-1.198 0-2.125.308-2.753.916zm2.753 7.378c-1.418 0-2.535-.383-3.32-1.137-.818-.787-1.232-1.936-1.232-3.412s.414-2.624 1.23-3.414c.784-.762 1.904-1.149 3.322-1.149 1.417 0 2.537.387 3.324 1.143.821.79 1.236 1.941 1.236 3.417 0 1.477-.415 2.625-1.238 3.412-.785.757-1.902 1.14-3.322 1.14zm-6.953 7.39c0 .033.028.061.062.061H8.52a2.974 2.974 0 01-.067-.63v-4.26c0-.278.037-.524.098-.748H7.4c-1.423 0-2.58.423-3.347 1.224-.703.734-1.076 1.762-1.076 2.972l-.003 1.38zm7.625-6.135c-.48 0-.824.107-1.031.314a.823.823 0 00-.14.199v.045h-.02c-.09.193-.14.44-.14.748v4.26c0 .46.101.796.3 1.003.204.213.549.32 1.025.32l9.065-.006c.476 0 .82-.107 1.028-.32.199-.207.3-.546.3-1.005v-4.255c0-.457-.101-.79-.3-.992-.205-.21-.55-.314-1.028-.314.005-.002-9.06.003-9.06.003zm-1.76 6.95v.064h-5.8a.882.882 0 01-.883-.88V17.28c0-1.425.451-2.65 1.3-3.537.927-.967 2.288-1.477 3.938-1.477h1.589c.364-.372.907-.56 1.613-.56l9.064-.005c.706 0 1.25.187 1.614.56.353.358.53.888.53 1.563v4.26c0 .678-.18 1.208-.53 1.572-.364.378-.908.571-1.616.571l-9.065.006c-.706 0-1.25-.193-1.616-.572-.048-.056-.09-.123-.137-.187z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconComputerUserRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.202 18.252h5.193a3.445 3.445 0 01-.034-.417v-4.168c0-.194.026-.37.05-.538H7.329c-1.33 0-2.42.395-3.135 1.137-.65.68-.994 1.644-.994 2.773l.003 1.213zm6.364-4.585v4.168c0 .336.064.585.185.706.16.168.52.193.72.193h8.874c.198 0 .551-.025.72-.193.111-.12.176-.376.176-.706v-4.177c0-.33-.065-.577-.177-.689-.12-.12-.378-.193-.72-.193l-8.873.008c-.353 0-.608.065-.72.185-.118.12-.185.37-.185.698zm.907 6.269c-.641 0-1.131-.16-1.49-.482H3.067A1.065 1.065 0 012 18.394v-1.352c0-1.451.457-2.695 1.33-3.6.947-.994 2.334-1.515 4-1.515h1.813c.336-.224.776-.344 1.33-.344l8.874-.009c.698 0 1.227.185 1.577.552.345.353.521.866.521 1.532v4.177c0 .666-.168 1.179-.512 1.538-.362.37-.9.563-1.586.563h-8.874zM7.25 4.07c-.59.577-.896 1.46-.896 2.622 0 1.168.305 2.05.896 2.622.577.552 1.434.834 2.558.834 1.131 0 1.989-.28 2.566-.834.602-.577.907-1.46.907-2.622 0-1.165-.305-2.045-.907-2.622-.577-.56-1.443-.84-2.566-.84-1.112 0-1.978.28-2.558.84zm2.558 7.28c-1.443 0-2.58-.392-3.39-1.17-.843-.81-1.266-1.981-1.266-3.488 0-1.502.423-2.678 1.266-3.488.81-.784 1.947-1.179 3.39-1.179 1.442 0 2.59.392 3.4 1.18.849.809 1.275 1.988 1.275 3.487 0 1.507-.426 2.678-1.275 3.487-.81.779-1.95 1.171-3.4 1.171zm11.88 9.762a.601.601 0 01-.603.602H8.764a.601.601 0 110-1.204h12.32a.61.61 0 01.602.602z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConferenceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.944 6.034c.633 0 1.146.551 1.146 1.235v1.09c0 .683-.513 1.235-1.146 1.235h-.381v.003H5.207v-.003h-.38c-.634 0-1.146-.552-1.146-1.235V7.266c0-.683.512-1.235 1.145-1.235h2.807v-.67c0-.109.04-.213.112-.291l.625-.672a.85.85 0 01-.222-.58c0-.219.079-.429.225-.583l.899-.969a.74.74 0 01.54-.24.74.74 0 01.54.24l.547.591a.87.87 0 010 1.163L10 4.986a.727.727 0 01-1.081 0l-.011-.011-.513.552v.498h6.98v-.498l-.515-.558-.014.014a.727.727 0 01-1.081 0l-.9-.966a.87.87 0 010-1.163l.55-.59a.735.735 0 01.54-.242.74.74 0 01.54.241l.9.97a.86.86 0 01.006 1.154l.63.677a.426.426 0 01.112.292v.67h2.8v.008zm-13.737 4.52v-.302h13.356v.303c0 .68-.513 1.235-1.146 1.235h-1.154v.003H7.504v-.003H6.35c-.63 0-1.143-.555-1.143-1.235zm2.297 7.18v-5.286h8.76v5.286h-8.76zm9.89.655c.634 0 1.147.552 1.147 1.236v.857c0 .683-.513 1.235-1.146 1.235H6.373c-.634 0-1.146-.552-1.146-1.235v-.857c0-.675.501-1.222 1.123-1.233h10.21v-.003h.835z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConferenceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.241 2.156c.216 0 .426.087.58.241l.966.964a.811.811 0 01.241.577.82.82 0 01-.235.568l.678.675a.41.41 0 01.12.289v1.087h2.804c.454 0 .82.367.824.818v1.364a.82.82 0 01-.821.818h-.782v1.252a.818.818 0 01-.82.818h-1.297v7.37h1.274a.82.82 0 01.821.818v1.212a.818.818 0 01-.82.818H6.26a.82.82 0 01-.821-.818v-1.212c0-.454.367-.818.82-.818h1.275v-7.37H6.238a.82.82 0 01-.82-.818V9.557h-.785a.821.821 0 01-.82-.818V7.375c0-.454.366-.818.82-.818h2.801V5.47a.4.4 0 01.12-.289l.673-.669a.814.814 0 01.003-1.151l.966-.964a.825.825 0 011.163 0l.588.588c.32.32.32.838 0 1.157l-.966.961a.819.819 0 01-1.16 0l-.011-.011-.552.549v.919h7.512v-.92l-.557-.554-.017.017a.819.819 0 01-1.16 0l-.966-.96a.818.818 0 010-1.158l.591-.588a.818.818 0 01.58-.24zm3.53 17.656H6.257v1.213H17.77v-1.213zm-2.096-8.185H8.353v7.367h7.322v-7.367zm2.118-2.073H6.238v1.252h11.555V9.554zm1.602-2.18H4.633V8.74H6.22c.008 0 .014-.003.02-.003h11.554c.005 0 .011.003.017.003h1.585V7.375zm-9.616-4.4l-.966.964.588.585.966-.96-.588-.589zm4.46-.003l-.589.589.966.96.589-.585-.967-.964z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConferenceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.254 2c.302 0 .594.129.81.359l.646.694c.379.404.418 1.011.16 1.482l.473.51a.642.642 0 01.169.434v.588h2.546c.63 0 1.143.552 1.145 1.233v1.087c0 .68-.512 1.23-1.145 1.23h-.381v.96c0 .68-.513 1.23-1.146 1.23h-1.154v6.574h1.132c.633 0 1.145.552 1.145 1.23v.851c0 .678-.512 1.23-1.145 1.23H6.486c-.633 0-1.145-.552-1.145-1.23v-.851c0-.678.512-1.23 1.145-1.23h1.132v-6.574H6.464c-.633 0-1.146-.55-1.146-1.23v-.96h-.38c-.634 0-1.146-.55-1.146-1.23V7.3c0-.678.512-1.23 1.145-1.23h2.547v-.588c0-.163.061-.32.168-.434l.476-.513c-.258-.47-.216-1.076.16-1.479l.647-.695c.215-.23.507-.358.809-.358.303 0 .594.129.81.358l.378.407a1.29 1.29 0 010 1.736l-.647.695a1.104 1.104 0 01-.81.361c-.19 0-.375-.059-.54-.154l-.306.328v.333h6.734v-.333l-.302-.328a1.075 1.075 0 01-.538.151c-.303 0-.594-.128-.81-.36l-.647-.696a1.296 1.296 0 010-1.736l.378-.406c.216-.23.507-.359.81-.359zM8.688 19.605H6.486v.852h11.02v-.852h-2.202c-.022.003-.047.008-.073.008h-6.47c-.025 0-.048-.005-.073-.008zm6.546-7.804h-6.47v6.574h6.47v-6.574zm2.297-2.19H6.464v.96h2.255c.017 0 .03-.005.045-.005h6.47c.014 0 .028.005.045.005h2.252v-.96zm1.527-2.314H4.94v1.087h1.482c.017 0 .03-.006.045-.006h11.067c.014 0 .03.006.045.006h1.479V7.297zM9.75 3.23l-.647.694.378.407.647-.695-.378-.406zm4.504 0l-.378.406.647.695.378-.407-.647-.694z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureDeviceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.668 2c2.157 0 3.25 1.106 3.246 3.291v13.11c0 2.215-1.061 3.29-3.249 3.29H10.48c-2.187 0-3.249-1.075-3.249-3.29v-3.236a.841.841 0 01-.804-.84v-.53a2.834 2.834 0 01-.221-.07l-.356.356a.84.84 0 01-1.188 0l-.733-.73a.84.84 0 010-1.189l.355-.355a5.108 5.108 0 01-.07-.222H3.69a.84.84 0 01-.84-.84V9.71a.84.84 0 01.84-.84h.527c.02-.076.045-.15.07-.222l-.356-.356a.84.84 0 010-1.187l.734-.731a.84.84 0 011.188 0l.356.355c.072-.025.145-.047.221-.07v-.524a.837.837 0 01.804-.84c0-1.11.26-1.913.795-2.462C8.573 2.272 9.377 2 10.483 2zm-3.583 15.308c-.58 0-.955.303-.955.958 0 .314.087.55.241.706.168.17.412.252.714.252.303 0 .547-.081.715-.252.154-.157.24-.39.24-.706 0-.653-.375-.958-.955-.958zM8.31 6.134H7.273V7.35c-.485.05-.9.18-1.244.387l-.77-.77-.734.73.768.77c-.202.337-.334.751-.387 1.244H3.69v1.037h1.216c.053.493.182.907.387 1.244l-.77.77.733.73.77-.77c.345.208.762.334 1.244.387v1.216h1.037v-1.213c.484-.05.899-.18 1.243-.387l.77.77.732-.733-.77-.77c.201-.337.333-.751.386-1.244h1.216V9.714h-1.216c-.05-.493-.182-.907-.387-1.243l.774-.774-.732-.73-.77.77c-.344-.208-.762-.334-1.244-.387V6.134zm-.52 2.642c.921 0 1.453.46 1.453 1.454s-.532 1.453-1.454 1.453c-.921 0-1.453-.459-1.453-1.453 0-.995.532-1.454 1.453-1.454z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureDeviceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.757 2.156c1.997 0 2.97.986 2.97 3.011v13.656c0 1.04-.236 1.784-.723 2.277-.488.493-1.222.734-2.247.734h-7.185c-1.025 0-1.762-.24-2.25-.734-.487-.493-.72-1.238-.72-2.277v-3.81h-.215a.562.562 0 01-.553-.47l-.007-.09v-.742a3.381 3.381 0 01-.571-.18l-.485.485a.561.561 0 01-.793 0l-.734-.73a.561.561 0 010-.794l.485-.484a3.656 3.656 0 01-.18-.572H3.81a.562.562 0 01-.56-.56V9.84c0-.308.252-.56.56-.56h.743a3.33 3.33 0 01.179-.572l-.485-.485a.561.561 0 010-.792l.734-.734a.561.561 0 01.793 0l.484.484c.185-.075.376-.134.572-.179V6.26c0-.308.252-.56.56-.56h.212v-.533c0-2.053.945-3.01 2.97-3.01h7.185zm0 .56h-7.185c-1.711 0-2.409.71-2.409 2.451V5.7h.263c.278 0 .51.205.551.472l.007.092v.742c.196.042.386.104.571.18l.485-.485a.561.561 0 01.793 0l.73.73a.561.561 0 010 .793l-.484.485c.076.185.135.375.18.571H12c.308 0 .56.253.56.56v1.037c0 .308-.252.56-.56.56h-.743a3.381 3.381 0 01-.179.572l.485.484a.561.561 0 010 .793l-.731.731a.561.561 0 01-.793 0l-.485-.484a3.656 3.656 0 01-.571.179v.742c0 .308-.252.56-.56.56h-.261v3.81c0 .885.182 1.501.56 1.885.379.384.98.569 1.85.569h7.184c.868 0 1.473-.185 1.849-.569.375-.384.56-1 .56-1.885V5.167c0-1.717-.72-2.45-2.409-2.45zm-3.591 15.11c.504 0 .832.266.832.834 0 .275-.076.477-.21.614-.146.148-.359.221-.622.221s-.476-.073-.622-.221c-.134-.137-.21-.342-.21-.614 0-.568.328-.834.832-.834zM8.426 6.26H7.393v1.216c-.485.05-.9.179-1.244.386l-.77-.77-.734.73.767.771c-.201.336-.333.75-.386 1.244H3.81v1.036h1.216c.053.493.182.908.386 1.244l-.77.77.734.734.77-.77c.345.207.762.333 1.244.386v1.216h1.036v-1.216c.485-.05.9-.179 1.244-.386l.77.77.732-.734-.77-.77c.2-.336.333-.75.386-1.244h1.216V9.837h-1.216c-.05-.493-.182-.908-.387-1.244l.77-.77-.73-.731-.77.77c-.345-.207-.763-.333-1.245-.386V6.26zm-.518 2.36c1.118 0 1.734.616 1.734 1.734 0 1.118-.616 1.734-1.734 1.734-1.117 0-1.734-.616-1.734-1.734 0-1.118.617-1.734 1.734-1.734zm0 .56c-.8 0-1.173.373-1.173 1.174 0 .801.372 1.174 1.173 1.174s1.174-.373 1.174-1.174c0-.801-.373-1.174-1.174-1.174z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureDeviceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.69 2a2.865 2.865 0 012.862 2.861V19.64a2.865 2.865 0 01-2.862 2.86H9.2a2.864 2.864 0 01-2.862-2.86v-4.258a.79.79 0 01-.693-.779v-.539a3.628 3.628 0 01-.347-.12l-.365.363a.793.793 0 01-1.13 0l-.707-.707a.797.797 0 010-1.13l.465-.466a3.686 3.686 0 01-.065-.246H2.8a.8.8 0 01-.8-.8v-1a.8.8 0 01.8-.8h.745c.02-.067.04-.134.062-.199l-.51-.513a.799.799 0 010-1.13l.706-.708a.797.797 0 011.13 0l.511.51c.065-.023.134-.04.201-.062v-.744c0-.403.304-.723.693-.778v-.673A2.864 2.864 0 019.2 2.001zm0 1.5H9.2c-.752 0-1.362.61-1.362 1.361v.768c.24.136.407.386.407.683v.658c.095.021.186.047.275.075l.437-.437a.797.797 0 011.131 0l.707.707a.8.8 0 010 1.131l-.334.335c.05.12.092.246.13.377h.5a.8.8 0 01.8.8v1a.8.8 0 01-.8.8h-.398a3.997 3.997 0 01-.14.468l.242.244a.8.8 0 010 1.13l-.707.707a.797.797 0 01-1.13 0l-.297-.295a4.021 4.021 0 01-.416.118v.473a.79.79 0 01-.407.685v4.351c0 .75.61 1.361 1.361 1.361h8.491c.751 0 1.362-.61 1.362-1.36V4.86c0-.75-.61-1.36-1.362-1.36zm-4.125 13.751a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zM7.446 6.312h-1v1.365c-.465.05-.87.17-1.202.372l-.875-.875-.707.707.874.874c-.196.325-.317.73-.369 1.203H2.8v1h1.366c.052.474.173.878.37 1.203l-.875.874.707.707.875-.874c.332.2.737.321 1.202.372v1.363h1V13.24c.465-.05.87-.172 1.203-.372l.874.874.707-.707-.874-.874c.197-.325.318-.729.37-1.203h1.366v-1H9.724c-.05-.474-.172-.878-.369-1.203l.874-.874-.707-.707-.874.875c-.333-.202-.738-.322-1.203-.372V6.312zm-.5 2.403c1.108 0 1.744.636 1.744 1.743 0 1.107-.636 1.743-1.743 1.743-1.108 0-1.743-.636-1.743-1.743 0-1.107.635-1.743 1.743-1.743zm0 .857c-.628 0-.885.257-.885.886s.257.886.886.886.885-.257.885-.886-.256-.886-.885-.886z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureModemFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.56 6.14c.308 0 .56.252.56.56v7.06l6.762.002.28-.28a3.28 3.28 0 01-.126-.398h-.63a.7.7 0 01-.7-.7v-1.037a.7.7 0 01.7-.7h.63a3.28 3.28 0 01.126-.398l-.42-.42a.7.7 0 010-.991l.731-.732a.7.7 0 01.992 0l.42.42a3.28 3.28 0 01.398-.125v-.63a.7.7 0 01.7-.701h1.037a.7.7 0 01.7.7v.63c.134.034.269.076.398.127l.42-.42a.7.7 0 01.991 0l.734.733a.7.7 0 010 .992l-.42.42c.05.129.092.26.126.395h.63a.7.7 0 01.7.7v1.037a.7.7 0 01-.7.7h-.633a3.28 3.28 0 01-.126.398l.42.42a.7.7 0 01.2.406c.148.1.288.216.411.345.546.565.824 1.375.824 2.4v1.373c0 1.028-.278 1.837-.824 2.403-.569.588-1.398.888-2.468.888H5.291c-1.07 0-1.899-.297-2.467-.888C2.277 20.26 2 19.454 2 18.426v-1.373c0-1.025.277-1.835.824-2.403.515-.534 1.245-.83 2.175-.88L5 6.7c0-.308.252-.56.56-.56zm-.294 10.79c-.585 0-.95.361-.95.944 0 .288.082.518.25.686.168.168.409.258.7.258s.532-.09.7-.258c.166-.168.25-.4.25-.686 0-.583-.364-.944-.95-.944zm2.74 0c-.586 0-.95.361-.95.944 0 .288.081.518.25.686.167.168.408.258.7.258.29 0 .532-.09.7-.258.168-.168.252-.4.25-.686 0-.583-.365-.944-.95-.944zm9.01-9.16H15.98v1.216a3.445 3.445 0 00-.672.134c-.199.062-.39.146-.569.253l-.512-.513-.258-.258-.731.731.33.33.446.44c-.064.11-.12.222-.168.34a3.338 3.338 0 00-.219.904h-1.215v1.037h1.215l.017.129c.042.33.135.65.28.95.028.055.06.108.09.162l-.44.44-.33.33.73.731.768-.768.076.043c.11.061.224.112.342.156.266.098.543.16.826.188v1.216h1.036v-1.216c.376-.04.712-.126 1.003-.26a2.16 2.16 0 00.238-.127l.77.77.734-.73-.77-.77a2.67 2.67 0 00.3-.746c.04-.165.07-.33.087-.498h1.215v-1.037h-1.218l-.017-.131a2.895 2.895 0 00-.37-1.112l.77-.77-.733-.732-.77.77a2.349 2.349 0 00-.466-.218 3.36 3.36 0 00-.778-.168V7.77zm-.512 2.617c.46 0 .824.126 1.079.37.266.254.4.63.4 1.109 0 .478-.134.851-.4 1.109-.255.243-.62.37-1.079.37-.46 0-.823-.127-1.078-.37-.266-.255-.4-.63-.4-1.11 0-.478.134-.851.4-1.109.255-.246.619-.37 1.078-.37zm-6.126-8.202c1.062 1.022 1.597 2.54 1.597 4.515 0 1.967-.535 3.482-1.588 4.504a.562.562 0 01-.95-.403c0-.151.062-.297.17-.4.827-.804 1.247-2.048 1.247-3.7 0-1.659-.423-2.905-1.255-3.71a.559.559 0 01-.014-.792.559.559 0 01.793-.014zM8.134 3.59c.737.712 1.112 1.76 1.112 3.112 0 1.35-.372 2.395-1.103 3.106a.58.58 0 01-.392.155.562.562 0 01-.56-.56c0-.152.061-.298.17-.401.507-.493.765-1.266.765-2.3 0-1.034-.258-1.815-.77-2.305a.559.559 0 01-.014-.793.559.559 0 01.792-.014z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureModemLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.714 6.268a.28.28 0 01.28.28v7.632h6.435l.035-.041.485-.485a3.656 3.656 0 01-.18-.571h-.742a.562.562 0 01-.56-.56v-1.037c0-.308.252-.56.56-.56h.74c.042-.196.104-.387.18-.572l-.485-.484a.561.561 0 010-.793l.73-.73a.561.561 0 01.793 0l.485.484a3.64 3.64 0 01.571-.18V7.91c0-.308.253-.56.56-.56h1.037c.308 0 .56.25.56.56v.742c.196.042.387.104.572.18l.484-.485a.561.561 0 01.793 0l.74.731a.561.561 0 010 .793l-.485.484c.076.185.134.376.18.572h.739c.308 0 .56.252.56.56v1.037c0 .308-.252.56-.56.56h-.743a3.381 3.381 0 01-.179.571l.485.485c.051.051.09.11.118.174l-.121-.031c1.344.305 2.056 1.313 2.056 2.913v1.638c0 .953-.252 1.695-.745 2.208-.516.532-1.28.8-2.27.8H5.168c-.988 0-1.753-.27-2.266-.803-.493-.513-.745-1.255-.745-2.207v-1.639c0-.952.252-1.695.745-2.207.513-.532 1.278-.804 2.266-.804h.266V6.547a.28.28 0 01.28-.28zm6.625 8.473H5.167c-.831 0-1.459.213-1.862.633-.39.406-.589 1.017-.589 1.818v1.639c0 .8.2 1.414.589 1.818.403.42 1.03.633 1.862.633h13.656c.832 0 1.46-.213 1.863-.633.389-.407.588-1.017.588-1.818v-1.639c0-.661-.135-1.196-.4-1.588-.237-.349-.588-.593-1.043-.73l-.047.058-.734.73a.561.561 0 01-.793 0l-.485-.484a3.656 3.656 0 01-.57.18v.742c0 .308-.253.56-.561.56h-1.037a.562.562 0 01-.56-.56v-.743a3.381 3.381 0 01-.571-.179l-.485.485a.561.561 0 01-.793 0l-.73-.731a.557.557 0 01-.126-.191zm-7.426 2.605c.406 0 .672.213.669.664 0 .218-.059.38-.168.49-.118.12-.289.177-.501.177-.213 0-.384-.06-.502-.177-.106-.11-.168-.272-.168-.49 0-.454.263-.664.67-.664zm2.437 0c.406 0 .672.213.669.664 0 .218-.059.38-.168.49-.118.12-.289.177-.501.177-.213 0-.384-.06-.502-.177-.106-.11-.168-.272-.168-.49 0-.454.263-.664.67-.664zm9.288-9.434h-1.036v1.216c-.485.05-.9.179-1.244.386l-.77-.77-.731.73.77.766c-.202.336-.333.75-.387 1.243h-1.215v1.037h1.215c.05.493.182.907.387 1.243l-.77.77.73.737.77-.77c.345.207.763.333 1.245.387v1.215h1.036v-1.215c.485-.05.9-.18 1.244-.387l.77.77.734-.73-.77-.771c.201-.336.333-.75.386-1.244h1.216V11.49h-1.216c-.05-.493-.182-.908-.386-1.244l.77-.77-.734-.734-.77.77c-.345-.207-.762-.333-1.244-.386V7.912zm-.518 2.358c1.117 0 1.734.617 1.734 1.734 0 1.118-.617 1.734-1.734 1.734-1.118 0-1.734-.616-1.734-1.734 0-1.117.616-1.734 1.734-1.734zm0 .56c-.801 0-1.174.373-1.174 1.174 0 .801.373 1.174 1.174 1.174.801 0 1.174-.373 1.174-1.174 0-.8-.373-1.173-1.174-1.173zm-5.787-8.596c1.003.966 1.512 2.417 1.512 4.314 0 1.888-.504 3.336-1.501 4.302a.28.28 0 01-.473-.202c0-.075.03-.148.084-.201.885-.857 1.333-2.17 1.333-3.9 0-1.736-.451-3.05-1.342-3.91a.28.28 0 11.387-.403zM8.086 3.637c.68.656 1.025 1.636 1.025 2.91 0 1.272-.341 2.25-1.02 2.906a.274.274 0 01-.19.078.28.28 0 01-.28-.28c0-.076.031-.149.084-.202.563-.546.849-1.39.849-2.501 0-1.112-.289-1.961-.854-2.507a.28.28 0 11.386-.404z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureModemRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.56 6.14c.308 0 .56.252.56.56v7.062h6.762l.28-.28a3.114 3.114 0 01-.069-.197l-.057-.201h-.627a.7.7 0 01-.7-.7v-1.037a.7.7 0 01.7-.7h.63a3.28 3.28 0 01.126-.398l-.42-.42a.7.7 0 010-.991l.731-.732a.7.7 0 01.992 0l.42.42a3.28 3.28 0 01.398-.125v-.63a.7.7 0 01.7-.701h1.036a.7.7 0 01.698.7v.63c.134.034.269.076.398.127l.42-.42a.7.7 0 01.991 0l.734.728a.7.7 0 010 .991l-.42.42c.05.132.093.264.126.398h.63a.7.7 0 01.7.7v1.037a.7.7 0 01-.7.7h-.63a3.28 3.28 0 01-.126.398l.42.42c.114.114.18.257.2.405.597.404 1.234 1.2 1.234 2.746v1.373c0 1.028-.277 1.835-.823 2.403-.571.594-1.403.891-2.47.891H5.29c-1.07 0-1.899-.3-2.467-.888C2.277 20.261 2 19.454 2 18.426v-1.373c0-1.028.277-1.835.824-2.403.515-.536 1.246-.83 2.176-.88V6.7c0-.308.252-.56.56-.56zm7.172 8.743h-7.44c-.754 0-1.312.184-1.662.546-.339.35-.51.896-.51 1.624v1.373c0 .728.171 1.274.51 1.624.35.362.908.547 1.661.547h13.112c.754 0 1.311-.185 1.661-.547.34-.35.51-.896.51-1.624v-1.373c0-.853-.227-1.44-.69-1.783l-.355.352a.7.7 0 01-.991 0l-.42-.42a3.28 3.28 0 01-.398.126v.633a.7.7 0 01-.7.7h-1.037a.7.7 0 01-.7-.7v-.63a3.28 3.28 0 01-.398-.127l-.42.42a.7.7 0 01-.992 0l-.73-.73a.721.721 0 01-.011-.01zM5.266 16.93c.586 0 .95.361.95.944 0 .288-.084.518-.25.686-.165.168-.409.258-.7.258s-.532-.09-.7-.258c-.168-.168-.25-.398-.25-.686 0-.583.365-.944.95-.944zm2.742 0c.586 0 .95.361.95.944 0 .288-.084.518-.25.686-.165.168-.411.258-.7.258-.29 0-.532-.09-.7-.258-.168-.168-.25-.398-.25-.686 0-.583.365-.944.95-.944zm9.014-9.16h-1.036v1.216c-.485.05-.9.18-1.244.387l-.77-.77-.731.73.77.77c-.201.337-.333.751-.386 1.244h-1.216v1.037h1.216c.05.493.182.907.386 1.243l-.55.552a.556.556 0 01-.043.396l.554.554.77-.77c.345.207.762.333 1.244.386v1.216h1.036v-1.216c.485-.05.9-.18 1.244-.386l.77.77.411-.413a.562.562 0 01.186-.452l-.636-.637c.202-.336.334-.75.387-1.243h1.215v-1.037h-1.212c-.05-.493-.183-.907-.387-1.243l.77-.77-.734-.732-.77.77c-.344-.207-.762-.333-1.244-.386V7.77zm-.518 2.292c.563 0 1.003.15 1.317.45.325.312.487.768.487 1.354 0 .585-.165 1.039-.487 1.352-.314.3-.757.451-1.317.451-.56 0-1.005-.15-1.316-.45-.325-.311-.488-.768-.488-1.353 0-.586.166-1.04.488-1.353.31-.3.753-.451 1.316-.451zm0 .7c-.765 0-1.103.339-1.103 1.104 0 .764.338 1.103 1.103 1.103.765 0 1.104-.339 1.104-1.103 0-.765-.342-1.104-1.104-1.104zm-6.126-8.577c1.062 1.022 1.6 2.54 1.6 4.515 0 1.967-.535 3.482-1.589 4.504a.562.562 0 01-.952-.403c0-.151.062-.297.17-.4.827-.804 1.247-2.048 1.247-3.7 0-1.659-.423-2.905-1.255-3.71a.559.559 0 01-.014-.792.559.559 0 01.793-.014zM8.134 3.59c.737.712 1.112 1.76 1.112 3.112 0 1.35-.372 2.395-1.103 3.107a.58.58 0 01-.392.154.562.562 0 01-.56-.56c0-.152.061-.298.17-.401.507-.493.765-1.266.765-2.3 0-1.034-.258-1.815-.77-2.305a.559.559 0 01-.014-.793.559.559 0 01.792-.014z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureTvDecoderFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.843 5.347a.84.84 0 01.84.84v.524c.076.02.149.045.222.07l.355-.355a.84.84 0 011.188 0l.734.734a.84.84 0 010 1.187l-.356.356c.025.073.048.146.07.221h.524a.84.84 0 01.84.84v1.037a.84.84 0 01-.84.84h-.524c-.02.076-.045.149-.07.222l.356.355a.887.887 0 01.185.28h1.174a2.15 2.15 0 012.148 2.149v2.02c0 1.184-.96 2.148-2.148 2.148H4.148A2.149 2.149 0 012 16.667v-2.02a2.15 2.15 0 012.151-2.148h6.135a.841.841 0 01.185-.28l.355-.356a5.108 5.108 0 01-.07-.222h-.524a.84.84 0 01-.84-.84V9.765a.84.84 0 01.84-.84h.524c.02-.076.045-.15.07-.222l-.355-.356a.84.84 0 010-1.187l.73-.734a.84.84 0 011.188 0l.356.355c.073-.025.146-.047.221-.07v-.523a.84.84 0 01.84-.84zm3.501 10.622H15.69a.594.594 0 000 1.188h2.655a.594.594 0 000-1.188zm-13.4.135a.457.457 0 100 .913.457.457 0 000-.913zm1.695 0a.457.457 0 100 .913.457.457 0 000-.913zm1.638 0a.457.457 0 100 .913.457.457 0 000-.913zm6.566-9.92h-1.036v1.217c-.485.05-.9.179-1.244.386l-.77-.77-.731.73.77.771c-.202.336-.333.75-.387 1.244H10.23v1.036h1.215c.05.493.182.908.387 1.244l-.77.77.73.734.771-.77c.345.207.762.333 1.244.386v1.216h1.036l-.003-1.216c.485-.05.9-.179 1.244-.386l.77.77.734-.73-.77-.771c.202-.336.333-.75.386-1.244h1.216V9.765h-1.216c-.05-.493-.182-.908-.386-1.244l.773-.773-.734-.731-.77.77c-.345-.207-.762-.333-1.244-.386V6.185zm-.518 2.642c.921 0 1.454.46 1.454 1.454s-.533 1.454-1.454 1.454c-.922 0-1.454-.46-1.454-1.454s.532-1.454 1.454-1.454z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureTvDecoderLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.999 5.7c.308 0 .56.25.557.557v.738c.197.042.387.103.572.178l.485-.482a.564.564 0 01.792 0l.737.73a.556.556 0 010 .788l-.485.482c.076.184.135.373.18.568h.742c.308 0 .56.25.56.557v1.03a.56.56 0 01-.56.557h-.742a3.347 3.347 0 01-.18.568l.485.482c.1.1.155.228.163.36h1.666c1.031 0 1.869.832 1.869 1.857v2.007a1.864 1.864 0 01-1.869 1.858H4.03a1.864 1.864 0 01-1.869-1.858V14.67c0-1.025.838-1.858 1.869-1.858h6.63a.553.553 0 01.163-.362l.485-.482a3.62 3.62 0 01-.18-.568h-.742a.56.56 0 01-.56-.557v-1.03a.56.56 0 01.56-.557h.742c.042-.195.104-.384.18-.568l-.485-.482a.556.556 0 010-.788l.731-.727a.564.564 0 01.793 0l.485.482c.185-.075.375-.134.571-.178v-.738a.56.56 0 01.56-.557zm-4.045 7.669H4.029c-.723 0-1.309.582-1.309 1.3v2.008c0 .719.586 1.3 1.309 1.3H19.97c.723 0 1.309-.581 1.309-1.3V14.67c0-.719-.586-1.3-1.309-1.3l-1.958-.001-.605.599a.564.564 0 01-.715.064l-.078-.064-.484-.482a3.673 3.673 0 01-.572.178v.738a.56.56 0 01-.56.557h-1.037a.56.56 0 01-.56-.557v-.738a3.397 3.397 0 01-.571-.178l-.485.48a.564.564 0 01-.793 0l-.599-.597zm7.821 2.615c.328 0 .594.265.594.59 0 .326-.266.59-.594.59H16.12a.592.592 0 01-.593-.59c0-.325.266-.59.593-.59h2.656zm-13.948.136c.252 0 .457.204.457.454a.456.456 0 01-.457.454.455.455 0 01-.457-.454c0-.25.205-.454.457-.454zm1.695 0a.455.455 0 110 .908.455.455 0 01-.457-.454c0-.25.205-.454.457-.454zm1.639 0a.455.455 0 110 .908.455.455 0 01-.457-.454c0-.25.204-.454.457-.454zm6.838-9.863h-1.037v1.209c-.484.05-.899.178-1.243.384l-.77-.766-.732.727.768.766c-.202.334-.334.746-.387 1.236h-1.213v1.03h1.216c.05.49.182.903.386 1.237l-.77.766.731.726.77-.765c.345.206.763.331 1.244.384v1.208H15v-1.208c.485-.05.9-.178 1.244-.384l.77.765.734-.726-.77-.766c.201-.334.333-.747.386-1.237h1.216v-1.03h-1.216c-.05-.49-.182-.902-.386-1.236l.77-.766-.734-.727-.77.766c-.345-.206-.762-.332-1.244-.384v-1.21zm-.518 2.069c.616 0 1.106.173 1.46.507.366.353.551.855.551 1.495 0 .64-.185 1.145-.552 1.496-.35.337-.84.506-1.46.506-.618 0-1.109-.17-1.462-.506-.367-.354-.552-.855-.552-1.496 0-.64.185-1.144.552-1.495.353-.337.844-.507 1.463-.507zm0 .557c-.922 0-1.454.457-1.454 1.445 0 .989.532 1.445 1.454 1.445.921 0 1.454-.456 1.454-1.445 0-.988-.533-1.445-1.454-1.445z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConfigureTvDecoderRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.843 5.345a.84.84 0 01.84.843v.523c.076.02.149.045.222.07l.356-.355a.84.84 0 011.187 0l.734.734a.84.84 0 010 1.187l-.356.356c.026.073.048.146.07.221h.524a.84.84 0 01.84.84v1.037a.84.84 0 01-.84.84h-.524c-.02.076-.044.149-.07.222l.356.353c.084.083.146.18.187.283h1.172c1.187 0 2.148.963 2.148 2.148v2.02a2.15 2.15 0 01-2.148 2.148H4.148A2.152 2.152 0 012 16.667v-2.02c0-1.188.964-2.148 2.148-2.148h6.136a.836.836 0 01.187-.283l.355-.356a5.108 5.108 0 01-.07-.221h-.524a.84.84 0 01-.84-.84V9.761a.84.84 0 01.84-.84h.524c.02-.076.045-.149.07-.222l-.355-.355a.84.84 0 010-1.188l.73-.734a.84.84 0 011.188 0l.356.356c.073-.025.146-.048.221-.07v-.524a.84.84 0 01.84-.84zm3.124 8.272l-.519.517a.84.84 0 01-1.187 0l-.356-.355a5.108 5.108 0 01-.222.07v.524a.84.84 0 01-.84.84h-1.036a.84.84 0 01-.84-.84v-.524a3.026 3.026 0 01-.222-.07l-.356.355a.84.84 0 01-1.187 0l-.517-.515H4.148c-.568 0-1.028.46-1.028 1.028v2.02c0 .568.46 1.028 1.028 1.028h15.393c.568 0 1.028-.46 1.028-1.028v-2.02c0-.569-.46-1.028-1.028-1.028h-1.55l-.024-.002zm.378 2.352a.594.594 0 010 1.188h-2.656a.594.594 0 010-1.188h2.656zm-13.401.137a.457.457 0 110 .914.457.457 0 010-.914zm1.695 0a.457.457 0 110 .914.457.457 0 010-.914zm1.638 0a.457.457 0 110 .914.457.457 0 010-.914zm6.566-9.921h-1.036V7.4c-.485.05-.9.179-1.244.386l-.77-.77-.731.73.77.771c-.202.336-.333.75-.387 1.244H10.23v1.036h1.215c.05.493.182.908.387 1.244l-.697.698c.049.07.082.152.095.24l.56.566.77-.77c.345.207.762.333 1.244.386v1.216h1.036v-1.216c.485-.05.9-.179 1.244-.386l.77.77.586-.583a.557.557 0 01.084-.212l-.706-.706c.202-.336.333-.75.386-1.244h1.216V9.765h-1.216c-.05-.493-.182-.908-.386-1.244l.773-.773-.734-.731-.77.77c-.345-.207-.762-.333-1.244-.386V6.185zm-.518 1.801c.692 0 1.25.196 1.655.588.423.41.639.98.639 1.706s-.216 1.297-.639 1.706c-.406.39-.963.588-1.655.588-.692 0-1.25-.196-1.656-.588-.423-.409-.638-.98-.638-1.706 0-.725.215-1.297.638-1.706.407-.39.964-.588 1.656-.588zm0 .84c-.922 0-1.454.46-1.454 1.454 0 .995.532 1.454 1.454 1.454.921 0 1.454-.46 1.454-1.454s-.533-1.454-1.454-1.454z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConnectionsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.871 11.938c-.927 0-1.765.345-2.423.894l-1.524-1.336c.44-.61.709-1.356.709-2.165 0-.096-.022-.185-.028-.278l2.4-.708a2.451 2.451 0 002.093 1.182 2.46 2.46 0 002.46-2.46 2.463 2.463 0 00-2.46-2.46 2.465 2.465 0 00-2.462 2.46c0 .023.005.04.005.062l-2.339.689a3.724 3.724 0 00-3.389-2.205c-1.03 0-1.96.42-2.636 1.098l-1.49-1.277c.182-.328.297-.703.297-1.106a2.307 2.307 0 00-4.613 0 2.307 2.307 0 002.305 2.305c.406 0 .781-.112 1.112-.297l1.667 1.426a3.68 3.68 0 00-.359 1.566c0 .792.255 1.526.68 2.131l-1.355 1.328a2.75 2.75 0 00-1.742-.633 2.778 2.778 0 00-2.776 2.773 2.776 2.776 0 005.552 0c0-.403-.093-.787-.25-1.134l1.47-1.437a3.69 3.69 0 004.247.028l1.597 1.4a3.763 3.763 0 00-.557 1.958c0 .496.1.964.274 1.398l-1.661.765a2.296 2.296 0 00-1.742-.81A2.31 2.31 0 008.625 19.4a2.307 2.307 0 004.613 0c0-.117-.017-.23-.034-.341l1.804-.83c.7.805 1.72 1.326 2.866 1.326a3.816 3.816 0 003.815-3.81 3.822 3.822 0 00-3.818-3.807"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConnectionsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.165 12.322a3.626 3.626 0 00-2.485.994l-1.88-1.658a3.55 3.55 0 00.83-2.247 2.668 2.668 0 00-.042-.448l2.823-.83a2.268 2.268 0 004.182-1.685 2.272 2.272 0 00-4.456.691 3.217 3.217 0 000 .233l-2.785.83a3.547 3.547 0 00-6-1.08L6.52 5.483c.238-.35.367-.763.365-1.186A2.128 2.128 0 102.63 4.28a2.13 2.13 0 003.308 1.785l1.947 1.658a3.463 3.463 0 00.347 3.863L6.576 13.24a2.575 2.575 0 00-1.806-.728 2.611 2.611 0 00-2.614 2.608c0 .695.278 1.361.77 1.851a2.61 2.61 0 004.454-1.857c0-.42-.106-.832-.308-1.201l1.782-1.748a3.494 3.494 0 002.204.829 3.602 3.602 0 002.163-.745l1.921 1.658a3.66 3.66 0 00-.283 3.605l-2.07.96a2.121 2.121 0 00-3.734 1.905 2.12 2.12 0 004.079-1.16l2.17-.993a3.632 3.632 0 002.866 1.408 3.67 3.67 0 003.67-3.672 3.674 3.674 0 00-3.67-3.672c.003.003-.005.034-.005.034zm1.26-6.681a1.458 1.458 0 11-.002 2.916 1.458 1.458 0 01.002-2.916zM4.758 5.593c-.717 0-1.3-.585-1.3-1.302 0-.717.586-1.3 1.303-1.3s1.3.585 1.3 1.303v.005A1.29 1.29 0 014.767 5.59c-.003.003-.006.003-.009.003zm6.306 15.448a1.303 1.303 0 01-1.311-1.29 1.303 1.303 0 011.291-1.312 1.303 1.303 0 011.311 1.292v.016a1.29 1.29 0 01-1.291 1.294zm-6.306-4.1a1.782 1.782 0 010-3.563 1.782 1.782 0 010 3.563zm3.547-7.519a2.741 2.741 0 012.742-2.742 2.741 2.741 0 012.742 2.742 2.741 2.741 0 11-5.484 0zm9.86 9.415a2.843 2.843 0 01.002-5.684 2.843 2.843 0 01-.002 5.684z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconConnectionsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.9 18.246a2.545 2.545 0 01-2.544-2.543 2.547 2.547 0 012.543-2.543 2.548 2.548 0 012.546 2.543 2.55 2.55 0 01-2.546 2.543M8.493 9.283a2.451 2.451 0 014.902 0 2.451 2.451 0 01-4.902 0m-3.692 7.106a1.505 1.505 0 01-1.504-1.507 1.506 1.506 0 013.011 0c0 .835-.675 1.507-1.507 1.507m6.154 4.009a1.038 1.038 0 11.003-2.076 1.038 1.038 0 01-.003 2.076M4.804 5.322a1.036 1.036 0 11.003-2.073c.571 0 1.036.465 1.036 1.037a1.04 1.04 0 01-1.04 1.036m14.326.507a1.191 1.191 0 11-.002 2.383 1.191 1.191 0 01.002-2.383m-1.23 6.062a3.78 3.78 0 00-2.423.893l-1.52-1.336c.459-.63.708-1.386.708-2.165 0-.095-.023-.185-.028-.277l2.4-.71A2.454 2.454 0 0019.13 9.48a2.46 2.46 0 002.46-2.46 2.46 2.46 0 00-4.922 0c0 .02.005.04.005.062l-2.341.692a3.718 3.718 0 00-3.39-2.204c-.991 0-1.941.395-2.636 1.098L6.816 5.39c.182-.33.297-.703.297-1.106a2.308 2.308 0 00-4.616.003A2.309 2.309 0 004.8 6.59c.406 0 .782-.115 1.112-.3L7.58 7.72a3.66 3.66 0 00-.359 1.566c0 .792.255 1.526.681 2.131l-1.359 1.328a2.735 2.735 0 00-1.745-.63 2.778 2.778 0 00-2.776 2.77 2.78 2.78 0 002.776 2.776 2.777 2.777 0 002.776-2.776 2.77 2.77 0 00-.246-1.131l1.47-1.437a3.694 3.694 0 004.247.03l1.596 1.404a3.754 3.754 0 00-.557 1.955c0 .496.1.963.275 1.398l-1.662.764a2.292 2.292 0 00-1.742-.81 2.308 2.308 0 00-2.308 2.306 2.31 2.31 0 002.308 2.305 2.305 2.305 0 002.306-2.305c0-.118-.017-.23-.034-.342l1.804-.829a3.787 3.787 0 002.865 1.325 3.817 3.817 0 003.815-3.812A3.815 3.815 0 0017.9 11.89"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconContactBookFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.116 2.017a2.74 2.74 0 012.737 2.737v14.165a2.738 2.738 0 01-2.737 2.734h-8.7c-.307 0-.603-.048-.881-.136A2.704 2.704 0 014.634 19.6a2.873 2.873 0 01-.131-.862V4.664c0-.353.068-.696.2-1.012l.021-.06a2.458 2.458 0 011.384-1.365c.324-.138.676-.21 1.04-.21h8.968zm1.597 13.308h-.443l.001 4.694c.274-.286.442-.674.442-1.1v-3.594zm-5.597-2.947H9.752c-.734 0-1.342.258-1.759.745-.387.457-.594 1.081-.594 1.807v.89c0 .303.213.55.474.55h6.126c.26 0 .473-.247.473-.55l-.003-.89c0-.728-.204-1.353-.594-1.807-.417-.487-1.025-.745-1.759-.745zm5.597-2.888h-.443v4.692h.443V9.49zM10.93 6.913c-1.54 0-2.425.89-2.425 2.434s.88 2.426 2.425 2.426c1.547 0 2.435-.88 2.435-2.426 0-1.546-.888-2.434-2.435-2.434zm6.34-3.26l-.001 4.694h.443V4.754c0-.427-.168-.815-.442-1.101z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconContactBookLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.584 2.156a2.535 2.535 0 012.532 2.532v14.64a2.536 2.536 0 01-2.532 2.529H7.592a2.72 2.72 0 01-2.717-2.718V4.596a2.444 2.444 0 012.44-2.44h9.269zm-9.27.588a1.85 1.85 0 00-1.848 1.85v14.543c0 1.173.955 2.126 2.126 2.126h8.992c.104 0 .207-.009.307-.025V2.772a1.946 1.946 0 00-.307-.025h-9.27v-.003zm11.21 12.571H17.48l.001 5.727a1.944 1.944 0 001.044-1.72l-.001-4.007zm-5.823-2.733c.84 0 1.53.258 1.998.742.428.448.655 1.065.655 1.787v.99a.306.306 0 01-.305.305H7.404A.308.308 0 017.1 16.1v-.99c0-.722.227-1.341.656-1.787.467-.487 1.156-.742 1.997-.742h2.95zm.003.608H9.752c-1.3 0-2.042.7-2.042 1.921v.684h7.036v-.684c0-1.22-.745-1.921-2.042-1.921zm5.82-3.906H17.48v5.443h1.044V9.284zm-7.296-2.178c1.501 0 2.33.826 2.33 2.33-.002 1.496-.829 2.322-2.33 2.322-1.499 0-2.325-.826-2.325-2.322 0-1.501.826-2.33 2.325-2.33zm0 .588c-.574 0-1.008.14-1.291.415-.294.283-.443.728-.443 1.325 0 .596.149 1.042.44 1.322.283.271.717.411 1.291.411s1.011-.137 1.297-.411c.294-.283.443-.729.443-1.322 0-.597-.149-1.042-.443-1.325-.286-.275-.72-.415-1.294-.415zm6.253-4.726l-.001 5.728h1.044V4.688a1.94 1.94 0 00-1.043-1.72z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconContactBookRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.479 2a2.792 2.792 0 012.788 2.788v14.428A2.79 2.79 0 0116.479 22H7.617a2.97 2.97 0 01-2.967-2.967V4.696c0-.719.28-1.395.788-1.906A2.667 2.667 0 017.343 2h9.136zm.011 1.164H7.343c-.407 0-.793.16-1.081.448a1.523 1.523 0 00-.448 1.084v14.337c0 .995.81 1.806 1.806 1.806h8.87V3.164zm1.615 12.39h-.451v4.783c.28-.292.451-.687.451-1.12v-3.663zm-5.703-3.037c1.467 0 2.417 1 2.417 2.55v.905a.522.522 0 01-.52.517H8.114a.518.518 0 01-.517-.517v-.904c0-1.55.947-2.551 2.417-2.551h2.388zm-.003 1.032H10.01c-1.204 0-1.384.95-1.384 1.519v.387h5.156v-.387c0-.57-.18-1.52-1.384-1.52zm5.706-3.938h-.451v4.78h.451V9.61zm-6.907-2.62c1.575 0 2.476.9 2.476 2.476 0 1.569-.901 2.47-2.476 2.47-1.57 0-2.471-.901-2.471-2.47 0-1.575.902-2.476 2.47-2.476zm0 1.112c-.95 0-1.358.408-1.358 1.364 0 .95.406 1.358 1.358 1.358.956 0 1.364-.406 1.364-1.358 0-.956-.408-1.364-1.364-1.364zm6.457-4.437l-.001 4.781h.451V4.788c0-.435-.171-.83-.45-1.122z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconControlsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.627 6.374a.597.597 0 01-.602-.591c0-.325.27-.588.602-.588h1.05a2.89 2.89 0 01.396-.984 2.996 2.996 0 011.88-1.3 3.022 3.022 0 012.265.382 2.912 2.912 0 011.328 1.84c.006.02.003.042.006.062h11.504c.33 0 .602.266.602.59a.597.597 0 01-.602.592H9.555c-.07.35-.205.68-.398.98a2.967 2.967 0 01-1.88 1.3 3.022 3.022 0 01-2.266-.381 2.938 2.938 0 01-1.328-1.84c-.005-.02-.005-.04-.008-.062H2.627zm18.407 5.132c.333 0 .602.263.602.59a.595.595 0 01-.602.589h-1.082c-.277 1.342-1.493 2.356-2.944 2.356-1.45 0-2.663-1.014-2.944-2.356H2.602A.597.597 0 012 12.094c0-.325.269-.591.602-.591h11.46c.28-1.342 1.493-2.356 2.944-2.356 1.45 0 2.666 1.014 2.944 2.356h1.084v.003zm-.003 6.297c.333 0 .602.263.602.59a.597.597 0 01-.602.592h-8.782c-.28 1.341-1.493 2.355-2.944 2.355-1.45 0-2.664-1.014-2.944-2.355H2.602A.597.597 0 012 18.394c0-.325.269-.589.602-.589h3.76c.28-1.341 1.492-2.355 2.943-2.355s2.664 1.014 2.944 2.355l8.782-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconControlsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.93 3.891a1.959 1.959 0 00-.267 1.513c.12.521.443.966.902 1.252a2.065 2.065 0 001.54.26 2.035 2.035 0 001.278-.884 1.97 1.97 0 00.266-1.513 2.001 2.001 0 00-.902-1.252 2.061 2.061 0 00-1.54-.26 2.035 2.035 0 00-1.278.884zM2.592 5.365a.404.404 0 01-.409-.4c0-.222.182-.401.41-.401h1.24c.056-.384.19-.76.406-1.098a2.844 2.844 0 011.787-1.238 2.872 2.872 0 012.157.364 2.785 2.785 0 011.264 1.753c.016.073.016.146.028.219h11.913c.227 0 .409.179.409.4 0 .222-.182.4-.41.4H9.485a2.74 2.74 0 01-.406 1.096A2.84 2.84 0 017.29 7.701a2.885 2.885 0 01-2.16-.364 2.785 2.785 0 01-1.263-1.754c-.017-.07-.017-.145-.028-.218H2.593zM17.26 13.41c1.126 0 2.042-.9 2.042-2.006 0-1.106-.916-2.006-2.042-2.006s-2.045.9-2.045 2.006c0 1.107.919 2.006 2.045 2.006zm4.104-2.406c.226 0 .408.179.408.4 0 .221-.182.4-.408.4h-1.286a2.838 2.838 0 01-2.818 2.407 2.838 2.838 0 01-2.818-2.406H2.568a.404.404 0 01-.409-.4c0-.222.182-.401.409-.401h11.874a2.838 2.838 0 012.818-2.407 2.838 2.838 0 012.818 2.407h1.286zM9.4 19.84c1.126 0 2.042-.9 2.042-2.006 0-1.106-.916-2.005-2.042-2.005s-2.045.899-2.045 2.005c.003 1.107.919 2.006 2.045 2.006zm11.96-2.406c.228 0 .41.18.41.4a.404.404 0 01-.41.401h-9.142A2.838 2.838 0 019.4 20.642a2.838 2.838 0 01-2.818-2.406H2.565a.404.404 0 01-.409-.4c0-.222.182-.401.41-.401h4.016A2.838 2.838 0 019.4 15.029a2.838 2.838 0 012.818 2.406h9.143z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconControlsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.09 4.842a1.735 1.735 0 00-.233 1.333c.107.46.39.852.796 1.104a1.8 1.8 0 001.358.23 1.8 1.8 0 001.129-.782c.255-.398.339-.871.233-1.333a1.757 1.757 0 00-.796-1.104 1.823 1.823 0 00-1.359-.23c-.465.101-.87.381-1.128.782zM2.627 6.374a.597.597 0 01-.602-.591c0-.325.27-.588.602-.588h1.05a2.89 2.89 0 01.396-.984 2.996 2.996 0 011.88-1.3 3.022 3.022 0 012.265.382 2.912 2.912 0 011.328 1.84c.006.02.003.042.006.062h11.504c.33 0 .602.266.602.59a.597.597 0 01-.602.592H9.555c-.07.35-.205.68-.398.98a2.967 2.967 0 01-1.88 1.3 3.022 3.022 0 01-2.266-.381 2.938 2.938 0 01-1.328-1.84c-.005-.02-.005-.04-.008-.062H2.627zm14.381 7.49c.995 0 1.804-.793 1.804-1.767 0-.975-.81-1.768-1.804-1.768s-1.804.793-1.804 1.768c0 .972.81 1.767 1.804 1.767zm4.026-2.358c.333 0 .602.263.602.59a.595.595 0 01-.602.589h-1.082c-.277 1.342-1.493 2.356-2.944 2.356-1.45 0-2.663-1.014-2.944-2.356H2.602A.597.597 0 012 12.094c0-.325.269-.591.602-.591h11.46c.28-1.342 1.493-2.356 2.944-2.356 1.45 0 2.666 1.014 2.944 2.356h1.084v.003zM9.305 20.158c.995 0 1.804-.792 1.804-1.767 0-.975-.81-1.768-1.804-1.768s-1.804.793-1.804 1.768.81 1.767 1.804 1.767zm11.726-2.356c.333 0 .602.264.602.592a.597.597 0 01-.602.59h-8.782c-.28 1.342-1.493 2.356-2.944 2.356-1.45 0-2.664-1.014-2.944-2.355H2.602A.597.597 0 012 18.394c0-.325.269-.589.602-.589h3.76c.28-1.341 1.492-2.355 2.943-2.355s2.664 1.014 2.944 2.355l8.782-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCookingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.574 16.68c.633-.01.955-.36.955-1.043 0-.68-.316-1.028-.938-1.033-.011 0-.02-.006-.03-.006-.029.72-.09 1.417-.205 2.073.033.003.07.005.092.005l.126.003zm-.498-5.323c.168-.162.252-.406.252-.723 0-.316-.084-.56-.252-.725-.163-.16-.398-.241-.695-.241-.07 0-.132.003-.193.014-.017.003-.023 0-.031-.011-.011-.011-.006-.014-.003-.031.014-.1.022-.207.022-.32 0-.47-.126-.831-.375-1.078-.24-.232-.585-.353-1.03-.353-.443 0-.79.12-1.029.356a1.247 1.247 0 00-.283.476c-.005.014-.005.025-.016.034-.017.008-.031.003-.048 0a1.856 1.856 0 00-.286-.02c-.442 0-.787.12-1.028.356a1.1 1.1 0 00-.19.255c0 .003-.003.006-.003.008-.006.017-.011.017-.028.02-.023.003-.025-.006-.042-.022-.216-.213-.527-.32-.924-.32-.401 0-.712.107-.925.32a.954.954 0 00-.218.344s-.028.025-.056.02c-.028-.009-.037-.037-.037-.037-.017-.33-.103-.6-.291-.778-.19-.19-.47-.286-.826-.286s-.633.095-.827.286a.974.974 0 00-.232.394c-.003.006-.006.012-.011.014-.012.006-.02-.002-.026-.002-.154-.124-.347-.185-.605-.185-.297 0-.53.081-.689.238a.774.774 0 00-.185.31c-.002.015-.005.023-.016.029-.014.008-.026.003-.042.003a1.207 1.207 0 00-.18-.012c-.297 0-.526.082-.686.239a.497.497 0 00-.1.148c-.015.022-.018.04-.043.048-.028.01-.053-.003-.084-.012a.901.901 0 00-.288-.047c-.247 0-.437.067-.572.196a.693.693 0 00-.11.154c-.016.028-.01.053-.041.067-.03.014-.065.006-.098-.003a1.17 1.17 0 00-.233-.022c-.243 0-.437.067-.568.196-.138.134-.208.336-.208.597v.344h5.258a.165.165 0 01.04-.005h1.526c.011.002.025.002.036.005h6.83c.296-.005.526-.081.689-.238zM4.232 16.68a.503.503 0 00.062-.005 15.701 15.701 0 01-.204-2.068c-.617.012-.93.356-.93 1.031 0 .684.322 1.034.955 1.042h.117zM19.6 13.427c.964.009 2.087.594 2.087 2.213 0 1.616-1.129 2.207-2.095 2.221h-.067a5.13 5.13 0 01-.46-.02c-.518 1.575-1.526 2.732-3.493 2.987a.535.535 0 01-.199.039h-.218c-.132.008-.305.02-.49.02s-.356-.012-.524-.02l-4.667.003c-.134.008-.305.02-.49.02-2.52 0-3.8-1.135-4.414-3.057-.219.028-.278.028-.4.028h-.074C3.13 17.847 2 17.256 2 15.64c0-1.602 1.104-2.19 2.062-2.21v-.826a1.183 1.183 0 01-.518-.98v-.373c0-.737.305-1.194.56-1.443.22-.221.605-.479 1.199-.52.249-.197.624-.385 1.162-.399a1.99 1.99 0 01.854-.344l.031-.028c.263-.26.737-.569 1.493-.569.062 0 .12.003.182.006.3-.255.787-.513 1.516-.513.747 0 1.238.272 1.537.53.23-.07.502-.112.813-.112.285 0 .538.036.753.098a2.538 2.538 0 011.132-.376c.05-.059.103-.12.16-.173.316-.314.893-.687 1.831-.687.939 0 1.516.373 1.832.684.252.246.541.647.667 1.26.269.11.468.264.608.4.28.273.608.768.608 1.575 0 .81-.334 1.303-.61 1.577-.08.076-.18.154-.292.227v.992h.02v-.009zm-8.395-9.339c-.647.185-.89.594-.728 1.216l.031.115 1.989-.572c-.023-.042-.048-.075-.062-.12-.174-.61-.588-.82-1.23-.639zM4.608 8.315a.591.591 0 01-.157-1.157l4.944-1.42c-.011-.042-.025-.09-.036-.14-.25-.941.002-2.21 1.535-2.647 1.535-.443 2.389.501 2.655 1.443.014.05.011.098.011.145l4.86-1.395a.577.577 0 01.714.406.59.59 0 01-.397.729L4.765 8.295a.602.602 0 01-.157.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCookingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.893 17.128c.44-.006 1.18-.183 1.18-1.278s-.73-1.266-1.163-1.269l-.233-.01c-.03.926-.106 1.775-.252 2.531.081.009.297.026.333.026h.135zm-1.221-5.23c.305 0 .543-.081.708-.244.171-.168.258-.417.258-.742 0-.322-.087-.572-.258-.742-.165-.163-.403-.244-.708-.244-.087 0-.2.011-.224-.037-.04-.075.016-.182.016-.316 0-.48-.128-.852-.386-1.1-.247-.242-.597-.365-1.05-.365-.454 0-.807.123-1.048.364a1.134 1.134 0 00-.266.423c-.012.034-.02.056-.054.078-.092.06-.204.003-.327.003-.451 0-.804.12-1.05.362a1.098 1.098 0 00-.191.257c-.011.023-.014.028-.037.031-.02 0-.028-.005-.044-.022-.219-.216-.538-.325-.944-.325-.407 0-.723.109-.944.325-.054.053-.09.129-.132.196 0 0-.045.059-.126.036-.062-.014-.087-.087-.087-.087-.04-.246-.115-.462-.266-.607-.196-.19-.482-.292-.843-.292-.364 0-.647.101-.843.292a.903.903 0 00-.166.238l-.008.02s-.042.06-.112.083a.229.229 0 01-.129.006c-.146-.045-.286-.118-.479-.118-.302 0-.54.081-.703.244-.095.092-.106.202-.23.28a.35.35 0 01-.204.056c-.303 0-.538.081-.703.244-.062.061-.12.126-.205.16-.112.041-.168-.017-.319-.017-.252 0-.448.067-.583.201-.067.068-.08.157-.173.2-.093.044-.194-.004-.32-.004-.249 0-.445.07-.58.205-.14.14-.212.342-.212.608v.38l3.092-.019h2.235c.028 0 .05-.011.076-.011h1.56c.028.003.048.011.079.011h2.207l1.384-.006h3.339v-.005zm.249 1.941c0-.07 0-.703.003-1.134H5.03v.986c.02 4.882 1.042 6.535 4.048 6.535.165 0 .32-.012.473-.02h4.83c.358.02.663.022.969 0h.12a.367.367 0 01.076-.017c2.423-.255 3.339-1.975 3.375-6.35zM4.403 17.114c.05-.003.092-.003.14-.012-.157-.778-.233-1.574-.264-2.532a1.846 1.846 0 01-.187.009c-.434.002-1.163.173-1.163 1.268 0 1.096.737 1.272 1.177 1.278h.137c.04 0 .093-.003.16-.011zm15.51-3.317c.888.006 1.924.552 1.924 2.05 0 1.499-1.042 2.048-1.936 2.062l-.162-.003c-.053 0-.387-.025-.51-.036-.507 1.725-1.527 2.837-3.485 3.081a.327.327 0 01-.145.034h-.224c-.146.01-.317.02-.499.02s-.353-.012-.52-.023h-4.78c-.145.011-.316.02-.501.02-2.507 0-3.756-1.171-4.345-3.135l-.196.011c-.14.02-.226.025-.283.025l-.162.003c-.89-.014-1.933-.563-1.933-2.061 0-1.502 1.037-2.045 1.925-2.05h.002c.065 0 .112 0 .177.008 0-.054-.003-.062-.003-.115v-1.152c-.03-.025-.067-.036-.092-.064a.784.784 0 01-.224-.555v-.38c0-.606.24-.972.445-1.171.19-.19.538-.415 1.092-.423.2-.188.547-.4 1.093-.4.022 0 .047 0 .075.002a1.68 1.68 0 01.939-.378A1.61 1.61 0 017.7 9.04c.215-.213.602-.462 1.235-.462.112 0 .221.008.328.025.01-.011.022-.023.03-.034.236-.232.67-.512 1.376-.512.706 0 1.14.277 1.375.51.031.027.059.06.09.097a2.31 2.31 0 01.933-.179c.333 0 .61.056.837.143.347-.275.784-.423 1.305-.443a2.3 2.3 0 01.233-.285c.395-.384.924-.583 1.585-.583.659 0 1.19.196 1.583.583.24.238.521.647.6 1.305.327.09.557.252.703.398.226.221.495.627.495 1.305 0 .68-.269 1.084-.495 1.308a1.7 1.7 0 01-.219.174c0 .302 0 1.302-.003 1.395l.219.011h.003zM11.29 3.825c-1.037.297-1 1.07-.885 1.504l.036.135c.011.033.04.12.067.182l2.404-.692s-.065-.182-.107-.333c-.126-.423-.482-1.096-1.515-.796zm-6.68 4.32a.392.392 0 01-.104-.768l5.26-1.513a2.947 2.947 0 01-.06-.17L9.66 5.53c-.232-.877.003-2.05 1.418-2.46 1.417-.406 2.207.465 2.456 1.331.045.154.084.347.084.347l5.146-1.479a.386.386 0 01.473.27.39.39 0 01-.266.481L4.711 8.128a.305.305 0 01-.101.016z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCookingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.602 16.716c.633-.009.955-.356.955-1.034 0-.675-.316-1.02-.935-1.022-.011 0-.023-.006-.031-.006-.028.712-.09 1.406-.204 2.056l.1.008h.115v-.002zm-.498-5.275c.168-.162.252-.403.252-.717 0-.314-.084-.555-.252-.72-.166-.157-.398-.235-.695-.235-.073 0-.14.006-.205.014-.01.003-.014 0-.02-.008-.008-.009-.005-.012-.002-.026.014-.103.025-.21.025-.325 0-.465-.126-.823-.375-1.067-.241-.232-.586-.35-1.03-.35-.443 0-.788.118-1.029.353a1.186 1.186 0 00-.288.493c-.003.006-.006.011-.012.014-.005.003-.01.003-.02.003a2.224 2.224 0 00-.313-.025c-.443 0-.79.117-1.028.352a1.083 1.083 0 00-.188.247c-.01.02-.014.022-.036.025-.022.003-.025 0-.042-.017-.213-.21-.527-.316-.924-.316-.398 0-.71.106-.922.316a.907.907 0 00-.174.258s-.056.034-.092.022c-.048-.016-.065-.075-.065-.075-.033-.266-.112-.496-.268-.65-.194-.188-.471-.283-.827-.283s-.63.095-.826.283c-.104.104-.18.238-.233.395-.002.006-.005.014-.014.014-.016 0-.025-.011-.03-.011-.157-.12-.34-.177-.597-.177-.294 0-.53.079-.69.236A.798.798 0 008 9.769c-.003.011-.006.022-.02.03-.014.01-.025.006-.044.004a1.193 1.193 0 00-.177-.012c-.297 0-.53.079-.686.236a.617.617 0 00-.098.142c-.014.026-.02.04-.045.05-.028.01-.05.004-.078-.008a.938.938 0 00-.295-.047c-.246 0-.437.064-.571.196a.573.573 0 00-.106.148c-.017.031-.028.048-.06.062-.033.017-.055.008-.095.003a1.074 1.074 0 00-.218-.02c-.244 0-.437.067-.569.196-.137.135-.207.334-.207.591v.345h5.252a.164.164 0 01.037-.006h1.529a.15.15 0 01.036.006h6.832c.294-.011.524-.09.687-.244zm-.653 2.294c0-.056 0-.501.003-.89h-.031l-.014.002h-3.266l-1.361.003h-2.157c-.031 0-.056-.003-.084-.005h-1.51c-.028.002-.053.005-.087.005H7.762l-2.518.017v.725c.02 4.58.969 6.126 3.762 6.126.156 0 .305-.008.45-.02H14.2c.37.023.644.02.935 0h.104c.028-.005.053-.01.084-.013 2.275-.235 3.093-1.793 3.129-5.95zm-14.18 2.98l.051-.002a15.436 15.436 0 01-.204-2.05c-.614.01-.928.352-.928 1.022 0 .675.32 1.022.953 1.033h.129v-.002zm15.356-3.223c.964.008 2.087.588 2.087 2.193 0 1.602-1.129 2.188-2.095 2.202h-.165a13.713 13.713 0 01-.364-.026c-.519 1.566-1.527 2.715-3.496 2.967a.524.524 0 01-.199.039h-.219a6.04 6.04 0 01-1.014-.003l-4.666.003c-.135.011-.308.02-.49.02-2.521 0-3.802-1.126-4.415-3.028-.151.02-.24.025-.297.028H4.12c-.966-.014-2.095-.6-2.095-2.202 0-1.591 1.104-2.171 2.062-2.19v-.821a1.175 1.175 0 01-.518-.972v-.367c0-.731.305-1.182.56-1.432.221-.218.596-.487 1.246-.453.244-.3.62-.485 1.154-.412a.93.93 0 01.816-.387c.008-.01.039.017.047.006.333-.457.717-.6 1.474-.6.061 0 .156.017.218.023.3-.252.773-.6 1.504-.6.748 0 1.219.345 1.516.6.232-.07.501-.112.812-.112.286 0 .538.036.753.098a2.574 2.574 0 011.132-.373c.05-.061.104-.12.16-.173.316-.311.893-.681 1.832-.681.94 0 1.515.37 1.834.68.253.244.541.642.667 1.247.269.112.468.26.608.398.277.269.608.759.608 1.56 0 .804-.334 1.291-.61 1.563-.08.073-.18.151-.292.224v.983c.003 0 .005-.002.011-.002h.008zm-8.395-9.415c-.647.185-.89.588-.728 1.205l.031.114 1.989-.565c-.02-.04-.048-.076-.062-.12-.173-.603-.585-.819-1.23-.634zm-6.599 4.19a.58.58 0 01-.557-.422.586.586 0 01.4-.723l4.944-1.41-.036-.128c-.252-.944 0-2.199 1.532-2.633 1.53-.44 2.39.499 2.658 1.431.014.048.011.096.014.143l4.857-1.384a.574.574 0 01.715.404.586.586 0 01-.4.723L4.786 8.245a.466.466 0 01-.154.023z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCopyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.275 14.571V3.507c0-.129.106-.235.235-.235h11.06c.13 0 .236.106.236.235v11.064a.237.237 0 01-.236.236H3.51a.233.233 0 01-.235-.236zm16.952-6.969h-4.143V3.51c0-.832-.678-1.51-1.51-1.51H3.513c-.832 0-1.51.678-1.51 1.51v11.064c0 .832.678 1.51 1.51 1.51h4.09v4.143c0 .804.655 1.46 1.459 1.46h11.162c.804 0 1.46-.656 1.46-1.46V9.062a1.458 1.458 0 00-1.457-1.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCopyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.022 20.59a.436.436 0 01-.434.435H9.15a.432.432 0 01-.432-.435v-4.31a.404.404 0 00-.045-.18h6.174c.692 0 1.252-.56 1.252-1.252V8.694a.46.46 0 00.123.025h4.367c.239 0 .435.194.435.434V20.59h-.003zM2.977 14.848V3.408c0-.238.193-.434.431-.434h11.44c.238 0 .434.193.434.434v11.437a.436.436 0 01-.434.434H3.408a.432.432 0 01-.431-.43zm17.613-6.95h-4.367a.46.46 0 00-.123.026V3.408c0-.692-.56-1.252-1.252-1.252H3.408c-.692 0-1.252.563-1.252 1.252v11.437c0 .692.56 1.252 1.252 1.252h4.535a.404.404 0 00-.044.18v4.31c0 .692.56 1.253 1.252 1.253h11.44c.691 0 1.252-.56 1.252-1.252V9.15c0-.692-.56-1.252-1.253-1.252z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCopyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.412 20.227a.185.185 0 01-.185.185H9.064a.185.185 0 01-.184-.185V16.08h5.694c.832 0 1.51-.678 1.51-1.51V8.877h4.143c.104 0 .185.081.185.185v11.165zM3.275 14.574V3.51c0-.129.106-.235.235-.235h11.06c.13 0 .236.106.236.235v11.064a.237.237 0 01-.236.236H3.507a.236.236 0 01-.232-.236c-.003 0-.003 0 0 0zm16.952-6.972H16.08V3.51A1.51 1.51 0 0014.571 2H3.507C2.675 2 2 2.675 2 3.51v11.064c0 .832.678 1.51 1.51 1.51h4.092v4.143c0 .804.656 1.46 1.46 1.46h11.162a1.46 1.46 0 001.46-1.46V9.062a1.458 1.458 0 00-1.457-1.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCoughSyrupFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.305 6.036a.6.6 0 01-.6-.599V4.42a.598.598 0 111.196 0v1.017c.004.33-.265.6-.596.6zm1.709 0a.598.598 0 01-.597-.599V4.42a.6.6 0 01.597-.6.6.6 0 01.6.6v1.017a.602.602 0 01-.6.6zm1.706 0a.598.598 0 01-.597-.599V4.42a.598.598 0 111.193 0v1.017c.003.33-.266.6-.596.6zm1.709 0a.598.598 0 01-.597-.599V4.42a.598.598 0 111.193 0v1.017c0 .33-.266.6-.596.6zm-7.855 3.32h10.653c-.129-.897-.558-1.496-1.283-1.785a1.4 1.4 0 01-.703.2H8.496c-.238 0-.462-.074-.661-.177-.233.103-.454.224-.622.392-.345.33-.552.787-.639 1.37zm7.726 3.63h-1.465v-1.473c0-.255-.2-.48-.415-.48H11.2c-.221 0-.423.225-.423.48v1.473H9.308c-.255 0-.479.19-.479.415v1.224c0 .232.224.423.48.423h1.467l.008 1.473c0 .255.194.479.415.479h1.221c.233 0 .415-.224.415-.479v-1.479H14.3c.255 0 .479-.199.479-.415v-1.224c0-.215-.224-.417-.48-.417zm.392 7.501c1.308 0 2.12-.52 2.423-1.543H6.678c.112.367.286.672.526.91.44.415 1.085.633 1.922.633h5.566zM8.272 3.423V6.35c0 .12.095.224.224.224h6.745c.12 0 .224-.103.224-.224V3.423a.228.228 0 00-.224-.224H8.496a.223.223 0 00-.224.224zm8.364 3.143c1.182.582 1.826 1.767 1.826 3.398l-.008 7.916c0 2.383-1.404 3.806-3.762 3.806H9.126c-1.165 0-2.09-.327-2.75-.966-.687-.672-1.037-1.625-1.037-2.838V9.966c0-1.215.353-2.168 1.045-2.837.207-.207.454-.367.717-.513a1.675 1.675 0 01-.025-.263V3.426c0-.785.638-1.423 1.42-1.423h6.745c.781 0 1.42.638 1.42 1.423v2.927c-.003.07-.017.14-.025.213z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCoughSyrupLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.732 18.165l.008-7.866H6.261v7.866c0 .106.017.196.02.297h11.431c.006-.101.02-.194.02-.297zm-2.855 2.862c1.451 0 2.364-.605 2.703-1.75H6.418c.126.42.32.776.602 1.047.488.465 1.199.703 2.118.703h5.74zM7.026 7.915c-.395.379-.633.905-.723 1.566h11.398c-.137-1.059-.656-1.75-1.546-2.067-.202.14-.449.221-.712.221H8.488c-.247 0-.473-.073-.667-.196-.305.118-.58.27-.795.476zm1.03-4.512v2.986c0 .238.194.431.435.431h6.955a.434.434 0 00.434-.431V3.403a.432.432 0 00-.434-.432H8.488a.432.432 0 00-.431.432zm8.589 3.33c1.238.535 1.919 1.703 1.919 3.345l-.009 8.09c0 2.336-1.342 3.677-3.678 3.677h-5.74c-1.14 0-2.041-.313-2.688-.932-.67-.645-1.011-1.57-1.011-2.748v-8.087c0-1.18.341-2.104 1.016-2.748.241-.23.533-.403.849-.55a1.229 1.229 0 01-.07-.391V3.403c0-.69.563-1.247 1.255-1.247h6.955c.692 0 1.255.56 1.255 1.247v2.986c0 .12-.022.232-.053.344zm-7.32-.476a.41.41 0 01-.411-.409V3.943a.41.41 0 01.411-.409.41.41 0 01.412.41v1.904a.412.412 0 01-.412.41zm1.762 0a.41.41 0 01-.411-.409V3.943a.41.41 0 01.411-.409.41.41 0 01.412.41v1.904a.414.414 0 01-.412.41zm1.76 0a.41.41 0 01-.412-.409V3.943a.41.41 0 01.411-.409.41.41 0 01.412.41v1.904a.414.414 0 01-.412.41zm1.759 0a.41.41 0 01-.412-.409V3.943a.41.41 0 01.412-.409.41.41 0 01.411.41v1.904a.412.412 0 01-.411.41zm-5.359 7.35v1.233s.034.022.084.022h1.93v1.902c0 .05.025.081.034.09h1.24c0-.017.026-.04.026-.082l-.009-1.918h1.922c.042 0 .081-.034.09-.042l-.009-1.224c0-.017-.042-.026-.073-.026h-1.93V11.66c0-.042-.025-.08-.042-.09l-1.232.01c0 .008-.025.047-.025.08v1.91H9.328a.12.12 0 00-.081.037zm.081 2.073c-.493 0-.905-.375-.905-.84v-1.25c0-.456.412-.832.905-.832h1.101v-1.092c0-.49.387-.896.846-.896h1.258c.45 0 .84.409.84.896v1.087h1.11c.484 0 .896.384.896.84v1.25c0 .448-.412.831-.905.831h-1.1l.007 1.101c0 .49-.378.897-.845.897l-1.258-.009c-.46 0-.838-.4-.838-.899v-1.087H9.328v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCoughSyrupRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.69 20.487c1.204 0 1.98-.448 2.338-1.313H6.77c.11.266.252.498.44.683.434.42 1.076.633 1.916.633h5.563v-.003zM8.271 3.423v2.924c0 .124.1.222.221.222h6.742a.22.22 0 00.222-.222V3.423a.222.222 0 00-.222-.221H8.493a.22.22 0 00-.221.221zm8.918 5.753c-.156-.795-.577-1.333-1.249-1.602a1.4 1.4 0 01-.706.196H8.493c-.238 0-.462-.064-.658-.17a2.07 2.07 0 00-.625.389c-.302.291-.496.697-.597 1.187H17.19zM6.532 17.882c0 .031.006.06.006.09h10.714c0-.03.006-.059.006-.09l.008-7.507H6.535v7.507h-.003zM16.633 6.56c1.185.583 1.83 1.768 1.83 3.398l-.01 7.924c0 2.381-1.408 3.804-3.764 3.804H9.123c-1.16 0-2.084-.325-2.748-.969-.689-.67-1.039-1.622-1.039-2.835V9.958c0-1.213.35-2.165 1.045-2.835.21-.204.457-.367.72-.507a1.412 1.412 0 01-.028-.269V3.423C7.073 2.639 7.709 2 8.49 2h6.742c.782 0 1.418.639 1.418 1.423v2.924c.005.073-.006.143-.017.213zm-7.328-.53a.598.598 0 01-.596-.599V4.314a.6.6 0 01.596-.6.6.6 0 01.597.6V5.43c.003.33-.266.6-.597.6zm1.709 0a.598.598 0 01-.597-.599V4.314a.6.6 0 01.597-.6.6.6 0 01.597.6V5.43a.6.6 0 01-.597.6zm1.706 0a.598.598 0 01-.597-.599V4.314a.6.6 0 01.597-.6.6.6 0 01.597.6V5.43a.6.6 0 01-.597.6zm1.706 0a.598.598 0 01-.597-.599V4.314a.598.598 0 111.193 0V5.43c.003.33-.266.6-.596.6zm-.325 8.586v-.863h-1.798V11.95h-.863v1.803l-1.796.003v.866h1.796l.003 1.804h.862v-1.804l1.796-.006zm.075-1.902c.521 0 .961.415.961.908v1.131c0 .49-.44.905-.96.905h-.838v.843c0 .533-.406.964-.905.964h-1.129c-.498 0-.904-.431-.904-.964v-.837h-.838c-.53 0-.96-.406-.96-.908v-1.131c0-.499.43-.908.96-.908h.835v-.84c0-.521.414-.964.905-.964h1.128c.49 0 .905.443.905.964v.84l.84-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCowboyLassoLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.938 14.67a21.33 21.33 0 01-3.22.365c-.08-1.143-.95-1.765-2.421-1.907a5.5 5.5 0 00-.513-.026c-.91 0-1.577.278-1.96.843-.922-.655-1.51-1.613-1.74-2.86-.638-3.473 2.031-5.79 7.933-6.882 2.91-.538 5.23-.507 6.896.093 1.675.605 2.645 1.747 2.967 3.495.636 3.474-2.037 5.79-7.942 6.88m-5.532 1.86c-.14 0-.283-.009-.437-.023-1.8-.173-1.717-1.039-1.678-1.453.056-.586.275-1.13 1.49-1.13.138 0 .284.01.435.023.647.062 1.129.23 1.398.482.148.137.336.39.28.975-.054.585-.272 1.126-1.488 1.126m14.278-8.888c-.373-2.034-1.55-3.42-3.496-4.12-1.807-.653-4.27-.692-7.322-.13-8.017 1.482-9.096 5.082-8.591 7.841.274 1.499.994 2.655 2.137 3.437.034.022.07.034.106.045-.016.084-.036.165-.044.257-.138 1.432.761 2.194 2.417 2.353.18.017.35.026.512.026.309 0 .589-.037.838-.098.224.383.44.935.263 1.481-.187.566-.767 1.056-1.725 1.451a.412.412 0 00.31.762c1.191-.49 1.928-1.148 2.194-1.955.21-.641.1-1.358-.297-2.076.325-.243.546-.593.658-1.053a22.058 22.058 0 003.443-.384c8.022-1.481 9.104-5.08 8.597-7.837"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCowboyLassoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.103 11.987c-1.289 1.109-3.373 1.935-6.194 2.456a21.62 21.62 0 01-3.064.356c-.157-1.081-1.048-1.678-2.513-1.82a5.168 5.168 0 00-.537-.029c-.827 0-1.463.219-1.877.661-.756-.605-1.238-1.423-1.44-2.512-.3-1.633.165-2.955 1.429-4.042 1.288-1.11 3.37-1.936 6.187-2.457 2.818-.52 5.056-.493 6.659.084 1.565.566 2.476 1.633 2.776 3.264.305 1.63-.163 2.952-1.426 4.039M7.027 16.144c-1.52-.149-1.468-.709-1.428-1.118.039-.398.08-.849 1.196-.849.134 0 .271.009.417.023 1.524.148 1.47.708 1.429 1.12-.04.398-.082.846-1.196.846-.13 0-.272-.008-.418-.022m14.712-8.42c-.381-2.07-1.58-3.482-3.566-4.2-1.807-.65-4.26-.697-7.294-.134-3.034.56-5.311 1.48-6.765 2.734-1.6 1.375-2.216 3.123-1.835 5.196.275 1.496.995 2.653 2.126 3.451-.005.048-.02.09-.022.137-.143 1.496.798 2.292 2.53 2.46.187.02.366.028.537.028.266 0 .507-.028.734-.073.185.33.353.776.233 1.202-.183.638-.964 1.078-1.589 1.336a.613.613 0 00.465 1.134c1.275-.524 2.048-1.243 2.3-2.137.185-.647.062-1.367-.317-2.073a1.89 1.89 0 00.465-.759 22.052 22.052 0 003.395-.378c3.034-.56 5.311-1.48 6.768-2.731 1.597-1.376 2.216-3.123 1.835-5.193"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.213 18.045H3.523a.229.229 0 01-.232-.227V13.71h17.154v4.107a.233.233 0 01-.232.227zM3.523 6.565h16.69a.23.23 0 01.232.228V8.71H3.291V6.793a.23.23 0 01.233-.227zm18.191 2.763c0-.031-.014-.056-.017-.084V6.793c0-.807-.666-1.46-1.484-1.46H3.523c-.82 0-1.487.653-1.487 1.46V9.28c-.002.017-.01.03-.01.048v3.767c0 .017.008.031.01.048v4.675c0 .804.667 1.46 1.488 1.46h16.689c.818 0 1.484-.656 1.484-1.46v-4.642c.003-.028.017-.053.017-.084V9.328z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M23.808 8.291v4.662a.575.575 0 010 .108v5.781a1.505 1.505 0 01-1.526 1.513H1.693a1.507 1.507 0 01-1.506-1.492V5.11a1.51 1.51 0 011.517-1.49h20.579c.4-.004.786.154 1.072.433.286.28.45.66.45 1.06v3.072a.389.389 0 01.004.107zM1.172 8.79v3.687h21.654V8.789H1.172zm.531-4.182a.522.522 0 00-.534.518v2.692h21.637V5.125a.52.52 0 00-.521-.518H1.703zM22.285 19.37a.519.519 0 00.541-.518v-5.401H1.172v5.401a.522.522 0 00.534.518h20.579z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.714 9.328v3.767c0 .031-.014.053-.017.084v4.642c0 .804-.666 1.46-1.484 1.46H3.523c-.82 0-1.487-.656-1.487-1.46v-4.678c-.002-.017-.01-.031-.01-.048V9.328c0-.017.008-.031.01-.048V6.793c0-.807.667-1.46 1.488-1.46h16.689c.818 0 1.484.653 1.484 1.46v2.45c.003.029.017.054.017.085zm-1.501 8.717c.126 0 .23-.101.232-.227V13.71H3.291v4.11c0 .126.107.23.233.227 0-.003 16.689-.003 16.689-.003zM3.523 6.565a.229.229 0 00-.232.228V8.71h17.152V6.793a.229.229 0 00-.233-.227H3.524zm-.232 5.914h17.152V9.944H3.29v2.535z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardVisaFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.24 18.092a.22.22 0 00.222-.218v-5.762H3.216v5.762c0 .12.1.218.224.218h16.8zM3.44 6.518a.222.222 0 00-.224.221v1.194h17.246V6.739c0-.12-.1-.22-.221-.22H3.44zm18.246 2.009v2.991c0 .028-.014.056-.017.084v6.272a1.42 1.42 0 01-1.428 1.406H3.44a1.42 1.42 0 01-1.429-1.406v-6.305c-.003-.017-.011-.031-.011-.05V8.526c0-.017.008-.034.011-.048V6.742A1.42 1.42 0 013.44 5.336h16.8c.788 0 1.43.63 1.43 1.406v1.703c.002.026.016.05.016.082zm-7.179 7.818c.513-.009 1.123-.219 1.123-1.169 0-.95-.616-1.162-1.134-1.176h-.146c-.504.003-1.106.21-1.106 1.168 0 .96.61 1.17 1.12 1.18l.143-.003zm2.868-3.37c.99.022 2.149.613 2.149 2.204 0 1.594-1.16 2.18-2.151 2.196h-.174c-.27-.002-.846-.061-1.345-.431a2.37 2.37 0 01-1.333.429h-.174c-.991-.014-2.15-.6-2.15-2.208s1.153-2.187 2.14-2.196c.064 0 .128 0 .184.003.445.011.924.146 1.32.429.52-.384 1.134-.429 1.35-.432.061 0 .128.003.184.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardVisaLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.708 18.184a.438.438 0 00.441-.43v-6.159H2.845v6.156c0 .24.197.43.441.43h17.422v.003zM3.283 5.816a.438.438 0 00-.44.43v1.437h18.303V6.246a.433.433 0 00-.44-.43H3.282zm-.438 4.96h18.307V8.502H2.845v2.276zM22 8.095v3.093c0 .031-.011.056-.017.082v6.482c0 .69-.572 1.249-1.272 1.249H3.283a1.26 1.26 0 01-1.272-1.249v-6.513C2.01 11.22 2 11.204 2 11.188V8.093c0-.017.009-.034.011-.051V6.249c0-.69.572-1.249 1.272-1.249h17.425c.703 0 1.272.56 1.272 1.249v1.763c.009.025.02.053.02.082zm-4.118 8.167c.501-.009 1.343-.203 1.343-1.387 0-1.187-.848-1.386-1.354-1.398l-.162-.002c-.148.002-.598.047-.928.34.14.29.225.638.225 1.06 0 .416-.083.76-.217 1.046.333.29.789.34.937.344l.156-.003zm-3.056 0c.5-.009 1.343-.203 1.343-1.387 0-1.187-.848-1.386-1.355-1.398l-.162-.002c-.495.005-1.326.19-1.326 1.386 0 1.201.842 1.392 1.343 1.4h.157zm3.062-3.603c1.004.025 2.171.619 2.171 2.213 0 1.598-1.164 2.186-2.163 2.205h-.182c-.287-.005-.922-.073-1.44-.495-.412.338-.942.487-1.434.495h-.182c-.999-.017-2.166-.604-2.166-2.216 0-1.614 1.161-2.196 2.155-2.205l.185.003c.489.011 1.015.163 1.428.495.515-.427 1.153-.495 1.443-.498l.185.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCreditCardVisaRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.24 18.12a.221.221 0 00.222-.218V12.14H3.216v5.762c0 .123.1.221.224.219h16.8zM3.44 6.547a.222.222 0 00-.224.222V7.96h17.249V6.768a.22.22 0 00-.221-.222H3.44zm-.224 4.406h17.249V9.148H3.215v1.804zm18.47-2.397v2.991c0 .031-.014.056-.017.084v6.272c0 .776-.638 1.406-1.428 1.406H3.44a1.42 1.42 0 01-1.429-1.406v-6.308C2.008 11.58 2 11.563 2 11.546V8.555c0-.017.008-.034.011-.05V6.767a1.42 1.42 0 011.429-1.41h16.8c.788 0 1.43.63 1.43 1.407V8.47c.002.028.016.053.016.084zm-4.33 7.818c.512-.009 1.123-.219 1.123-1.169 0-.95-.616-1.165-1.134-1.176h-.14c-.121 0-.449.025-.712.213.112.272.182.588.182.963 0 .37-.067.681-.174.95.27.19.603.219.717.219h.138zm-2.849 0c.513-.009 1.123-.219 1.123-1.169 0-.95-.616-1.165-1.134-1.176h-.146c-.504.003-1.104.207-1.104 1.168 0 .96.611 1.17 1.12 1.18-.002-.003.141-.003.141-.003zm2.868-3.37c.99.022 2.149.613 2.149 2.204 0 1.594-1.16 2.18-2.151 2.196h-.174c-.266-.002-.846-.061-1.345-.428a2.334 2.334 0 01-1.333.428h-.174c-.991-.014-2.15-.6-2.15-2.207 0-1.608 1.153-2.188 2.14-2.196.06 0 .122 0 .184.003.473.008.933.157 1.32.428.52-.383 1.134-.428 1.35-.428.061-.006.128-.003.184 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCutFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.072 18.975c.638 0 .843-.196.843-.81 0-.613-.205-.812-.843-.812-.636 0-.84.2-.84.813s.204.81.84.81zm0-2.431c1.061 0 1.683.518 1.683 1.622 0 1.103-.619 1.622-1.683 1.622-1.062 0-1.681-.516-1.681-1.622 0-1.107.616-1.622 1.68-1.622zM6.04 18.936c.636 0 .84-.196.84-.81 0-.613-.204-.812-.84-.812s-.84.196-.84.813c0 .613.204.809.84.809zm0-2.431c1.061 0 1.68.518 1.68 1.622 0 1.103-.619 1.621-1.68 1.621-1.062 0-1.68-.518-1.68-1.621 0-1.107.618-1.622 1.68-1.622zm11.966 4.115c1.824 0 2.566-.723 2.566-2.474 0-1.759-.74-2.482-2.566-2.482-1.823 0-2.574.72-2.574 2.482 0 1.75.75 2.474 2.574 2.474zm-6.818-8.295c.314 0 .496-.156.496-.49 0-.322-.182-.479-.496-.479-.325 0-.507.157-.507.48-.003.333.18.49.507.49zm-5.207 8.222c1.823 0 2.566-.715 2.566-2.474 0-1.759-.74-2.481-2.566-2.481-1.826 0-2.574.72-2.574 2.481 0 1.76.75 2.474 2.574 2.474zm12.025-6.098c2.423 0 3.826 1.176 3.826 3.697 0 2.516-1.403 3.69-3.826 3.69s-3.835-1.177-3.835-3.69c0-.484.076-.907.177-1.288-.647-1.605-1.588-2.49-2.807-2.65a2.418 2.418 0 00-.52.235c-.555.35-1.034.941-1.513 1.857 0 .009-.009.009-.009.017.202.496.311 1.07.311 1.76 0 2.512-1.415 3.688-3.826 3.688-2.423 0-3.835-1.176-3.835-3.689 0-2.512 1.412-3.697 3.835-3.697.294 0 .58.025.848.056.017-.017.017-.04.034-.056l1.882-1.81L3.99 7.986c-.927-.899-1.495-1.809-1.68-2.708-.227-1.079.117-2.101 1-2.944a.642.642 0 01.89-.009l7.62 7.283 7.543-7.274a.634.634 0 01.89 0c.883.843 1.227 1.865 1 2.944-.184.899-.747 1.81-1.68 2.708l-4.709 4.533 2.112 2.02a6.6 6.6 0 011.031-.09z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconCutLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.22 22.826c2.44 0 3.583-1.11 3.583-3.489 0-2.39-1.14-3.5-3.584-3.5-2.45 0-3.593 1.11-3.593 3.5 0 2.38 1.14 3.49 3.593 3.49zm-8.044-9.842c2.302 0 3.573 1.456 4.42 2.961l.776-.675L2.134 1.39C.813 3.083 2.003 4.88 3.297 6.14l7.075 6.895c.28-.03.552-.05.804-.05zm-3.16 2.763c.524-.867 1.072-1.506 1.698-1.956l-.545-.521-2.007 1.956a3.5 3.5 0 01.854.521zM4.79 22.74c2.44 0 3.583-1.113 3.583-3.493 0-.974-.191-1.73-.585-2.289 0-.01-.01-.01-.01-.01-.03-.06-.07-.107-.11-.168-.585-.7-1.533-1.032-2.878-1.032-2.45 0-3.593 1.113-3.593 3.5 0 2.383 1.143 3.492 3.593 3.492zM21.361 1.39l-8.901 8.672 1.865 1.819c.01-.01.02-.03.03-.04l5.846-5.705c.928-.894 1.502-1.818 1.687-2.655.148-.753-.023-1.442-.527-2.091zm-2.142 13.462c2.898 0 4.592 1.425 4.592 4.484 0 3.049-1.694 4.474-4.592 4.474-2.907 0-4.601-1.425-4.601-4.474 0-.914.171-1.66.454-2.292-.03-.03-.061-.058-.081-.088-.928-1.879-1.92-2.793-3.28-2.961-.01 0-.031.01-.041.01-.447.067-.83.215-1.204.454-.635.413-1.2 1.082-1.744 2.084.423.689.655 1.583.655 2.702 0 3.05-1.694 4.474-4.591 4.474-2.904.004-4.598-1.425-4.598-4.474 0-3.048 1.694-4.484 4.601-4.484.464 0 .888.047 1.29.128l2.384-2.32-5.882-5.734C.198 4.52-.105 2.147 1.75.33a.531.531 0 01.715 0l9.274 9.038L21.024.33a.512.512 0 01.706 0c1.866 1.822 1.567 4.191-.816 6.51l-5.842 5.695c-.02.02-.03.02-.05.03l2.44 2.38c.03.03.06.08.08.117a6.725 6.725 0 011.677-.208zm-.003 5.808c1.008 0 1.365-.346 1.365-1.327 0-.972-.37-1.331-1.365-1.331-1.008 0-1.365.346-1.365 1.33 0 .982.357 1.328 1.365 1.328zm0-3.643c1.5 0 2.377.74 2.377 2.312 0 1.577-.878 2.313-2.377 2.313-1.5 0-2.373-.736-2.373-2.313-.003-1.573.874-2.312 2.373-2.312zm-14.43 3.556c1.008 0 1.365-.35 1.365-1.331 0-.968-.37-1.331-1.365-1.331-1.009 0-1.365.346-1.365 1.331-.003.985.356 1.331 1.365 1.331zm0-3.644c1.499 0 2.376.736 2.376 2.313 0 1.576-.877 2.313-2.376 2.313-1.5 0-2.377-.733-2.377-2.31 0-1.576.874-2.316 2.377-2.316zm6.252-5.72c.316 0 .5.157.5.49 0 .336-.187.49-.5.49-.316 0-.5-.154-.5-.49 0-.333.184-.49.5-.49z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDartboardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.084 10.725l-.53.53.53-.53.353-.352 1.468-1.465-1.468 1.465 1.468-1.465-.832-.866-2.314 2.314c-.619-.474-1.51-.801-2.795-.832-.16-.003-.62-.006-.62-.006-4.067.037-4.067 3.34-4.067 4.423 0 1.093 0 4.415 4.138 4.474l.19.002.415-.002c4.15-.073 4.15-3.35 4.15-4.426 0-.566-.005-1.731-.607-2.731l.521-.533zm1.82-1.817c.9 1.14 1.536 2.756 1.536 5.078 0 7.115-5.891 7.67-7.364 7.695-.14.002-.297.005-.457.005-.084 0-.168 0-.25-.003-1.548-.022-7.363-.582-7.363-7.745 0-7.15 5.761-7.68 7.31-7.694h.16c.196 0 .398.002.572.008.874.02 3.212.238 5.028 1.79l-.463.462.463-.462.974-.975V3.913c0-.106.037-.202.084-.291l.009-.014a.619.619 0 01.129-.154c.005-.006.008-.014.016-.02l1.57-1.252c.013-.011.033-.014.05-.025a.596.596 0 01.4-.157c.33 0 .602.269.602.602v1.644a.594.594 0 01.734.076c.168.168.21.41.137.62l1.314.013a.6.6 0 01.594.608c0 .042-.017.076-.025.115a.488.488 0 01-.059.165c-.014.028-.02.059-.036.084L20.43 7.574c-.005.009-.014.009-.02.017a.593.593 0 01-.481.263h-2.972l-1.053 1.054-1.468 1.465 1.468-1.465zm3.553-2.104l.669-.826-1.277-.014-.84.84h1.448zm-1.603-1.55V3.69l-.753.661v1.658l.753-.753zm-8.745 7.06a.6.6 0 00-.546.65l.151 1.733c.006.06.02.115.04.169l.008.016c.025.06.062.11.1.157.015.017.029.028.046.042a.59.59 0 00.128.09c.017.008.031.02.048.025l.022.011c.05.02.104.023.157.028.014 0 .026.009.04.009l1.94.033h.012a.6.6 0 00.011-1.202l-.527-.008 1.93-1.93c.222.51.292 1.135.292 1.849 0 1.902-.504 3.18-2.961 3.224l-.392.003-.185-.003c-2.451-.034-2.952-1.333-2.952-3.272 0-1.916.487-3.199 2.868-3.22.062 0 .445.002.588.005.88.02 1.51.193 1.967.49l-2.096 2.095-.039-.448c-.025-.33-.3-.566-.65-.546z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDartboardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.027 6.891h-2.092l.944-.935 1.781.017c-.002 0-.633.918-.633.918zm-7.952 4.659c-.417-.283-.997-.423-1.784-.44-.152-.003-.586-.006-.583-.006-1.627.014-2.51.47-2.51 2.843 0 2.401.91 2.869 2.577 2.891l.185.003.398-.003c1.952-.033 2.613-.75 2.613-2.843 0-.795-.103-1.395-.341-1.837l1.215-1.205c.54.74.824 1.742.824 3.042 0 2.994-1.4 4.48-4.275 4.527l-.423.002-.201-.002c-2.871-.04-4.266-1.538-4.266-4.575 0-3.02 1.37-4.5 4.187-4.526l.645.005c1.271.031 2.24.348 2.95.928l-1.211 1.196zm.073 2.442c0 1.748-.387 2.003-1.801 2.028l-.381.003-.18-.003c-1.19-.017-1.764-.112-1.764-2.075 0-1.928.515-2.017 1.689-2.026.05 0 .428 0 .563.003.532.014.93.062 1.216.208l-1.521 1.51-.003-.659a.41.41 0 00-.41-.406h-.005a.407.407 0 00-.409.406v.003l.003 1.641v.006c0 .073.028.137.062.196a.409.409 0 00.347.205h.006l1.647-.026a.412.412 0 00.406-.414.408.408 0 00-.412-.4h-.006l-.633.01 1.435-1.423c.1.297.15.681.15 1.213zm5.04 0c0 2.782-.95 4.782-2.827 5.939-1.532.946-3.26 1.078-3.93 1.09-.137.002-.294.002-.454.002l-.244-.003c-.678-.008-2.42-.134-3.952-1.09-1.86-1.162-2.801-3.176-2.801-5.985 0-2.804.933-4.81 2.773-5.958 1.515-.947 3.246-1.065 3.921-1.068h.157c.194 0 .395.003.566.006.678.017 2.423.157 3.964 1.118.257.16.493.339.717.532l-1.2 1.188c-1-.846-2.321-1.124-3.526-1.152l-.664-.005c-2.288.02-5.01.96-5.01 5.341 0 4.398 2.761 5.359 5.075 5.393l.207.002.44-.005c2.322-.04 5.09-1 5.09-5.342 0-1.661-.41-2.826-1.042-3.641l1.207-1.2c1.014 1.18 1.532 2.8 1.532 4.838zm.1-9.896l.877-.69V5.51l-.877.869V4.096zm4.507 1.288a.413.413 0 00-.361-.218l-1.743-.02.11-.109a.407.407 0 00.002-.574l-.002-.003a.414.414 0 00-.583 0l-.233.233v-2.13a.405.405 0 00-.232-.366.413.413 0 00-.434.047l-1.7 1.334a.42.42 0 00-.157.319v3.297l-.813.807c-1.877-1.639-4.327-1.869-5.238-1.891a20.596 20.596 0 00-.588-.008l-.16.002c-1.588.014-7.507.555-7.507 7.843 0 7.3 5.972 7.872 7.563 7.894.084.003.171.003.255.003.165 0 .328-.003.47-.003 1.513-.028 7.564-.591 7.564-7.843 0-2.535-.745-4.244-1.779-5.415l.88-.874h3.134a.407.407 0 00.339-.179l1.185-1.725a.4.4 0 00.028-.42z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDartboardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.269 7.036l-1.44-.022.852-.852 1.224.014-.636.86zm-6.305 6.978c0 1.902-.505 3.18-2.961 3.224l-.392.006-.185-.003c-2.451-.037-2.953-1.333-2.953-3.272 0-1.916.488-3.199 2.866-3.221l.59.005c.88.02 1.51.194 1.967.49l-2.095 2.093-.04-.448a.595.595 0 00-.652-.546.6.6 0 00-.546.65l.151 1.733a.57.57 0 00.042.169l.009.016a.578.578 0 00.274.289c.017.008.031.02.048.025l.022.011c.05.02.104.023.157.028.014 0 .025.009.04.009l1.94.033h.012a.6.6 0 00.011-1.202l-.527-.008 1.93-1.93c.219.51.292 1.135.292 1.849zm3.271 0c0 5.759-4.325 6.46-6.185 6.496-.131.003-.283.003-.434.003l-.232-.003c-1.857-.025-6.18-.717-6.18-6.544 0-5.812 4.28-6.479 6.12-6.493h.147c.184 0 .375.003.543.009 1.034.025 2.818.263 4.213 1.431l-1.47 1.47c-.62-.473-1.51-.803-2.796-.831-.16-.006-.62-.009-.62-.009-4.067.037-4.067 3.34-4.067 4.423 0 1.093 0 4.415 4.138 4.474l.19.003.415-.006c4.151-.073 4.151-3.347 4.151-4.426 0-.566-.006-1.73-.608-2.73l1.488-1.488c.703.963 1.187 2.31 1.187 4.221zm.591-9.37l.874-.73V5.44l-.812.812-.062-1.608zm4.799.673a.602.602 0 00-.533-.334L19.78 4.97a.601.601 0 00-.14-.619.594.594 0 00-.734-.075V2.627a.598.598 0 00-.986-.462l-2.087 1.743a.594.594 0 00-.216.484l.118 3.014-.661.661C13.258 6.518 10.919 6.3 10.042 6.28a18.34 18.34 0 00-.571-.008h-.16C7.76 6.286 2 6.818 2 13.966c0 7.163 5.815 7.723 7.367 7.745a22.565 22.565 0 00.706-.003c1.473-.025 7.367-.58 7.367-7.694 0-2.322-.636-3.938-1.535-5.078l.742-.743 2.913.048h.009c.19 0 .37-.09.484-.244l1.516-2.056a.606.606 0 00.056-.624z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataAlertFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.49 17.983a.62.62 0 01-.616-.622V13.34a.62.62 0 01.616-.622c.34 0 .616.28.616.622v4.022a.62.62 0 01-.616.622zm0 .35a.63.63 0 01.628.633.63.63 0 01-.628.633.63.63 0 01-.627-.633c0-.35.28-.633.627-.633zm2.927-2.227l-2.608-5.29-.271-.558L3.434 20.4l9.737.042h.386L11.92 17.13l-.502-1.023zm3.687-4.918c-1.703 0-3.309-.2-4.527-.566a9.663 9.663 0 01-.591-.216l.552 1.12c1.266.36 2.87.558 4.566.558 1.792 0 3.498-.216 4.781-.613.734-.216 1.35-.524 1.83-.888v3.986c-.225.414-.883.972-2.085 1.347-1.21.364-2.815.571-4.526.571-.765 0-1.499-.05-2.19-.131l.467.955c.56.042 1.137.075 1.72.075 1.792 0 3.498-.215 4.781-.613.734-.216 1.35-.524 1.83-.896v3.546c0 .697-.71 1.272-2.093 1.695-1.219.364-2.832.574-4.527.574-.297 0-.593-.009-.888-.025a.87.87 0 01-.212.025h-.026L2.99 21.65c-.241-.025-.488-.093-.667-.275a.927.927 0 01-.297-.68c0-.157.034-.325.107-.465L7.669 9.224a.955.955 0 01.552-.49c.081-.025.166-.025.255-.034V5.31c.443.36 1.053.665 1.843.897 1.3.398 2.997.614 4.782.614 1.787 0 3.49-.216 4.781-.614.773-.232 1.384-.524 1.83-.88v3.947c-.225.423-.883.98-2.085 1.353-1.204.362-2.81.56-4.523.56zM8.538 3.969c0-.008 0-.008-.009-.017.19-.549.888-1.03 2.034-1.378 1.218-.372 2.832-.571 4.535-.571 1.711 0 3.316.199 4.527.571 1.21.367 1.893.849 2.042 1.42 0 0-.009.017-.009.026-.204.523-.896.98-2.025 1.319-1.219.375-2.815.583-4.527.583-1.703 0-3.308-.208-4.526-.583-1.154-.35-1.852-.824-2.042-1.37z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataAlertLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.991 13.702a.412.412 0 01.824 0v3.972a.412.412 0 01-.824 0v-3.972zm.415 4.874a.397.397 0 110 .795.397.397 0 010-.795zm12.616-8.94V6.018c-.412.328-.978.6-1.695.812-1.199.362-2.767.558-4.428.558-1.662 0-3.23-.196-4.437-.558-.723-.221-1.289-.493-1.71-.82v3.445c.01 0 .018.008.026.008.157.073.28.196.353.353l.238.477c.009 0 .009.008.017.008.353.221.798.417 1.322.574 1.118.336 2.614.524 4.19.524 1.578 0 3.07-.188 4.191-.524 1.118-.336 1.726-.846 1.933-1.24zm0 4.856v-3.658c-.434.336-1.011.625-1.695.83-1.199.36-2.767.557-4.428.557-1.662 0-3.23-.196-4.429-.558-.17-.056-.339-.112-.51-.173l2.283 4.577a18.25 18.25 0 002.656.187c1.577 0 3.072-.187 4.19-.524 1.118-.336 1.726-.851 1.933-1.238zm0 4.454v-3.255c-.434.336-1.011.625-1.695.83-1.199.352-2.767.557-4.428.557-.765 0-1.505-.04-2.21-.132l1.882 3.782a.61.61 0 01.073.294h.238c1.577 0 3.064-.19 4.207-.527 1.283-.384 1.933-.907 1.933-1.549zm-18.003 2.02l10.77.039-5.339-10.72-5.431 10.68zM10.694 3.5c-1.076.328-1.725.762-1.89 1.263 0 .008.008.017.008.023.17.5.82.935 1.888 1.254 1.126.345 2.622.524 4.199.524s3.061-.18 4.187-.524c1.045-.31 1.692-.73 1.88-1.212 0-.017.008-.017.017-.026-.154-.532-.788-.969-1.905-1.302-1.123-.336-2.61-.524-4.196-.524-1.577 0-3.065.188-4.188.524zm8.628-.787c1.675.507 2.52 1.297 2.52 2.344v13.888c0 1.05-.845 1.838-2.52 2.336-1.208.362-2.788.558-4.437.558-.166 0-.732 0-.897-.009-.025 0-.056 0-.081-.008h-.025l-10.97-.036a.744.744 0 01-.523-.213.75.75 0 01-.143-.896l5.52-10.87a.536.536 0 01.166-.212V5.058c0-.17.025-.328.065-.484v-.009c.238-.804 1.061-1.428 2.456-1.854 1.202-.359 2.779-.555 4.429-.555 1.66 0 3.238.196 4.44.558z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataAlertRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.345 18.137a.601.601 0 01-.603-.602v-3.89a.603.603 0 011.205 0v3.89a.601.601 0 01-.602.602zm0 .336a.613.613 0 110 1.227.613.613 0 010-1.227zM20.507 9.51V6.409a6.224 6.224 0 01-1.4.594c-1.2.361-2.76.554-4.404.554-1.641 0-3.204-.193-4.395-.554a6.113 6.113 0 01-1.417-.61v2.876a.96.96 0 01.347.37l.202.409c.322.201.74.386 1.215.529 1.087.33 2.527.507 4.056.507 1.53 0 2.961-.176 4.048-.507 1-.297 1.546-.748 1.748-1.067zm0 4.748v-3.143c-.395.24-.868.46-1.4.619-1.194.353-2.754.555-4.396.555-1.641 0-3.21-.202-4.403-.555-.008-.009-.025-.009-.03-.017l1.963 3.944a17.35 17.35 0 002.47.177c1.53 0 2.961-.185 4.048-.507 1-.292 1.546-.743 1.748-1.073zm0 4.42v-2.812a5.7 5.7 0 01-1.4.619c-1.194.36-2.754.563-4.396.563-.635 0-1.238-.042-1.834-.096l1.689 3.384c.03.056.03.12.047.177h.079c1.52 0 2.963-.177 4.056-.505.801-.246 1.759-.672 1.759-1.33zm-12.12-8.045l-4.98 9.82 9.89.04-4.91-9.86zM10.65 3.74c-.925.28-1.504.653-1.68 1.045.167.41.755.787 1.688 1.06 1.087.33 2.527.506 4.048.506 1.53 0 2.97-.176 4.056-.507.919-.272 1.513-.641 1.689-1.045-.219-.507-1.014-.851-1.697-1.061-1.087-.322-2.527-.507-4.057-.507-1.529.002-2.972.187-4.047.51zm8.448-1.156c1.74.52 2.616 1.358 2.616 2.49v13.602c0 1.126-.876 1.96-2.616 2.482-1.199.361-2.767.554-4.403.554-.16 0-.715 0-.885-.008-.017 0-.04-.008-.065-.008h-.042l-10.737-.04H2.95a.936.936 0 01-.925-.924.864.864 0 01.104-.45L7.538 9.624c.039-.065.09-.12.145-.177v-4.38c0-.177.026-.354.073-.53v-.009c.25-.86 1.101-1.518 2.535-1.952 1.2-.356 2.76-.555 4.4-.555 1.648.006 3.217.208 4.407.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDatabaseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.076 7.3c1.022 0 1.63-.617 1.63-1.65 0-1.034-.61-1.65-1.63-1.65-1.023 0-1.63.616-1.63 1.65 0 1.033.607 1.65 1.63 1.65zm-.017 6.199c1.022 0 1.63-.617 1.63-1.65 0-1.034-.61-1.65-1.63-1.65-1.023 0-1.633.616-1.633 1.65 0 1.033.61 1.65 1.633 1.65zm0 6.201c1.022 0 1.63-.616 1.63-1.65 0-1.033-.61-1.65-1.63-1.65-1.023 0-1.633.617-1.633 1.65 0 1.034.61 1.65 1.633 1.65zM10.45 6.27a.617.617 0 00.613-.622.617.617 0 00-.613-.622H4.768a.617.617 0 00-.614.622c0 .345.275.622.614.622h5.683zm0 6.202a.617.617 0 00.613-.622.617.617 0 00-.613-.622H4.768a.617.617 0 00-.614.622c0 .344.275.622.614.622h5.683zm0 6.24a.617.617 0 00.613-.621.617.617 0 00-.613-.622H4.768a.617.617 0 00-.614.622c0 .341.275.621.614.621h5.683zm11.263-9.098l-.005 4.46c0 .314-.101.602-.266.84.17.241.271.532.271.849l-.005 4.46a1.46 1.46 0 01-1.451 1.464H3.476a1.462 1.462 0 01-1.45-1.465l.005-4.46c0-.313.098-.601.266-.84a1.46 1.46 0 01-.272-.848l.006-4.46c0-.313.098-.602.266-.84a1.46 1.46 0 01-.272-.849l.006-4.459A1.458 1.458 0 013.479 2h16.782a1.46 1.46 0 011.448 1.465l-.006 4.46c0 .313-.1.602-.266.84.176.24.277.532.277.848zm-3.638-4.621c.479 0 .65.173.65.658 0 .484-.171.658-.65.658-.48 0-.65-.174-.65-.658 0-.488.17-.658.65-.658zm-.017 6.198c.479 0 .65.174.65.659 0 .484-.171.658-.65.658-.48 0-.65-.174-.65-.658 0-.485.17-.659.65-.659zm0 6.202c.479 0 .65.174.65.658 0 .485-.171.659-.65.659-.48 0-.65-.174-.65-.659 0-.484.17-.658.65-.658z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDatabaseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.58 19.03c.531 0 .739-.21.739-.75 0-.538-.208-.751-.74-.751s-.74.21-.74.75c-.002.541.205.751.74.751zm0-2.339c.982 0 1.57.594 1.57 1.591 0 .995-.585 1.591-1.57 1.591-.984 0-1.57-.594-1.57-1.59-.002-.995.583-1.592 1.57-1.592zm0-3.94c.531 0 .739-.211.739-.752 0-.537-.208-.75-.74-.75s-.74.21-.74.75c-.002.541.205.751.74.751zm0-2.343c.982 0 1.57.594 1.57 1.591 0 .995-.585 1.591-1.57 1.591-.984 0-1.57-.593-1.57-1.59-.002-.995.583-1.592 1.57-1.592zm.016-5.44c-.532 0-.74.21-.74.751 0 .538.208.748.74.748s.742-.21.742-.748c0-.535-.215-.75-.742-.75zm0 2.34c-.983 0-1.569-.594-1.569-1.589 0-.994.586-1.59 1.569-1.59s1.571.593 1.571 1.59c0 .995-.588 1.589-1.571 1.589zm2.412 13.252l.005-4.558a.442.442 0 00-.437-.442H3.431a.437.437 0 00-.437.442l-.009 4.558a.44.44 0 00.437.442h17.146c.244 0 .44-.199.44-.442zM2.99 3.44l-.006 4.557a.44.44 0 00.437.442h17.146c.244 0 .44-.199.437-.442l.006-4.558a.44.44 0 00-.437-.442H3.43a.441.441 0 00-.44.442zm.431 11.282h17.146a.439.439 0 00.437-.443l.006-4.557a.44.44 0 00-.437-.443H3.43a.439.439 0 00-.437.443l-.006 4.557a.438.438 0 00.434.443zm18.42-5l-.005 4.557c0 .331-.129.63-.333.86.207.227.339.533.339.866l-.006 4.555c0 .705-.569 1.283-1.269 1.283H3.422a1.277 1.277 0 01-1.266-1.283l.006-4.558c0-.33.129-.63.333-.857a1.295 1.295 0 01-.339-.868l.006-4.558c0-.333.129-.63.333-.86a1.275 1.275 0 01-.339-.862l.006-4.558c0-.706.569-1.283 1.269-1.283h17.145c.698 0 1.267.577 1.267 1.283l-.006 4.558c0 .33-.129.63-.333.86.207.226.339.529.339.865zM4.79 6.137a.417.417 0 01-.414-.42c0-.233.185-.42.414-.42h5.757c.23 0 .414.187.414.42a.417.417 0 01-.414.42H4.789zm5.757 5.442a.42.42 0 010 .84H4.789a.416.416 0 01-.414-.417c0-.232.185-.42.414-.42 0-.003 5.757-.003 5.757-.003zm0 6.322a.42.42 0 010 .84H4.789a.416.416 0 01-.414-.417c0-.232.185-.42.414-.42h5.757v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDatabaseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.056 18.706c.479 0 .65-.174.65-.658 0-.485-.171-.659-.65-.659s-.65.174-.65.659c.003.484.171.658.65.658zm0-2.308c1.022 0 1.63.616 1.63 1.65 0 1.033-.61 1.65-1.63 1.65s-1.63-.617-1.63-1.65c0-1.034.61-1.65 1.63-1.65zm0-3.894c.479 0 .65-.173.65-.658 0-.485-.171-.658-.65-.658s-.65.173-.65.658c.003.487.171.658.65.658zm0-2.308c1.022 0 1.63.616 1.63 1.65 0 1.034-.61 1.65-1.63 1.65s-1.63-.616-1.63-1.65c0-1.03.61-1.65 1.63-1.65zm.02-5.204c-.48 0-.65.173-.65.658 0 .484.17.658.65.658.479 0 .65-.174.65-.658 0-.488-.171-.658-.65-.658zm0 2.308c-1.023 0-1.63-.617-1.63-1.65 0-1.034.61-1.65 1.63-1.65s1.63.616 1.63 1.65c0 1.03-.608 1.65-1.63 1.65zm2.403 12.921l.006-4.46a.22.22 0 00-.222-.22H3.482c-.12 0-.219.1-.219.224l-.005 4.46a.22.22 0 00.221.22h16.782a.225.225 0 00.218-.224zM3.263 3.465l-.005 4.46c0 .12.098.223.221.223h16.782c.123 0 .22-.1.22-.224l.006-4.459a.22.22 0 00-.22-.221H3.481a.22.22 0 00-.219.221zm.213 10.83h16.782a.223.223 0 00.221-.225l.006-4.46a.22.22 0 00-.222-.22H3.482a.22.22 0 00-.219.22l-.005 4.46a.22.22 0 00.218.224zm18.238-4.682l-.005 4.46c0 .314-.101.602-.266.84.168.241.271.532.271.849l-.005 4.46a1.46 1.46 0 01-1.451 1.464H3.476a1.46 1.46 0 01-1.448-1.465l.006-4.46c0-.313.098-.601.263-.84a1.48 1.48 0 01-.272-.848l.006-4.46c0-.313.098-.602.263-.84a1.48 1.48 0 01-.272-.849l.006-4.459c0-.807.65-1.465 1.448-1.465h16.782a1.46 1.46 0 011.448 1.465l-.006 4.46c0 .313-.098.602-.266.84.177.24.28.532.28.848zM4.768 6.27a.617.617 0 01-.614-.622c0-.344.275-.622.614-.622h5.683c.339 0 .613.278.613.622a.617.617 0 01-.613.622H4.768zm5.683 4.958c.339 0 .613.277.613.622a.619.619 0 01-.613.622H4.768a.617.617 0 01-.614-.622c0-.345.275-.622.614-.622h5.683zm0 6.238c.339 0 .613.277.613.622a.617.617 0 01-.613.622H4.768a.617.617 0 01-.614-.622c0-.345.275-.622.614-.622h5.683z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCheckedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.661 12.106a.619.619 0 01.866 0 .602.602 0 01.005.852l-.005.006-3.692 3.658a.614.614 0 01-.866 0l-1.658-1.644a.605.605 0 01-.003-.855l.003-.003a.619.619 0 01.866 0L7.4 15.333l3.26-3.227zm.336-6.95c-1.109-.33-1.784-.778-1.963-1.293 0-.009 0-.009-.009-.017.18-.515.855-.975 1.955-1.303C12.151 2.193 13.698 2 15.333 2c1.639 0 3.185.193 4.345.543 1.162.348 1.818.804 1.963 1.345 0 0-.008.008-.008.017-.196.501-.863.933-1.947 1.252-1.168.347-2.706.54-4.344.54-1.639 0-3.174-.193-4.345-.54zM13.6 11.43c.006-.384.012-.74.014-1.009h-.002c-1.196 0-1.953-.496-2.633-.944-.138-.09-.275-.18-.415-.263l-.036-.023a5.398 5.398 0 00-.451-.246l-.003-.003a3.524 3.524 0 00-1.098-.328 3.754 3.754 0 00-.555-.042h-.003c-1.182 0-1.848.44-2.557.905-.686.451-1.451.953-2.622.953h-.011c.011 1.336.062 4.37.314 5.8.28 1.589 3.403 3.443 4.88 4.174a21.25 21.25 0 002.008-1.151l.002-.003c.359-.232.718-.487 1.056-.75l.014-.012c.846-.664 1.552-1.397 1.76-2.095.016-.056.036-.112.047-.165a10.2 10.2 0 00.09-.672c.03-.278.056-.586.078-.905l.014-.196c.017-.278.034-.56.048-.846l.008-.16c.025-.7.042-1.412.053-2.02zm1.746-.765c-.171 0-.34-.009-.51-.011l-.011.846c.173.005.344.014.52.014 1.726 0 3.356-.205 4.594-.577.7-.202 1.297-.49 1.751-.838v3.756c-.213.398-.846.922-1.997 1.27-1.163.347-2.706.54-4.345.54-.246 0-.487-.011-.728-.02-.03.292-.064.563-.106.793-.003.017-.012.034-.012.048.28.01.56.025.846.025 1.726 0 3.356-.205 4.594-.577.7-.202 1.297-.499 1.75-.846v3.342c0 .658-.674 1.201-2.005 1.599-1.17.347-2.714.54-4.344.54-1.482 0-2.874-.168-4.003-.456a21.028 21.028 0 01-2.653 1.513.612.612 0 01-.523 0c-.555-.253-5.37-2.577-5.827-5.185C1.99 14.476 2 9.96 2 9.767a.608.608 0 01.76-.585c1.078.16 1.671-.224 2.422-.714.79-.518 1.684-1.107 3.233-1.107h.005c.196 0 .378.012.552.026V5.123c.429.34 1.017.625 1.776.846 1.246.373 2.877.577 4.594.577 1.714 0 3.344-.204 4.59-.577.743-.218 1.326-.49 1.751-.829v3.723c-.212.397-.845.921-1.997 1.269-1.16.347-2.703.532-4.341.532z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCheckedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.831 12.478a.41.41 0 01.583.577l-.003.003L7.69 16.77a.41.41 0 01-.58 0L5.434 15.1a.407.407 0 01-.003-.577l.003-.003c.16-.16.42-.16.582 0l1.381 1.38 3.434-3.42zm8.373 6.992c1.205-.361 1.815-.846 1.815-1.445v-3.028c-.414.308-.944.568-1.571.756-1.138.342-2.628.53-4.2.53-.28 0-.551-.012-.823-.026-.02.154-.042.303-.064.434-.188 1.073-1.177 2.115-2.28 2.978.93.19 2.02.294 3.16.294 1.487.003 2.893-.174 3.963-.493zM8.425 20.977c1.48-.726 4.827-2.698 5.13-4.426.265-1.549.307-4.916.313-6.134-1.258.073-2.014-.434-2.75-.919-.74-.49-1.44-.95-2.693-.952H8.42c-1.255 0-1.953.462-2.695.952-.742.49-1.518.986-2.748.924.006 1.224.048 4.583.32 6.13.305 1.73 3.65 3.7 5.128 4.425zM9.462 5.862v1.97c.904.187 1.538.604 2.109.983.793.523 1.415.935 2.622.75a.42.42 0 01.342.093.412.412 0 01.156.308c0 .05.003.392-.002.905.184.005.372.014.563.014 1.493 0 2.899-.177 3.96-.496 1.048-.314 1.614-.793 1.81-1.152V5.88c-.387.288-.908.532-1.571.734-1.138.342-2.625.526-4.2.526-1.57 0-3.061-.187-4.195-.526-.673-.199-1.202-.451-1.594-.75zm1.815-2.392c-1.003.3-1.608.706-1.765 1.176 0 .003.003.006.006.009.157.468.77.874 1.773 1.176 1.061.317 2.468.493 3.96.493 1.496 0 2.9-.176 3.961-.493.98-.294 1.589-.686 1.76-1.14.002-.005.008-.01.01-.017-.145-.487-.739-.893-1.778-1.204-1.064-.317-2.47-.493-3.964-.493-1.493 0-2.899.174-3.963.493zm3.4 8.216a58.185 58.185 0 01-.165 3.753c.247.011.49.023.74.023 1.493 0 2.899-.174 3.96-.493 1.045-.314 1.614-.793 1.81-1.152v-3.4c-.415.308-.944.566-1.571.753-1.138.342-2.628.53-4.197.53-.196 0-.386-.009-.577-.014zm4.762-9c1.597.479 2.404 1.227 2.404 2.23v13.109c0 1.002-.807 1.753-2.4 2.232-1.147.342-2.637.53-4.2.53-1.49 0-2.907-.174-4.028-.488A21.234 21.234 0 018.6 21.803a.404.404 0 01-.35 0c-.216-.1-5.305-2.524-5.756-5.109-.35-1.975-.337-6.538-.337-6.731 0-.126.06-.244.157-.322a.43.43 0 01.35-.076c1.194.188 1.818-.227 2.611-.75.77-.51 1.647-1.087 3.149-1.087h.005c.073 0 .14.008.213.01V4.916c0-.16.022-.313.064-.462V4.45c.227-.773 1.012-1.367 2.337-1.762 1.137-.344 2.63-.532 4.198-.532 1.57 0 3.062.188 4.2.53z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCheckedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.585 12.199a.605.605 0 01.855 0 .602.602 0 010 .851l-3.647 3.633a.604.604 0 01-.852 0L5.303 15.05a.602.602 0 010-.851.605.605 0 01.854 0l1.21 1.207 3.218-3.207zm8.286 6.798c.745-.224 1.633-.619 1.633-1.224v-2.59a5.599 5.599 0 01-1.28.556c-1.129.34-2.61.527-4.168.527-.216 0-.423-.011-.633-.02-.014.087-.025.174-.04.255v.003c-.173.997-.985 1.947-1.949 2.76.796.134 1.68.21 2.61.21 1.44 0 2.8-.169 3.827-.477zM8.367 20.443c1.462-.729 4.549-2.57 4.826-4.146.247-1.426.297-4.448.306-5.773h-.003c-1.182 0-1.927-.493-2.6-.936-.7-.462-1.358-.896-2.526-.899h-.003c-1.165 0-1.826.437-2.527.896-.68.451-1.462.942-2.602.947.008 1.328.059 4.342.308 5.762.278 1.58 3.362 3.42 4.82 4.149zM9.588 6.24v1.392c.832.205 1.434.594 1.978.952.74.49 1.325.877 2.426.704a.626.626 0 01.495.134.615.615 0 01.224.454l-.002.689c.117.003.232.008.35.008 1.442 0 2.798-.168 3.82-.476.942-.283 1.446-.7 1.628-1.003V6.25a5.87 5.87 0 01-1.28.535c-1.132.34-2.614.527-4.168.527-1.558 0-3.037-.185-4.171-.524a5.722 5.722 0 01-1.3-.546zm1.636-2.535c-.854.258-1.39.594-1.56.958.162.367.706.711 1.571.97 1.023.304 2.381.472 3.821.472 1.443 0 2.798-.168 3.82-.473.852-.255 1.401-.594 1.57-.958-.205-.462-.942-.779-1.578-.972-1.02-.305-2.378-.473-3.823-.473-1.443.002-2.801.17-3.82.476zm3.468 8.064a61.37 61.37 0 01-.14 3.278c.168.005.336.014.507.014 1.445 0 2.8-.168 3.82-.474.939-.283 1.446-.7 1.628-1.003v-2.89a5.599 5.599 0 01-1.28.557c-1.132.339-2.614.527-4.168.527-.126 0-.247-.009-.367-.009zm4.526-9.215c1.656.498 2.496 1.297 2.496 2.375v12.843c0 1.079-.84 1.88-2.496 2.375-1.137.34-2.619.527-4.173.527-1.434 0-2.796-.165-3.894-.46a21.12 21.12 0 01-2.526 1.438.594.594 0 01-.516-.003c-.54-.255-5.3-2.563-5.753-5.154-.345-1.95-.33-6.437-.33-6.628a.604.604 0 01.75-.582c1.073.17 1.653-.219 2.392-.712.782-.515 1.664-1.098 3.193-1.098h.012V4.92c0-.177.025-.348.072-.513.238-.826 1.054-1.454 2.423-1.865 1.132-.34 2.614-.527 4.171-.527 1.566.014 3.048.202 4.18.54z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCloudFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.44 14.616c.966-.022 4.02-.297 4.02-3.91 0-3.387-2.735-3.838-3.905-3.868a.604.604 0 01-.575-.44c-.834-3.045-4.361-3.196-5.058-3.196-1.236 0-5.247.344-5.247 4.846v.112c0 .266-.18.504-.443.577-1.336.37-2.005 1.339-2.005 2.876 0 2.748 2.176 3.045 3.118 3.045l.893-.008h.008c.05 0 .073 0 .107.008.31.216.711.41 1.21.552.843.25 1.955.387 3.126.387 1.17 0 2.275-.138 3.118-.387.481-.137.885-.328 1.196-.56l.437-.034zm.588-8.947c2.325.208 4.658 1.628 4.658 5.04 0 3.756-2.84 5.095-5.271 5.095h-.41v1.37c-.148.266-.574.616-1.358.848-.796.241-1.84.37-2.955.37-1.12 0-2.168-.126-2.964-.37-.703-.207-1.218-.52-1.375-.84v-1.353c-.034.008-.073.025-.107.025l-.899.009C4.244 15.863 2 14.748 2 11.616c0-2.45 1.375-3.468 2.448-3.885.196-5.445 5.412-5.728 6.474-5.728.817-.003 4.862.182 6.106 3.666zM8.73 11.325c-.756-.221-1.213-.524-1.336-.871 0-.006 0-.006-.006-.011.124-.348.58-.656 1.33-.877.796-.233 1.85-.364 2.964-.364 1.118 0 2.168.131 2.958.364.79.232 1.238.538 1.337.905 0 0-.006.005-.006.01-.135.337-.588.625-1.325.844-.796.232-1.843.364-2.958.364-1.118 0-2.162-.129-2.958-.364zm2.958 3.703c-1.115 0-2.162-.126-2.958-.359-.709-.21-1.221-.529-1.378-.848v-2.519c.291.227.692.42 1.21.57.849.248 1.958.386 3.126.386s2.277-.138 3.126-.387c.507-.148.902-.33 1.19-.557v2.501c-.142.269-.574.62-1.358.854-.793.233-1.843.359-2.958.359zm0 3.927c1.174 0 2.283-.137 3.126-.386a3.679 3.679 0 001.19-.57v2.245c0 .445-.459.81-1.364 1.075-.795.236-1.846.364-2.958.364-1.109 0-2.16-.131-2.963-.364-.905-.266-1.364-.63-1.364-1.075v-2.241c.302.221.714.414 1.21.563.843.255 1.955.39 3.123.39z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCloudLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.669 15.165l-.375.008v-3.798c0-.72-.56-1.258-1.673-1.591-1.52-.454-4.073-.454-5.585 0-.927.274-1.47.694-1.63 1.249-.034.106-.05.224-.05.339v3.857c-.018 0-.034-.008-.043-.008h-.919c-1.03 0-3.403-.322-3.403-3.342 0-1.698.742-2.765 2.207-3.18a.408.408 0 00.303-.394l-.009-.11c0-4.84 4.264-5.212 5.575-5.212.736 0 4.473.165 5.358 3.45.053.177.21.3.392.306 1.26.033 4.188.512 4.188 4.204.003 3.925-3.317 4.222-4.336 4.222zM8.243 11.2c.118-.24.468-.454 1.028-.619.686-.207 1.588-.314 2.56-.314.961 0 1.863.107 2.55.314.417.123.901.322 1.036.63-.11.233-.47.454-1.037.62-1.361.405-3.736.405-5.1 0-.57-.177-.928-.398-1.037-.63zm7.216 2.938c-.118.2-.451.471-1.07.653-1.37.406-3.745.406-5.107 0-.644-.19-.977-.456-1.087-.644v-1.894c.27.157.555.283.855.373.753.224 1.748.347 2.784.347 1.045 0 2.04-.123 2.793-.347.291-.09.571-.21.835-.364-.003-.003-.003 1.876-.003 1.876zm0 2.978c-.118.199-.451.47-1.07.653-1.37.406-3.745.406-5.101 0-.661-.19-.986-.448-1.095-.645v-1.902c.243.14.518.264.854.365.754.224 1.748.347 2.793.347 1.036 0 2.03-.123 2.784-.347.294-.087.574-.213.835-.373v1.902zm0 2.79c0 .39-.586.644-1.079.793-1.372.406-3.728.406-5.109 0-.493-.149-1.078-.406-1.078-.793V18.2c.243.14.518.266.854.364.754.224 1.748.348 2.793.348 1.036 0 2.03-.126 2.784-.348.294-.084.577-.21.835-.372v1.714zm1.694-13.978c-1.179-3.59-5.266-3.773-6.086-3.773-1.062 0-6.295.28-6.404 5.849-1.053.384-2.507 1.367-2.507 3.874 0 3.078 2.19 4.17 4.238 4.17h.92c.016 0 .024-.008.041-.008v3.863c0 .72.56 1.258 1.68 1.588.76.224 1.749.348 2.794.348 1.036 0 2.03-.124 2.792-.348 1.112-.33 1.673-.868 1.673-1.588V16l.375-.008c.868 0 5.174-.24 5.174-5.048 0-4.201-3.278-4.907-4.69-5.014z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataCloudRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.28 14.748V11.23c0-.56-.302-1.314-1.784-1.751-1.521-.454-4.06-.454-5.591 0-.967.291-1.555.745-1.729 1.361a1.192 1.192 0 00-.058.39v3.565H6.38c-.941 0-3.126-.3-3.126-3.072 0-1.558.68-2.538 2.014-2.92a.6.6 0 00.442-.582l-.008-.106c0-4.555 4.02-4.902 5.255-4.902.695 0 4.224.154 5.05 3.227a.62.62 0 00.583.454c1.17.033 3.896.479 3.896 3.915 0 3.648-3.092 3.93-4.042 3.93l-.165.009zm-7.017-4.101c.647-.193 1.516-.3 2.44-.3.916 0 1.784.107 2.44.292.409.131.697.277.835.431-.124.12-.376.277-.835.415-1.294.389-3.577.389-4.871 0-.468-.138-.729-.3-.843-.42.123-.135.378-.286.834-.418zm5.787 3.227c-.098.137-.37.356-.91.513-1.294.389-3.577.389-4.871 0-.574-.171-.826-.373-.927-.496v-1.46c.17.082.361.154.566.219.759.218 1.75.347 2.792.347 1.04 0 2.028-.12 2.79-.347.213-.065.395-.137.558-.21v1.434h.002zm0 2.916c-.098.137-.37.356-.91.51-1.294.389-3.577.389-4.871 0-.574-.171-.835-.373-.927-.493v-1.468c.17.073.361.146.574.21.753.227 1.742.347 2.793.347 1.03 0 2.028-.12 2.792-.347.196-.056.376-.129.55-.21v1.45zm0 2.798c0 .193-.344.415-.91.583-1.308.39-3.577.39-4.88 0-.563-.171-.915-.39-.915-.583V18.26c.17.073.36.146.574.21.753.227 1.742.348 2.792.348 1.031 0 2.028-.12 2.793-.347.196-.057.375-.132.55-.21v1.327h-.004zM10.958 2c-1.064 0-6.277.283-6.476 5.795-1.073.42-2.457 1.451-2.457 3.93 0 3.16 2.252 4.289 4.356 4.289h.737v3.574c0 .552.31 1.305 1.792 1.75.76.228 1.751.348 2.793.348 1.03 0 2.022-.12 2.79-.347 1.482-.446 1.784-1.199 1.784-1.75v-3.623l.163-.008c2.431 0 5.271-1.345 5.271-5.146 0-3.46-2.325-4.888-4.65-5.106C15.813 2.179 11.78 2 10.959 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataDataSereyeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.269 20.485c.767 0 1.162-.353 1.17-1.054l-.002-.14c-.009-.473-.213-1.036-1.12-1.053-.015 0-.029.008-.043.008-.014 0-.025-.008-.039-.008-.907.02-1.117.583-1.129 1.062v.143c.009.691.4 1.042 1.163 1.042zM5.577 19.29c-.011-.482-.218-1.056-1.16-1.056-.944 0-1.157.58-1.168 1.065l-.003.14v.003c.006.689.398 1.036 1.16 1.036.765 0 1.16-.356 1.171-1.053v-.135zm16.106-.022l.003.176c-.014 1.034-.658 2.238-2.417 2.238-1.76 0-2.395-1.198-2.406-2.226v-.191c.022-.894.515-1.922 1.79-2.176v-1.253H5.025l.006 1.253c1.28.249 1.773 1.28 1.79 2.179l.003.18c-.02 1.033-.662 2.237-2.418 2.237-1.759 0-2.395-1.199-2.406-2.227 0-.061 0-.131.003-.19.022-.894.515-1.919 1.784-2.174l-.008-1.857a.576.576 0 01.182-.426.627.627 0 01.442-.176h6.79c-.003-.025-.014-.048-.014-.073v-1.275c-.767-.039-1.482-.145-2.053-.308-.832-.243-1.255-.571-1.255-.974v-2.03c.277.201.658.375 1.11.51.778.226 1.798.35 2.87.35 1.079 0 2.099-.124 2.872-.35a3.344 3.344 0 001.095-.516v2.034c0 .403-.423.73-1.255.975-.591.17-1.336.277-2.137.313v1.27c0 .024-.011.047-.017.072h6.868c.345 0 .622.269.622.602v1.857c1.28.25 1.77 1.278 1.784 2.177zM9.134 3.922c-.694-.202-1.114-.474-1.226-.788 0-.005 0-.005-.003-.008.112-.316.532-.594 1.221-.793.731-.213 1.697-.33 2.723-.33 1.025 0 1.991.117 2.717.33.725.21 1.134.49 1.227.818 0 0-.006.006-.006.011-.123.303-.538.566-1.216.762-.73.213-1.691.33-2.714.33-1.03-.002-1.991-.12-2.723-.332zm0 3.028c-.65-.19-1.12-.48-1.263-.768V3.9c.266.207.636.384 1.11.516.778.226 1.798.35 2.87.35 1.073 0 2.09-.124 2.872-.35.462-.135.826-.3 1.095-.505v2.266c-.135.244-.53.563-1.25.774-.725.212-1.691.324-2.714.324-1.028 0-1.988-.112-2.72-.324zm0 3.039c-.65-.19-1.12-.474-1.263-.768V6.933c.283.201.658.375 1.11.504.778.227 1.798.35 2.87.35 1.076 0 2.099-.123 2.872-.35.437-.123.81-.3 1.095-.51v2.289c-.135.24-.53.56-1.25.773-.725.213-1.691.33-2.714.33-1.028 0-1.988-.117-2.72-.33z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataDataSereyeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.585 21c-1.205 0-1.392-.815-1.398-1.3v-.003l.003-.157c.011-.49.21-1.302 1.364-1.322.011 0 .025.009.04.009.013 0 .024-.006.041-.009 1.157.02 1.348.83 1.359 1.314v.151c-.009.49-.202 1.317-1.41 1.317zM5.812 19.532v.151C5.803 20.176 5.61 21 4.402 21c-1.204 0-1.391-.813-1.394-1.297l.003-.16c.01-.496.212-1.328 1.406-1.328 1.19-.002 1.384.824 1.395 1.317zm2.938-7.91V10.17c.207.112.434.212.7.294.684.204 1.577.32 2.519.32.94 0 1.834-.113 2.518-.32a3.42 3.42 0 00.686-.294v1.45c0 .342-.588.57-.936.673-1.22.361-3.324.364-4.549 0-.35-.104-.938-.33-.938-.672zm.938-8.353c.608-.182 1.418-.28 2.275-.28.86 0 1.667.098 2.274.28.295.09.757.263.894.523-.07.127-.272.328-.888.513-1.216.361-3.333.361-4.546 0-.474-.143-.787-.33-.888-.52.106-.191.412-.373.88-.516zm-.938 4.22c.207.11.431.211.703.292.684.205 1.577.317 2.516.317.938 0 1.832-.112 2.518-.317.238-.073.47-.17.686-.294v1.61c-.115.18-.429.41-.933.561-1.213.361-3.333.361-4.546 0-.566-.168-.851-.392-.947-.549v-1.62h.003zm.703-2.377c.684.204 1.577.316 2.516.316.938 0 1.834-.112 2.518-.316.271-.079.49-.18.689-.286v1.586c-.115.179-.426.408-.93.563-1.219.36-3.333.36-4.546 0-.563-.169-.85-.387-.947-.55V4.82c.199.107.423.208.7.292zm12.39 14.403c-.017-.896-.519-1.919-1.824-2.106v-2.684a.42.42 0 00-.423-.42H12.38v-.9c.782-.027 1.519-.13 2.104-.304 1.272-.381 1.54-1.017 1.54-1.482V3.94c0-.675-.518-1.174-1.543-1.48-1.364-.405-3.664-.408-5.036 0-.843.253-1.348.642-1.496 1.16-.03.104-.045.213-.045.32v7.68c0 .466.27 1.099 1.544 1.482.58.171 1.313.275 2.086.303v.9H4.397a.423.423 0 00-.423.422l.011 2.68c-1.3.191-1.804 1.216-1.826 2.116l-.003.179v.003c.009.983.602 2.137 2.244 2.137 1.641 0 2.244-1.157 2.258-2.146v-.18c-.02-.895-.524-1.92-1.83-2.105L4.82 15.15h14.347v2.26c-1.3.188-1.806 1.213-1.826 2.11-.003.059-.003.129-.003.19.012.983.603 2.135 2.244 2.135 1.641 0 2.24-1.157 2.258-2.146l.003-.185z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataDataSereyeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.297 20.448c-.762 0-1.151-.358-1.16-1.064v-.154c.011-.493.221-1.073 1.126-1.093.014 0 .025.009.04.009.013 0 .027-.009.041-.009.908.017 1.113.594 1.12 1.093v.134c-.007.72-.4 1.084-1.167 1.084zM5.605 19.221v.146c-.011.72-.403 1.084-1.17 1.084-.766 0-1.155-.359-1.16-1.067v-.003l.002-.146c.012-.501.224-1.098 1.168-1.098.942-.003 1.149.588 1.16 1.084zm3.294-7.748v-1.092c.135.053.266.11.417.157.69.207 1.586.32 2.527.32.941 0 1.838-.116 2.524-.32.146-.042.274-.098.406-.154v1.087c0 .112-.24.302-.767.459-1.157.344-3.18.344-4.334 0-.532-.151-.773-.345-.773-.457zm.77-7.977c.577-.174 1.345-.266 2.166-.266.82 0 1.594.095 2.168.266.339.1.546.215.664.314-.098.08-.289.193-.659.302-1.148.345-3.182.345-4.33 0-.362-.106-.558-.221-.664-.31.106-.088.3-.2.655-.306zm-.77 4.26c.135.053.266.11.417.154.69.208 1.586.32 2.527.32.941 0 1.838-.115 2.524-.32.146-.042.274-.098.406-.154v1.18c-.104.117-.344.29-.765.417-1.148.344-3.182.344-4.33 0-.474-.143-.692-.308-.779-.403V7.756zm.417-2.46c.69.208 1.586.32 2.527.32.941 0 1.838-.115 2.524-.32.151-.044.277-.097.406-.15v1.162c-.1.118-.347.291-.765.417-1.148.345-3.179.345-4.33 0-.476-.14-.692-.308-.776-.4V5.14c.132.056.26.112.414.157zM21.711 19.2c-.014-.925-.504-1.983-1.784-2.241v-1.91a.622.622 0 00-.622-.62h-6.868c.003-.025.017-.047.017-.075v-.93c.708-.04 1.372-.14 1.91-.3 1.367-.409 1.656-1.123 1.656-1.647V3.958c0-.524-.289-1.238-1.656-1.647-1.38-.412-3.672-.412-5.053 0-.9.269-1.437.697-1.605 1.274a1.36 1.36 0 00-.053.373v7.518c0 .524.288 1.238 1.658 1.647.532.16 1.19.26 1.893.3v.93c0 .025.012.048.014.076H4.426a.625.625 0 00-.625.621l.009 1.91c-1.27.264-1.762 1.32-1.785 2.239-.003.061-.003.131-.003.196.012 1.059.647 2.294 2.407 2.294 1.761 0 2.403-1.24 2.417-2.305v-.185c-.02-.925-.51-1.986-1.79-2.241l-.006-1.291h13.628v1.294c-1.272.263-1.768 1.322-1.79 2.249v.185c.008 1.059.644 2.294 2.406 2.294 1.76 0 2.403-1.24 2.417-2.305a2.022 2.022 0 000-.185z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.58 5.373C6.364 5.023 5.622 4.549 5.426 4c0-.008 0-.008-.009-.02.196-.546.936-1.03 2.143-1.38 1.283-.368 2.978-.575 4.776-.575 1.798 0 3.493.207 4.768.574 1.274.367 1.994.852 2.154 1.426 0 0-.012.009-.012.017-.215.53-.944.986-2.134 1.328-1.283.367-2.97.574-4.768.574-1.795.003-3.481-.205-4.764-.571zm9.806.862c.816-.232 1.451-.52 1.92-.88v3.947c-.236.423-.928.978-2.191 1.348-1.275.367-2.97.566-4.768.566-1.798 0-3.481-.196-4.767-.566-1.143-.334-1.967-.835-2.219-1.336V5.339c.468.358 1.115.664 1.95.896 1.367.395 3.157.61 5.036.61 1.883-.002 3.673-.218 5.04-.61zm-5.039 5.874c1.891 0 3.681-.215 5.04-.61.767-.216 1.422-.521 1.918-.888v3.983c-.235.423-.927.977-2.19 1.344-1.275.367-2.97.575-4.768.575-1.798 0-3.484-.208-4.767-.575-1.143-.33-1.967-.826-2.219-1.336v-3.98c.499.35 1.152.655 1.95.88 1.367.392 3.154.607 5.036.607zm0 5.3c1.891 0 3.681-.216 5.04-.61.767-.216 1.422-.53 1.918-.897v3.54c0 .7-.74 1.275-2.201 1.695-1.283.37-2.978.574-4.768.574-1.787 0-3.482-.207-4.776-.574-1.46-.423-2.201-.994-2.201-1.694V15.91c.487.35 1.15.653 1.95.888 1.369.395 3.156.61 5.038.61z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.006 2c1.665 0 3.248.21 4.457.566C18.148 3.087 19 3.88 19 4.95v14.105c0 1.067-.852 1.861-2.537 2.38-1.215.367-2.8.566-4.457.566-1.668 0-3.251-.2-4.46-.566C5.854 20.924 5 20.12 5 19.054V4.946c0-.168.025-.333.067-.492.24-.826 1.07-1.46 2.478-1.888C8.746 2.208 10.33 2 12.005 2zm6.164 13.757c-.438.342-1.018.635-1.698.835-1.204.37-2.785.569-4.46.569-1.666 0-3.252-.202-4.461-.57-.703-.216-1.294-.5-1.724-.825v3.29c0 .653.655 1.188 1.949 1.58 1.144.342 2.643.533 4.227.533 1.583 0 3.082-.19 4.218-.533 1.294-.395 1.95-.927 1.95-1.58zm.003-4.924c-.439.341-1.018.626-1.699.825-1.203.368-2.784.57-4.46.57-1.665 0-3.251-.202-4.46-.57-.703-.21-1.286-.495-1.724-.82v3.71c.222.475.953.936 1.963 1.244 1.136.344 2.626.535 4.218.535s3.091-.194 4.219-.535c1.122-.342 1.732-.86 1.94-1.253h.003zM5.83 5.92v3.7c.222.467.953.934 1.963 1.244 1.136.342 2.626.524 4.218.524s3.091-.185 4.219-.527c1.122-.341 1.732-.86 1.94-1.252h.003V5.937c-.413.336-.976.603-1.699.82-1.209.367-2.795.566-4.46.566s-3.251-.2-4.46-.566c-.737-.22-1.31-.504-1.724-.837zm6.173-3.083c-1.59 0-3.091.19-4.227.532-1.069.328-1.724.777-1.899 1.287.009.008.009.008.009.017.174.51.83.95 1.907 1.278 1.136.344 2.626.535 4.218.535s3.083-.193 4.219-.535c1.054-.316 1.698-.743 1.89-1.235 0-.009.008-.017.008-.017-.14-.538-.779-.988-1.907-1.33-1.127-.341-2.63-.532-4.218-.532z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataNetworkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.403 14.297c.289-.953.434-2.04.434-3.272 0-1.011-.092-1.93-.288-2.759h-3.154c.154.863.238 1.782.238 2.742a15.71 15.71 0 01-.347 3.292h3.117v-.003zm-5.51 4.697c2.558-.481 4.303-1.773 5.205-3.868H17.07c-.476 1.655-1.235 3.006-2.176 3.868zm-2.033.182c1.42-.266 2.636-1.832 3.325-4.05H12.86v4.05zm3.468-11.739c-.647-2.496-1.939-4.283-3.48-4.566l.01 4.566h3.47zm.45 3.569c0-.961-.092-1.888-.263-2.743h-3.658v6.034h3.555c.232-1.014.367-2.123.367-3.291zM20.3 7.437c-.835-2.403-2.645-3.86-5.4-4.384 1.036.953 1.853 2.493 2.313 4.384H20.3zm-12.006 0h3.717l-.008-4.566c-1.583.28-2.995 2.104-3.709 4.566zm-.902 0c.493-1.863 1.353-3.398 2.44-4.359-2.686.538-4.448 1.998-5.272 4.359h2.832zm-.45 3.297c.016-.863.1-1.69.254-2.468H4.322c-.188.77-.28 1.63-.288 2.577a11.2 11.2 0 011.904-.157c.348-.003.678.014 1.003.048zm14.335-3c.264.977.41 2.07.41 3.288 0 5.9-3.197 9.023-9.261 9.023-.894 0-1.734-.073-2.51-.208-.017-.008-.025-.016-.042-.016v.596c0 .39-.417.712-1.241.944-.723.208-1.683.325-2.695.325-1.002 0-1.963-.117-2.694-.325-.824-.232-1.241-.554-1.241-.944v-1.972c.28.19.655.364 1.106.49.765.225 1.776.34 2.84.34 1.07 0 2.076-.118 2.85-.34a3.291 3.291 0 001.078-.495v.596a.504.504 0 01.196-.016c.594.109 1.25.16 1.938.182v-4.076H9.885a.421.421 0 01-.263-.098c-.213.174-.527.347-.978.479-.722.199-1.683.316-2.694.316-1.012 0-1.964-.117-2.687-.316-.647-.19-1.115-.47-1.257-.754v-2.22c.263.206.63.372 1.106.503.765.224 1.776.342 2.84.342 1.062 0 2.076-.115 2.85-.342.458-.131.814-.288 1.078-.487v1.748h2.134v-6.03h-3.93c-.18.811-.28 1.671-.289 2.568.3.05.586.098.844.173.714.208 1.123.474 1.215.796l-.008.008c-.12.297-.527.555-1.199.745-.731.208-1.683.323-2.695.323-1.01 0-1.963-.115-2.686-.323-.689-.199-1.106-.462-1.216-.77l-.008-.008c.11-.292.501-.555 1.14-.745v-.009c0-1.218.146-2.31.417-3.288.009-.017.009-.042.017-.06 1.053-3.719 4.048-5.674 8.818-5.674 4.787 0 7.782 1.955 8.835 5.675.003.014.003.04.008.056zM3.255 18.457c-.644-.188-1.11-.463-1.252-.748v-2.224c.28.196.65.364 1.1.49.774.218 1.782.341 2.847.341 1.067 0 2.078-.12 2.845-.341a3.39 3.39 0 001.085-.496v2.224c-.132.235-.524.546-1.236.754-.72.204-1.678.319-2.692.319-1.022.003-1.972-.112-2.697-.32z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataNetworkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.574 14.341h-3.06a15.39 15.39 0 00.343-3.263c0-.953-.082-1.866-.233-2.72h3.09c.193.82.294 1.734.294 2.745 0 1.216-.149 2.294-.434 3.238zM15.18 19c.916-.854 1.659-2.193 2.135-3.837h2.966c-.89 2.078-2.59 3.361-5.1 3.837zm-2 .182v-4.02h3.261c-.67 2.205-1.868 3.757-3.26 4.02zm0-10.82h3.591c.16.854.25 1.764.25 2.72a14.31 14.31 0 01-.359 3.263H13.18V8.36zm0-5.342c1.502.28 2.776 2.045 3.41 4.518h-3.41V3.02zm7.303 4.518h-3.025c-.451-1.874-1.26-3.4-2.266-4.339 2.697.513 4.473 1.967 5.291 4.34zm-8.134 0H8.708c.709-2.431 2.093-4.238 3.642-4.52v4.52zm0 6.804H10.3v-1.938c0-.675-.516-1.168-1.544-1.47a5.045 5.045 0 00-.533-.124c.014-.824.11-1.644.283-2.448h3.844v5.98zm0 4.866a13.666 13.666 0 01-1.894-.171.509.509 0 00-.16 0v-3.874h2.05c.004 0 .004 4.045.004 4.045zm-2.886-4.34c-.117.18-.434.41-.94.567-1.225.364-3.36.364-4.575 0-.577-.171-.86-.387-.96-.55V13.26c.2.115.433.213.716.294.684.204 1.583.32 2.524.32.941 0 1.84-.116 2.524-.32a3.68 3.68 0 00.709-.289c.002 0 .002 1.603.002 1.603zm0 2.679c-.106.17-.4.403-.94.568-1.228.362-3.36.362-4.575 0-.577-.17-.868-.395-.96-.56v-1.636c.206.115.442.221.716.303.684.199 1.583.313 2.524.313.941 0 1.84-.114 2.532-.31.26-.082.493-.188.7-.306.003 0 .003 1.628.003 1.628zm0 2.512c0 .345-.59.577-.95.684-1.223.361-3.35.361-4.573 0-.359-.107-.95-.336-.95-.684v-1.46c.207.116.443.214.717.295.684.204 1.583.322 2.524.322.941 0 1.84-.118 2.532-.322.26-.073.493-.18.7-.294v1.46zM3.941 11.72c1.224-.361 3.35-.361 4.574 0 .3.09.776.272.907.532-.075.132-.283.328-.907.519-1.216.361-3.35.361-4.566 0-.493-.149-.801-.336-.908-.535.107-.185.415-.376.9-.516zm.874-3.358H7.64a15.053 15.053 0 00-.25 2.325 11.568 11.568 0 00-2.851.075c.008-.81.1-1.613.275-2.4zm5.4-5.143c-1.059.952-1.907 2.47-2.392 4.32H5.055c.802-2.343 2.535-3.78 5.16-4.32zm11.219 4.616c-.009-.017-.009-.033-.017-.056-1.034-3.689-3.967-5.622-8.65-5.622-4.684 0-7.62 1.933-8.642 5.62-.016.025-.016.05-.025.064-.25.927-.38 1.955-.4 3.09-.843.254-1.35.638-1.502 1.148a1.47 1.47 0 00-.042.325v7.655c0 .667.518 1.16 1.544 1.462.692.205 1.582.32 2.523.32.942 0 1.844-.115 2.535-.32 1.026-.305 1.541-.795 1.541-1.462v-.221h.009c.75.14 1.582.204 2.459.204 5.933 0 9.076-3.09 9.076-8.938 0-1.213-.143-2.297-.41-3.269z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataNetworkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.095 13.89h-2.571c.18-.93.283-1.924.283-2.974 0-.866-.065-1.684-.188-2.462h2.597c.162.753.252 1.571.252 2.479.003 1.106-.13 2.092-.373 2.958zm-4.501 4.413c.689-.818 1.25-1.908 1.63-3.208h2.426c-.787 1.628-2.14 2.692-4.056 3.208zm-2.336.254v-3.456h2.7c-.591 1.815-1.563 3.106-2.7 3.456zm0-10.103h3.123c.137.776.21 1.605.21 2.462 0 1.05-.106 2.059-.3 2.975l-3.033.008V8.454zm0-5.146c1.24.378 2.288 1.868 2.862 3.944h-2.862V3.308zm6.596 3.944H17.39c-.372-1.498-.972-2.767-1.736-3.68 2.058.568 3.47 1.803 4.201 3.68zm-7.812 0H8.966C9.608 5.2 10.751 3.675 12.042 3.3v3.952zm0 6.647h-1.711v-1.627c0-.521-.283-1.219-1.648-1.628a2.034 2.034 0 00-.252-.056c.017-.736.098-1.45.236-2.134h3.375v5.445zm0 4.731a11.085 11.085 0 01-1.605-.16c-.034 0-.073.009-.106.009v-3.375h1.711v3.526zm-2.927-4.017c-.107.12-.35.297-.77.426-1.16.336-3.188.336-4.34 0-.453-.137-.697-.305-.787-.409v-1.2c.138.056.275.112.437.16.681.207 1.583.321 2.516.321.941 0 1.832-.112 2.524-.322.154-.042.283-.095.423-.151v1.176h-.003zm0 2.614c-.107.12-.35.297-.77.426-1.16.336-3.188.336-4.34 0-.484-.143-.705-.311-.787-.41v-1.218c.138.056.275.12.437.16.681.21 1.583.322 2.516.322.941 0 1.832-.112 2.524-.322a2.67 2.67 0 00.423-.16v1.202h-.003zm0 2.518c0 .12-.244.311-.779.473-1.168.337-3.18.337-4.339 0-.535-.162-.779-.352-.779-.473V18.64c.138.056.275.112.437.16.681.207 1.583.321 2.516.321.941 0 1.832-.112 2.524-.322.145-.042.283-.103.423-.16v1.107h-.003zm-5.12-7.947c1.15-.344 3.187-.344 4.338 0 .35.104.569.224.681.32-.098.086-.291.201-.68.319-1.152.336-3.18.336-4.331 0-.373-.112-.577-.233-.68-.328.106-.087.307-.199.671-.31zM5.09 8.454h2.327c-.106.624-.17 1.266-.193 1.933a12.388 12.388 0 00-2.37.022c.026-.695.098-1.353.236-1.955zm4.453-4.849c-.804.922-1.442 2.182-1.848 3.65H5.448c.72-1.846 2.093-3.067 4.095-3.65zm11.762 4.199a.556.556 0 00-.073-.224C20.171 3.955 17.218 2 12.65 2c-5.807 0-8.922 2.992-9.02 8.653-.885.263-1.42.689-1.582 1.252v.008a1.252 1.252 0 00-.048.362v7.473c0 .513.283 1.218 1.647 1.619.69.21 1.583.322 2.515.322.933 0 1.832-.112 2.524-.322 1.364-.4 1.647-1.106 1.647-1.62v-.072c.723.12 1.493.185 2.32.185 5.913 0 9.036-3.087 9.036-8.924-.003-1.149-.132-2.19-.384-3.132z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.056 9.476c-.196.32-.737.756-1.709 1.053-1.07.325-2.493.502-4.003.502-1.51 0-2.932-.177-4.002-.502-1.02-.31-1.552-.725-1.731-1.033v-3.07c.375.23.829.426 1.372.588 1.182.359 2.731.555 4.361.555s3.18-.2 4.362-.555a6.061 6.061 0 001.353-.574v3.036h-.003zm0 4.728c-.188.32-.723.765-1.709 1.065-1.07.325-2.493.501-4.003.501-1.51 0-2.932-.179-4.002-.504-1.023-.308-1.555-.723-1.731-1.034v-3.095c.386.23.846.432 1.372.591 1.185.359 2.734.555 4.364.555s3.18-.196 4.362-.555a5.81 5.81 0 001.35-.594v3.07h-.003zm0 4.423c0 .645-.936 1.062-1.717 1.3-1.079.325-2.502.504-4.009.504-1.504 0-2.927-.179-4.002-.501-.785-.238-1.72-.656-1.72-1.3v-2.748c.386.23.846.432 1.372.589 1.185.358 2.734.557 4.364.557s3.18-.196 4.362-.555c.51-.154.963-.358 1.35-.594v2.748zM8.328 3.76c1.073-.325 2.493-.504 4.002-.504 1.513 0 2.933.18 4.006.501.67.202 1.443.538 1.658 1.034-.173.386-.75.748-1.65 1.02-1.07.322-2.49.5-4.002.5-1.513 0-2.933-.178-4.003-.5-.908-.275-1.485-.642-1.653-1.031.18-.387.743-.748 1.642-1.02zm8.37-1.204C15.512 2.196 13.96 2 12.33 2c-1.627 0-3.179.199-4.364.555-1.431.434-2.283 1.095-2.532 1.966a1.92 1.92 0 00-.075.538v13.568c0 1.138.876 1.978 2.607 2.505 1.19.358 2.74.554 4.362.554 1.624 0 3.173-.196 4.367-.554 1.728-.524 2.607-1.367 2.607-2.502V5.062c.003-1.14-.873-1.984-2.605-2.507z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataSettingsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.854 5.345c-1.227-.35-1.972-.824-2.173-1.37 0-.009 0-.009-.009-.02.2-.546.944-1.03 2.163-1.38C11.129 2.206 12.837 2 14.65 2c1.812 0 3.524.204 4.807.574 1.282.37 2.01.852 2.17 1.426 0 0-.01.008-.01.017-.217.53-.953.986-2.152 1.328-1.294.366-2.992.574-4.807.574-1.815 0-3.51-.208-4.804-.574zM7.44 14.58c0 1.305.67 1.94 2.045 1.94s2.047-.632 2.047-1.94c0-1.306-.67-1.941-2.047-1.941-1.376 0-2.045.635-2.045 1.94zm5.364 0c0 1.972-1.241 3.151-3.32 3.151-2.078 0-3.319-1.176-3.319-3.151 0-1.975 1.241-3.151 3.32-3.151 2.08 0 3.319 1.176 3.319 3.15zm-5.712 3.655a4.73 4.73 0 001.289.376c.308.047.532.3.532.596v1.224l1.095.045c.026 0 .045-.02.045-.045v-1.224c0-.297.227-.549.535-.596.219-.034.42-.082.616-.135.236-.064.46-.143.678-.244a.657.657 0 01.729.115l.697.664.193.182.065.062.843-.728-.952-.98a.6.6 0 01-.143-.225.576.576 0 01.022-.47c.07-.132.123-.278.177-.423.092-.25.17-.513.218-.799a.63.63 0 01.63-.51h1.292l.047-1.036-1.336-.045a.63.63 0 01-.63-.51 4.189 4.189 0 00-.395-1.224.484.484 0 01-.048-.148c-.01-.048-.01-.093-.01-.137a.59.59 0 01.178-.412l.477-.451.479-.454-.765-.801-1.034.905a.664.664 0 01-.728.117 4.602 4.602 0 00-1.258-.37l-.033-.008a.615.615 0 01-.535-.596V8.723L8.966 8.68v.022l-.047 1.25a.612.612 0 01-.532.596 4.632 4.632 0 00-1.289.375.662.662 0 01-.734-.115l-.955-.904-.843.725.952.98a.58.58 0 01.104.726c-.168.28-.311.804-.378 1.199a.629.629 0 01-.628.507H3.328l-.048 1.04 1.336.041c.311 0 .58.216.628.507.067.395.21.916.378 1.2a.58.58 0 01-.104.722l-.952.905.765.8 1.033-.907a.655.655 0 01.728-.115zm7.681-6.162c1.866-.009 3.627-.222 4.97-.608.772-.216 1.433-.521 1.935-.888v3.98c-.238.42-.936.975-2.21 1.345-1.241.356-2.885.557-4.633.569-.05.173-.104.35-.171.512l.398.375c1.756-.028 3.406-.232 4.68-.596.773-.216 1.434-.53 1.936-.897v3.541c0 .698-.745 1.272-2.219 1.695-1.294.37-3.002.574-4.806.574-1.345 0-2.636-.115-3.748-.328a1.35 1.35 0 01-.894.336H8.964c-.729 0-1.32-.563-1.32-1.252v-.734a5.794 5.794 0 01-.689-.204l-.647.613c-.501.477-1.375.48-1.88 0l-.764-.728a1.233 1.233 0 01-.39-.893c0-.34.14-.656.393-.894l.641-.608a4.704 4.704 0 01-.21-.66h-.77c-.729 0-1.32-.564-1.32-1.253v-.994c0-.692.591-1.253 1.32-1.253h.77c.05-.201.12-.434.21-.66l-.641-.608a1.233 1.233 0 01-.39-.894c0-.339.14-.655.392-.894l.765-.722c.504-.476 1.378-.476 1.88 0l.647.613a7.07 7.07 0 01.689-.207v-.703l-.02-.003-.033-3.384c.476.356 1.128.656 1.972.88 1.38.38 3.187.583 5.084.566 1.899-.017 3.7-.25 5.072-.656.821-.24 1.46-.532 1.928-.896l.039 3.944c-.233.423-.925.986-2.196 1.364-1.062.314-2.423.507-3.888.574a1.24 1.24 0 01-.292.415l-.543.52z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataSettingsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.829 2c1.71 0 3.335.2 4.57.566C21.124 3.073 22 3.866 22 4.928V18.97c0 1.058-.874 1.852-2.598 2.361-1.244.365-2.866.567-4.57.567l-.24-.001c-.76-.005-1.881-.05-3.782-.48a1.103 1.103 0 01-.964.583H8.787a1.098 1.098 0 01-1.107-1.084v-.933a5.504 5.504 0 01-.967-.296l-.757.74a1.134 1.134 0 01-1.58 0l-.771-.757a1.069 1.069 0 01-.327-.774c0-.293.116-.567.327-.771l.748-.732a5.899 5.899 0 01-.296-.956h-.95A1.098 1.098 0 012 15.353V14.32c0-.597.498-1.084 1.107-1.084h.95c.06-.267.157-.629.296-.953l-.748-.731a1.072 1.072 0 010-1.545l.768-.754a1.134 1.134 0 011.58 0l.757.74a5.48 5.48 0 01.967-.296V9.44c-.008-.032-.02-.063-.02-.097V4.928c0-.165.023-.33.069-.487v-.003c.242-.819 1.092-1.45 2.53-1.872C11.496 2.202 13.118 2 14.829 2zM9.843 8.499H8.787a.268.268 0 00-.267.262v1.271a.418.418 0 01-.353.407 4.82 4.82 0 00-1.36.41.424.424 0 01-.484-.077L5.36 9.83a.284.284 0 00-.393 0l-.771.754a.258.258 0 00-.08.191c0 .074.029.14.08.19l.959.94a.4.4 0 01.068.492c-.196.339-.341.919-.407 1.314a.416.416 0 01-.415.345H3.107a.268.268 0 00-.268.262v1.032c0 .143.12.262.268.262h1.3c.205 0 .382.148.416.347.065.396.21.976.407 1.315a.401.401 0 01-.068.492l-.96.94a.258.258 0 00-.08.19c0 .074.03.14.08.19l.772.757a.284.284 0 00.393 0l.961-.942a.424.424 0 01.484-.076c.396.19.851.33 1.36.41.203.03.35.201.353.403v1.272c0 .145.12.262.268.262h1.056a.264.264 0 00.267-.262l-.006-1.269c0-.202.151-.375.353-.407.473-.068.93-.207 1.36-.412a.43.43 0 01.484.08l.962.941a.284.284 0 00.393 0l.771-.757a.258.258 0 00.08-.19.264.264 0 00-.08-.19l-.965-.943a.403.403 0 01-.08-.472c.197-.387.34-.834.42-1.332a.419.419 0 01.415-.347h1.3a.264.264 0 00.268-.262v-1.03a.262.262 0 00-.265-.261h-1.3a.419.419 0 01-.416-.345 4.67 4.67 0 00-.418-1.334.403.403 0 01.08-.472l.961-.942a.258.258 0 00.08-.19.264.264 0 00-.08-.192l-.771-.754a.284.284 0 00-.393 0l-.962.942a.43.43 0 01-.483.08 4.734 4.734 0 00-1.36-.413.41.41 0 01-.354-.407V8.761a.268.268 0 00-.267-.262zm11.318 7.167c-.453.342-1.048.635-1.748.84-1.238.364-2.86.563-4.57.563l-.327-.003a.432.432 0 01-.134-.028c-.037.114-.066.236-.108.341l.754.74c.427.413.438 1.093.026 1.52l-.026.025-.771.754a1.134 1.134 0 01-1.58 0l-.754-.74a5.504 5.504 0 01-.967.296v.62c1.833.418 2.908.464 3.635.47h.243c1.62.008 3.156-.18 4.326-.524 1.326-.392 2-.922 2-1.573v-3.3zm.002-4.902c-.452.341-1.047.631-1.747.84-1.238.363-2.86.562-4.57.562l-.441-.002-.131.128c.125.293.225.611.301.947l.95-.003c.61 0 1.108.487 1.108 1.084v1.033c0 .353-.182.652-.45.851 1.119-.074 2.155-.236 2.988-.484 1.153-.338 1.779-.862 1.992-1.252v-3.704zm-12.66-4.88v1.852c.093-.025.185-.057.287-.057h1.056c.612 0 1.107.487 1.107 1.084v.93c.344.075.66.172.967.297l.757-.74a1.134 1.134 0 011.58 0l.056.056c.176.174.712.698.712.698.21.205.327.48.327.771 0 .202-.074.387-.176.555 1.48-.026 2.914-.2 3.992-.518 1.156-.339 1.776-.862 1.993-1.255V5.898c-.427.327-1.008.603-1.75.822-1.239.365-2.86.567-4.57.567-1.708 0-3.33-.2-4.568-.567-.755-.221-1.344-.503-1.77-.836zm6.326-3.062c-1.63 0-3.168.188-4.326.53-1.11.327-1.781.77-1.952 1.283.003.008.011.014.011.023.171.509.848.95 1.95 1.271 1.16.342 2.697.533 4.325.533 1.63 0 3.168-.188 4.326-.533 1.078-.315 1.747-.742 1.94-1.234.003-.009.012-.018.018-.026-.157-.538-.814-.979-1.964-1.317-1.161-.342-2.698-.53-4.328-.53z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataSettingsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.255 16.527c1.328 0 1.975-.636 1.975-1.942 0-1.305-.647-1.94-1.975-1.94s-1.975.635-1.975 1.94c0 1.308.647 1.942 1.975 1.942zm0-5.087c2.005 0 3.204 1.176 3.204 3.148 0 1.972-1.199 3.149-3.204 3.149-2.006 0-3.205-1.177-3.205-3.149s1.2-3.148 3.205-3.148zm11.23-1.967V6.375a6.15 6.15 0 01-1.42.597c-1.214.359-2.799.555-4.471.555-1.67 0-3.258-.196-4.468-.555a5.962 5.962 0 01-1.44-.613v1.134c.023-.003.042-.006.065-.006h1.01c.704 0 1.275.56 1.275 1.252v.732c.233.056.451.123.664.207l.625-.614a1.304 1.304 0 011.815 0l.74.729c.24.235.375.552.375.89 0 .124-.023.241-.056.356 1.314-.042 2.557-.204 3.515-.487 1.009-.306 1.569-.754 1.77-1.079zm0 4.754v-3.143c-.401.246-.877.46-1.418.619-1.216.359-2.804.555-4.47.555-.107 0-.213-.003-.32-.003.07.188.135.38.185.582h.745c.703 0 1.275.56 1.275 1.253v.994c0 .232-.07.448-.182.636.896-.081 1.728-.219 2.414-.423 1.009-.297 1.569-.745 1.77-1.07zm0 4.414v-2.804c-.404.247-.877.46-1.418.62-1.216.358-2.801.554-4.47.554-.11 0-.216-.005-.325-.005l.607.599a1.242 1.242 0 010 1.782l-.739.725c-.199.193-.46.288-.725.325.383.025.773.04 1.168.04 1.549 0 3.014-.18 4.12-.505.812-.244 1.782-.67 1.782-1.33zm-8.21-.288l.921.905.815-.726-.921-.98a.593.593 0 01-.118-.695c.18-.353.308-.765.384-1.221a.612.612 0 01.608-.507h1.246l.045-1.04-1.291-.044a.612.612 0 01-.608-.507 4.222 4.222 0 00-.384-1.222.593.593 0 01.118-.694l.921-.905-.74-.801-.997.905a.624.624 0 01-.703.115 4.47 4.47 0 00-1.246-.379.607.607 0 01-.518-.596V8.737L8.75 8.692l-.045 1.266a.607.607 0 01-.518.597c-.463.072-.88.198-1.244.375a.628.628 0 01-.709-.115l-.921-.905-.815.726.918.977c.196.19.236.488.101.723-.162.283-.3.804-.364 1.196a.614.614 0 01-.608.507H3.3l-.045 1.04 1.291.044c.3 0 .558.213.608.507.064.395.205.916.364 1.196a.595.595 0 01-.1.723l-.92.905.74.8.997-.904a.622.622 0 01.706-.115 4.36 4.36 0 001.244.376c.297.047.515.3.515.596v1.224l1.056.045c.023 0 .045-.02.045-.045v-1.224c0-.297.219-.549.518-.596a4.407 4.407 0 001.247-.379.637.637 0 01.708.12zm-1.239 1.753c.521.12 1.096.21 1.71.272a1.22 1.22 0 01-.418-.266l-.625-.613a5.221 5.221 0 01-.664.207v.4h-.003zm-.568-16.395c-.939.278-1.527.648-1.706 1.048.17.403.77.776 1.717 1.059 1.1.325 2.56.504 4.115.504 1.554 0 3.017-.18 4.115-.504.935-.277 1.535-.647 1.714-1.045-.219-.513-1.025-.854-1.723-1.062-1.1-.324-2.563-.504-4.117-.504-1.552 0-3.014.18-4.115.504zm8.588-1.156c1.762.52 2.658 1.358 2.658 2.484v13.602c0 1.126-.893 1.964-2.658 2.485-1.219.359-2.807.555-4.473.555-1.407 0-2.757-.149-3.883-.412a1.269 1.269 0 01-.94.417H8.75c-.702 0-1.274-.56-1.274-1.252v-.731a5.969 5.969 0 01-.666-.204l-.625.613c-.485.476-1.328.476-1.815 0l-.74-.726a1.246 1.246 0 01.003-1.784l.616-.608a5.799 5.799 0 01-.204-.658H3.3a1.266 1.266 0 01-1.275-1.252v-.994c0-.69.572-1.253 1.275-1.253h.745c.05-.201.117-.434.204-.66l-.619-.608a1.248 1.248 0 01.003-1.785l.737-.725a1.304 1.304 0 011.815 0l.625.616c.21-.081.434-.148.666-.204v-.617c-.005-.028-.017-.056-.017-.084V5.04c0-.183.026-.362.076-.53.252-.863 1.12-1.521 2.583-1.953 1.212-.358 2.8-.554 4.47-.554 1.667-.003 3.255.193 4.468.552z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataShieldFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.784 5.244c-1.131-.34-1.818-.801-2-1.33 0-.01 0-.01-.008-.018.182-.53.868-1 1.994-1.339C11.96 2.2 13.538 2 15.207 2c1.67 0 3.25.199 4.432.557 1.185.356 1.854.827 2.002 1.384 0 0-.008.009-.008.017-.202.513-.88.955-1.986 1.286-1.193.355-2.762.557-4.431.557-1.67-.003-3.238-.202-4.432-.557zm2.681 6.459c.006-.322.011-.622.014-.882l.003-.356c-1.185 0-1.933-.493-2.602-.938-.58-.384-1.138-.746-1.972-.86v5.072H13.4c.028-.677.05-1.355.064-2.036zm-.288 4.549c.016-.095.03-.213.044-.322.02-.14.037-.289.054-.445.016-.171.036-.348.05-.535H8.908v5.168c.495-.272.983-.563 1.456-.874l.053-.037a13.699 13.699 0 001.485-1.129l.067-.064a5.55 5.55 0 00.717-.768c.023-.028.04-.053.06-.08a2.94 2.94 0 00.243-.385 1.82 1.82 0 00.188-.529zm-5.48-2.51V8.681c-.787.128-1.322.476-1.879.846-.678.448-1.434.95-2.591.95h-.011c.005.75.025 2.033.084 3.265h4.398zm0 6.328v-5.12H3.37c.042.498.09.95.151 1.302.221 1.269 2.403 2.843 4.177 3.818zm7.522-9.168c-.183 0-.356-.008-.533-.014-.002.26-.005.552-.01.868.178.006.358.014.543.014 1.759 0 3.42-.21 4.683-.59.714-.21 1.325-.505 1.784-.86v3.86c-.215.408-.86.946-2.036 1.305-1.185.355-2.76.554-4.431.554-.267 0-.527-.011-.785-.022-.02.157-.042.308-.064.442-.025.143-.067.28-.115.42.316.017.639.029.966.029 1.76 0 3.42-.208 4.684-.592.714-.207 1.325-.512 1.784-.868v3.434c0 .681-.686 1.236-2.045 1.645-1.193.355-2.767.557-4.431.557-1.664 0-3.238-.199-4.44-.557l-.103-.034c-.664.417-1.353.798-2.062 1.137a.594.594 0 01-.516 0c-.546-.258-5.308-2.571-5.761-5.168C1.989 14.504 2 10.006 2 9.815a.604.604 0 01.748-.583c1.076.166 1.661-.22 2.4-.711.78-.515 1.664-1.1 3.197-1.1h.005c.132 0 .252.01.373.016v-2.23c.434.348 1.036.645 1.812.869 1.272.38 2.933.59 4.684.59 1.75 0 3.411-.21 4.683-.59.76-.227 1.35-.505 1.784-.855v3.824c-.215.409-.86.95-2.036 1.305-1.185.361-2.762.55-4.431.552z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataShieldLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.296 2c1.594 0 3.112.19 4.265.538C21.18 3.024 22 3.788 22 4.803v13.32c0 1.016-.82 1.779-2.44 2.266-1.16.347-2.678.537-4.266.537-1.515 0-2.955-.179-4.094-.495-1.315.888-2.553 1.477-2.658 1.528a.41.41 0 01-.356 0c-.222-.102-5.392-2.563-5.847-5.193-.131-.744-.212-1.851-.261-2.96l-.02-.51A93.533 93.533 0 012 10.389V9.93a.42.42 0 01.518-.404c1.212.19 1.844-.234 2.65-.766.782-.518 1.67-1.104 3.199-1.104.08 0 .15.009.225.012V4.8c0-.16.023-.316.065-.47.228-.785 1.028-1.388 2.374-1.792C12.188 2.19 13.702 2 15.296 2zm-1.548 13.033H8.735v5.896c1.625-.848 4.555-2.68 4.84-4.305.036-.205.065-.444.093-.703 0-.017-.006-.034-.006-.054.003-.023.015-.046.02-.071.026-.24.046-.495.066-.763zm-5.847 0H2.985c.031.532.091 1.064.174 1.59.279 1.597 3.097 3.39 4.742 4.26v-5.85zm13.265.011c-.421.314-.962.578-1.597.769-1.156.347-2.67.538-4.264.538-.288 0-.567-.015-.846-.026-.02.148-.04.296-.065.444-.19 1.09-1.193 2.148-2.314 3.022.948.196 2.055.302 3.214.302 1.511 0 2.94-.177 4.027-.501 1.224-.37 1.848-.862 1.845-1.471zm.003-4.652c-.421.31-.96.575-1.597.765-1.156.347-2.67.538-4.264.538-.2 0-.396-.011-.592-.017-.02 1.133-.066 2.61-.163 3.816.25.009.499.023.758.023 1.514 0 2.943-.177 4.022-.501 1.059-.319 1.637-.802 1.836-1.17zM7.9 8.517c-.993.1-1.617.509-2.274.941-.755.498-1.537 1-2.793.942a88.9 88.9 0 00.097 3.802H7.9zm.834-.006v5.691H13.8c.046-.95.074-1.9.085-2.854-.008-.037-.02-.074-.017-.114.003-.025.015-.051.02-.077.003-.298.006-.563.006-.762-1.272.07-2.047-.441-2.792-.934-.675-.446-1.321-.868-2.366-.95zm.692-2.746v2.003c.914.19 1.554.612 2.135.996.805.532 1.44.95 2.664.763.125-.02.25.014.347.09a.427.427 0 01.16.314v.385l-.003.531c.193.006.384.017.58.017 1.515 0 2.944-.18 4.023-.503 1.064-.316 1.637-.803 1.836-1.17v-3.41c-.393.297-.92.544-1.597.746-1.156.348-2.67.538-4.264.538-1.594 0-3.109-.19-4.264-.538-.68-.204-1.219-.458-1.617-.762zm5.867-2.931c-1.518 0-2.944.18-4.025.5-1.017.308-1.632.72-1.794 1.196.003.003.006.005.006.008.16.478.783.888 1.802 1.196 1.079.321 2.508.5 4.022.5 1.514 0 2.943-.179 4.022-.5.994-.3 1.611-.698 1.788-1.159l.011-.017c-.15-.498-.754-.908-1.807-1.223-1.08-.322-2.508-.501-4.025-.501z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataShieldRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.871 18.97c-1.028.304-2.386.475-3.823.475-.93 0-1.818-.078-2.617-.21.961-.812 1.773-1.762 1.947-2.759.014-.078.025-.165.04-.252.212.008.425.017.64.017 1.555 0 3.037-.188 4.169-.527a5.405 5.405 0 001.277-.557v2.59c.003.606-.888.998-1.633 1.222zM3.546 16.268a14.508 14.508 0 01-.151-1.3h4.322v5.104c-1.571-.866-3.93-2.434-4.17-3.804zm-.297-5.762c1.157 0 1.91-.499 2.589-.947.557-.367 1.095-.714 1.88-.843v5.048H3.321a85.867 85.867 0 01-.084-3.26h.011v.002zm6.342-4.3c.356.213.787.398 1.3.55 1.131.338 2.61.526 4.168.526 1.554 0 3.036-.188 4.168-.527.507-.151.933-.33 1.28-.535v2.846c-.18.303-.684.72-1.625 1.003-1.106.333-2.647.501-4.179.468.003-.39.003-.65.003-.692a.605.605 0 00-.224-.454.651.651 0 00-.496-.134c-1.098.17-1.684-.213-2.423-.703-.543-.359-1.14-.746-1.97-.95V6.207h-.002zm1.636-2.53c1.022-.304 2.38-.475 3.82-.475 1.443 0 2.802.168 3.824.476.636.19 1.37.507 1.577.972-.168.361-.717.7-1.569.958-1.022.305-2.378.473-3.82.473-1.443 0-2.799-.168-3.82-.476-.864-.258-1.41-.602-1.572-.97.17-.36.706-.7 1.56-.957zm3.46 8.065c.122.003.246.009.372.009 1.554 0 3.036-.188 4.168-.527a5.522 5.522 0 001.277-.557v2.89c-.18.3-.686.72-1.625 1.003-1.022.305-2.378.476-3.82.476-.174 0-.345-.008-.516-.014.084-1.056.124-2.283.143-3.28zM8.923 8.703c.835.115 1.39.476 1.97.857.669.443 1.417.936 2.596.936h.003a86.668 86.668 0 01-.084 3.269H8.922V8.703h.002zm0 11.42V14.97h4.415c-.04.499-.087.947-.149 1.3-.243 1.398-2.694 2.997-4.266 3.854zM19.218 2.527C18.087 2.187 16.605 2 15.048 2c-1.558 0-3.037.188-4.171.527-1.37.411-2.185 1.039-2.423 1.865a1.828 1.828 0 00-.073.513v2.554h-.02c-1.53 0-2.411.583-3.193 1.098-.74.49-1.316.883-2.392.712a.605.605 0 00-.75.583c0 .19-.015 4.677.33 6.627.454 2.588 5.21 4.896 5.75 5.151a.597.597 0 00.516.003 21.12 21.12 0 002.526-1.437c1.101.291 2.463.46 3.897.46 1.552 0 3.03-.188 4.17-.527 1.656-.499 2.494-1.297 2.494-2.376V4.91c.005-1.086-.835-1.885-2.49-2.383z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataVirusFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.423 16.524c1.246 0 1.588-.457 1.588-2.13 0-1.047-.151-1.607-.504-1.873-.23-.17-.585-.255-1.084-.255-.501 0-.86.087-1.09.26-.35.27-.498.827-.498 1.869.003 1.672.341 2.129 1.588 2.129zM8.426 11c-1.067 0-1.067.216-1.067.515l.002.017a3.3 3.3 0 011.062-.157c.415 0 .765.056 1.067.157l.003-.02C9.49 11.217 9.49 11 8.426 11zm2.285.006a.441.441 0 01.42-.468h.003c.247-.034.457.176.471.423l.05.963a.444.444 0 01-.316.449l-.712.215c.138.322.21.686.247 1.056h.543c.247 0 .446.2.446.446v.638a.445.445 0 11-.891 0v-.193h-.07c-.006.46-.048.902-.154 1.3l.594.179a.447.447 0 01.316.45l-.05.962a.448.448 0 01-.446.423h-.022a.445.445 0 01-.423-.468l.034-.614-.39-.117c-.364.465-.952.767-1.932.767-.984 0-1.572-.305-1.936-.773l-.403.123.033.614a.445.445 0 01-.42.468h-.028a.446.446 0 01-.445-.423l-.05-.961a.444.444 0 01.316-.451l.61-.182a5.47 5.47 0 01-.15-1.297h-.07v.193a.445.445 0 11-.892 0v-.638c0-.247.2-.446.446-.446h.546a3.47 3.47 0 01.244-1.05l-.729-.221a.444.444 0 01-.316-.449l.05-.963c.014-.247.219-.454.47-.423a.448.448 0 01.424.47l-.034.614.4.123a1.914 1.914 0 01-.016-.224c0-1.409 1.373-1.409 1.958-1.409s1.958 0 1.958 1.409c0 .076-.011.146-.017.218l.378-.114-.045-.62zM8.398 12.93c.246 0 .445.199.445.445v2.39a.448.448 0 01-.896.003v-2.393a.451.451 0 01.45-.445zm2.538-7.731c-1.118-.333-1.802-.79-1.98-1.314 0-.008 0-.008-.01-.017.18-.523.86-.986 1.973-1.319C12.1 2.196 13.659 2 15.31 2c1.653 0 3.213.196 4.384.549 1.17.35 1.834.815 1.98 1.364 0 0-.008.009-.008.017-.2.507-.869.944-1.964 1.269-1.18.353-2.731.549-4.384.549-1.652.003-3.201-.196-4.383-.55zm2.66 5.501v-.3c-1.195 0-1.949-.504-2.624-.946a20.9 20.9 0 00-.415-.266.184.184 0 01-.047-.034 6.822 6.822 0 00-.448-.235.105.105 0 00-.042-.025c-.163-.073-.325-.146-.51-.194a3.464 3.464 0 00-.61-.12h-.01c-.153-.017-.299-.034-.47-.034-1.18 0-1.846.437-2.552.908-.683.454-1.445.955-2.608.955h-.016c.008 1.336.064 4.38.316 5.812.278 1.588 3.387 3.448 4.86 4.177a22.4 22.4 0 001.219-.664h.008c.333-.202.692-.42 1.04-.664.008-.008.024-.017.041-.03a11.196 11.196 0 001.462-1.158l.026-.025c.285-.266.53-.549.714-.835.008 0 .008-.008.017-.016.09-.138.162-.275.227-.415.05-.12.098-.25.114-.373.026-.137.048-.3.065-.47v-.009c.017-.128.034-.266.05-.411 0-.034.009-.073.009-.115.039-.437.07-.922.098-1.426.008-.073.008-.146.008-.218.017-.194.025-.39.025-.586.006-.146.017-.283.017-.42.009-.115.009-.227.009-.339.008-.123.008-.244.008-.364.006-.098.006-.202.006-.3v-.005c.008-.32.008-.597.014-.855zm1.723.081c-.17 0-.341-.008-.504-.008-.008.25-.008.54-.017.857.171 0 .342.009.521.009 1.74 0 3.381-.202 4.63-.583.706-.202 1.309-.493 1.762-.849v3.813c-.212.403-.846.93-2.014 1.285-1.17.348-2.73.552-4.38.552-.253 0-.496-.017-.746-.025-.025.21-.05.42-.08.59v.01c-.018.08-.048.17-.074.251.3.017.594.034.902.034 1.74 0 3.381-.213 4.63-.583.706-.212 1.309-.51 1.762-.86v3.384c0 .672-.675 1.221-2.022 1.628-1.18.347-2.74.54-4.38.54-1.6 0-3.105-.185-4.284-.515-.756.487-1.54.927-2.347 1.32a.69.69 0 01-.26.055.762.762 0 01-.261-.056c-.538-.258-5.342-2.588-5.796-5.204-.35-1.961-.333-6.485-.333-6.68a.61.61 0 01.745-.59c1.09.172 1.672-.218 2.42-.71.787-.519 1.68-1.11 3.224-1.11h.009c.162 0 .316.009.462.025V5.168c.431.347 1.022.639 1.795.86 1.26.38 2.902.583 4.63.583 1.729 0 3.373-.202 4.63-.583.746-.218 1.334-.496 1.763-.84v3.778c-.213.395-.846.93-2.014 1.286-1.163.345-2.723.53-4.373.53z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataVirusLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.295 2c1.6 0 3.114.19 4.266.538C21.181 3.024 22 3.784 22 4.803v13.315c0 1.019-.82 1.781-2.439 2.268-1.16.347-2.675.538-4.266.538-1.516 0-2.956-.18-4.095-.495a21.964 21.964 0 01-2.657 1.53.41.41 0 01-.356 0c-.22-.105-5.39-2.566-5.848-5.192-.131-.744-.212-1.851-.261-2.96l-.02-.51A93.533 93.533 0 012 10.39v-.456a.42.42 0 01.514-.404c1.213.19 1.847-.23 2.652-.763.783-.518 1.67-1.104 3.196-1.104h.006c.08 0 .15.009.222.011v-2.87c0-.163.023-.32.065-.47l.003-.003c.228-.785 1.027-1.388 2.37-1.79C12.183 2.19 13.7 2 15.296 2zM8.37 8.496h-.006c-1.272 0-1.983.47-2.735.967-.754.498-1.522.999-2.791.939.005 1.243.048 4.655.324 6.223.308 1.752 3.703 3.755 5.205 4.495 1.503-.737 4.903-2.74 5.208-4.495.037-.205.065-.444.094-.703 0-.017-.009-.037-.006-.054.003-.023.014-.043.02-.066.134-1.328.185-3.184.202-4.45-.009-.04-.02-.08-.017-.12 0-.028.011-.05.02-.079.003-.296.005-.557.005-.757-1.274.069-2.046-.44-2.791-.933-.751-.495-1.463-.964-2.732-.967zm12.797 6.55c-.418.312-.959.577-1.596.768-1.156.347-2.667.537-4.263.537-.288 0-.566-.017-.845-.028-.02.16-.043.307-.066.444-.19 1.087-1.192 2.145-2.313 3.022.944.196 2.054.304 3.212.304 1.512 0 2.94-.18 4.024-.504 1.227-.367 1.847-.862 1.847-1.47v-3.074zm0-4.655c-.418.313-.959.577-1.596.768-1.153.347-2.667.538-4.263.538-.2 0-.396-.012-.592-.017-.017 1.132-.063 2.606-.168 3.812.25.012.5.026.76.026 1.514 0 2.942-.18 4.02-.501 1.062-.321 1.64-.808 1.84-1.172V10.39zM9.428 5.767V7.77c.916.194 1.553.615 2.137.999.805.532 1.437.95 2.66.762a.438.438 0 01.507.407v.385l-.003.531c.194.006.384.015.58.015 1.517 0 2.946-.18 4.022-.501 1.061-.324 1.633-.811 1.835-1.178V5.776c-.395.298-.925.549-1.596.75-1.153.348-2.667.539-4.263.539-1.597 0-3.108-.191-4.263-.535-.68-.205-1.218-.461-1.616-.763zm5.867-2.933c-1.52 0-2.948.176-4.023.5-1.02.308-1.634.72-1.793 1.195l.005.009c.157.475.78.888 1.802 1.195 1.078.321 2.504.5 4.02.5 1.518 0 2.946-.179 4.022-.5.993-.299 1.61-.697 1.787-1.158.003-.006.009-.011.011-.017-.148-.495-.75-.905-1.807-1.224-1.075-.321-2.507-.5-4.024-.5z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDataVirusRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.339 16.597c1.232 0 1.571-.454 1.571-2.11 0-1.039-.148-1.593-.498-1.857-.227-.17-.577-.255-1.073-.255-.499 0-.852.084-1.078.258-.348.266-.493.818-.493 1.852 0 1.66.336 2.112 1.571 2.112zm.003-5.477c-1.056 0-1.056.213-1.056.513 0 .008 0 .011.003.017a3.234 3.234 0 011.05-.154c.412 0 .756.056 1.056.157v-.02c0-.3 0-.513-1.053-.513zm2.963 2.62c.244 0 .443.198.443.442v.633a.444.444 0 01-.885 0v-.19h-.073a5.24 5.24 0 01-.154 1.288l.588.18a.44.44 0 01.314.445l-.05.952a.442.442 0 01-.443.417h-.023a.442.442 0 01-.417-.464l.03-.608-.386-.118c-.358.462-.94.765-1.913.765-.975 0-1.557-.303-1.916-.768l-.4.12.03.609a.442.442 0 01-.417.464h-.025a.442.442 0 01-.443-.417l-.05-.952a.44.44 0 01.314-.446l.605-.182a5.368 5.368 0 01-.152-1.283H5.81v.19a.444.444 0 01-.886 0v-.632c0-.244.2-.443.443-.443h.54c.034-.367.107-.722.242-1.042l-.72-.218a.44.44 0 01-.314-.446l.05-.955a.442.442 0 01.883.048l-.031.608.398.12a1.8 1.8 0 01-.017-.224c0-1.395 1.358-1.395 1.941-1.395s1.941 0 1.941 1.395c0 .076-.008.146-.017.216l.373-.112-.03-.608a.442.442 0 11.881-.048l.05.955a.44.44 0 01-.313.446l-.706.213c.138.319.208.68.244 1.047h.543v-.003zm-2.991-.706c.243 0 .442.196.442.442v2.37a.444.444 0 01-.885 0v-2.37a.44.44 0 01.443-.442zm10.53 5.963c.744-.224 1.635-.619 1.635-1.224v-2.591a5.63 5.63 0 01-1.277.557c-1.132.34-2.614.527-4.168.527-.219 0-.429-.014-.642-.02-.014.087-.025.177-.039.258-.174.995-.986 1.947-1.95 2.76.799.134 1.687.21 2.617.21 1.437 0 2.795-.169 3.823-.477zM8.338 20.442c1.46-.728 4.549-2.568 4.824-4.145.033-.193.064-.42.09-.661 0-.017-.01-.031-.006-.048.002-.022.014-.039.016-.061.132-1.28.182-3.07.2-4.297-.006-.037-.02-.073-.018-.112.003-.028.014-.05.02-.076.003-.19.003-.367.006-.518h-.003c-1.182 0-1.927-.493-2.6-.936-.697-.462-1.358-.896-2.526-.899h-.003c-1.165 0-1.826.437-2.527.896-.677.449-1.431.947-2.588.947h-.011c.008 1.328.059 4.342.308 5.762.247 1.426 2.98 3.24 4.818 4.148zM9.563 6.238v1.398c.826.204 1.426.59 1.97.95.739.49 1.327.876 2.422.702a.64.64 0 01.496.135.615.615 0 01.224.454c0 .042 0 .302-.003.689.12.003.238.008.359.008 1.442 0 2.798-.168 3.82-.476.942-.283 1.449-.7 1.625-1.003V6.252c-.35.205-.773.384-1.28.535-1.132.339-2.61.527-4.168.527-1.557 0-3.036-.188-4.168-.527a5.918 5.918 0 01-1.297-.549zM11.2 3.706c-.854.258-1.39.594-1.56.958.162.367.706.709 1.571.969 1.023.305 2.378.476 3.82.476 1.443 0 2.8-.168 3.822-.473.851-.255 1.4-.594 1.568-.958-.204-.462-.938-.779-1.577-.97-1.022-.305-2.38-.476-3.823-.476-1.44 0-2.799.169-3.821.474zm3.46 8.061a58.04 58.04 0 01-.144 3.278c.174.005.342.017.516.017 1.442 0 2.798-.168 3.82-.477.939-.283 1.446-.7 1.625-1v-2.89a5.63 5.63 0 01-1.277.557c-1.132.339-2.614.527-4.168.527-.126 0-.247-.006-.373-.012zm4.531-9.212c1.656.495 2.496 1.297 2.496 2.375v12.843c0 1.078-.84 1.88-2.496 2.375-1.137.34-2.619.527-4.17.527-1.437 0-2.799-.165-3.897-.46a21.12 21.12 0 01-2.526 1.438.597.597 0 01-.515-.003c-.541-.255-5.3-2.563-5.751-5.151C1.989 14.549 2 10.062 2 9.87a.6.6 0 01.745-.583c1.076.169 1.658-.218 2.398-.708.779-.516 1.664-1.098 3.193-1.098h.02V4.924c0-.176.025-.347.073-.512.238-.827 1.053-1.454 2.423-1.866 1.131-.339 2.613-.526 4.17-.526 1.555.008 3.037.196 4.168.535z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeliveryVanMovingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.028 10.493a430.2 430.2 0 01-3.266-4.356c-.336-.465-.958-.778-1.546-.778H5.29c-.409 0-.826.184-1.148.504-.322.32-.504.74-.504 1.148v.532H2.56a.562.562 0 00-.56.56c0 .309.252.56.56.56h1.08v1.611H2.56a.562.562 0 00-.56.56c0 .309.252.56.56.56h1.08v1.612H2.56a.562.562 0 00-.56.56c0 .308.252.56.56.56h1.08v1.078c0 .41.185.827.504 1.149.32.322.74.504 1.148.504h.14c.266 1.05 1.09 1.639 2.35 1.639 1.261 0 2.085-.588 2.348-1.639h4.585c.266 1.05 1.09 1.639 2.35 1.639s2.084-.588 2.35-1.639h.625c.41 0 .827-.185 1.149-.504.322-.32.504-.74.504-1.149v-3.277c-.003-.571-.418-1.112-.664-1.434zm-13.25 6.882c-.926 0-1.321-.395-1.321-1.322s.395-1.322 1.322-1.322 1.322.395 1.322 1.322-.395 1.322-1.322 1.322zm9.284 0c-.928 0-1.323-.395-1.323-1.322s.395-1.322 1.323-1.322c.927 0 1.322.395 1.322 1.322s-.395 1.322-1.322 1.322z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeliveryVanMovingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.482 5.333c.504 0 1.033.266 1.32.664.16.223.605.82 1.12 1.507l.314.42a478.857 478.857 0 001.837 2.435c.227.294.605.787.605 1.263v3.277c0 .706-.667 1.373-1.373 1.373h-.853c-.175 1.062-.912 1.638-2.121 1.638-1.21 0-1.948-.577-2.123-1.64l-.015.002H9.621c-.176 1.062-.913 1.638-2.122 1.638-1.21 0-1.947-.576-2.122-1.638H5.01c-.706 0-1.372-.667-1.372-1.373l-.001-1.359H2.28a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.358v-2.17H2.28a.28.28 0 01-.28-.28.28.28 0 01.28-.28l1.358-.002v-2.17H2.28a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.358v-.812c0-.706.667-1.373 1.373-1.373h11.47zm-8.983 8.813c-.53 0-.933.129-1.194.38-.271.261-.409.673-.409 1.222 0 .549.138.96.41 1.221.263.252.663.381 1.193.381.529 0 .932-.129 1.193-.38.272-.261.409-.673.409-1.222 0-.55-.137-.96-.41-1.221-.26-.255-.663-.381-1.192-.381zm9.832 0c-.53 0-.933.129-1.194.38-.271.261-.409.673-.409 1.222 0 .549.138.96.41 1.221.263.252.663.381 1.193.381.529 0 .932-.129 1.193-.38.272-.261.409-.673.409-1.222 0-.55-.137-.96-.41-1.221-.26-.255-.663-.381-1.192-.381zm-.85-8.252H5.012c-.395 0-.812.417-.812.812v8.193c0 .395.417.812.812.812h.326l.003-.141c.064-1.282.824-1.985 2.159-1.985 1.382 0 2.149.755 2.162 2.126h5.508l.003-.141c.064-1.282.824-1.985 2.159-1.985 1.382 0 2.148.755 2.162 2.126h.812c.395 0 .813-.417.813-.812v-3.277c0-.286-.317-.7-.488-.922a637.695 637.695 0 01-2.002-2.657l-.456-.609a98.672 98.672 0 01-.825-1.112c-.179-.25-.543-.428-.865-.428z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeliveryVanMovingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.655 4.3a2.2 2.2 0 011.738.85l4.344 5.584c.3.387.463.863.463 1.353v3.132a2.204 2.204 0 01-2.203 2.204h-.404c-.257 1.394-1.27 2.178-2.865 2.178-1.594 0-2.606-.784-2.864-2.178h-4.53c-.257 1.394-1.27 2.178-2.865 2.178-1.594 0-2.606-.784-2.863-2.178h-.042a2.203 2.203 0 01-2.203-2.204V13.79H1.45a.75.75 0 01-.102-1.492l.102-.007.911-.001v-1.406H1.45a.75.75 0 01-.102-1.493l.102-.007h.911V7.979H1.45a.75.75 0 01-.102-1.493l.102-.007h.912A2.203 2.203 0 014.564 4.3zM7.47 15.243c-.452 0-.783.077-1.011.25-.292.22-.417.6-.417 1.18 0 1.031.396 1.428 1.428 1.428 1.033 0 1.43-.397 1.43-1.428l-.003-.157c-.036-.815-.363-1.187-1.122-1.26l-.148-.01zm10.26 0l-.158.003c-.762.034-1.137.323-1.24.985l-.018.137c-.01.094-.014.196-.014.305 0 1.031.397 1.428 1.43 1.428 1.032 0 1.43-.397 1.43-1.428 0-.382-.055-.677-.176-.897-.206-.375-.604-.533-1.255-.533zM16.654 5.8H4.565a.703.703 0 00-.704.703v8.716c0 .39.315.704.703.704h.04l.037-.17a3.113 3.113 0 01.198-.573 2.813 2.813 0 01.158-.285 2.42 2.42 0 01.302-.376 2.3 2.3 0 01.666-.471l.03-.014c.038-.018.077-.035.117-.051l.049-.02c.042-.016.086-.032.13-.046l.03-.01a2.74 2.74 0 01.138-.04l.041-.011c.044-.011.088-.022.133-.031l.059-.012c.04-.008.08-.015.122-.021l.066-.01.089-.011c.098-.012.2-.02.304-.024l-.172.01a4.49 4.49 0 011.134.054 4.435 4.435 0 01.273.064 2.352 2.352 0 01.245.08l.035.013a2.447 2.447 0 01.395.192l.05.03a2.01 2.01 0 01.263.195c.022.018.044.037.065.057l.04.038c.028.026.054.053.08.08l.03.033c.093.103.177.215.252.335l.03.051a2.649 2.649 0 01.305.774l.036.17h4.53a3.646 3.646 0 01.14-.517l.016-.041a2.57 2.57 0 01.203-.417l.025-.04a2.28 2.28 0 01.069-.102l.023-.032c.026-.035.052-.07.08-.103l.019-.022c.243-.288.554-.511.927-.664l.058-.023c.04-.016.081-.03.123-.044l.04-.013c.04-.013.082-.025.125-.037l.05-.012c.04-.011.083-.021.126-.03l.063-.013.126-.022.045-.007.036-.005a3.88 3.88 0 01.374-.032l-.17.01a4.496 4.496 0 011.133.054l.05.01.138.031.019.005c.045.011.088.023.13.036l.059.019a2.737 2.737 0 01.41.17l.062.033.08.045.048.031c.03.018.058.037.087.057l.05.036.08.061c.01.01.022.019.033.028l.092.08.025.025a1.9 1.9 0 01.075.075l.04.043a1.676 1.676 0 01.099.118 1.858 1.858 0 01.15.213l.027.046.055.097.023.045a2.227 2.227 0 01.13.3 2.748 2.748 0 01.1.339l.036.168.404.001c.356 0 .65-.265.697-.608l.006-.096v-3.132a.705.705 0 00-.148-.433L17.21 6.071a.701.701 0 00-.554-.271z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeviceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.115 12.38c-.728 0-1.294-.18-1.686-.541-.41-.373-.614-.924-.614-1.644 0-.717.207-1.272.614-1.647.392-.362.96-.541 1.686-.541.728 0 1.294.182 1.689.54.409.376.616.93.616 1.648 0 .717-.207 1.269-.616 1.644-.395.358-.964.54-1.69.54zm2.602.473l2.535-3.25c.067-.083.207-.039.207.065v3.779a.182.182 0 01-.039.112l-1.165 1.454a.184.184 0 00-.042.117v1.9l.045 3.604a.253.253 0 01-.258.25H5.583V17.01c0-.325-.278-.588-.62-.588-.341 0-.618.263-.618.588v3.874H2.339a.257.257 0 01-.263-.25l-.05-4.874c0-.694.226-1.288.657-1.714.471-.465 1.171-.711 2.023-.711h2.807c.271 0 .537-.017.773-.132.143-.067.431-.35.431-.35zm12.339 1.196c.431.426.658 1.02.658 1.717l-.05 4.874a.254.254 0 01-.26.247H19.47a.104.104 0 01-.107-.101V17.01c0-.325-.277-.588-.616-.588-.342 0-.62.263-.62.588v3.776c0 .056-.044.1-.106.1h-4.165a.358.358 0 01-.367-.352l.042-3.493v-1.908a.176.176 0 00-.042-.115l-1.16-1.445a.219.219 0 01-.047-.135V9.646c0-.098.129-.14.19-.062l2.552 3.269s.289.283.429.35c.232.112.501.132.773.132h2.804c.854.003 1.554.249 2.025.714zm-5.115-2.207c-.409-.373-.619-.925-.619-1.645 0-.717.207-1.271.616-1.644.395-.361.961-.543 1.69-.543.725 0 1.294.185 1.686.543.406.373.613.927.613 1.644 0 .718-.207 1.27-.613 1.645-.392.358-.958.54-1.687.54-.725-.002-1.294-.182-1.686-.54zM11.633 6.52a.583.583 0 01-.384-.547l.014-2.546a.604.604 0 01.62-.585h.002c.342.003.616.266.614.59l-.014 2.547a.604.604 0 01-.62.585h-.002c-.009 0-.014-.002-.025-.005-.009.003-.014.005-.023.005h-.003a.435.435 0 01-.179-.044zm-2.448.633l-1.16-1.118a.567.567 0 01.006-.832.64.64 0 01.874.003l1.16 1.118a.57.57 0 01-.003.831.64.64 0 01-.435.171c-.008 0-.016-.005-.025-.005-.008 0-.017.005-.025.005a.43.43 0 01-.176-.042.59.59 0 01-.216-.131zm4.711.131a.609.609 0 01-.21-.129.57.57 0 01-.005-.831l1.16-1.115a.64.64 0 01.873-.006c.244.23.244.6.006.832l-1.16 1.118a.628.628 0 01-.44.176c-.008 0-.016-.005-.025-.005-.008 0-.017.005-.025.005a.41.41 0 01-.174-.045z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeviceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.943 5.56a.406.406 0 01-.409-.404l.014-2.602a.406.406 0 01.412-.398h.003c.227.003.412.18.409.404l-.014 2.602a.41.41 0 01-.415.398zm-2.535.66l-1.16-1.142a.395.395 0 01.003-.569.42.42 0 01.583.003l1.16 1.143a.397.397 0 01-.003.568.424.424 0 01-.583-.002zm4.79.118a.41.41 0 01-.288-.117.395.395 0 01-.003-.569l1.16-1.14c.16-.16.42-.16.582-.003a.395.395 0 01.003.569l-1.16 1.143a.422.422 0 01-.294.117zm-9.07 1.83c-.24.226-.361.596-.361 1.103s.12.877.358 1.1c.233.22.608.329 1.115.329s.885-.11 1.12-.33c.242-.222.362-.592.362-1.099s-.123-.88-.361-1.104c-.236-.218-.61-.333-1.118-.333-.507.003-.882.115-1.115.333zm1.115 3.336c-.728 0-1.294-.185-1.686-.552-.406-.381-.614-.944-.614-1.678s.208-1.3.614-1.684c.392-.367.958-.554 1.686-.554.726 0 1.294.187 1.69.554.408.384.615.95.615 1.684s-.207 1.297-.616 1.68c-.395.365-.963.55-1.689.55zM20.974 19.4l.045-4.434c0-.499-.148-.913-.429-1.2-.392-.397-.994-.48-1.428-.48h-3.56c-.163 0-.418-.063-.533-.138-.154-.101-.31-.328-.31-.328L12.41 9.744v2.914l1.247 1.593v-.43c0-.222.185-.401.411-.401.227 0 .412.179.412.4v1.608c0 .008.006.014.006.025v.118c0 .067.003.134.003.207l-.006.485v.722h-.008l-.031 2.415h4.053v-3.163c0-.22.185-.4.412-.4.227 0 .412.18.412.4v3.16h1.652v.003zm-9.39-6.871V9.744L9.238 12.82s-.156.227-.31.328c-.115.075-.373.137-.533.137H4.84c-.434 0-1.037.084-1.429.482-.28.286-.428.7-.428 1.199l.044 4.434h1.656v-3.16c0-.221.185-.4.412-.4.227 0 .411.179.411.4v3.16h4.05l-.027-2.415H9.52v-.725l-.005-.482c0-.07.003-.137.003-.204v-.118l.002-.025v-1.608c0-.221.185-.4.412-.4.227 0 .412.179.412.4v.431l1.246-1.594v-.131h-.005zm9.597.683c.432.437.662 1.042.662 1.754l-.05 4.98c0 .14-.116.255-.261.255h-7.656a.259.259 0 01-.26-.255l.044-3.68v-.692L12 13.45l-1.659 2.12v.69l.045 3.683a.26.26 0 01-.26.255h-7.66a.261.261 0 01-.263-.255l-.048-4.98c0-.712.227-1.317.659-1.754.47-.476 1.17-.728 2.022-.728h2.807c.274 0 .54-.02.773-.134.143-.07.428-.359.428-.359l2.818-3.692.003-.005a.467.467 0 01.199-.143c.003 0 .022-.009.025-.009.028-.008.07-.008.115-.008a.42.42 0 01.118.017l.01.003a.483.483 0 00.194.134l.003.006c.003.003.003.003.006.003l.002.005v.003l2.815 3.689s.289.288.429.359c.233.114.501.134.773.134h2.804c.854 0 1.555.252 2.022.728zm-4.543-5.039c-.24.227-.364.597-.364 1.104 0 .504.123.876.361 1.098.236.218.61.327 1.12.327.51 0 .883-.109 1.116-.327.238-.224.358-.594.358-1.101s-.12-.88-.361-1.104c-.233-.218-.608-.33-1.115-.33-.504 0-.88.112-1.115.333zm-.569 2.782c-.409-.381-.619-.947-.619-1.681 0-.734.208-1.3.62-1.684.392-.367.96-.554 1.686-.554.725 0 1.294.185 1.686.554.406.381.613.947.613 1.681 0 .734-.207 1.3-.613 1.68-.392.368-.958.553-1.686.553-.726.002-1.294-.182-1.687-.55z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDeviceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.773 9.279c-.196.182-.235.538-.235.806 0 .267.039.622.235.799.193.179.56.215.835.215.274 0 .638-.036.829-.212.193-.18.232-.533.232-.802 0-.268-.042-.624-.235-.806-.193-.18-.557-.213-.829-.213-.272 0-.636.033-.832.213zm-.851 2.465c-.41-.376-.617-.933-.617-1.659 0-.725.208-1.285.617-1.663.392-.365.96-.547 1.686-.547.728 0 1.291.182 1.686.55.406.378.61.938.61 1.663 0 .726-.207 1.283-.61 1.658-.392.362-.958.547-1.686.547-.728-.003-1.294-.188-1.686-.55zM5.252 9.27c-.193.182-.235.538-.235.807 0 .266.042.622.232.801.19.177.558.213.83.213.271 0 .638-.036.834-.216.193-.179.235-.532.235-.798s-.042-.625-.235-.807c-.196-.179-.56-.215-.832-.215-.271 0-.638.036-.829.215zm.83 3.014c-.726 0-1.292-.185-1.684-.546-.406-.375-.614-.933-.614-1.658 0-.726.208-1.286.614-1.664.392-.364.958-.55 1.683-.55.726 0 1.294.183 1.686.547.41.378.617.939.617 1.664 0 .726-.208 1.283-.617 1.661-.394.361-.96.546-1.686.546zm5.691-5.68a.605.605 0 01-.613-.6l.014-2.571a.606.606 0 01.616-.591h.003a.605.605 0 01.613.6l-.014 2.57a.606.606 0 01-.616.592h-.003zm-2.678.593L7.938 6.07a.579.579 0 01.006-.84c.24-.23.633-.23.871.002L9.972 6.36a.585.585 0 01-.003.843.629.629 0 01-.874-.006zm4.93.177a.631.631 0 01-.434-.17.579.579 0 01-.006-.841l1.157-1.13a.635.635 0 01.874-.005c.241.23.244.608.003.84l-1.157 1.13a.616.616 0 01-.437.176zm6.387 12.322l.039-3.986c0-.272-.053-.65-.314-.91-.291-.294-.776-.353-1.131-.353h-2.802c-.036 0-.08-.003-.12 0h-.011c-.13.003-.266-.003-.404 0-.148.003-.375 0-.507-.048a1.242 1.242 0 01-.378-.258 8.15 8.15 0 01-.308-.397l-2-2.594v1.42l1.41 1.784.61.77s.143.163.196.286c.05.112.064.353.064.429l-.014 1.255-.028 2.602h3.426v-2.728c0-.33.277-.594.616-.594.34 0 .617.266.617.594v2.728h1.039zm-9.202-7.134v-1.42l-2 2.596s-.224.305-.308.398a1.194 1.194 0 01-.378.258c-.132.047-.362.05-.507.047-.137-.003-.278.003-.404 0H4.681c-.356 0-.838.062-1.132.356-.258.26-.314.639-.314.91l.04 3.986h1.039v-2.728c0-.328.277-.594.616-.594.339 0 .616.266.616.594v2.728h3.426l-.025-2.605-.017-1.255c0-.075.017-.316.064-.428.054-.124.196-.286.196-.286l.611-.77 1.41-1.787zm9.818 1.414c.431.432.658 1.031.658 1.737l-.05 4.924c0 .137-.118.25-.26.25H13.73a.256.256 0 01-.26-.25l.047-4.784-1.678-2.123-1.672 2.117.05 4.785c0 .14-.117.249-.263.249H2.311a.254.254 0 01-.26-.25L2 15.705c0-.703.227-1.302.658-1.736.47-.47 1.168-.72 2.02-.72h2.801c.188 0 .367.017.538.042L11.325 9l.003-.003.005-.009c.009-.01.023-.02.031-.028a.49.49 0 01.104-.098c.017-.01.033-.016.05-.025.034-.02.07-.042.112-.056.003-.003.009 0 .011-.003.009-.003.014-.003.023-.003a.656.656 0 01.165-.025c.014 0 .025.006.04.006a.632.632 0 01.148.025l-.003-.003h.006c.002 0 .002.003.002.003a.048.048 0 00.02.003c.003.003.008 0 .011.003.042.014.076.036.115.056.014.008.034.014.048.025a.598.598 0 01.103.098c.012.011.023.017.031.03l.006.006.003.003 3.308 4.294c.17-.025.35-.039.537-.039h2.802c.854-.003 1.551.247 2.022.717z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDiamondFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.714 2h5.392l-1.641 5.143L12.715 2zm4.558 5.7l1.594-5.003 2.82 5.003h-4.414zm-.3.944h4.613l-8.38 11.852 3.767-11.852zm-9.28 0h8.305l-4.154 13.042L7.692 8.644zM7.98 7.7l3.863-5.305L15.697 7.7H7.98zM5.583 2h5.38L7.217 7.143 5.583 2zM2 7.7l2.824-5.01L6.417 7.7H2zm.104.944h4.61L10.482 20.5 2.104 8.644z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDiamondLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.806 7.935l1.412-4.35 2.498 4.35h-3.91zm-.266.82h4.081L13.207 19.05 16.54 8.756zm-9.084 0l3.333 10.295L3.375 8.756h4.081zm.451-1.302L6.456 2.977h4.767L7.907 7.453zm4.865-4.476h4.77l-1.447 4.476-3.323-4.476zM8.58 7.935L12 3.322l3.42 4.61H8.58v.003zm7.09.82L12 20.089 8.33 8.756h7.34zM5.784 3.583l1.409 4.35h-3.91l2.5-4.35zM21.84 8.358l.003-.011a.36.36 0 00-.05-.185c-.004-.003-.004-.011-.006-.017L18.47 2.364c-.003-.009-.014-.012-.02-.017a.39.39 0 00-.165-.143c-.017-.009-.03-.023-.05-.028-.031-.009-.06-.006-.09-.009-.011-.002-.022-.01-.034-.01H5.887c-.014 0-.022.008-.036.01-.03.003-.059 0-.09.009-.02.005-.033.02-.05.028a.372.372 0 00-.165.143c-.006.005-.014.01-.02.017L2.209 8.142c-.002.006-.002.011-.002.017a.424.424 0 00-.05.185l.002.011c0 .011.006.023.008.037a.363.363 0 00.056.162c.006.008.003.02.012.028l9.428 13.087c.017.022.045.036.065.056.016.017.033.03.05.045.067.042.14.07.219.07a.414.414 0 00.22-.07.384.384 0 00.051-.045c.023-.02.05-.034.068-.056l9.428-13.087c.006-.008.003-.017.008-.028a.404.404 0 00.057-.162c.005-.012.01-.023.01-.034z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDiamondRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.83 7.661l1.153-3.566 2.045 3.566h-3.199zm-.39 1.205h3.456l-6.28 8.717 2.824-8.717zm-9.194 0l2.824 8.717-6.277-8.717h3.453zm.662-1.914L6.695 3.204h3.991L7.908 6.952zM13 3.204h3.992l-1.213 3.748L13 3.204zM8.894 7.661l2.95-3.978 2.949 3.978h-5.9zm6.266 1.205l-3.317 10.243L8.527 8.866h6.633zm-9.457-4.77L6.857 7.66H3.655l2.048-3.566zm15.98 4.178l.003-.01c0-.012-.005-.02-.005-.032a.688.688 0 00-.056-.224c-.006-.014-.009-.028-.017-.039l-3.25-5.66c-.005-.012-.02-.018-.028-.029a.547.547 0 00-.165-.165 2.607 2.607 0 00-.078-.045c-.025-.014-.045-.03-.073-.04-.045-.013-.087-.01-.129-.013-.02-.003-.036-.014-.056-.014H5.86c-.019 0-.035.014-.052.014-.045.003-.087 0-.132.014-.028.008-.048.028-.073.039-.028.014-.053.025-.078.045a.58.58 0 00-.165.165c-.009.009-.023.014-.028.028L2.08 7.97c-.008.014-.008.028-.017.04l-.022.055a.578.578 0 00-.034.168c0 .012-.005.023-.005.034l.003.011a.65.65 0 00.042.208l.022.044c.014.028.025.06.045.087l9.232 12.82.003.004a.63.63 0 00.19.162c.02.009.037.02.057.028.075.034.16.059.246.059a.626.626 0 00.303-.087.626.626 0 00.19-.162l.003-.003 9.232-12.82c.02-.029.031-.06.045-.088a.555.555 0 00.067-.255z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDigitalLibraryFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.263 17.68a13.95 13.95 0 00-4.428.958v-7.152c1.661-.81 3.524-.927 4.428-.93v7.124zm-5.633.955a13.978 13.978 0 00-4.425-.958v-7.118a12.452 12.452 0 012.619.303c.028.005.056.016.084.022.168.042.336.084.507.137.078.025.16.053.24.082.124.039.244.078.368.126.204.078.409.165.61.263l-.003 7.143zm10.9-3.138c1.008 0 1.803-.3 2.355-.89.53-.566.801-1.359.801-2.359V7.024c0-1-.271-1.79-.803-2.35C20.33 4.09 19.54 3.8 18.53 3.8l-10.79.006c-1.012 0-1.801.294-2.353.874-.532.563-.804 1.352-.804 2.352v2.365a11.85 11.85 0 00-2.028-.06.607.607 0 00-.555.617v8.33a.61.61 0 00.602.62c3.031 0 5.33 1.212 5.353 1.226.087.048.182.07.28.073.009 0 .014-.005.023-.005a.636.636 0 00.258-.065c.022-.01 2.305-1.227 5.353-1.227a.612.612 0 00.602-.619v-.77h6.616a.612.612 0 00.602-.619.609.609 0 00-.602-.619h-6.62v-.776l4.063-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDigitalLibraryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.659 17.744a14.459 14.459 0 00-4.93 1.036v-7.395c1.896-.921 4.067-.989 4.93-.977v7.336zM2.98 10.408c.857-.02 3.033.058 4.93.98v7.392a14.528 14.528 0 00-4.93-1.036v-7.336zM5.617 7.17c0-.7.179-1.236.529-1.589.361-.364.924-.549 1.67-.549l11.016-.005c.745 0 1.306.185 1.67.549.35.353.53.885.53 1.588v5.09c0 .703-.18 1.24-.53 1.6-.364.372-.925.56-1.667.56l-4.353.002v-4.398a.406.406 0 00-.378-.4c-.129-.011-3.151-.227-5.782 1.075a10.374 10.374 0 00-2.7-.868L5.617 7.17zm13.212 8.05c.972 0 1.734-.272 2.258-.807.504-.515.76-1.24.76-2.16V7.165c0-.919-.258-1.641-.763-2.151-.52-.524-1.28-.793-2.252-.793l-11.017.006c-.972 0-1.73.266-2.254.79-.505.51-.762 1.232-.762 2.15v2.527a12.478 12.478 0 00-2.26-.078.41.41 0 00-.379.406v8.12c0 .225.182.401.409.401 3.148 0 5.535 1.207 5.557 1.219a.42.42 0 00.19.044c.01 0 .018-.005.026-.005a.491.491 0 00.165-.04c.023-.01 2.41-1.218 5.56-1.218.227 0 .41-.18.41-.403v-1.27h6.938a.404.404 0 00.409-.403.408.408 0 00-.41-.403h-6.937v-.843h4.352z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDigitalLibraryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.266 17.677a13.95 13.95 0 00-4.428.958v-7.149c1.66-.81 3.523-.927 4.428-.93v7.12zm-10.059-7.12c.905.002 2.762.117 4.429.93v7.148a13.95 13.95 0 00-4.429-.958v-7.12zM5.79 7.03c0-.664.157-1.163.462-1.485.317-.33.818-.501 1.49-.501l10.79-.006c.672 0 1.177.168 1.49.501.306.323.46.821.46 1.485v5.224c0 .667-.154 1.171-.462 1.499-.317.339-.818.51-1.488.51l-4.064.002V9.954a.614.614 0 00-.555-.619c-.129-.008-3.075-.23-5.68 1.078a9.927 9.927 0 00-2.443-.831V7.03zm12.745 8.467c1.008 0 1.801-.3 2.356-.89.53-.566.798-1.362.798-2.359V7.024c0-1-.272-1.79-.804-2.35-.552-.58-1.342-.874-2.353-.874l-10.79.006c-1.01 0-1.8.294-2.353.874-.532.563-.804 1.352-.804 2.352v2.362a11.704 11.704 0 00-2.03-.056.616.616 0 00-.555.619v8.33a.61.61 0 00.602.62c3.031 0 5.33 1.215 5.353 1.226a.57.57 0 00.277.07c.017 0 .031-.01.045-.014a.572.572 0 00.236-.058c.022-.012 2.305-1.227 5.353-1.227a.61.61 0 00.602-.62v-.77h6.616a.61.61 0 00.602-.619.61.61 0 00-.602-.619h-6.616V15.5l4.067-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisableFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 20.045c-2.389 0-4.23-.482-5.56-1.462L18.555 6.31c.994 1.336 1.49 3.174 1.49 5.535 0 5.594-2.608 8.199-8.205 8.199m0-16.404c2.376 0 4.222.5 5.558 1.505l-12.28 12.28c-.992-1.33-1.477-3.18-1.477-5.58 0-5.597 2.605-8.205 8.2-8.205m0-1.641C5.62 2 2 5.14 2 11.846c0 6.706 3.622 9.84 9.84 9.84 6.219 0 9.846-3.134 9.846-9.84C21.686 5.14 18.06 2 11.84 2"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisableLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.997 21.022c-2.793 0-4.939-.67-6.437-1.986L19.036 5.56c1.316 1.501 1.986 3.644 1.986 6.442 0 5.986-3.037 9.02-9.025 9.02m0-18.045c2.81 0 4.96.675 6.459 2.003L4.98 18.456c-1.328-1.499-2.003-3.65-2.003-6.457 0-5.986 3.034-9.022 9.02-9.022m0-.82c-6.219 0-9.84 3.14-9.84 9.845 0 6.706 3.621 9.84 9.84 9.84 6.218 0 9.846-3.134 9.846-9.84 0-6.706-3.628-9.846-9.846-9.846"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisableRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 20.457c-2.596 0-4.59-.572-6.005-1.718L18.737 5.838c1.148 1.414 1.72 3.411 1.72 6.01 0 5.79-2.821 8.609-8.617 8.609m0-17.227c2.611 0 4.611.577 6.028 1.734L4.964 17.87c-1.157-1.417-1.734-3.417-1.734-6.025 0-5.798 2.818-8.616 8.61-8.616m0-1.23C5.622 2 2 5.14 2 11.846c0 6.706 3.622 9.84 9.84 9.84 6.219 0 9.846-3.134 9.846-9.84C21.686 5.14 18.06 2 11.84 2"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisconnectFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.711 18.636V8.989c0-.642-.134-1.09-.417-1.373-.283-.283-.734-.426-1.378-.426H5.073c-.633 0-1.076.143-1.37.435-.291.29-.426.74-.426 1.364v9.647c0 .641.135 1.1.426 1.384.283.274.734.417 1.37.417h4.843c.636 0 1.084-.143 1.37-.417.294-.283.425-.743.425-1.384zM14.325 2c4.759 0 7.39 2.625 7.39 7.38 0 4.749-2.631 7.365-7.39 7.365-.476 0-.927-.034-1.361-.084v1.975c0 1-.258 1.74-.793 2.266-.527.524-1.27.784-2.255.784H5.073c-.986 0-1.72-.258-2.255-.784-.535-.527-.793-1.266-.793-2.266V8.989c0-.975.258-1.706.785-2.241.54-.54 1.277-.807 2.263-.807h2.454C8.549 3.375 10.885 2 14.325 2zm1.846 10.081a.633.633 0 00.885 0 .627.627 0 000-.885l-1.9-1.894V6.748a.628.628 0 00-1.255 0v2.815a.63.63 0 00.186.443l2.084 2.075zm-8.675 5.62c.512 0 .818.305.818.82 0 .252-.07.45-.213.597-.143.145-.353.224-.605.224s-.462-.079-.605-.224c-.143-.146-.213-.345-.213-.597 0-.515.305-.82.818-.82z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisconnectLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.534 17.983c.524 0 .838.313.838.837 0 .255-.073.462-.216.61-.148.152-.361.23-.619.23s-.47-.078-.619-.23c-.146-.148-.218-.352-.218-.61 0-.526.31-.837.834-.837zm6.972-2.037c4.306 0 6.482-2.17 6.482-6.47 0-4.292-2.176-6.468-6.482-6.468-2.994 0-4.955 1.081-5.868 3.173h1.367c.955 0 1.664.247 2.165.751.504.502.743 1.199.743 2.151v6.74c.495.078 1.03.123 1.593.123zm-2.448 2.995V9.083c0-.714-.162-1.224-.496-1.557-.333-.33-.846-.493-1.56-.493H5.064c-.709 0-1.213.17-1.555.51-.33.342-.501.843-.501 1.54v9.858c0 .714.162 1.224.501 1.557.334.33.838.493 1.555.493h4.938c.717 0 1.23-.162 1.563-.493.33-.333.493-.843.493-1.557zm2.448-16.785c4.804 0 7.337 2.535 7.337 7.32 0 4.792-2.533 7.319-7.337 7.319-.563 0-1.09-.045-1.593-.12v2.263c0 .96-.247 1.666-.751 2.162-.496.502-1.205.74-2.157.74H5.064c-.947 0-1.656-.241-2.16-.74-.501-.493-.748-1.207-.748-2.16V9.084c0-.935.247-1.633.751-2.134.504-.521 1.213-.768 2.16-.768H7.71c.977-2.63 3.316-4.025 6.795-4.025zm1.83 9.936l-2.13-2.123a.424.424 0 01-.125-.303V6.795a.426.426 0 11.851 0v2.697l2.003 2a.428.428 0 010 .603.427.427 0 01-.6-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDisconnectRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.297 15.496c4.067 0 6.137-2.06 6.137-6.115 0-4.067-2.07-6.132-6.134-6.132-2.698 0-4.519.91-5.437 2.692H9.89c.994 0 1.728.258 2.263.793.524.532.784 1.266.784 2.258v6.417c.435.053.874.087 1.359.087zm-2.614 3.143v-9.65c0-.639-.134-1.09-.417-1.373-.283-.283-.734-.426-1.378-.426h-4.84c-.636 0-1.076.14-1.37.435-.291.29-.426.74-.426 1.364v9.65c0 .641.135 1.098.426 1.383.283.275.734.418 1.37.418H9.89c.636 0 1.084-.143 1.37-.418.29-.285.422-.742.422-1.383zM14.297 2c4.759 0 7.39 2.625 7.39 7.38 0 4.749-2.631 7.365-7.39 7.365-.476 0-.927-.034-1.361-.084v1.978c0 1-.258 1.74-.793 2.266-.524.523-1.27.784-2.255.784h-4.84c-.986 0-1.72-.258-2.255-.784C2.26 20.378 2 19.639 2 18.639v-9.65c0-.975.26-1.706.784-2.238.54-.54 1.278-.81 2.264-.81H7.5C8.521 3.375 10.86 2 14.297 2zm-6.83 15.7c.513 0 .819.308.819.82 0 .253-.07.452-.213.598-.143.145-.353.224-.605.224s-.462-.079-.605-.224c-.143-.146-.213-.345-.213-.597 0-.515.305-.82.818-.82zm8.676-5.619l-2.081-2.075a.623.623 0 01-.185-.443V6.751a.628.628 0 011.255 0v2.554L17.03 11.2c.243.24.246.636.005.882a.613.613 0 01-.448.185.642.642 0 01-.445-.185z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentOtherFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.632 3.83v1.759c0 .666.208 1.215.614 1.613.406.398.98.608 1.667.608h1.767l-4.048-3.98zm5.695 4.086a.62.62 0 01.048.244v12.308c0 .745-.63 1.378-1.387 1.378H5.997c-.734 0-1.387-.641-1.387-1.378l.042-3.3-.042-7.977V3.538c0-.723.661-1.378 1.387-1.378h7.3a.86.86 0 01.613.252l5.21 5.123a.846.846 0 01.207.381zm-6.571 7.378a.915.915 0 00-.916-.932.913.913 0 00-.916.932v.017a.91.91 0 00.924.925c.51 0 .908-.407.908-.942zm3.106 0a.915.915 0 00-.916-.932.913.913 0 00-.916.932v.017a.91.91 0 00.925.925c.51 0 .907-.407.907-.942zm-6.216 0a.917.917 0 00-.924-.932c-.51 0-.908.411-.908.932v.017c0 .518.398.925.916.925.519 0 .916-.407.916-.942z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentOtherLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.55 20.635V8.761h-2.546c-.974 0-1.81-.322-2.423-.918-.613-.606-.94-1.423-.94-2.384V2.985H5.824c-.18 0-.4.208-.4.381v5.76l.042 8.15-.042 3.368c0 .182.204.372.4.372H18.15c.204 0 .4-.182.4-.38zm-5.09-17.47v2.291c0 .728.239 1.35.698 1.787.451.445 1.098.686 1.85.686h2.321l-4.868-4.764zm5.878 4.742c.016.059.033.106.033.165v12.56c0 .653-.566 1.208-1.218 1.208H5.828c-.647 0-1.219-.563-1.219-1.208l.042-3.358L4.61 9.13V3.364c0-.63.583-1.208 1.219-1.208h7.504a.68.68 0 01.473.2l5.362 5.229c.087.09.137.207.17.322zm-4.135 7.555c0 .44-.31.753-.728.753a.718.718 0 01-.745-.737v-.016a.73.73 0 01.728-.746.738.738 0 01.745.746zm-2.742 0c0 .44-.32.753-.737.753a.722.722 0 01-.745-.737v-.016a.742.742 0 111.482 0zm-2.748 0c0 .44-.32.753-.737.753a.722.722 0 01-.745-.737v-.016c0-.415.328-.746.737-.746a.738.738 0 01.745.746z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentOtherRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.756 15.294c0 .535-.398.942-.91.942a.91.91 0 01-.925-.925v-.017a.917.917 0 111.835 0zm5.425 5.174V9.028H15.91c-1.003 0-1.866-.325-2.493-.95-.647-.632-.98-1.492-.98-2.49V3.377H5.998c-.072 0-.185.106-.19.17v5.645l.042 7.986-.042 3.3c0 .047.095.154.19.154H17.99c.104 0 .19-.09.19-.163zM13.632 3.83v1.76c0 .666.208 1.215.614 1.613.406.398.98.608 1.667.608h1.767l-4.048-3.98zm5.695 4.087a.62.62 0 01.048.244v12.308c0 .745-.63 1.378-1.387 1.378H5.997c-.734 0-1.387-.641-1.387-1.378l.042-3.3-.042-7.977V3.538c0-.723.661-1.378 1.387-1.378h7.3c.229 0 .453.09.613.252l5.21 5.123a.846.846 0 01.207.381zm-3.465 7.378c0 .535-.398.942-.907.942a.91.91 0 01-.925-.925v-.017a.917.917 0 111.832 0zm-6.216 0c0 .535-.397.942-.916.942a.908.908 0 01-.916-.925v-.017c0-.518.398-.932.908-.932a.918.918 0 01.924.932z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.036 10.09c-.532 0-.977-.16-1.288-.465-.308-.297-.468-.723-.468-1.224V7.264l2.908 2.826h-1.152zm-4.215-4.633H9.824c-.684 0-1.28.59-1.28 1.263v9.995l-4.295.016.003-13.313 9.569-.017v2.056zm7.176 4.798a.801.801 0 00-.207-.358l-4.325-4.202a.84.84 0 00-.588-.238h-.804V3.4c0-.672-.574-1.241-1.255-1.241H4.255C3.575 2.16 3 2.729 3 3.4v13.331c0 .659.585 1.239 1.252 1.239h4.291v2.613c0 .686.586 1.263 1.28 1.263h9.944c.695 0 1.278-.577 1.278-1.263V10.502a.677.677 0 00-.048-.247z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.193 20.78c0 .119-.132.239-.263.239H9.733c-.131 0-.252-.14-.252-.238V6.59c0-.09.14-.239.252-.239H15.3V8.31c0 .807.28 1.505.804 2.009.524.51 1.23.773 2.059.773h2.03v9.689zM8.66 6.59v10.457H4.025c-.107 0-.238-.132-.238-.213V3.193c0-.09.123-.216.238-.216h9.806c.115 0 .239.106.239.216v2.336H9.733c-.565 0-1.072.51-1.072 1.061zm7.459.009l3.798 3.67h-1.756c-.608 0-1.123-.183-1.482-.536-.361-.353-.557-.846-.557-1.423V6.6h-.003zm4.877 3.759a.604.604 0 00-.18-.353l-4.434-4.294a.592.592 0 00-.361-.171c-.025-.008-.05-.008-.081-.008h-1.05v-2.34c0-.56-.485-1.036-1.06-1.036H4.028c-.558 0-1.06.488-1.06 1.037V16.83c0 .544.51 1.037 1.06 1.037H8.66v2.913c0 .56.501 1.062 1.072 1.062h10.2c.582 0 1.08-.496 1.08-1.062V10.456a.423.423 0 00-.016-.098z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDocumentsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.796 20.583V6.72l.028-.008h5.207v1.686c0 .852.294 1.586.851 2.126.552.535 1.297.818 2.16.818h1.756l-.025 9.244-9.977-.003zm-5.544-3.854l.003-13.314 9.569-.017v2.059h-4c-.681 0-1.28.59-1.28 1.263v9.995l-4.292.014zM16.28 7.26l2.908 2.826h-1.149c-.532 0-.977-.16-1.291-.465-.308-.3-.47-.723-.47-1.224V7.261h.002zm4.717 2.994a.834.834 0 00-.204-.358l-4.325-4.202a.845.845 0 00-.588-.238h-.804V3.398c0-.672-.575-1.238-1.255-1.238H4.255C3.575 2.16 3 2.729 3 3.398v13.33c0 .662.585 1.242 1.255 1.242h4.288v2.613c0 .683.586 1.263 1.28 1.263h9.944c.695 0 1.278-.58 1.278-1.263V10.502a.562.562 0 00-.048-.247z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDolarSymbolFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.454 16.731a2.757 2.757 0 01-1.017.672v-4.165c.244.059.485.118.686.219.675.333.897.88.967 1.28.12.683-.126 1.448-.636 1.994m-4.42-7.078c-.314-.345-.446-.785-.393-1.303.079-.717.507-1.448 1.096-1.854.103-.073.218-.123.33-.18v3.936c-.412-.12-.762-.3-1.033-.6m7.395 4.642a4.218 4.218 0 00-2.306-3.12c-.552-.272-1.12-.412-1.686-.513V6.168a4.141 4.141 0 011.571.826 1.14 1.14 0 001.608-.106 1.31 1.31 0 00-.112-1.843 6.542 6.542 0 00-3.07-1.443v-.344c0-.695-.53-1.258-1.185-1.258s-1.187.563-1.187 1.258v.409a4.932 4.932 0 00-1.63.725c-1.174.812-1.998 2.221-2.155 3.678-.134 1.26.236 2.445 1.04 3.328.809.893 1.781 1.243 2.742 1.437v4.68a6.05 6.05 0 01-2.188-1.022 1.141 1.141 0 00-1.653.31c-.375.572-.243 1.354.295 1.752a8.298 8.298 0 003.549 1.512v.334c0 .694.529 1.257 1.187 1.257.656 0 1.185-.563 1.185-1.257v-.379a5.119 5.119 0 002.703-1.523 4.99 4.99 0 001.292-4.205"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDolarSymbolLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.94 17.672c-.63.641-1.429.977-2.289 1.1v-6.12c.625.087 1.208.205 1.72.445.799.37 1.317 1.031 1.468 1.858.174.958-.162 1.972-.9 2.717m-5.935-7.558c-.622-.65-.68-1.409-.622-1.93.107-.958.706-1.924 1.527-2.465a3.802 3.802 0 011.406-.554v5.955c-.896-.146-1.714-.381-2.31-1.006m5.932 1.768c-.728-.34-1.512-.476-2.286-.58V5.125c1.076.115 2.115.555 2.86 1.166a.662.662 0 00.939-.098.671.671 0 00-.096-.944c-.974-.799-2.313-1.356-3.7-1.47v-.953a.668.668 0 10-1.336.003v.991a5.162 5.162 0 00-2.14.782C8.021 5.36 7.206 6.68 7.055 8.036c-.132 1.143.221 2.213.986 3.014.924.963 2.126 1.26 3.274 1.428v6.334A7.561 7.561 0 017.8 17.495a.67.67 0 00-.93.165v.003a.675.675 0 00.165.936 8.868 8.868 0 004.28 1.557v.964a.668.668 0 101.336.059v-1.042c1.196-.14 2.33-.6 3.238-1.521 1.04-1.056 1.513-2.516 1.264-3.897-.224-1.271-1.014-2.28-2.216-2.837"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDolarSymbolRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.807 17.12c-.451.474-1.012.754-1.614.905v-5.151c.423.078.827.174 1.174.342.837.403 1.118 1.07 1.204 1.56.138.81-.154 1.706-.764 2.344M9.672 9.81c-.501-.538-.552-1.171-.501-1.608a3.12 3.12 0 011.3-2.152c.263-.176.546-.294.834-.386v4.941c-.644-.134-1.213-.342-1.633-.795m5.49 1.638c-.638-.305-1.305-.45-1.969-.552V5.571c.821.154 1.6.524 2.18 1.009a.92.92 0 001.3-.107l.027-.033a.994.994 0 00-.134-1.37 6.764 6.764 0 00-3.373-1.479v-.616A.96.96 0 0012.25 2a.96.96 0 00-.944.975v.672c-.67.129-1.305.39-1.87.773a5.062 5.062 0 00-2.14 3.563c-.133 1.205.229 2.334 1.016 3.18.865.93 1.947 1.257 2.997 1.44v5.478a6.763 6.763 0 01-2.815-1.165.928.928 0 00-1.294.21c-.009.011-.014.02-.023.03a.995.995 0 00.233 1.36 8.57 8.57 0 003.894 1.534v.633c0 .538.422.975.943.975.521 0 .944-.437.944-.975v-.65a5.205 5.205 0 002.956-1.54c1.053-1.1 1.529-2.62 1.277-4.062a4.035 4.035 0 00-2.26-2.983"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadAppFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.695 2.832C17.15 2.272 16.35 2 15.24 2H8.602c-2.157 0-3.25 1.106-3.25 3.291v13.104c0 2.216 1.063 3.291 3.25 3.291h6.639c2.188 0 3.25-1.075 3.25-3.291V5.29c0-1.106-.261-1.91-.796-2.46zm-4.947 16.221c-.196.199-.48.305-.82.305-.343 0-.628-.106-.822-.305-.193-.199-.288-.47-.288-.81 0-.697.414-1.114 1.112-1.114.697 0 1.11.417 1.11 1.115-.004.339-.102.61-.292.81zm2.86-7.123L12.3 15.74a.502.502 0 01-.378.173.502.502 0 01-.379-.174l-3.3-3.81a.498.498 0 01.051-.705.506.506 0 01.328-.123h1.437V6.179a.853.853 0 01.232-.616.912.912 0 01.743-.289h1.834c.482 0 .871.387.874.869 0 .03 0 .059-.005.09V11.1h1.49a.5.5 0 01.38.829z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadAppLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.55 2.156c1.03 0 1.773.244 2.271.745.499.502.74 1.241.74 2.266v13.656c0 1.036-.244 1.781-.745 2.28-.496.493-1.238.731-2.266.731H8.449c-1.028 0-1.77-.238-2.266-.731-.502-.496-.745-1.244-.745-2.28V5.167c0-1.008.243-1.745.742-2.249.507-.512 1.25-.762 2.269-.762h7.1zm0 .56H8.449c-.863 0-1.474.194-1.871.594-.393.395-.583 1.003-.583 1.857v13.656c0 1.742.711 2.45 2.45 2.45h7.102c1.742 0 2.45-.708 2.45-2.45V5.167c0-.87-.187-1.484-.574-1.87-.386-.387-1-.58-1.873-.58zm-3.544 15.11c.504 0 .83.266.83.834 0 .275-.074.477-.208.614-.146.148-.359.221-.622.221s-.476-.073-.622-.221c-.134-.137-.21-.339-.21-.614 0-.568.328-.834.832-.834zm-.941-12.359h1.927a.665.665 0 01.664.74v5.263h1.796a.28.28 0 01.21.465l-3.451 3.927a.282.282 0 01-.42-.003l-3.44-3.924a.282.282 0 01.025-.395.281.281 0 01.185-.07h1.742V6.156a.639.639 0 01.207-.498.69.69 0 01.555-.19zm-.053.558a.142.142 0 00-.118.039.085.085 0 00-.034.061v5.625a.28.28 0 01-.28.28H9.177l2.824 3.221 2.831-3.22h-1.456a.28.28 0 01-.28-.28V6.186c0-.014 0-.028.003-.042a.097.097 0 00-.023-.081.097.097 0 00-.073-.037h-1.955c-.011 0-.022 0-.036-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadAppRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.204 2c1.11 0 1.916.269 2.471.826.555.558.82 1.362.82 2.465v13.11c0 1.114-.271 1.927-.826 2.478-.554.547-1.358.813-2.465.813H8.65c-1.107 0-1.913-.266-2.465-.813-.558-.551-.826-1.364-.826-2.479V5.291c0-1.087.268-1.885.823-2.448C6.742 2.277 7.55 2 8.65 2h6.554zm0 1.12H8.65c-1.54 0-2.171.63-2.171 2.171v13.11c0 1.582.588 2.17 2.17 2.17h6.555c1.583 0 2.171-.588 2.171-2.17V5.29c0-.792-.162-1.341-.493-1.675-.33-.333-.882-.496-1.678-.496zM11.93 17.13c.697 0 1.11.417 1.11 1.115 0 .341-.099.613-.29.81-.19.195-.481.304-.823.304-.342 0-.627-.106-.82-.305-.194-.199-.29-.47-.29-.81 0-.697.415-1.114 1.113-1.114zm-.9-11.855h1.838c.482 0 .871.387.874.869 0 .03 0 .059-.005.09V11.1h1.49a.499.499 0 01.378.829l-3.308 3.81a.492.492 0 01-.754 0l-3.3-3.81a.498.498 0 01.051-.706.506.506 0 01.328-.123h1.437V6.179a.86.86 0 01.271-.658.9.9 0 01.7-.247zm1.707 1.003h-1.675v5.325a.5.5 0 01-.502.502h-.84l2.202 2.546 2.21-2.546h-.894a.5.5 0 01-.501-.502V6.277z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadCloudFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.33 15.927l-.411.431-4.065 3.71-3.997-3.701-.501-.532a.322.322 0 01-.065-.356.32.32 0 01.303-.213h1.86c.064 0 .123-.059.123-.129v-4.594c0-.179.148-.33.328-.33h3.868c.182 0 .328.146.328.328v.002l.017 4.69c0 .067.05.125.123.125h1.851a.32.32 0 01.306.202.359.359 0 01-.068.367m.659-8.322c-1.177-3.731-5.266-3.927-6.087-3.927-1.062 0-6.286.297-6.4 6.087C3.447 10.162 2 11.179 2 13.787c0 3.199 2.18 4.333 4.23 4.333l2.277-.008 2.804 2.597a.849.849 0 00.552.193.894.894 0 00.568-.202l2.855-2.633 1.227-.008c.862 0 5.173-.247 5.173-5.25 0-4.364-3.283-5.092-4.697-5.204"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadCloudLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.666 17.02l-.978.008 1.02-1.081a.687.687 0 00.123-.714.639.639 0 00-.585-.401h-1.67l-.008-4.521c-.008-.359-.286-.655-.641-.655H10.06a.652.652 0 00-.641.655v4.437H7.742a.632.632 0 00-.586.4.683.683 0 00.132.718l1.143 1.21-2.056.008c-1.02 0-3.398-.342-3.398-3.507 0-1.77.742-2.896 2.204-3.33.183-.05.295-.334.295-.519 0-5.072 4.268-5.467 5.577-5.467.74 0 4.484.17 5.38 3.619a.409.409 0 00.387.313c1.26.034 4.196.535 4.196 4.404.003 4.106-3.328 4.423-4.35 4.423zm-4.613 2.675L8.184 15.6h1.423a.643.643 0 00.633-.656v-4.437h3.504l.009 4.521c0 .367.288.656.641.656h1.407l-3.748 4.01zm5.092-12.34c-1.176-3.755-5.263-3.949-6.087-3.949-1.061 0-6.294.297-6.4 6.123-1.054.401-2.502 1.423-2.502 4.045 0 3.219 2.182 4.359 4.23 4.359l2.846-.017 2.361 2.513a.642.642 0 00.462.204.632.632 0 00.451-.204l2.387-2.538 1.776-.017c.865 0 5.176-.246 5.176-5.28-.002-4.395-3.285-5.129-4.7-5.238z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadCloudRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.445 16.966h-.476l.661-.697a.887.887 0 00.168-.922.83.83 0 00-.764-.515h-1.435l-.008-4.213a.842.842 0 00-.83-.838H9.976a.841.841 0 00-.832.85v4.111l-1.443.009a.815.815 0 00-.756.515.863.863 0 00.168.922l.782.832-1.524.008c-.944 0-3.135-.308-3.135-3.216 0-1.63.678-2.66 2.014-3.05a.605.605 0 00.434-.608v-.11c0-4.753 4.028-5.117 5.264-5.117.7 0 4.238.157 5.067 3.373.073.266.305.46.571.465 1.177.033 3.916.498 3.916 4.09.003 3.82-3.106 4.111-4.056 4.111zm-4.52 2.519l-3.303-3.5h.91c.46 0 .82-.372.82-.845v-4.112h3.032l.008 4.204c0 .465.37.85.83.85h.901l-3.199 3.403zm5.13-11.945c-1.24-3.673-5.286-3.863-6.11-3.863-1.064 0-6.277.291-6.47 6.042-1.064.44-2.45 1.504-2.45 4.09 0 3.288 2.24 4.462 4.344 4.462l2.7-.017 2.263 2.392a.828.828 0 00.589.258.831.831 0 00.588-.258l2.28-2.426 1.653-.008c2.434 0 5.268-1.404 5.268-5.359.003-3.6-2.325-5.087-4.655-5.313z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.83 21.67a.949.949 0 01-.726-.337l-8.84-9.143c-.012-.01-.02-.022-.032-.033a1.01 1.01 0 01-.128-1.079.958.958 0 01.87-.56h3.934V3.922c0-1.05.854-1.905 1.904-1.905h6.031c1.053 0 1.905.851 1.905 1.905l-.003 6.596h3.96c.376 0 .718.219.875.56.17.353.12.776-.13 1.079-.008.011-.019.022-.03.033l-8.863 9.143a.959.959 0 01-.728.336z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.992 21.826a.698.698 0 01-.541-.255l-9.107-9.418-.016-.016a.76.76 0 01-.096-.813.709.709 0 01.645-.414h4.17c.087 0 .16-.084.16-.185V3.837c0-.927.754-1.68 1.68-1.68h6.211c.927 0 1.68.753 1.68 1.68l-.002 6.885c0 .104.07.185.16.185h4.196a.711.711 0 01.644.417.755.755 0 01-.098.813l-.017.016-9.132 9.418a.706.706 0 01-.537.255zm-9.233-10.05l9.104 9.414.017.017c.028.036.07.056.114.058a.146.146 0 00.115-.058l.017-.017 9.126-9.415a.21.21 0 00.02-.21.153.153 0 00-.14-.095h-4.2a.734.734 0 01-.72-.745l.004-6.882a1.12 1.12 0 00-1.12-1.12H8.887a1.12 1.12 0 00-1.12 1.12v6.88a.733.733 0 01-.72.744H2.88a.153.153 0 00-.14.095.208.208 0 00.02.213z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDownloadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.83 21.67a.949.949 0 01-.726-.337l-8.84-9.143c-.012-.01-.02-.022-.032-.033a1.01 1.01 0 01-.128-1.079.958.958 0 01.87-.56h3.934V3.922c0-1.05.854-1.905 1.904-1.905h6.031c1.053 0 1.905.851 1.905 1.905l-.003 6.596h3.96c.376 0 .718.219.875.56.17.353.12.776-.13 1.079-.008.011-.019.022-.03.033l-8.863 9.143a.959.959 0 01-.728.336zM3.212 11.607l8.619 8.913 8.641-8.913H16.63a.987.987 0 01-.972-.997l.003-6.687a.816.816 0 00-.815-.818h-6.03A.816.816 0 008 3.922v6.686a.987.987 0 01-.972.997H3.213v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDrinkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.958 6.263c.118 0 .216.098.216.14l-.266 2.264h-1.606l-2.529 10.515a.62.62 0 01-.608.482c-.05 0-.092-.008-.143-.017a.621.621 0 01-.465-.745l2.457-10.235H6.51l-.258-2.188c0-.115.093-.216.216-.216h9.129l-.583 2.404h1.288l.575-2.404h1.081zm-6.591 11.222c-.165.165-.325.224-.465.224a.635.635 0 01-.434-.2l-.042-.041c-.093-.093-.41-.482.025-.91.165-.166.325-.216.457-.216a.7.7 0 01.448.19l.042.042c.095.09.412.47-.031.91zm-2.022-3.589c-.393 0-.692-.249-.79-.347a.577.577 0 01-.076-.084c-.157-.165-.731-.863.05-1.633.292-.3.583-.398.832-.398.4 0 .7.258.799.348.025.025.05.05.075.084.166.165.723.846-.05 1.624-.305.306-.597.406-.84.406zm11.742-9.77L17.409 2.08a.611.611 0 00-.55-.026.6.6 0 00-.358.423l-.607 2.544H6.465C5.658 5.02 5 5.675 5 6.552l.25 2.112.148 1.244L6.63 20.224c0 .804.656 1.46 1.465 1.46h8.23c.807 0 1.456-.656 1.456-1.384l1.233-10.392.148-1.244.258-2.188c0-.804-.658-1.46-1.465-1.46h-.781l.347-1.45 2.955 1.641c.3.174.675.068.849-.24a.615.615 0 00-.238-.84z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDrinkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.754 6.797H16.51l-.678 2.774h2.06l.29-2.409c-.003-.178-.192-.365-.427-.365zm-1.21 13.976l1.248-10.383h-2.16l-2.268 9.31a.415.415 0 01-.5.302h-.002a.408.408 0 01-.309-.49v-.002l2.221-9.12H6.213l1.246 10.334c.002.276.193.462.426.462h8.236a.42.42 0 00.423-.413zM6.251 6.797a.419.419 0 00-.423.414l.287 2.36h8.864l.675-2.774H6.25zm14.535-1.725c.2.108.274.36.162.557a.422.422 0 01-.569.157l-3.196-1.758-.475 1.95h1.049c.691 0 1.257.554 1.257 1.233l-1.64 13.605c.003.632-.56 1.184-1.25 1.184h-8.24a1.245 1.245 0 01-1.256-1.233L5 7.262a1.253 1.253 0 011.254-1.281h9.599l.647-2.666a.415.415 0 01.61-.263l3.676 2.02zm-10.812 9.06c.782-.765.219-1.44.052-1.608l-.076-.076c-.099-.092-.402-.344-.8-.344-.25 0-.536.098-.834.39-.776.762-.207 1.449-.049 1.611l.08.079c.1.1.395.343.786.343.249.003.538-.097.841-.395zm.65-2.179c.675.681.916 1.795-.062 2.755-.536.527-1.074.638-1.432.638-.696 0-1.19-.405-1.374-.581-.032-.033-.065-.062-.095-.095-.664-.686-.905-1.803.063-2.752.53-.522 1.065-.63 1.423-.63.696 0 1.196.4 1.38.573.032.027.068.062.098.092zm.541 6.11c.435-.427.123-.803.03-.895a.598.598 0 00-.043-.04.68.68 0 00-.445-.192c-.137 0-.298.054-.462.219-.432.422-.115.806-.03.895l.044.043a.669.669 0 00.437.192c.139 0 .3-.057.47-.222zm.558-1.53l.068.068c.483.49.68 1.338-.038 2.044-.388.38-.787.46-1.057.46-.37 0-.74-.157-1.02-.425l-.062-.062c-.48-.492-.67-1.341.04-2.039.383-.378.785-.457 1.053-.457a1.5 1.5 0 011.016.411z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDrinkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.955 6.266h-1.081l-.577 2.4h1.61l.27-2.26c-.006-.045-.104-.14-.222-.14zm-1.42 13.964l1.224-10.322h-1.762L13.77 19.19a.625.625 0 01-1.215-.29l2.157-8.992h-8.06l1.222 10.246c.003.19.1.286.218.286h8.23a.209.209 0 00.213-.21zM6.459 6.266a.213.213 0 00-.212.213l.26 2.188h8.504l.577-2.4H6.46zM21.084 4.13a.62.62 0 01.24.843v.003a.618.618 0 01-.842.24l-.006-.002-2.955-1.647-.35 1.456h.781c.807 0 1.465.653 1.465 1.457L17.78 20.303c.003.73-.65 1.383-1.46 1.383H8.092A1.46 1.46 0 016.63 20.23L5 6.552c-.003-.877.653-1.53 1.46-1.53h9.43l.609-2.546a.609.609 0 01.355-.423.624.624 0 01.555.025l3.675 2.05zM10.18 13.496c.782-.779.219-1.462.054-1.63l-.076-.076c-.101-.095-.4-.347-.798-.347-.25 0-.535.098-.835.395-.776.773-.207 1.467-.05 1.635l.078.079c.103.1.395.35.787.35.246-.003.538-.104.84-.406zm.65-2.21c.675.689.916 1.82-.061 2.795-.535.535-1.073.644-1.429.644-.698 0-1.19-.408-1.37-.585l-.098-.098c-.664-.697-.902-1.83.065-2.793.529-.526 1.067-.638 1.423-.638.697 0 1.193.406 1.375.58.028.027.064.061.095.095zm.54 6.196c.435-.434.121-.813.029-.908l-.042-.042a.672.672 0 00-.443-.193c-.137 0-.297.056-.465.221-.431.429-.115.815-.028.908.014.014.028.03.045.045a.656.656 0 00.437.196c.137 0 .297-.06.468-.227zm.564-1.546l.064.064c.485.496.678 1.356-.039 2.07-.39.387-.787.468-1.056.468-.367 0-.74-.16-1.02-.432l-.064-.064c-.476-.501-.67-1.359.042-2.067.384-.381.784-.462 1.053-.462.521-.003.885.297 1.02.423z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDumbbellFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2 8.126c0-.74.571-1.336 1.28-1.336h.26v10.224h-.26c-.706 0-1.28-.6-1.28-1.336V8.126zm18.406-1.339c.706 0 1.28.6 1.28 1.336v7.55c0 .739-.574 1.335-1.28 1.335h-.24V6.784h.24v.003zM8.045 6.675V9.49h.014v4.82h-.014v2.816c0 .74-.572 1.336-1.28 1.336H5.667c-.692 0-1.255-.577-1.275-1.294V6.636c.02-.72.583-1.297 1.275-1.297h1.098c.706-.003 1.28.597 1.28 1.336zm.865 7.244v-4.04h5.894v4.04H8.91zm10.4-7.244v.112h.004v10.224h-.003v.112c0 .74-.574 1.336-1.28 1.336h-1.098c-.706 0-1.28-.6-1.28-1.336V6.675c0-.74.571-1.336 1.28-1.336h1.098c.708-.003 1.28.597 1.28 1.336z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDumbbellLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.434 5.438c.478 0 .875.371.929.846l.006.111v3.513l.042-.01.042-.007h9.093l.039.008.039.01V6.394a.95.95 0 01.827-.951l.109-.006h1.204c.479 0 .875.371.93.846l.006.111v.6h1.207c.481 0 .875.37.93.846l.006.112v8.098c0 .489-.36.893-.827.949l-.109.006H19.7v.6a.951.951 0 01-.827.951l-.109.007H17.56a.945.945 0 01-.93-.847l-.006-.111v-3.513l-.038.01-.04.007H7.453l-.042-.008-.042-.009v3.513a.951.951 0 01-.827.951l-.108.007H5.229a.945.945 0 01-.93-.847l-.005-.111v-.6H3.092a.94.94 0 01-.93-.843l-.006-.112v-8.1c0-.49.36-.894.826-.95l.11-.006h1.202v-.6a.95.95 0 01.826-.951l.11-.006h1.204zm12.333.957h-1.205v11.21h1.205V6.396zm-12.333 0H5.229v1.541l.001.006.002.008v8.098l-.002.009v1.548h1.204V6.396zm14.473 1.558h-1.205v8.098h1.205V7.953zm-16.613 0H3.092v8.098h1.202V7.953zm12.252 2.896H7.453v2.303h9.093v-2.303z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconDumbbellRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.787 5.339c.706 0 1.28.597 1.28 1.336V9.49h7.614V6.675c0-.737.574-1.336 1.28-1.336h1.098c.706 0 1.28.597 1.28 1.336v.112h1.095c.706 0 1.28.6 1.28 1.336v7.55c0 .736-.574 1.335-1.28 1.335H19.34v.112c0 .737-.574 1.337-1.28 1.337h-1.1c-.709 0-1.28-.597-1.28-1.337v-2.812H8.067v2.812c0 .737-.574 1.337-1.28 1.337H5.69c-.706 0-1.28-.597-1.28-1.337v-.114l-.011.002H3.3c-.709 0-1.28-.596-1.28-1.336V8.123c0-.736.574-1.336 1.28-1.336h1.098c.003 0 .005.003.011.003v-.115c0-.737.574-1.336 1.28-1.336zm11.275 1.336h-1.098v4.132l.002.02v2.145l-.002.02v4.134h1.098V15.7l-.003-.025V8.126c0-.011.003-.017.003-.025V6.675zm-11.27 0H5.696V17.12h1.098v-4c-.006-.047-.014-.098-.014-.148v-2.146c0-.05.008-.098.014-.148V6.675zm13.645 1.448h-1.095v7.55h1.095v-7.55zm-16.03 0h-1.1v7.55h1.098v-7.55zm11.28 2.703H8.072v2.146h7.613v-2.146z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEcoFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.557 2.845c1.418 0 2.524.378 3.292 1.123.79.77 1.193 1.907 1.193 3.38 0 1.15-.25 2.09-.731 2.813l-.093-.176c-.899-1.67-2.156-2.821-3.736-3.426a.54.54 0 00-.387 1.008c1.33.507 2.398 1.493 3.174 2.93.067.123.132.25.196.376.02.042.042.08.073.114l-.004-.004.777-.822c.914 1.868 1.329 4.132 1.535 6.011.383-1.333.845-2.534 1.377-3.533-.386-.686-.584-1.548-.584-2.57 0-1.474.4-2.611 1.193-3.381.767-.745 1.874-1.124 3.291-1.124h2.905c.905 0 1.639.734 1.641 1.64v2.887c0 2.888-1.605 4.479-4.518 4.479-1.37 0-2.423-.33-3.185-1.011.045-.042.056-.118.087-.177 1.079-2.145 2.426-3.378 4.006-3.666a.538.538 0 10-.193-1.062c-1.863.339-3.423 1.68-4.642 3.986l.001-.002.741.92c-.803 1.657-1.419 3.764-1.83 6.267a.54.54 0 01-1.066.103l-.008-.047c-.054-.33-.082-.82-.118-1.443-.106-1.87-.266-4.977-1.41-7.45-.744.569-1.751.862-3.002.862-2.913 0-4.518-1.59-4.518-4.479V4.483a1.64 1.64 0 011.641-1.638z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEcoLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.672 20.726l-.014-.004h-.01a.265.265 0 01-.025-.008l.049.012a.263.263 0 01-.102-.037l-.017-.013a.264.264 0 01-.105-.171c-.054-.325-.082-.824-.118-1.454-.09-1.61-.227-4.045-.933-6.3a11.511 11.511 0 00-.716-1.782l.052-.047c-.74.715-1.818 1.076-3.204 1.076-1.387 0-2.468-.364-3.21-1.079-.719-.69-1.106-1.697-1.157-2.994a.226.226 0 01-.006-.053V4.665A1.423 1.423 0 013.568 3.25h2.96c1.385 0 2.463.364 3.205 1.081.77.745 1.163 1.852 1.163 3.297 0 1.219-.278 2.2-.83 2.922 1.35 2.537 1.634 5.751 1.763 7.895.253-1.13.64-2.552 1.22-3.94.22-.525.455-1.015.703-1.466-.442-.692-.666-1.59-.666-2.68 0-1.44.39-2.543 1.157-3.285.74-.715 1.818-1.076 3.202-1.076h2.96c.77.003 1.401.63 1.401 1.4v3.208a.25.25 0 01-.009.07c-.054 1.286-.44 2.282-1.153 2.966-.737.714-1.813 1.076-3.2 1.076-1.383 0-2.461-.362-3.2-1.076l-.143-.145c-1.17 2.232-1.8 5.005-2.127 7.008a.267.267 0 01-.228.222c-.003-.001-.017.001-.03.002-.016 0-.03 0-.044-.003zm8.736-14.201h-2.963c-2.544 0-3.832 1.288-3.832 3.834 0 .865.149 1.585.445 2.158.311-.508.643-.958.992-1.348.93-1.042 1.997-1.678 3.173-1.891a.265.265 0 01.096.521c-1.71.311-2.99 1.573-3.945 3.205.633.79 1.658 1.187 3.07 1.187 2.544 0 3.833-1.288 3.833-3.832l.005-.052V7.398a.882.882 0 00-.874-.873zM6.526 3.805H3.568a.865.865 0 00-.857.86v2.96c0 2.533 1.283 3.818 3.815 3.818 1.28 0 2.24-.328 2.877-.98-.82-1.39-1.907-2.347-3.25-2.86a.267.267 0 01.19-.499c1.534.586 2.629 1.638 3.416 2.909.388-.604.582-1.402.582-2.388 0-2.535-1.283-3.82-3.815-3.82z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEcoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.561 20.337a.369.369 0 01-.06-.005l.065.005a.54.54 0 01-.532-.453c-.054-.33-.082-.821-.118-1.443-.087-1.549-.219-3.893-.894-6.053a11.23 11.23 0 00-.525-1.376c-.74.55-1.736.835-2.965.835-2.796 0-4.385-1.474-4.508-4.159a.514.514 0 01-.01-.104V4.48a1.645 1.645 0 011.641-1.638h2.877c2.91 0 4.513 1.6 4.513 4.504 0 1.16-.256 2.11-.748 2.835.955 1.873 1.345 4.079 1.533 5.937.207-.714.463-1.47.775-2.217.193-.463.397-.897.614-1.302-.392-.68-.594-1.539-.594-2.561 0-2.877 1.602-4.462 4.512-4.462h2.874c.905 0 1.642.728 1.642 1.624v3.073a.538.538 0 01-.008.093c-.12 2.667-1.711 4.131-4.508 4.131-1.348 0-2.415-.34-3.172-.99a14.51 14.51 0 00-.366.808c-.972 2.325-1.37 4.765-1.498 5.569a.543.543 0 01-.48.45l.032-.008a.3.3 0 01-.08.011h-.012zm8.453-13.691h-2.877c-2.316 0-3.442 1.109-3.442 3.389 0 .552.066 1.035.198 1.45.226-.33.46-.63.704-.904.946-1.059 2.036-1.708 3.24-1.927a.538.538 0 11.194 1.062c-1.36.247-2.546 1.192-3.534 2.813.57.599 1.447.893 2.64.893 2.317 0 3.446-1.11 3.446-3.387V7.2a.563.563 0 00-.569-.554zM6.532 3.917H3.655a.57.57 0 00-.565.566l.001 2.823.001.037c0 2.305 1.126 3.426 3.44 3.426 1.065 0 1.878-.238 2.445-.719-.752-1.2-1.725-2.032-2.91-2.486a.54.54 0 01.387-1.008c1.399.535 2.435 1.447 3.205 2.555.207-.482.31-1.07.31-1.768 0-2.305-1.123-3.426-3.437-3.426z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.21 9.975c-.249.246-2.94 2.647-7.38 6.58l-.191.154-3.417 1.255c-.054.014-.325.112-.48-.042-.15-.155-.047-.407-.03-.457l1.243-3.347a.635.635 0 01.169-.25c2.481-2.193 7.072-6.26 7.397-6.585a1.852 1.852 0 011.328-.569c.515 0 1.014.216 1.367.569.358.358.571.874.569 1.375 0 .493-.2.947-.575 1.317m1.78-1.311a3.218 3.218 0 00-.923-2.233 3.2 3.2 0 00-1.672-.862C19.16 3.36 17.653 2 15.35 2H6.392C3.87 2 2.3 3.6 2.3 6.176V17.56c0 1.23.345 2.224 1.03 2.953.73.778 1.757 1.173 3.062 1.173h8.958c1.303 0 2.337-.395 3.065-1.173.683-.729 1.028-1.723 1.028-2.953v-5.27a79.741 79.741 0 001.61-1.457c.611-.6.933-1.35.936-2.168"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.003 16.943l-.174.154a.33.33 0 01-.117.068l-3.838 1.269a.342.342 0 01-.428-.432l1.285-3.835a.337.337 0 01.098-.148c2.505-2.21 7.325-6.482 7.659-6.818.52-.52 1.084-.641 1.493-.641a2.22 2.22 0 011.546.641c.403.403.644.983.641 1.552-.002.555-.227 1.07-.65 1.487-.15.152-1.324 1.219-7.515 6.703zm5.566.897c0 .986-.26 1.764-.773 2.313-.544.58-1.345.874-2.381.874H6.272c-1.036 0-1.838-.294-2.378-.874-.513-.549-.773-1.327-.773-2.313V6.218c0-2.059 1.148-3.238 3.151-3.238h9.143c1.846 0 2.963 1.022 3.123 2.798a2.927 2.927 0 00-1.63.846c-.263.263-4.123 3.69-7.622 6.782a1.18 1.18 0 00-.333.501l-1.286 3.837a1.157 1.157 0 001.098 1.53c.123 0 .246-.02.364-.059l3.838-1.269a1.16 1.16 0 00.403-.232l.174-.154c1.689-1.496 3.56-3.157 5.022-4.46v4.74h.003zm3.417-9.084a3.073 3.073 0 00-.882-2.135 3.04 3.04 0 00-1.748-.846c-.174-2.235-1.655-3.619-3.944-3.619h-9.14c-2.451 0-3.972 1.555-3.972 4.06v11.62c0 1.203.336 2.169.994 2.875.703.75 1.703 1.132 2.978 1.132h9.143c1.272 0 2.274-.381 2.977-1.132.662-.706.998-1.672.998-2.874v-5.454c0-.003-.003-.008-.003-.014.93-.829 1.577-1.414 1.709-1.543.58-.575.887-1.292.89-2.07z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditPaperLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.842 4.9a2.845 2.845 0 00-.799-1.944 2.84 2.84 0 00-1.818-.798 2.706 2.706 0 00-2.014.798l-.543.496H6.326c-2.568-.023-4.165 1.482-4.165 3.89V17.97a3.682 3.682 0 001.076 2.79 4.285 4.285 0 003.103 1.076h9.26a4.31 4.31 0 003.116-1.076 3.684 3.684 0 001.078-2.79V7.945l1.238-1.157a2.68 2.68 0 00.81-1.888zm-3.219 13.067a2.618 2.618 0 01-.717 1.955 3.24 3.24 0 01-2.316.751H6.326a3.227 3.227 0 01-2.316-.75 2.622 2.622 0 01-.695-1.956V7.343c0-1.712 1.076-2.757 3.023-2.757h9.053L10.878 8.57a1.343 1.343 0 00-.347.52l-1.065 3.183c-.154.431-.042.91.289 1.227.221.232.526.36.846.358.126.017.255.017.38 0l3.197-1.053a1.23 1.23 0 00.417-.244s2.21-1.944 4.017-3.563l.011 8.97zm-8.103-5.325l1.078-3.204c1.726-1.493 6.123-5.359 6.437-5.658a1.49 1.49 0 011.076-.463h.07c.84.042 1.498.734 1.504 1.575a1.516 1.516 0 01-.462 1.075c-.348.325-5.58 4.955-6.404 5.684l-3.196 1.053c0-.003-.103-.062-.103-.062z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditPaperRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.627 5.807c-.308.302-5.226 4.652-6.112 5.46l-2.65.873.866-2.58c.6-.53 5.826-5.134 6.168-5.473.63-.628 1.398-.334 1.731 0 .227.23.37.566.367.885 0 .317-.134.619-.37.835zm-1.635 11.87c0 .743-.2 1.298-.614 1.698-.448.434-1.137.653-2.045.653H6.345c-.908 0-1.597-.219-2.045-.653-.412-.397-.614-.952-.614-1.694V7.356c0-1.98 1.446-2.398 2.659-2.398h8.05c-1.115.989-2.496 2.207-3.826 3.378-.19.168-.334.384-.415.628l-1.04 3.09a1.445 1.445 0 001.83 1.837l3.112-1.025a1.41 1.41 0 00.496-.286c.03-.028 1.793-1.583 3.442-3.045-.002-.003-.002 8.143-.002 8.143zm3.694-12.702a2.995 2.995 0 00-.863-2.084c-1.01-1.011-2.826-1.286-4.117 0-.042.042-.196.182-.434.395a26.211 26.211 0 00-.939-.017H6.345C3.705 3.272 2 4.874 2 7.356v10.322c0 1.207.378 2.188 1.129 2.907.776.751 1.857 1.13 3.218 1.13h8.99c1.358 0 2.442-.379 3.218-1.127.747-.722 1.128-1.7 1.128-2.91l-.008-9.644c.6-.535 1.036-.928 1.137-1.026a2.811 2.811 0 00.874-2.033z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditPencilLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.073 20.688c.308 0 .555.258.555.58 0 .32-.25.58-.555.58H3.96a.565.565 0 01-.555-.58c0-.319.25-.58.555-.58h16.112zM4.916 19.425c-.387 0-.753-.165-1.022-.45a1.611 1.611 0 01-.345-1.553l1.524-4.837c.09-.26.24-.493.445-.672 4.19-3.958 8.692-8.264 9.003-8.589a3.346 3.346 0 012.434-1.168 3.518 3.518 0 012.566 1.157 4.13 4.13 0 011.112 2.731 3.852 3.852 0 01-1.112 2.661c-.555.625-9.025 8.645-9.112 8.726a1.23 1.23 0 01-.501.3l-4.535 1.607c-.149.065-.303.09-.457.087zm-.31-1.653a.387.387 0 00.089.393c.081.09.207.126.322.092l4.535-1.552a.315.315 0 00.112-.07c1.4-1.33 8.591-8.17 9.067-8.68a2.723 2.723 0 00.757-1.91 2.916 2.916 0 00-.746-1.934 2.444 2.444 0 00-1.767-.787 2.36 2.36 0 00-1.712.787c-.411.451-6.666 6.39-9.036 8.645a.352.352 0 00-.1.151l-1.522 4.865z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditPencilRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.017 19.933c.442 0 .804.375.804.837 0 .465-.362.84-.804.84H4.482c-.443 0-.804-.375-.804-.84 0-.462.361-.837.804-.837h15.535zM6.846 12.745L5.36 17.482l.045.115h.006l4.372-1.558c2.112-2.008 8.33-7.95 8.751-8.395a2.27 2.27 0 00.644-1.594 2.54 2.54 0 00-.638-1.672 2.107 2.107 0 00-1.51-.678c-.538 0-1.042.236-1.451.678-.482.516-8.398 8.048-8.734 8.367zm-1.443 6.53a1.63 1.63 0 01-1.182-.527 1.823 1.823 0 01-.39-1.784l1.466-4.704c.09-.29.252-.554.47-.759 3.975-3.784 8.362-7.977 8.653-8.29.712-.768 1.636-1.191 2.608-1.191.992 0 1.964.434 2.664 1.187a4.25 4.25 0 011.092 2.843 3.987 3.987 0 01-1.106 2.765c-.552.588-8.717 8.373-8.798 8.448a1.552 1.552 0 01-.577.359L5.93 19.179a1.461 1.461 0 01-.527.095z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEditRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.208 9.975c-.25.246-2.942 2.647-7.381 6.58l-.19.154-3.76 1.243c-.053.014-.104.003-.137-.03a.127.127 0 01-.031-.135l1.297-3.815c2.454-2.168 7.182-6.356 7.512-6.686a1.852 1.852 0 011.328-.569c.516 0 1.014.216 1.367.569.359.358.572.874.569 1.375 0 .49-.2.944-.574 1.314zm-1.97 7.585c0 .913-.238 1.63-.703 2.13-.493.526-1.227.792-2.185.792H6.392c-.958 0-1.691-.266-2.184-.793-.468-.499-.704-1.213-.704-2.129V6.176c0-1.915 1.026-2.972 2.888-2.972h8.958c1.656 0 2.645.852 2.844 2.39-.56.129-1.09.406-1.521.837-.255.255-4.034 3.608-7.457 6.636a1.327 1.327 0 00-.384.577l-1.26 3.76a1.333 1.333 0 001.266 1.761c.143 0 .283-.022.42-.067l3.76-1.244c.17-.056.332-.148.467-.269l.143-.126a2445.19 2445.19 0 004.613-4.095v4.196h-.003zm3.748-8.896a3.218 3.218 0 00-.921-2.233 3.2 3.2 0 00-1.673-.862C19.157 3.36 17.65 2 15.348 2H6.392C3.87 2 2.3 3.6 2.3 6.176V17.56c0 1.23.345 2.224 1.028 2.953.728.778 1.756 1.173 3.062 1.173h8.958c1.302 0 2.336-.395 3.064-1.173.683-.729 1.03-1.723 1.03-2.953v-5.27a89.456 89.456 0 001.611-1.457c.608-.6.93-1.35.933-2.168z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconElectrocardiogramFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.95 6.265L6.098 12.32H4.322c-.515-1.126-.919-2.238-1.174-3.33-.51-2.163-.09-3.962 1.177-5.062.737-.64 1.74-1.023 2.823-1.079.099-.005.194-.008.289-.008 1.053 0 2.129.294 3.137.86.373.21.76.434 1.18.686a.284.284 0 00.271.003c.42-.252.807-.476 1.182-.69 1.006-.562 2.084-.86 3.135-.86.098 0 .193.004.291.01 1.084.055 2.087.439 2.824 1.078 1.268 1.1 1.686 2.899 1.176 5.061-.263 1.12-.68 2.263-1.218 3.42h-3.241l-1.247-3.602a.612.612 0 00-.577-.414h-.017a.614.614 0 00-.571.445l-1.036 3.569h-1.023a.61.61 0 00-.585.44l-.423 1.4-1.563-7.922a.611.611 0 00-.569-.495.603.603 0 00-.613.434zm7.212 6.969a.612.612 0 00.578.414h3.058c-.271.502-.56.992-.862 1.471-1.048 1.647-1.886 2.711-3.306 4.196a.43.43 0 01-.033.037c-.14.145-.628.644-1.042.946a3.1 3.1 0 01-1.16.53 2.15 2.15 0 01-.364.053h-.017c-.036.003-.073.003-.11.003h-.033c-.039 0-.073-.003-.106-.003h-.017a2.004 2.004 0 01-.364-.053 3.1 3.1 0 01-1.16-.53c-.414-.3-.902-.8-1.042-.946-1.442-1.505-2.286-2.575-3.339-4.233a24.103 24.103 0 01-.916-1.557H6.55c.269 0 .507-.18.585-.437l1.272-4.163 1.566 7.941a.61.61 0 001.185.059l1-3.316h1.025a.612.612 0 00.588-.446l.628-2.165.764 2.199zM2.613 12.32h1.71l.607 1.24H2.613A.617.617 0 012 12.94c0-.342.275-.62.613-.62zm18.46.087c.339 0 .613.277.613.619a.613.613 0 01-.613.619h-2.275l.617-1.241c0 .003 1.658.003 1.658.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconElectrocardiogramLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.523 13.988c-1.039 1.6-1.865 2.628-3.272 4.07l-.008.006-.025.03c-.269.275-.661.645-.95.852a2.397 2.397 0 01-.89.395 1.1 1.1 0 01-.227.03h-.023l-.092.004-.065-.003h-.014a1.496 1.496 0 01-.246-.036 2.34 2.34 0 01-.871-.395c-.378-.27-.86-.754-.953-.852-1.428-1.462-2.263-2.499-3.308-4.106a24.06 24.06 0 01-.79-1.317h.81a.415.415 0 00.398-.291L8.54 7.436l1.762 8.74c.04.193.21.333.409.333a.42.42 0 00.4-.294l1.065-3.462h1.202c.184 0 .347-.12.4-.297l.824-2.782.991 2.802a.417.417 0 00.392.277h2.28c-.238.412-.476.823-.742 1.235M3.933 8.114c-.443-1.846-.113-3.353.935-4.243.613-.521 1.46-.835 2.386-.883a7.57 7.57 0 01.252-.005c.93 0 1.9.263 2.799.756.375.207.759.426 1.196.683a1.132 1.132 0 001.115-.005 38.6 38.6 0 011.182-.675c.899-.493 1.865-.757 2.798-.757.084 0 .168.003.252.006.924.048 1.773.361 2.384.882 1.045.888 1.378 2.395.935 4.244-.3 1.24-.8 2.521-1.465 3.815H16.28l-1.322-3.737a.399.399 0 00-.403-.277.417.417 0 00-.39.297l-1.1 3.717h-1.2a.42.42 0 00-.4.294l-.672 2.185-1.759-8.725a.415.415 0 00-.39-.33c-.179-.032-.36.108-.417.29l-1.935 6.202h-.936c-.642-1.268-1.13-2.518-1.424-3.734m17.496 3.815H19.63c.6-1.227 1.061-2.44 1.347-3.621.518-2.163.092-3.961-1.202-5.062-.75-.639-1.776-1.023-2.885-1.079a5.253 5.253 0 00-.297-.008c-1.075 0-2.176.294-3.201.86-.407.224-.807.454-1.205.69a.304.304 0 01-.277 0 28.923 28.923 0 00-1.202-.693c-1.028-.563-2.129-.86-3.204-.86-.098 0-.196.003-.295.009-1.106.056-2.131.437-2.885 1.078-1.294 1.1-1.722 2.9-1.204 5.062.28 1.157.725 2.341 1.302 3.538H2.574a.418.418 0 00-.418.414c0 .23.188.415.418.415h2.263c.314.585.653 1.173 1.036 1.764 1.076 1.659 1.939 2.729 3.41 4.233.142.146.64.644 1.064.947.364.26.776.442 1.185.529.117.028.243.045.372.053h.009l.008.003.11.003h.033c.042 0 .078 0 .112-.003l.008-.003h.009c.129-.008.255-.025.372-.053a3.14 3.14 0 001.185-.53c.423-.302.922-.8 1.065-.946l.033-.037c1.451-1.487 2.305-2.551 3.375-4.196.365-.563.692-1.123.995-1.68h2.21c.23 0 .417-.185.417-.415a.412.412 0 00-.417-.412"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconElectrocardiogramRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.905 14.447c-1 1.574-1.796 2.585-3.154 4.005l-.042.042-.017.02c-.241.25-.597.591-.854.776a1.92 1.92 0 01-.726.33.767.767 0 01-.14.02h-.067l-.037.003-.044-.003h-.012a1.275 1.275 0 01-.176-.025 1.92 1.92 0 01-.703-.325c-.266-.193-.639-.552-.877-.801-1.37-1.437-2.174-2.457-3.182-4.042-.188-.294-.35-.591-.521-.885h.199c.272 0 .507-.18.585-.437l1.272-4.16 1.566 7.941c.056.28.288.485.571.499h.031c.272 0 .507-.18.585-.44l1-3.317h1.026c.271 0 .51-.179.588-.445l.627-2.165.76 2.196a.612.612 0 00.577.414h1.635c-.154.267-.297.533-.47.799M4.339 8.702c-.23-.978-.434-2.776.784-3.832.532-.462 1.275-.74 2.09-.782a5.58 5.58 0 01.224-.005c.846 0 1.725.243 2.543.703.365.204.74.423 1.168.683.465.266 1.04.26 1.502-.011.409-.247.784-.465 1.148-.672.821-.46 1.7-.703 2.544-.703.073 0 .151.002.224.005.815.042 1.557.32 2.09.782 1.218 1.056 1.013 2.857.781 3.832-.283 1.204-.76 2.448-1.392 3.706H16.17l-1.247-3.6a.58.58 0 00-.593-.414.614.614 0 00-.572.445l-1.03 3.569h-1.023a.61.61 0 00-.586.44l-.422 1.4-1.564-7.922a.614.614 0 00-.568-.498.596.596 0 00-.62.437l-1.85 6.056h-.412C5.08 11.09 4.616 9.884 4.339 8.7m16.734 3.707h-1.658c.537-1.155.955-2.3 1.218-3.418.51-2.162.09-3.96-1.176-5.061-.737-.64-1.74-1.023-2.824-1.079a4.96 4.96 0 00-.288-.008c-1.054 0-2.132.294-3.138.86-.397.224-.79.45-1.179.686a.276.276 0 01-.272 0 45.053 45.053 0 00-1.176-.686c-1.006-.566-2.087-.86-3.14-.86-.095 0-.19.003-.286.008-1.084.056-2.09.44-2.823 1.079-1.272 1.1-1.692 2.899-1.183 5.061.258 1.093.659 2.207 1.174 3.33H2.613a.617.617 0 00-.613.623c0 .341.275.619.613.619H4.93c.28.518.583 1.036.916 1.557 1.056 1.661 1.896 2.728 3.339 4.235.14.146.627.645 1.042.947.356.26.756.443 1.16.53.12.028.243.044.367.053h.016c.034.003.07.003.107.003h.033c.04 0 .073-.003.11-.003h.014c.123-.006.246-.025.367-.054a3.1 3.1 0 001.16-.529c.414-.3.901-.801 1.041-.947l.034-.036c1.42-1.488 2.258-2.552 3.305-4.199.314-.49.6-.983.866-1.473h2.271a.62.62 0 00.614-.62.625.625 0 00-.62-.618"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.801 16.827c.026.215.065.888-.392 1.437-.246.297-.728.652-1.616.67-.518.008-2.465.01-4.83.01-4.565 0-10.688-.01-11.075-.01a1.706 1.706 0 01-1.151-.48c-.38-.372-.577-.905-.577-1.585V7.4l8.025 5.059c.042.03.72.51 1.658.51.471 0 1.009-.12 1.563-.485l8.41-5.123-.015 9.465zm-9.039-5.35c-.966.63-1.832.039-1.896-.006L2.33 6.09c.078-.202.19-.406.358-.583.303-.319.717-.487 1.202-.487l16.221.003c.367.003 1.14.201 1.505 1.061l-8.855 5.393z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.834 17.817c-.168.199-.462.305-.874.31-1.543.026-16.092 0-16.246 0a.755.755 0 01-.451-.198c-.188-.185-.283-.488-.283-.902V7.682l7.3 4.63c.041.029.68.488 1.568.488.448 0 .964-.118 1.493-.468l7.678-4.664-.009 9.426c0 .003.068.434-.176.723M3.719 5.837l16.586.002c.103.003.593.065.691.883l-8.095 4.918c-1.11.726-2.098.04-2.16-.003L2.986 6.716c.02-.219.081-.521.255-.703.115-.118.272-.177.48-.177m18.106 11.19L21.84 6.93c-.042-1.538-1.012-1.888-1.535-1.908L3.719 5.016c-.434 0-.81.15-1.078.437-.524.554-.488 1.411-.482 1.484v10.087c0 .644.18 1.146.53 1.487.277.27.646.426 1.033.435.098 0 6.555.01 11.333.01 2.415 0 4.398-.002 4.919-.01.667-.012 1.17-.219 1.496-.614.473-.571.364-1.297.356-1.305"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.502 17.527c-.154.182-.471.224-.706.23-1.513.025-15.762-.003-15.92 0a.53.53 0 01-.296-.138c-.18-.173-.216-.495-.216-.733V8.174l6.832 4.294a3.04 3.04 0 001.661.513c.47 0 1.009-.123 1.563-.485l7.216-4.347-.011 8.737.008.095c-.003.003.045.342-.131.546M3.888 6.217l16.263.002c.014 0 .342.011.451.552l-7.826 4.717c-.966.63-1.835.039-1.9-.009l-7.49-4.708c.026-.163.08-.342.18-.448.05-.048.132-.107.322-.107m17.941 10.63l.014-9.776c-.045-1.711-1.224-2.075-1.706-2.047L3.891 5.02c-.482 0-.9.168-1.202.487-.571.6-.532 1.51-.526 1.577v9.799c0 .68.193 1.215.577 1.588.49.476 1.103.493 1.15.479.387 0 6.52.014 11.093.014a437.3 437.3 0 004.835-.014c.89-.014 1.373-.373 1.62-.667.453-.549.42-1.221.391-1.437"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailVirusFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.661 10.765c-1.325 0-1.325.286-1.325.644 0 .017.003.031.003.048a4 4 0 011.32-.199c.518 0 .952.07 1.325.202l.002-.05c0-.36 0-.645-1.325-.645zm3.661 3.238c.292 0 .524.233.524.524v.773a.52.52 0 01-.524.521.522.522 0 01-.523-.521v-.252h-.13c-.005.569-.05 1.118-.184 1.608l.737.221a.52.52 0 01.372.527l-.064 1.165a.525.525 0 01-.524.493h-.028a.523.523 0 01-.496-.55l.042-.755-.493-.149c-.442.572-1.17.933-2.37.933-1.204 0-1.935-.364-2.375-.938l-.51.154.042.756a.523.523 0 01-.496.549h-.03a.525.525 0 01-.524-.493l-.065-1.165a.517.517 0 01.373-.527l.753-.227c-.131-.49-.176-1.036-.182-1.602H6.52v.252a.52.52 0 01-.524.521.522.522 0 01-.524-.521v-.773c0-.289.235-.524.524-.524h.686c.042-.46.132-.907.305-1.305l-.91-.275a.522.522 0 01-.375-.526l.064-1.166c.017-.288.26-.476.552-.493.288.017.51.26.496.55l-.042.756.54.162a1.77 1.77 0 01-.025-.297c0-1.689 1.664-1.689 2.375-1.689.712 0 2.376 0 2.376 1.69 0 .1-.011.195-.023.288l.51-.151-.042-.754a.523.523 0 01.496-.549c.3.017.538.204.552.493l.064 1.165a.525.525 0 01-.372.53l-.894.266c.174.4.266.849.308 1.31 0-.005.686-.005.686-.005zm-3.697-.863a.522.522 0 00-.524.521v2.897c0 .288.235.52.524.52a.522.522 0 00.524-.52V13.66a.52.52 0 00-.524-.52zm.336 7.499c.796-.014 3.501-.227 4.97-2.39.672-.988 1.013-2.28 1.013-3.84 0-.378-.02-.745-.059-1.087-.54-4.68-4.694-5.142-5.952-5.176-.148-.003-.32-.006-.482-.006h-.148c-1.277.014-5.46.429-5.894 5.342-.025.283-.039.58-.039.888 0 5.74 4.577 6.252 5.98 6.272.208.003.429 0 .611-.003zm1.933-17.03L5.07 7.918c-.078.056-.137.185-.173.361 1.297-.924 2.885-1.327 4.392-1.341.218-.003.465 0 .672.005 2.544.062 5.35 1.202 6.569 4.076l4.092-2.552c-.022-.272-.1-.476-.227-.569l-.078-.05-6.698-4.224a1.668 1.668 0 00-.868-.26c-.493 0-.852.24-.857.243zm9.941 13.982c.025.208.053.846-.378 1.364-.235.283-.69.622-1.527.64-.375.005-2.627.008-4.543.008-1.838 2.002-4.552 2.224-5.403 2.238-.216.002-.435.005-.653.002-1.196-.016-7.171-.459-7.171-7.473 0-.347.014-.678.042-.994.148-1.656.683-2.933 1.445-3.905v-.89c.02-.95.415-1.424.74-1.66l.129-.083 6.706-4.23a2.816 2.816 0 013.076.02l6.778 4.277c.353.25.745.726.767 1.661l-.008 9.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailVirusLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.608 17.731c1.65 0 2.129-.621 2.129-2.773 0-1.344-.204-2.073-.686-2.428-.314-.233-.785-.345-1.443-.345-.664 0-1.137.115-1.448.35-.476.362-.678 1.084-.678 2.423-.003 2.152.474 2.773 2.126 2.773zm.003-7.114c-1.378 0-1.476.294-1.476.781 0 .084.005.157.017.219.395-.163.87-.25 1.456-.25.588 0 1.067.087 1.462.252.012-.061.017-.134.017-.22 0-.488-.098-.782-1.476-.782zm3.74 3.551c.226 0 .411.185.411.41v.79a.41.41 0 01-.412.408h-.002a.41.41 0 01-.412-.409v-.383h-.378c-.003.703-.067 1.322-.227 1.843l.877.263a.41.41 0 01.294.415l-.065 1.19a.41.41 0 01-.411.387h-.023a.41.41 0 01-.39-.432l.048-.868-.675-.202c-.434.616-1.168.97-2.378.97-1.216 0-1.95-.356-2.384-.973l-.691.208.044.868a.41.41 0 01-.389.431h-.022a.411.411 0 01-.412-.386l-.065-1.19a.405.405 0 01.292-.415l.896-.27c-.16-.52-.224-1.136-.227-1.837h-.372v.381a.41.41 0 01-.412.41h-.003a.41.41 0 01-.412-.41v-.792a.41.41 0 01.412-.41h.818c.042-.546.146-1.075.373-1.529l-1.07-.32a.405.405 0 01-.292-.414l.065-1.19a.406.406 0 01.417-.39h.017a.41.41 0 01.39.432l-.046.868.838.252a1.863 1.863 0 01-.062-.482c0-1.599 1.555-1.599 2.303-1.599.745 0 2.3 0 2.3 1.6 0 .173-.023.327-.06.47l.807-.24-.047-.87a.412.412 0 01.39-.43c.262-.012.422.16.433.386l.065 1.19a.408.408 0 01-.294.415l-1.05.314c.226.454.333.986.375 1.535 0 .005.817.005.817.005zm-3.776-.88c.226 0 .411.186.411.41v2.955a.41.41 0 01-.409.409h-.002a.41.41 0 01-.412-.409v-2.955a.41.41 0 01.412-.41zm11.282 5.16c.21-.252.157-.63.157-.633l.003-8.347-4.244 2.644c.09.356.169.723.213 1.12.045.39.068.802.068 1.228 0 1.694-.376 3.126-1.093 4.277 1.82 0 3.768-.003 4.115-.008.37-.009.633-.101.781-.28zM9.92 21.024c.838-.014 3.686-.241 5.241-2.53.709-1.047 1.07-2.403 1.07-4.036 0-.392-.022-.773-.064-1.132-.572-4.944-4.947-5.431-6.275-5.465-.165-.005-.333-.005-.499-.005h-.154c-1.341.01-5.756.45-6.215 5.638-.025.308-.04.617-.04.925 0 6.045 4.827 6.585 6.309 6.608.21 0 .442 0 .627-.003zM4.815 7.66c-.19.135-.302.435-.31.86v.138c1.344-1.124 3.084-1.605 4.725-1.62.224-.002.473 0 .678.006 2.588.062 5.448 1.252 6.605 4.263l4.476-2.79.025-.008c-.01-.414-.12-.714-.327-.86l-.09-.056-6.835-4.316a1.893 1.893 0 00-.994-.294c-.577 0-.986.28-.989.282-.003-.002-6.964 4.395-6.964 4.395zm17.017 10.087c.006.006.11.687-.339 1.224-.308.37-.781.563-1.403.575-.387.005-2.754.008-4.726.01-1.82 2.048-4.57 2.272-5.428 2.286-.132.003-.286.003-.437.003H9.28c-1.19-.02-7.12-.46-7.12-7.428 0-.348.017-.681.042-.997.148-1.673.697-2.958 1.476-3.928V8.51c.02-.885.376-1.316.672-1.526l.12-.079 6.844-4.32a2.71 2.71 0 011.44-.425c.846 0 1.442.42 1.468.437l6.93 4.375c.31.222.666.653.686 1.53l-.006 9.246z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmailVirusRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.659 17.505c1.54 0 1.963-.558 1.963-2.597 0-1.275-.187-1.958-.624-2.283-.286-.21-.723-.314-1.34-.314-.621 0-1.061.104-1.347.32-.434.327-.619 1.008-.619 2.277 0 2.04.423 2.597 1.967 2.597zm.002-6.732c-1.325 0-1.325.286-1.325.645 0 .02.003.03.003.047a4 4 0 011.32-.199c.518 0 .952.07 1.325.202l.002-.05c0-.359 0-.645-1.325-.645zm3.661 3.239a.52.52 0 01.524.523v.773a.522.522 0 01-.524.521.52.52 0 01-.523-.52v-.253h-.13c-.005.569-.05 1.118-.184 1.608l.737.221a.52.52 0 01.372.527l-.061 1.165a.523.523 0 01-.524.493h-.028a.525.525 0 01-.496-.549l.042-.756-.493-.148c-.44.568-1.17.932-2.373.932-1.204 0-1.935-.364-2.375-.938l-.513.154.042.756a.523.523 0 01-.495.55h-.028a.523.523 0 01-.524-.494l-.062-1.165a.517.517 0 01.373-.527l.756-.226c-.134-.49-.176-1.037-.182-1.603h-.129v.252A.522.522 0 016 15.83a.52.52 0 01-.523-.52v-.774c0-.288.235-.523.523-.523h.687c.042-.46.134-.905.305-1.306l-.91-.271a.522.522 0 01-.373-.53l.062-1.165c.014-.289.26-.476.551-.493a.52.52 0 01.496.549l-.042.756.54.163a2.02 2.02 0 01-.024-.297c0-1.69 1.666-1.69 2.375-1.69.711 0 2.375 0 2.375 1.69 0 .1-.01.196-.022.288l.51-.151-.042-.756a.523.523 0 01.496-.55c.3.017.537.205.551.494l.062 1.165c.014.24-.14.46-.373.53l-.893.265c.174.398.266.85.308 1.311h.683v-.002zm-3.697-.863a.52.52 0 01.524.52v2.897a.522.522 0 01-.524.521.522.522 0 01-.524-.52V13.67c0-.289.235-.521.524-.521zm10.894 5.053c.148-.174.112-.468.112-.47l-.009-.096.006-7.745-3.72 2.317c.073.313.137.635.176.98.045.39.068.804.068 1.224 0 1.555-.325 2.882-.928 3.989 1.675 0 3.367-.003 3.684-.009.204.003.479-.036.61-.19zM9.96 20.647c.796-.014 3.502-.226 4.97-2.389.672-.989 1.013-2.28 1.013-3.84 0-.378-.02-.743-.059-1.087-.54-4.68-4.691-5.143-5.952-5.177-.148-.002-.32-.005-.482-.005h-.148c-1.272.011-5.454.426-5.89 5.339a9.72 9.72 0 00-.04.888c0 5.74 4.577 6.252 5.98 6.271.205.006.426.003.608 0zm1.933-17.03L5.07 7.927c-.078.057-.137.185-.173.362C6.19 7.364 7.782 6.96 9.289 6.947c.218-.003.465 0 .672.006 2.544.061 5.35 1.201 6.569 4.075l4.092-2.551c-.022-.272-.098-.477-.227-.57l-.078-.05-6.698-4.226a1.638 1.638 0 00-.865-.26c-.496.002-.855.243-.86.246zM21.835 17.6c.025.207.053.846-.378 1.364-.235.283-.69.622-1.527.636-.372.005-2.627.008-4.543.008-1.838 2.003-4.552 2.224-5.403 2.238-.13.003-.28.006-.432.006-.073 0-.146 0-.218-.003-1.2-.02-7.174-.46-7.174-7.476 0-.347.014-.678.042-.995.146-1.655.683-2.932 1.445-3.904v-.891c.023-.95.415-1.423.74-1.658l.129-.084 6.703-4.233a2.82 2.82 0 011.515-.448c.877 0 1.49.42 1.558.468l6.778 4.28c.353.25.745.725.768 1.661l-.003 9.03z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.277 8.571l-5.168.003-.003-5.162c0-.737-.574-1.41-1.204-1.41L9.773 2c-.63 0-1.204.672-1.204 1.409l.002 5.165-5.162.003C2.659 8.577 2 9.14 2 9.781v4.13c0 .64.658 1.204 1.409 1.204l5.168-.003.003 5.162c0 .751.563 1.41 1.204 1.41h4.13c.64 0 1.204-.659 1.204-1.41l-.003-5.168 5.162-.002c.737 0 1.41-.575 1.41-1.205V9.77c0-.627-.673-1.199-1.41-1.199"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.14 14.445a.41.41 0 01.408.409l.003 5.574c0 .325.233.588.384.588l4.129.003c.151 0 .384-.266.384-.591l-.003-5.577a.41.41 0 01.409-.409l5.574-.003c.322 0 .588-.252.588-.384V9.927c0-.13-.266-.384-.588-.384l-5.577.003a.41.41 0 01-.409-.41l-.003-5.57c0-.323-.255-.589-.384-.589H9.93c-.128 0-.386.266-.386.588l.003 5.577a.41.41 0 01-.41.41l-5.574.002c-.325 0-.59.233-.59.384v4.129c0 .15.265.386.59.386l5.577-.008zm4.927 7.395l-4.13-.003c-.64 0-1.204-.658-1.204-1.409l-.003-5.163-5.165.003c-.75 0-1.409-.563-1.409-1.204l.003-4.126c0-.642.658-1.205 1.412-1.205l5.16-.003-.003-5.165c0-.736.574-1.409 1.204-1.409h4.129c.63 0 1.204.673 1.204 1.41v5.162l5.169-.003c.736 0 1.409.574 1.409 1.204v4.13c0 .63-.673 1.204-1.41 1.204h-5.165l.003 5.168c0 .75-.563 1.409-1.204 1.409z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.132 14.036l-5.46.003a.604.604 0 00-.602.602l.003 5.463c0 .21-.135.36-.177.378h-4.03c-.056-.017-.188-.168-.188-.378l-.003-5.46a.604.604 0 00-.602-.602l-5.462.003c-.208 0-.362-.135-.376-.174V9.838c.017-.054.171-.188.378-.188l5.457-.003a.601.601 0 00.602-.602L9.67 3.583c0-.188.14-.359.177-.379l4.017-.002c.061.02.201.19.201.378l.003 5.456a.604.604 0 00.602.603l5.465-.003a.55.55 0 01.379.176l.002 4.017c-.025.065-.196.207-.383.207m0-5.599l-4.86.003-.003-4.855c0-.826-.658-1.582-1.381-1.582H9.843c-.723 0-1.38.753-1.38 1.582l.002 4.86-4.854.003c-.858 0-1.583.633-1.583 1.381l-.003 4.045c0 .748.723 1.38 1.583 1.38l4.86-.002.003 4.857c0 .857.633 1.583 1.38 1.583h4.045c.748 0 1.381-.726 1.381-1.583l-.003-4.86 4.858-.003c.826 0 1.582-.658 1.582-1.38V9.82c0-.726-.753-1.384-1.582-1.384"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossWithCircleFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.255 2.011c1.927.045 9.431.807 9.431 9.86 0 9.07-7.512 9.776-9.392 9.81-.176.005-.378.005-.58.005-.106 0-.215 0-.32-.003-1.977-.028-9.391-.742-9.391-9.87 0-9.116 7.347-9.793 9.322-9.81.059 0 .115-.003.176-.003.255 0 .524.006.754.011zm4.854 11.27h-3.221a.617.617 0 00-.616.615l.008 3.219c0 .151-.104.252-.137.258h-2.574c-.037-.009-.14-.107-.14-.258v-3.221a.616.616 0 00-.617-.617H6.591c-.157 0-.255-.103-.26-.137v-2.566c.008-.036.106-.14.26-.14h3.221a.616.616 0 00.617-.616V6.597c0-.14.1-.255.137-.266l2.557-.003c.045.014.149.129.149.269v3.218c0 .339.274.616.616.616h3.221c.135 0 .25.098.266.146l.003 2.555c-.014.044-.129.148-.269.148zm0-4.08h-2.608V6.606c0-.798-.638-1.496-1.367-1.496h-2.568c-.742 0-1.367.687-1.367 1.496V9.21H6.594c-.81 0-1.49.625-1.49 1.367v2.569c0 .74.68 1.367 1.49 1.367h2.605v2.605c0 .806.627 1.487 1.367 1.487h2.577c.742 0 1.367-.68 1.367-1.49l-.006-2.602h2.605c.799 0 1.499-.64 1.499-1.367v-2.577c0-.729-.7-1.367-1.499-1.367z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossWithCircleLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.436 21.014c2.014-.037 8.586-.796 8.586-8.992 0-3.55-1.216-6.112-3.608-7.614-1.955-1.226-4.163-1.406-5.022-1.428a30.532 30.532 0 00-.737-.008h-.171c-.852.008-3.045.154-4.972 1.366-2.347 1.477-3.538 4.042-3.538 7.625 0 3.588 1.202 6.163 3.572 7.656 1.944 1.224 4.154 1.386 5.014 1.397a36.442 36.442 0 00.877-.003zm-.025-18.85c1.927.046 9.432.808 9.432 9.86 0 9.074-7.516 9.777-9.393 9.813-.179.003-.383.006-.593.006-.104 0-.208 0-.309-.003-1.977-.028-9.392-.742-9.392-9.871 0-9.115 7.348-9.796 9.322-9.81h.177c.258-.005.524-.003.756.006zm5.742 11.21V10.62c0-.174-.252-.393-.532-.393h-3.448a.408.408 0 01-.409-.409V6.38c0-.282-.221-.535-.395-.535h-2.748c-.176 0-.395.247-.395.535v3.446a.41.41 0 01-.409.409H6.372c-.291 0-.524.216-.524.392v2.748c0 .182.23.392.524.392h3.445a.41.41 0 01.41.409v3.445c0 .292.215.524.394.524h2.757c.179 0 .394-.232.394-.524l-.008-3.445a.409.409 0 01.41-.412h3.444c.283.003.535-.215.535-.39zm-.532-3.968c.723 0 1.353.568 1.353 1.213v2.756c0 .647-.633 1.213-1.353 1.213h-3.036l.008 3.033c0 .729-.557 1.345-1.215 1.345H10.62c-.658 0-1.215-.616-1.215-1.345v-3.033H6.369c-.728 0-1.344-.555-1.344-1.213v-2.748c0-.655.616-1.213 1.344-1.213h3.037V6.38c0-.72.565-1.352 1.215-1.352h2.748c.647 0 1.216.633 1.216 1.352v3.026h3.036z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEmergencyCrossWithCircleRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.269 20.45c2.462-.044 8.185-.971 8.185-8.579 0-7.61-5.757-8.571-8.23-8.63a29.274 29.274 0 00-.725-.011l-.168.002c-2.435.02-8.101.902-8.101 8.58 0 7.695 5.72 8.608 8.179 8.642.098.003.202.003.302.003.197 0 .39-.003.558-.006zm-.014-18.439c1.927.045 9.431.807 9.431 9.86 0 9.07-7.512 9.776-9.392 9.81-.176.005-.378.005-.58.005-.106 0-.215 0-.32-.003-1.977-.028-9.391-.742-9.391-9.87 0-9.116 7.347-9.793 9.322-9.81.059 0 .115-.003.176-.003.255 0 .524.006.754.011zm4.854 11.27c.14 0 .255-.105.27-.15l-.004-2.554c-.016-.048-.131-.146-.266-.146h-3.221a.616.616 0 01-.616-.616V6.602c0-.14-.104-.255-.149-.269l-2.557.003c-.037.011-.137.126-.137.266v3.222a.616.616 0 01-.617.616H6.591c-.151 0-.252.103-.26.14v2.566c.002.033.103.137.26.137h3.221c.34 0 .617.274.617.616v3.221c0 .152.103.253.14.258h2.574c.033-.008.137-.106.137-.258l-.008-3.218a.615.615 0 01.616-.616h3.221v-.006zm0-4.08c.799 0 1.499.64 1.499 1.368v2.577c0 .728-.7 1.367-1.499 1.367h-2.605l.006 2.602c0 .81-.628 1.49-1.367 1.49h-2.577c-.742 0-1.367-.68-1.367-1.487v-2.605H6.594c-.81 0-1.49-.625-1.49-1.367v-2.569c0-.74.68-1.367 1.49-1.367h2.605V6.605c0-.812.627-1.496 1.367-1.496h2.568c.729 0 1.367.7 1.367 1.496v2.597h2.608z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconErrorFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.025 14.868a.616.616 0 01-.613-.616V9.78a.614.614 0 111.227 0v4.473a.614.614 0 01-.614.616zm.006 1.608a.644.644 0 010-1.288.644.644 0 010 1.288zm9.274-8.697h2.35l-4.91-4.773v2.297c0 .73.247 1.35.695 1.795.456.44 1.103.68 1.865.68zM7.238 17.636l7.294.033L9 6.485l-2.154 4.28-3.462 6.862 3.462.009h.392zm14.415-9.933a.794.794 0 01.033.182v12.6c0 .65-.566 1.201-1.227 1.201H8.067c-.647 0-1.218-.56-1.218-1.201V18.87l-3.855-.008h-.008a.993.993 0 01-.983-.98c0-.174.042-.337.115-.485l4.73-9.364V3.21c0-.633.58-1.21 1.22-1.21h7.545c.073 0 .163.017.247.05.008 0 .017 0 .017.009h.017c.056.017.145.09.196.14h.008l.417.412 4.97 4.832c.072.072.114.14.14.198.008.009.008.017.016.034-.005.003.003.02.012.028z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconErrorLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.008 20.572l.008-11.823-2.874-.017c-.933-.009-1.675-.286-2.23-.846-.94-.961-.924-2.376-.924-2.44l-.033-2.465-6.751.008a.533.533 0 00-.535.527v3.485l.636-1.241a.782.782 0 011.047-.36c.003.003.006.003.012.006a.732.732 0 01.36.361l5.962 11.919c.09.17.115.386.05.583a.77.77 0 01-.75.557h-.029l-7.28-.025v1.644c-.008.196.034.336.124.429.109.123.28.148.403.148l12.372-.017a.432.432 0 00.432-.434zm-18.02-2.574h4.69l7.296.008-5.983-11.88L7.669 8.74l-.826 1.628-3.855 7.63zm12.855-14.82a.315.315 0 00-.056-.051l.033 2.316c0 .073.009 1.174.695 1.866.39.395.941.6 1.633.6l2.616.016c-.003 0-4.921-4.748-4.921-4.748zm5.75 4.403c.157.156.25.372.25.59l-.009 12.398c0 .69-.56 1.258-1.255 1.258l-12.38.017c-.404 0-.76-.149-.998-.4-.246-.264-.364-.617-.347-1.02v-1.62l-3.897-.016c-.437.033-.792-.345-.8-.782 0-.131.033-.255.092-.378l4.596-9.014v-5.1c0-.74.611-1.348 1.353-1.348l7.166-.008c.403-.017.75.131 1.056.434l5.173 4.989zm-12.56 7.224a.416.416 0 01-.412-.412v-4.47a.412.412 0 01.824 0v4.47a.416.416 0 01-.412.412zm.006 1.804a.645.645 0 01-.645-.64.644.644 0 011.289 0 .64.64 0 01-.644.64z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconErrorRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.473 20.266V8.876l-2.61-.008c-.964-.008-1.748-.305-2.33-.893-.978-1.006-.964-2.47-.964-2.535l-.026-2.205H8.12a.3.3 0 00-.226.096.325.325 0 00-.098.224l.008 2.568.235-.46a.966.966 0 011.303-.442.98.98 0 01.454.443l5.84 11.678a.965.965 0 01-.415 1.297.91.91 0 01-.462.12h-.025l-6.922-.022v1.4c-.008.112 0 .224.056.289.048.05.138.081.252.081l12.124-.017c.131 0 .23-.103.23-.224zM3.36 17.513l3.817.008 7.208.03L8.916 6.614l-5.557 10.9zm16.565-9.84L15.76 3.654l.025 1.796c0 .022 0 1.053.622 1.689.347.347.826.515 1.465.524l2.053.008zm1.463-.275c.193.201.3.45.3.714v12.154c0 .787-.648 1.431-1.432 1.431l-12.132.017c-.454 0-.857-.168-1.131-.46-.283-.296-.412-.691-.387-1.15v-1.376l-3.625-.017h-.016a.972.972 0 01-.852-1.425l4.482-8.79-.009-4.941c0-.412.163-.787.454-1.079a1.528 1.528 0 011.084-.45h7.02a1.57 1.57 0 011.173.481l5.07 4.89zm-12.45 7.414a.606.606 0 01-.607-.602V9.835c0-.334.271-.603.607-.603.336 0 .608.272.608.603v4.375a.608.608 0 01-.608.602zm.006.314a.631.631 0 110 1.26.63.63 0 110-1.26z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEuroSymbolFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.61 18.966c-.285-.635-1.002-.913-1.604-.61-1.009.501-2.28.753-3.774.753-3.33 0-5.411-1.25-6.333-3.753h4.883c.669 0 1.204-.572 1.204-1.275s-.538-1.271-1.204-1.271H8.395c-.02-.325-.059-.634-.059-.984 0-.09.014-.162.017-.249h5.429c.669 0 1.204-.571 1.204-1.274 0-.704-.538-1.272-1.204-1.272h-5.11c.768-2.995 2.919-4.485 6.56-4.485 1.477 0 2.734.25 3.737.737.605.3 1.322.017 1.6-.62.28-.638.016-1.394-.589-1.691C18.658 2.328 17.062 2 15.235 2c-5.05 0-8.179 2.476-9.05 7.036H4.896c-.666 0-1.204.572-1.204 1.272 0 .703.538 1.275 1.204 1.275h1.04c0 .084-.009.162-.009.249 0 .336.014.661.034.983H4.896c-.666 0-1.204.569-1.204 1.272 0 .703.538 1.274 1.204 1.274h1.449c1.058 4.087 4.12 6.297 8.89 6.297 1.855 0 3.468-.333 4.801-.997.603-.3.858-1.059.575-1.695"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEuroSymbolLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.447 19.91a.642.642 0 00-.863-.325c-1.171.577-2.63.868-4.336.868-4.25 0-6.81-1.823-7.695-5.372h6.134a.666.666 0 00.65-.681.664.664 0 00-.65-.68h-6.4a14.617 14.617 0 01-.112-1.732c0-.336.042-.63.061-.95h6.449a.664.664 0 00.65-.677v-.003a.664.664 0 00-.65-.68H7.376c.69-4.076 3.317-6.16 7.872-6.16 1.686 0 3.128.288 4.294.851a.637.637 0 00.863-.33.699.699 0 00-.317-.905c-1.339-.65-2.966-.978-4.84-.978-5.26 0-8.46 2.65-9.202 7.521H4.119a.666.666 0 00-.65.68c0 .376.291.682.65.682h1.79c-.017.308-.034.621-.034.95 0 .607.04 1.176.098 1.73H4.12a.666.666 0 00-.65.68c0 .376.291.682.65.682h2.059c.927 4.417 4.01 6.734 9.067 6.734 1.899 0 3.546-.337 4.888-1a.693.693 0 00.314-.905"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEuroSymbolRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.667 18.846c-1.084.538-2.443.81-4.034.81-3.812 0-6.126-1.494-7.02-4.527h5.519c.515 0 .935-.44.935-.986 0-.544-.417-.986-.935-.986H7.266c-.04-.434-.081-.863-.081-1.342 0-.207.028-.386.036-.588h5.91c.516 0 .936-.44.936-.986s-.417-.986-.935-.986H7.45c.723-3.53 3.073-5.286 7.182-5.286 1.574 0 2.916.266 3.994.79.471.23 1.026.014 1.244-.479.216-.493.014-1.078-.456-1.308C18.09 2.325 16.479 2 14.633 2c-5.143 0-8.3 2.557-9.106 7.255H3.936c-.516 0-.936.44-.936.986s.42.986.936.986h1.397c-.005.196-.02.386-.02.588 0 .465.023.908.06 1.342H3.936c-.516 0-.936.44-.936.986 0 .543.42.986.936.986h1.736c1.006 4.216 4.098 6.496 8.958 6.496 1.871 0 3.496-.336 4.832-.998.468-.232.67-.817.448-1.31-.218-.493-.773-.706-1.243-.471"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExchangeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.507 13.487a1.35 1.35 0 01-.305.499 1.314 1.314 0 01-.49.283 2.519 2.519 0 01-.846.132c-.331 0-.614-.048-.85-.132a1.333 1.333 0 01-.481-.28 1.326 1.326 0 01-.305-.502 2.525 2.525 0 01-.135-.862c0-.404.07-.731.193-.998.068-.142.146-.271.25-.372.14-.135.316-.235.532-.305a2.6 2.6 0 01.796-.11c.305 0 .565.037.792.11.219.07.4.173.54.308.104.1.183.227.25.37.126.266.196.593.196.997 0 .333-.047.619-.137.862m8.087-7L19.02 3.882c-.183-.227-.516-.266-.802-.033l-2.59 2.638a.557.557 0 00-.068.583.53.53 0 00.476.305l.916.006c-.173.874-.815 2.56-3.16 3.3-.01-.009-.016-.02-.025-.028-.445-.429-1.084-.647-1.904-.647-.818 0-1.46.218-1.902.647-.011.01-.017.025-.028.036-2.336-.725-2.98-2.37-3.154-3.308l.918-.006a.53.53 0 00.482-.308c.09-.19.062-.42-.098-.613l-2.53-2.569-.086-.09a.513.513 0 00-.392-.112.493.493 0 00-.322.163l-2.6 2.636a.551.551 0 00-.073.582.53.53 0 00.48.309l1.03.005c.126.967.625 3.177 2.544 4.826-3.863 2.082-3.91 6.239-3.91 6.28 0 .872.705 1.583 1.588 1.592.862 0 1.577-.706 1.588-1.575.005-.392.201-3.523 4.398-4.14.056.07.103.149.168.21.442.429 1.08.645 1.899.645.82 0 1.46-.216 1.904-.645.062-.058.11-.131.163-.198 4.081.641 4.28 3.739 4.283 4.123A1.595 1.595 0 0019.8 20.08c.877 0 1.588-.714 1.588-1.596 0-.042-.045-4.163-3.834-6.255 1.95-1.636 2.459-3.804 2.59-4.852l1.026-.008a.529.529 0 00.482-.308.525.525 0 00-.06-.575"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExchangeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.371 6.55l-.025.387c-.036.535-.339 3.3-2.818 5.025l-.6.417.667.3c3.869 1.728 3.953 5.765 3.955 5.804a.77.77 0 01-.767.77.773.773 0 01-.768-.77c-.008-.457-.224-4.062-4.711-4.888a3.45 3.45 0 00.137-.986c0-.47-.078-.877-.218-1.224 3.17-1.104 3.546-3.77 3.588-4.39l-.017-.437-1.11-.01 1.892-1.928 1.904 1.927-1.109.003zm-7.53 7.832c-.33 0-.613-.045-.848-.132a1.3 1.3 0 01-.482-.283 1.284 1.284 0 01-.305-.501 2.514 2.514 0 01-.135-.863c0-.403.07-.734.194-.997.067-.143.145-.272.249-.373.14-.134.317-.235.532-.305a2.6 2.6 0 01.796-.11c.305 0 .568.037.792.11.219.07.401.174.541.308.104.101.182.227.25.37.125.263.195.594.195.997 0 .34-.05.628-.137.869a1.316 1.316 0 01-.305.495 1.318 1.318 0 01-.49.286 2.534 2.534 0 01-.846.129zm-7.29 4.1a.777.777 0 01-.774.765.768.768 0 01-.759-.764c0-.042.087-4.107 4.025-5.824l.67-.291-.597-.423c-2.44-1.726-2.74-4.473-2.773-5.006l-.084-.38-1.053-.012L5.108 4.62l1.896 1.927-1.154.006.031.44c.045.619.42 3.285 3.585 4.389a3.26 3.26 0 00-.215 1.224c0 .361.05.684.134.975-4.61.798-4.826 4.442-4.835 4.902zm17.016-12.01l-2.574-2.603c-.182-.227-.515-.266-.801-.033L15.6 6.474a.557.557 0 00-.067.583c.09.19.274.305.476.305l.916.009c-.174.874-.813 2.557-3.16 3.3l-.025-.029c-.443-.43-1.084-.647-1.905-.647-.818 0-1.46.216-1.902.647-.011.012-.017.026-.028.037-2.336-.726-2.98-2.37-3.154-3.308l.919-.009c.207 0 .39-.117.482-.308.09-.187.061-.42-.098-.613l-2.53-2.569-.087-.09a.524.524 0 00-.392-.112.483.483 0 00-.322.163l-2.6 2.633a.553.553 0 00-.072.583c.09.19.274.308.479.308l1.03.008c.127.967.625 3.177 2.544 4.826-3.863 2.087-3.907 6.244-3.907 6.289 0 .871.705 1.583 1.588 1.591.862 0 1.574-.709 1.588-1.574.006-.39.202-3.521 4.398-4.14.056.07.103.145.168.21.442.426 1.081.641 1.902.641.82 0 1.46-.215 1.905-.641.061-.059.109-.132.162-.2 4.081.642 4.277 3.74 4.283 4.124a1.595 1.595 0 001.588 1.586c.877 0 1.588-.717 1.588-1.594 0-.045-.044-4.165-3.834-6.255 1.95-1.639 2.459-3.804 2.59-4.852l1.026-.01a.529.529 0 00.482-.309.555.555 0 00-.065-.585z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExchangeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.169 6.49l-.036.572c-.034.504-.317 3.109-2.667 4.74l-.896.618.994.44c3.65 1.627 3.742 5.314 3.745 5.465a.54.54 0 11-1.081-.003c-.006-.465-.222-4.132-4.77-4.963a3.537 3.537 0 00-.06-1.757c3.222-1.115 3.606-3.829 3.65-4.46l.003-.646-.815-.009 1.356-1.375 1.364 1.375-.787.003zM4.654 18.325a.54.54 0 01-1.081.006c.002-.157.095-3.872 3.814-5.485l.998-.434-.891-.628C5.189 10.16 4.9 7.566 4.869 7.062l-.095-.566-.728-.006 1.361-1.375L6.768 6.49l-.86.003.045.653c.045.627.426 3.339 3.65 4.456a3.318 3.318 0 00-.146.997c0 .272.034.519.082.746-4.659.809-4.88 4.512-4.885 4.98zm8.663-5.726a2.2 2.2 0 01-.075.617.887.887 0 01-.23.411c-.25.239-.689.286-1.017.286-.325 0-.767-.047-1.01-.283a.897.897 0 01-.23-.414 2.171 2.171 0 01-.076-.614c0-.28.036-.507.103-.692a.853.853 0 01.202-.339c.247-.238.686-.288 1.011-.288.325 0 .768.05 1.014.288a.895.895 0 01.202.34c.07.184.106.408.106.688zm8.359-6.109l-2.518-2.535a.73.73 0 00-1.014-.117l-2.628 2.658a.749.749 0 00-.09.79.723.723 0 00.653.414l.642.006c-.233.905-.933 2.258-3.023 2.857-.423-.33-.988-.507-1.7-.507-.711 0-1.272.176-1.695.504-2.09-.6-2.79-1.95-3.02-2.854L7.92 7.7a.73.73 0 00.66-.417c.124-.26.088-.569-.13-.838L5.99 3.961l-.12-.12a.729.729 0 00-.539-.155c-.193.023-.364.12-.44.222l-2.56 2.585a.748.748 0 00-.092.79.723.723 0 00.653.417l.826.006c.16 1.05.675 2.938 2.314 4.456-3.63 2.126-3.675 6.115-3.675 6.16 0 .96.784 1.75 1.764 1.76.958 0 1.751-.782 1.765-1.743.006-.364.193-3.311 4.25-3.849.002.003.005.011.01.014.432.418 1.06.628 1.86.628.802 0 1.43-.21 1.863-.625.003-.003.003-.006.006-.008 3.86.532 4.129 3.249 4.137 3.832a1.77 1.77 0 001.765 1.753c.972 0 1.765-.793 1.765-1.765 0-.042-.043-3.997-3.603-6.131 1.678-1.535 2.2-3.477 2.359-4.482l.823-.009c.286 0 .538-.16.661-.42a.766.766 0 00-.106-.787z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExitFullscreenLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.256 15.167a.581.581 0 010 1.16h-4.932v4.932a.581.581 0 01-1.16 0v-5.512c0-.32.258-.58.577-.58h5.515zm-13.016 0a.58.58 0 01.58.577v5.512a.581.581 0 01-1.16 0v-4.932H2.73a.58.58 0 110-1.16c0 .003 5.51.003 5.51.003zm0-13.017a.58.58 0 01.58.577V8.24a.59.59 0 01-.578.58H2.73a.579.579 0 110-1.157h4.933V2.73c0-.322.257-.58.577-.58zm7.507 6.67a.579.579 0 01-.58-.578V2.73a.579.579 0 111.157 0v4.933h4.932a.581.581 0 010 1.16h-5.51v-.004z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExitFullscreenRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.99 14.797a.845.845 0 010 1.69h-4.507v4.509a.845.845 0 01-1.689 0V15.64c0-.468.378-.843.843-.843h5.353zm-12.644 0c.465 0 .843.378.843.843v5.353a.845.845 0 01-1.686 0v-4.51h-4.51a.84.84 0 01-.812-.874.846.846 0 01.812-.812h5.353zm0-12.647c.465 0 .843.378.843.843v5.353a.844.844 0 01-.843.843H2.993a.845.845 0 010-1.689H7.5V2.993c0-.465.378-.843.846-.843zm7.294 7.04a.844.844 0 01-.843-.844V2.993a.845.845 0 011.686 0V7.5h4.51a.845.845 0 010 1.69H15.64z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExportLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.652 16.618l-5.894-5.893a.58.58 0 11.776-.866c.014.014.031.028.042.042l4.9 4.91V2.737a.582.582 0 011.162 0v12.079l4.807-4.807a.58.58 0 01.82.82l-5.79 5.79a.818.818 0 01-.196.13.546.546 0 01-.44 0 .722.722 0 01-.187-.13zm9.61-.137c.32 0 .58.26.58.577v4.205c0 .319-.257.58-.577.58H2.733a.576.576 0 01-.577-.578v-4.204a.581.581 0 011.16 0v3.625h17.372V17.06a.573.573 0 01.575-.58z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconExportRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.305 16.53l-5.72-5.73A.844.844 0 016.78 9.608l4.28 4.286V2.844a.845.845 0 011.689 0v11.05l4.207-4.213a.845.845 0 011.216 1.17c-.006.009-.014.015-.023.023l-5.647 5.655a.853.853 0 01-1.196 0zm9.538-.617c.465 0 .843.378.843.843v4.087a.844.844 0 01-.843.843h-18A.844.844 0 012 20.843v-4.087a.845.845 0 011.69 0V20h16.313v-3.244a.838.838 0 01.84-.843z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEyeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.027 17.2c3.967 0 8.014-4.12 9.004-5.196-.993-1.076-5.065-5.198-9.03-5.198-3.966 0-8.033 4.12-9.028 5.198.998 1.074 5.09 5.196 9.054 5.196zm9.878-5.453a.39.39 0 01.003.508c-.2.235-4.946 5.745-9.88 5.745-4.932 0-9.73-5.507-9.932-5.742a.388.388 0 010-.51C2.296 11.511 7.067 6 12.002 6c4.928.003 9.7 5.512 9.903 5.747zm-9.798-2.136c.507.011 2.467.202 2.467 2.475 0 2.275-1.966 2.453-2.458 2.464-.072 0-.157.003-.237 0-.518-.005-2.458-.186-2.458-2.478 0-2.289 1.923-2.458 2.438-2.46a2.56 2.56 0 01.248 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconEyeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.037 17.284c3.602 0 7.3-3.736 8.409-4.955-1.115-1.218-4.835-4.96-8.434-4.96-3.603 0-7.32 3.736-8.435 4.957 1.124 1.219 4.86 4.958 8.46 4.958zm9.678-5.336a.592.592 0 010 .756c-.194.239-4.83 5.774-9.678 5.774-4.849 0-9.535-5.535-9.731-5.77a.592.592 0 01-.003-.76c.199-.235 4.857-5.773 9.709-5.773 4.851 0 9.507 5.538 9.703 5.773zm-9.603-1.991c.488.01 2.381.201 2.381 2.453 0 2.258-1.896 2.435-2.37 2.443-.075.003-.15.003-.226.003-.499-.009-2.37-.185-2.37-2.46 0-2.271 1.852-2.44 2.353-2.442.076 0 .162 0 .232.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFamilyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.21 5.395c.289.454.521.748.919 1.16.04.039.17.176.286.257a.787.787 0 00.319.146c.03.008.064.014.098.017h.081a.378.378 0 00.098-.017.822.822 0 00.32-.146c.114-.084.249-.218.285-.257.003-.003.006-.009.011-.012.39-.406.62-.7.908-1.148.364-.571.613-1.134.742-1.68.14-.595.026-1.088-.325-1.39a1.296 1.296 0 00-.776-.297 1.756 1.756 0 00-.94.235c-.104.06-.21.118-.326.188a.091.091 0 01-.036.011.064.064 0 01-.04-.011 5.919 5.919 0 00-.324-.188 1.756 1.756 0 00-.941-.235c-.297.017-.575.12-.78.297-.346.3-.464.793-.324 1.39.132.546.38 1.109.745 1.68M6.947 12.21c-.874 0-1.558-.232-2.031-.689-.49-.473-.737-1.18-.737-2.092 0-.914.25-1.62.737-2.096.473-.462 1.157-.692 2.03-.692.875 0 1.558.233 2.034.692.49.48.743 1.185.743 2.098 0 .914-.252 1.62-.743 2.096-.476.45-1.16.683-2.033.683zm9.843 0c-.874 0-1.558-.232-2.03-.689-.491-.473-.738-1.18-.738-2.092 0-.914.25-1.62.737-2.096.473-.462 1.157-.692 2.03-.692.875 0 1.558.233 2.035.692.49.48.742 1.185.742 2.098 0 .914-.252 1.62-.742 2.096-.477.45-1.16.683-2.034.683zM11.888 10c.571 0 1.02.151 1.328.454.322.314.487.773.487 1.372 0 .597-.162 1.06-.487 1.37-.308.297-.76.448-1.328.448-.571 0-1.02-.151-1.328-.45-.322-.309-.482-.771-.482-1.37 0-.6.16-1.06.482-1.37.311-.303.757-.454 1.328-.454zm-3.252 4.395c.535 0 1.02.09 1.445.258-.59.115-1.098.375-1.482.778-.49.51-.747 1.205-.747 2v4.283H2.104a.08.08 0 01-.079-.078V17.49c0-.885.275-1.641.793-2.185.569-.594 1.409-.907 2.437-.907h3.38v-.003zm4.356 1.011c.672 0 1.224.205 1.593.594.342.356.524.852.524 1.431v4.283H8.672v-4.283c0-.58.18-1.075.518-1.428.37-.39.922-.594 1.594-.594h2.208v-.003zm7.924-.103c.521.546.798 1.3.798 2.187v4.146a.076.076 0 01-.078.075H15.93v-4.28c0-.798-.26-1.49-.75-2.002-.393-.407-.908-.67-1.508-.782.42-.162.9-.25 1.426-.25h3.378c1.028-.002 1.871.312 2.44.906z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFamilyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.358 3.089c-.146.126-.09.443-.059.574.107.457.32.944.63 1.44.26.415.46.667.818 1.045.06.061.115.115.154.146.042-.031.087-.076.138-.124l.002-.003.028-.028a5.81 5.81 0 00.807-1.036 4.84 4.84 0 00.636-1.44c.03-.131.084-.448-.059-.574a.484.484 0 00-.286-.098h-.036a.93.93 0 00-.465.134c-.098.054-.196.112-.305.177l-.194.118-.26.008a.901.901 0 01-.443-.118c-.123-.073-.22-.134-.316-.187a.963.963 0 00-.465-.132c-.157.006-.263.045-.325.098zm-.118 2.468c-.361-.574-.613-1.146-.74-1.698-.14-.6-.024-1.098.326-1.403.201-.177.479-.283.776-.297.025-.003.05-.003.078-.003.289 0 .583.081.86.238.104.056.207.12.325.19.011.004.022.01.036.01a.086.086 0 00.037-.01c.112-.07.218-.13.322-.19a1.751 1.751 0 01.941-.235c.3.014.574.12.776.297.347.305.462.804.322 1.403-.129.55-.378 1.124-.742 1.698a6.551 6.551 0 01-.908 1.162c-.003.003-.005.009-.011.011-.04.04-.174.18-.288.261a.86.86 0 01-.317.148.547.547 0 01-.1.014h-.08a.624.624 0 01-.1-.014.851.851 0 01-.32-.148c-.111-.084-.246-.221-.285-.26a7.28 7.28 0 01-.908-1.174zM5.616 7.929c-.325.322-.49.835-.49 1.53 0 .692.165 1.207.487 1.524.314.308.804.462 1.46.462.655 0 1.15-.154 1.464-.465.328-.32.49-.832.49-1.524 0-.695-.165-1.207-.49-1.53-.314-.31-.807-.467-1.465-.467-.652.003-1.143.16-1.456.47zm1.456 4.356c-.874 0-1.557-.232-2.028-.697-.49-.482-.74-1.196-.74-2.126 0-.93.25-1.647.74-2.132.474-.465 1.154-.703 2.028-.703.877 0 1.56.238 2.034.703.49.485.742 1.202.742 2.132 0 .93-.25 1.644-.742 2.126-.474.462-1.157.697-2.034.697zM15.46 7.93c-.325.322-.49.835-.49 1.53 0 .692.165 1.207.487 1.524.314.308.804.462 1.46.462.655 0 1.15-.154 1.464-.465.328-.32.49-.832.49-1.524 0-.695-.165-1.207-.49-1.53-.313-.31-.806-.467-1.465-.467-.652.003-1.143.16-1.456.47zm-.572 3.656c-.49-.482-.74-1.196-.74-2.126 0-.93.25-1.647.74-2.132.474-.465 1.154-.703 2.028-.703.877 0 1.56.238 2.034.703.49.485.742 1.202.742 2.132 0 .93-.249 1.644-.742 2.126-.473.465-1.157.697-2.034.697-.874.003-1.557-.232-2.028-.697zm-2.109 1.095c.154-.151.233-.417.233-.787 0-.373-.079-.639-.233-.793-.151-.148-.409-.224-.762-.224-.35 0-.605.076-.756.224-.154.154-.233.42-.233.793 0 .37.079.636.233.787.151.149.406.224.759.224.35 0 .605-.075.76-.224zm-.762-2.641c.574 0 1.02.154 1.33.459.326.317.488.787.488 1.395s-.162 1.076-.487 1.392c-.311.303-.757.457-1.33.457-.572 0-1.018-.154-1.329-.457-.319-.316-.481-.784-.481-1.392 0-.608.162-1.078.481-1.395.309-.305.757-.46 1.328-.46zm9.006 10.902v-4.048c0-.726-.196-1.336-.569-1.76-.409-.464-1.05-.713-1.846-.713H15.23c-.53 0-.978.12-1.344.327.327.107.616.275.834.524.342.387.521.927.521 1.558v4.112h5.782zm-6.605 0v-4.11c0-.274-.05-.66-.292-.935-.268-.306-.691-.37-1.002-.37H10.91c-.011 0-.025.003-.04.003-.305.005-.705.073-.963.367-.24.274-.291.66-.291.935v4.132h4.795v-.022h.006zM8.8 16.83c0-.63.179-1.17.518-1.557.213-.241.487-.412.806-.518-.37-.213-.826-.334-1.36-.334h-3.38c-.797 0-1.433.247-1.842.712-.37.423-.563 1.033-.563 1.762v4.047h5.823V16.83H8.8zm12.24-2.319c.524.594.802 1.417.802 2.38v4.6c0 .19-.143.345-.317.345H2.47c-.174 0-.314-.154-.314-.345v-4.6c0-.963.275-1.789.793-2.38.566-.647 1.409-.992 2.434-.992h3.378c1.028 0 1.871.342 2.437.99.031.036.053.078.081.114h1.432c.028-.036.05-.078.078-.112.566-.647 1.41-.992 2.434-.992h3.379c1.03.003 1.874.345 2.44.992z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFamilyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.793 3.398c-.12.098-.073.347-.05.45.086.362.26.74.512 1.135.213.325.375.524.667.82.016.02.072.08.126.121.053-.044.106-.1.126-.12.294-.3.453-.499.66-.818.256-.395.426-.773.516-1.134.023-.104.07-.353-.05-.451a.394.394 0 00-.23-.079.736.736 0 00-.409.104l-.246.14-.157.092-.381.009-.18-.09a7.277 7.277 0 00-.266-.151.82.82 0 00-.378-.104h-.03a.381.381 0 00-.23.076zm-.656 2.3a5.054 5.054 0 01-.692-1.544c-.17-.711.003-1.356.477-1.759a1.75 1.75 0 011.033-.392c.359-.02.745.067 1.09.252a2.105 2.105 0 011.095-.252c.387.02.754.16 1.03.392.477.403.648 1.048.477 1.76a5.111 5.111 0 01-.689 1.542c-.258.395-.47.662-.82 1.02-.054.053-.202.202-.331.291-.154.11-.33.185-.51.224l-.247.028-.269-.03a1.361 1.361 0 01-.493-.222 3.065 3.065 0 01-.322-.283 6.064 6.064 0 01-.829-1.028zm-4.395 3.03c-.24.233-.361.633-.361 1.194 0 .557.12.96.361 1.19.233.221.63.336 1.177.336.546 0 .944-.115 1.179-.339.24-.23.364-.63.364-1.187 0-.56-.123-.961-.367-1.194-.238-.227-.633-.341-1.179-.341-.54 0-.938.114-1.174.341zm1.177 3.944c-.877 0-1.56-.227-2.028-.68-.49-.471-.74-1.168-.74-2.07 0-.905.247-1.603.737-2.073.47-.454 1.154-.684 2.03-.684.875 0 1.558.23 2.032.684.493.47.742 1.168.742 2.073 0 .902-.25 1.599-.742 2.07-.474.45-1.157.68-2.031.68zm8.666-3.944c-.24.233-.36.633-.36 1.194 0 .557.12.96.36 1.19.233.221.63.336 1.177.336.546 0 .944-.115 1.18-.339.24-.23.363-.63.363-1.187 0-.56-.123-.961-.367-1.194-.238-.227-.633-.341-1.179-.341-.54 0-.938.114-1.174.341zm-.854 3.264c-.49-.471-.74-1.168-.74-2.07 0-.905.247-1.603.737-2.073.47-.454 1.154-.684 2.031-.684.874 0 1.557.23 2.03.684.494.47.743 1.168.743 2.073 0 .902-.25 1.599-.742 2.07-.474.45-1.157.68-2.03.68-.875 0-1.558-.23-2.029-.68zm-2.392.77c.05-.05.106-.199.106-.47 0-.275-.056-.426-.109-.477-.053-.053-.207-.106-.476-.106s-.42.053-.47.103c-.054.05-.11.202-.11.476 0 .275.053.423.107.474.05.05.204.104.473.104.272 0 .426-.054.479-.104zm-.48-2.275c.572 0 1.02.152 1.331.449.323.308.488.764.488 1.355s-.165 1.045-.488 1.353c-.31.294-.759.446-1.33.446-.572 0-1.017-.152-1.328-.446-.322-.308-.482-.762-.482-1.353 0-.594.163-1.047.482-1.355.311-.297.756-.449 1.328-.449zm8.598 9.978v-3.266c0-.387-.082-.927-.457-1.314-.415-.431-1.073-.524-1.55-.524h-3.377c-.247 0-.54.028-.824.112.112.073.219.157.314.255.342.353.521.84.521 1.415v3.322h5.373zm-6.605 0V17.14c0-.174-.031-.415-.18-.566-.092-.098-.26-.148-.454-.18-.084-.013-.16-.033-.254-.033h-2.21c-.11 0-.197.02-.289.037-.18.033-.33.081-.417.173-.146.152-.177.393-.177.569v3.339h3.978v-.014h.003zm-4.69-4.737c.09-.092.19-.17.3-.243a2.902 2.902 0 00-.854-.124H5.23c-.477 0-1.132.093-1.547.521-.372.387-.45.93-.45 1.317v3.266h5.414V17.14c-.003-.571.174-1.062.515-1.412zm5.762 5.958H2.317a.313.313 0 01-.314-.313v-4.174c0-.877.274-1.622.793-2.16.565-.588 1.408-.899 2.434-.899h3.378c1.028 0 1.871.311 2.437.9.03.03.053.07.081.103h1.431c.028-.034.05-.073.079-.104.566-.588 1.409-.899 2.434-.899h3.378c1.028 0 1.871.311 2.437.9.524.54.801 1.285.801 2.162v4.173a.316.316 0 01-.316.314h-6.446v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFastForwardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 2C5.403 2 2 5.403 2 11.846c0 6.437 3.403 9.84 9.846 9.84 6.437 0 9.84-3.403 9.84-9.84 0-6.443-3.403-9.846-9.84-9.846zM7.504 13.44l3.168-1.885L7.504 9.65v3.79zm9.093-1.891l-3.168-1.905v3.79l3.168-1.885zM6.599 8.053a.603.603 0 01.611.009l4.952 2.974c.026.014.034.04.056.056V8.574a.603.603 0 01.916-.518l4.953 2.978a.604.604 0 010 1.036l-4.953 2.947a.61.61 0 01-.61.005.604.604 0 01-.306-.526v-2.482c-.022.017-.033.045-.058.059l-4.953 2.952a.61.61 0 01-.61.006.61.61 0 01-.306-.527V8.58a.618.618 0 01.308-.527z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFastForwardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.002 21.019c-5.986 0-9.022-3.034-9.022-9.017 0-5.989 3.033-9.022 9.022-9.022 5.983 0 9.017 3.033 9.017 9.022 0 5.983-3.034 9.017-9.017 9.017zm0-18.863c-6.44 0-9.846 3.404-9.846 9.846 0 6.437 3.404 9.84 9.846 9.84 6.437 0 9.84-3.403 9.84-9.84 0-6.442-3.403-9.846-9.84-9.846zm1.41 11.83V9.391l3.84 2.308-3.84 2.285zm-.617-5.681a.405.405 0 00-.207.358v6.048a.41.41 0 00.409.412h.002c.073 0 .146-.02.21-.056l5.056-3.012a.41.41 0 000-.705l-5.053-3.04a.419.419 0 00-.417-.005zM7.364 13.99V9.397l3.84 2.308-3.84 2.286zM6.75 8.31a.413.413 0 00-.21.358v6.047a.41.41 0 00.409.412h.003c.073 0 .145-.02.21-.056l5.056-3.011a.41.41 0 000-.706l-5.053-3.04a.407.407 0 00-.415-.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFastForwardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 20.476c-5.731 0-8.636-2.905-8.636-8.63 0-5.731 2.905-8.636 8.636-8.636 5.728 0 8.63 2.905 8.63 8.636 0 5.725-2.905 8.63-8.63 8.63zm0-18.476C5.406 2 2 5.403 2 11.846c0 6.437 3.403 9.84 9.846 9.84 6.437 0 9.84-3.403 9.84-9.84 0-6.443-3.403-9.846-9.84-9.846zM7.504 13.44V9.65l3.171 1.905c-.003 0-3.17 1.885-3.17 1.885zm9.093-1.891l-3.171 1.885v-3.79l3.17 1.905zM6.599 8.053a.603.603 0 00-.308.527v5.92a.606.606 0 00.916.521l4.953-2.946c.025-.014.036-.042.058-.06V14.5a.606.606 0 00.914.52l4.952-2.946a.604.604 0 00.003-1.037l-4.953-2.98a.605.605 0 00-.916.518v2.518c-.022-.016-.03-.042-.056-.056L7.21 8.062a.61.61 0 00-.61-.009z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileAviFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025a.86.86 0 01.613.25L21.42 7.4a.86.86 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.406-.647-1.406-1.384l.034-2.77h-2.3a2.427 2.427 0 01-2.42-2.426V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.672-1.384 1.406-1.384h7.415zM14.266 9.83H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zm-7.132 1.566l1.331 3.683h-.9l-.307-.927H6.062l-.286.927h-.804l1.235-3.683h.927zm2.096 0l.862 2.672.804-2.672h.818l-1.224 3.683h-.877l-1.282-3.683h.899zm3.8 0v3.683h-.84v-3.683h.84zm-6.38.922h-.011l-.384 1.226h.798l-.403-1.226zm9.196-8.622V5.46c0 .659.216 1.213.622 1.608.414.4.997.61 1.692.61h1.797l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileAviLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.18 0 .35.07.482.194l5.41 5.238c.089.086.14.201.17.322a.43.43 0 01.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205L6.98 17.6H4.422a2.27 2.27 0 01-2.266-2.27v-4.178a2.27 2.27 0 012.266-2.27h2.521v-5.52c0-.63.586-1.205 1.23-1.205h7.571zm-.689.83H8.17c-.185 0-.406.204-.406.378v5.52h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.269H7.803l-.036 3.042c0 .182.204.372.406.372H20.61c.207 0 .403-.185.403-.378V8.758h-2.565c-.98 0-1.827-.316-2.443-.915-.622-.603-.95-1.429-.95-2.384V2.985zm-.582 6.725H4.42c-.793 0-1.44.647-1.44 1.44v4.179c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.442v-4.18a1.44 1.44 0 00-1.44-1.44zm-7.185 1.812l1.33 3.684H7.72l-.308-.928H6.215l-.286.928h-.804l1.236-3.684h.927zm2.095 0l.863 2.672.804-2.672h.818l-1.224 3.684h-.877l-1.283-3.684h.9zm3.801 0v3.684h-.84v-3.684h.84zm-6.38.922h-.012l-.384 1.227h.799l-.404-1.227zm9.075-9.28v2.291c0 .728.24 1.347.7 1.79.462.445 1.11.683 1.869.683h2.35l-4.92-4.764z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileAviRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.507 2c.232 0 .448.087.613.246l5.297 5.127c.115.109.18.243.222.386.03.073.047.154.047.238v12.305c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.406-.647-1.406-1.384l.034-2.77h-2.3A2.428 2.428 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.092 2h7.415zm-.877 1.216H8.095c-.07 0-.187.112-.193.17v5.202h6.364a2.426 2.426 0 012.42 2.426v4.092a2.426 2.426 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.098.16.193.16h12.182v-.003c.098 0 .194-.096.194-.168V8.868h-2.314c-1.014 0-1.888-.33-2.532-.955-.65-.627-.995-1.487-.995-2.482V3.216zm-.364 6.588H4.423c-.667 0-1.207.54-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.843a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-7.132 1.563l1.331 3.683h-.9l-.307-.927H6.062l-.286.927h-.804l1.235-3.683h.927zm2.096 0l.862 2.672.804-2.672h.818L10.49 15.05h-.877l-1.282-3.683h.899zm3.8 0v3.683h-.84v-3.683h.84zm-6.38.921h-.011l-.384 1.227h.798l-.403-1.227zm9.196-8.619v1.765c0 .658.216 1.213.625 1.608.414.4.997.61 1.689.61h1.8L15.847 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBlockedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.359 10.13c.123 0 .333 0 .333-.927 0-.93-.207-.93-.333-.93-.127 0-.337 0-.337.93 0 .927.202.927.337.927zm0-2.792c.582 0 1.277.322 1.277 1.865 0 1.54-.695 1.863-1.277 1.863-.586 0-1.28-.325-1.28-1.863 0-1.543.694-1.865 1.28-1.865zm2.91 2.792c.123 0 .333 0 .333-.927 0-.93-.207-.93-.333-.93-.126 0-.336 0-.336.93 0 .927.201.927.336.927zm0-2.792c.583 0 1.277.322 1.277 1.865 0 1.54-.694 1.863-1.277 1.863-.586 0-1.28-.325-1.28-1.863 0-1.543.694-1.865 1.28-1.865zm-2.392 7.658c.227 0 .409.182.409.409v.106a.408.408 0 01-.41.41H4.853a.408.408 0 01-.41-.41v-.106a.41.41 0 01.41-.41h.084V13.21h-.05a.408.408 0 01-.41-.41v-.089c0-.21.16-.386.37-.406.185-.017.356-.025.423-.025.571 0 .602.453.602.543l.006 2.174zm2.392.045c.123 0 .333 0 .333-.928 0-.93-.207-.93-.333-.93-.126 0-.336 0-.336.93 0 .928.201.928.336.928zm0-2.793c.583 0 1.277.322 1.277 1.865 0 1.541-.694 1.863-1.277 1.863-.586 0-1.28-.325-1.28-1.863 0-1.54.694-1.865 1.28-1.865zm10.711-.807c0-1.849-1.29-2.154-2.061-2.176h-.247c-.753.008-2.03.294-2.03 2.16v.498l4.336-.008v-.474h.002zm-7.165 2.513c0-.793.328-1.26.597-1.513.32-.294.703-.426 1.005-.473v-.54c0-2.48 1.751-3.373 3.25-3.387h.277c1.504.042 3.263.95 3.263 3.403v.563c.082.017.163.034.238.064V6.483a.211.211 0 00-.213-.213h-8.809a.617.617 0 01-.613-.613V4.282a.206.206 0 00-.213-.213H3.448a.213.213 0 00-.221.213v13.51c0 .123.098.212.221.212h8.367v-2.103c-.042.008-.073.025-.123.025h-1.023a.41.41 0 01-.408-.41v-.106c0-.23.179-.409.408-.409h.082V13.21h-.05a.406.406 0 01-.41-.41v-.089c0-.213.163-.384.367-.409.188-.017.362-.025.426-.025.571 0 .605.46.605.549V15a.32.32 0 01.123.026v-1.073h.003zm9.857-.272c.017.17.017.294.009.328v4.826c.008.787-.32 1.252-.589 1.507-.63.588-1.504.55-1.602.538h-5.53c-.868 0-1.366-.333-1.627-.622a1.934 1.934 0 01-.49-1.03H3.451a1.445 1.445 0 01-1.448-1.44V4.279c0-.796.644-1.44 1.448-1.44h7.148c.793 0 1.44.644 1.44 1.44v.762h8.196c.796 0 1.44.647 1.44 1.44v7.201h-.003zm-4.87 3.706h-.105c-.691-.011-.691-.55-.691-.75 0-.202 0-.737.677-.743h.11c.703.017.703.549.703.748 0 .202 0 .73-.695.745zm.019-2.72h-.146c-.944.008-1.896.62-1.896 1.97 0 1.347.955 1.963 1.91 1.977h.135c.946-.017 1.899-.633 1.899-1.97 0-1.333-.955-1.955-1.902-1.977z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBlockedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.019 16.826v-2.684c0-.016 0-.098-.008-.198-.017-.157-.065-.379-.23-.552-.188-.205-.502-.306-.919-.306h-5.795c-.14 0-.524.026-.788.264-.179.173-.271.437-.271.781v5.011c0 .034-.025.463.246.748.19.2.493.297.902.297h5.706c.025 0 .56.034.888-.28.18-.174.272-.428.272-.773l-.003-2.308zm-1.51-5.266c0-2.157-1.616-2.429-2.322-2.443l-.255-.008c-.68.008-2.283.255-2.283 2.434v.723h4.86v-.706zm-7.322 2.574c0-.594.18-1.062.54-1.392a1.876 1.876 0 011.102-.462v-.74c0-2.378 1.599-3.24 3.103-3.258l.277.009c1.51.033 3.12.913 3.12 3.266v.74c.264.041.486.131.682.246V6.481a.431.431 0 00-.435-.434h-9.005a.412.412 0 01-.41-.412V4.226a.433.433 0 00-.433-.437H3.41a.433.433 0 00-.434.437v13.84c0 .242.196.438.434.438h8.776v-4.37zm9.644-.277c.017.162.009.285.009.319v4.964c0 .582-.182 1.042-.532 1.38-.583.544-1.39.494-1.48.494h-5.672c-.647 0-1.157-.19-1.501-.57a1.821 1.821 0 01-.468-1.117H3.411a1.265 1.265 0 01-1.255-1.26V4.227c0-.7.566-1.258 1.255-1.258h7.314c.689 0 1.255.56 1.255 1.257v.995h8.594c.689 0 1.255.56 1.255 1.258l.002 7.378zm-4.762 4.008c.423-.008.925-.185.925-.977 0-.796-.504-.975-.93-.986h-.118c-.414.002-.907.176-.907.977 0 .804.501.98.921.986h.11zm.012-2.784c.8.02 1.734.504 1.734 1.807 0 1.305-.933 1.784-1.729 1.798h-.143c-.795-.011-1.728-.493-1.728-1.807 0-1.32.927-1.793 1.723-1.801l.143.003zM4.826 9.899c.199 0 .501 0 .501-1.152 0-1.156-.302-1.156-.501-1.156-.202 0-.507 0-.507 1.156.003 1.149.308 1.149.507 1.152zm0-3.06c.834 0 1.255.64 1.255 1.906 0 1.26-.423 1.899-1.255 1.899-.838 0-1.26-.639-1.26-1.9.002-1.263.425-1.904 1.26-1.904zm3.182 3.057c.199 0 .501 0 .501-1.151 0-1.157-.302-1.157-.501-1.157-.202 0-.507 0-.507 1.157 0 1.15.305 1.15.507 1.15zm0-3.056c.835 0 1.255.639 1.255 1.905 0 1.26-.423 1.899-1.255 1.899-.838 0-1.26-.639-1.26-1.9 0-1.263.422-1.904 1.26-1.904zm-2.616 8.39c.17 0 .308.137.308.307v.118c0 .17-.138.308-.308.308h-1.12a.307.307 0 01-.309-.308v-.118c0-.17.137-.308.308-.308h.23v-2.232h-.193a.307.307 0 01-.309-.308v-.098a.31.31 0 01.278-.309c.196-.02.378-.028.448-.028.482 0 .518.35.518.457v2.521c.003-.003.149-.003.149-.003zm2.616.047c.199 0 .501 0 .501-1.151 0-1.157-.302-1.157-.501-1.157-.202 0-.507 0-.507 1.157 0 1.15.305 1.15.507 1.15zm0-3.056c.835 0 1.255.639 1.255 1.905 0 1.26-.423 1.899-1.255 1.899-.838 0-1.26-.639-1.26-1.9 0-1.263.422-1.904 1.26-1.904zm3.742 3.008c.171 0 .308.138.308.308v.118c0 .17-.137.308-.308.308h-1.118a.307.307 0 01-.308-.308v-.118c0-.17.138-.308.308-.308h.23v-2.232h-.193a.307.307 0 01-.308-.308v-.098a.31.31 0 01.277-.309c.196-.02.378-.028.448-.028.482 0 .518.35.518.457v2.521c.003-.003.146-.003.146-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBlockedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.879 17.385c.695-.014.695-.543.695-.742 0-.202 0-.731-.704-.748h-.109c-.678.006-.678.54-.678.742 0 .202 0 .74.692.751l.104-.003zm.02-2.717c.949.022 1.901.642 1.901 1.975 0 1.336-.952 1.952-1.899 1.969h-.134c-.955-.014-1.91-.63-1.91-1.978 0-1.347.952-1.96 1.893-1.969l.148.003zM5.441 10.13c.123 0 .333 0 .333-.927 0-.93-.207-.93-.333-.93-.126 0-.336 0-.336.93 0 .927.201.927.336.927zm0-2.792c.583 0 1.277.322 1.277 1.865 0 1.54-.694 1.863-1.277 1.863-.586 0-1.28-.325-1.28-1.863 0-1.543.694-1.865 1.28-1.865zm2.91 2.792c.123 0 .334 0 .334-.927 0-.93-.208-.93-.334-.93-.126 0-.336 0-.336.93 0 .927.202.927.336.927zm0-2.792c.583 0 1.278.322 1.278 1.865 0 1.54-.695 1.863-1.278 1.863-.585 0-1.28-.325-1.28-1.863 0-1.543.695-1.865 1.28-1.865zm-2.395 7.658c.227 0 .41.182.41.409v.106a.408.408 0 01-.41.41H4.935a.408.408 0 01-.41-.41v-.106a.41.41 0 01.41-.41h.084V13.21h-.05a.408.408 0 01-.41-.41v-.089c0-.21.16-.386.37-.406.185-.017.356-.025.423-.025.572 0 .602.453.602.543l.003 2.174zm2.395.045c.123 0 .334 0 .334-.928 0-.93-.208-.93-.334-.93-.126 0-.336 0-.336.93 0 .928.202.928.336.928zm0-2.793c.583 0 1.278.322 1.278 1.865 0 1.541-.695 1.863-1.278 1.863-.585 0-1.28-.325-1.28-1.863 0-1.54.695-1.865 1.28-1.865zm12.18 6.588v-2.258c0-.016-.009-.022-.009-.042V13.78a.668.668 0 00-.17-.409c-.14-.146-.393-.227-.737-.227l-5.505.009h-.08c-.023 0-.051-.009-.09 0-.138 0-.443.033-.622.196-.13.131-.196.325-.196.605v4.899c0 .034-.017.367.187.58.149.148.384.221.729.221h5.577c.162.008.515-.017.72-.213.14-.131.196-.328.196-.605zm-1.474-7.395c0-1.849-1.291-2.151-2.062-2.176h-.246c-.754.008-2.028.294-2.028 2.16v.498l4.333-.008v-.474h.003zm-7.162 2.51c0-.793.327-1.26.596-1.513a1.94 1.94 0 011.006-.473v-.54c0-2.48 1.75-3.37 3.246-3.387h.278c1.504.042 3.263.95 3.263 3.403v.563c.081.017.162.034.238.065V6.483a.211.211 0 00-.213-.213h-8.806a.617.617 0 01-.614-.613V4.282a.206.206 0 00-.213-.213H3.532c-.124 0-.222.09-.222.213v13.504c0 .123.098.213.222.213h8.364v-2.101c-.042.008-.073.025-.124.025H10.75a.41.41 0 01-.409-.409v-.106c0-.23.18-.41.409-.41h.081v-1.79h-.05a.406.406 0 01-.41-.408v-.09c0-.213.163-.384.368-.409.187-.017.358-.025.426-.025.571 0 .605.46.605.549V15c.042 0 .08.009.123.026V13.95h.003zm9.854-.269c.017.17.017.294.008.328v4.826c.009.787-.319 1.252-.588 1.507-.63.588-1.504.55-1.602.538H14.04c-.865 0-1.367-.333-1.627-.622a1.925 1.925 0 01-.49-1.03H3.532a1.445 1.445 0 01-1.449-1.44V4.284c0-.795.645-1.44 1.449-1.44h7.145c.793 0 1.44.645 1.44 1.44v.762h8.193c.793 0 1.44.647 1.44 1.44v7.196z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBoxFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.062 11.653a.629.629 0 00-.628.63v.868a1.494 1.494 0 01-1.496 1.49h-.193c-.823 0-1.49-.666-1.493-1.49v-.868a.63.63 0 00-.627-.63H3.49L4.852 3.56a.646.646 0 00.008-.103c0-.107.087-.194.193-.194l13.58.014c.132 0 .26.146.291.328l1.278 8.05h-6.14v-.002zm7.613 1.341c0-.02.003-.033.003-.053L20.162 3.39c-.148-.81-.775-1.375-1.529-1.375L5.056 2c-.779 0-1.417.619-1.451 1.395l-1.591 9.476c-.006.025.003.05.003.076-.006.05-.014.1-.014.151v7.132c0 .804.652 1.456 1.45 1.456h16.782c.801 0 1.451-.652 1.451-1.456V13.1c0-.033-.008-.072-.01-.106z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBoxLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.016 20.585c0 .24-.193.437-.434.437H3.406a.44.44 0 01-.435-.437v-7.3c0-.232.2-.428.435-.428h5.91v.476a2.582 2.582 0 002.58 2.58h.196a2.585 2.585 0 002.582-2.58v-.476h5.91a.43.43 0 01.421.324l.006.034c.002.022.008.045.008.07v7.3h-.003zM4.613 3.41c0-.238.193-.434.431-.434l13.9.017c.251 0 .473.224.526.532l1.356 8.552c-.082-.017-.16-.042-.247-.042h-6.316a.408.408 0 00-.41.412v.888c0 .969-.79 1.759-1.761 1.759h-.196c-.972 0-1.762-.79-1.762-1.76v-.887a.412.412 0 00-.41-.412H3.407a1.12 1.12 0 00-.241.025l1.448-8.65zm17.216 9.798c0-.016.005-.03.002-.047l-.016-.115v-.011l-1.53-9.647c-.132-.717-.68-1.216-1.336-1.216l-13.9-.017c-.688 0-1.251.563-1.246 1.188l-1.638 9.748c-.006.025.002.05.002.075-.002.04-.01.079-.01.118v7.3c0 .694.562 1.258 1.254 1.258h17.18c.688 0 1.252-.564 1.252-1.258v-7.3a.604.604 0 01-.014-.076z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileBoxRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.263 20.429H3.482a.202.202 0 01-.196-.197v-7.128a.2.2 0 01.196-.19h5.546v.237a2.753 2.753 0 002.748 2.751h.193a2.754 2.754 0 002.75-2.75v-.239h5.547c.112 0 .177.081.19.137l.006 7.185a.2.2 0 01-.199.194zM4.88 3.557a.673.673 0 00.008-.103c0-.107.087-.193.193-.193l13.58.014c.132 0 .258.145.294.327l1.277 8.048h-6.14a.629.629 0 00-.627.63v.866c0 .823-.67 1.49-1.496 1.49h-.193c-.824 0-1.493-.67-1.493-1.49v-.866c0-.347-.28-.63-.628-.63H3.521L4.88 3.557zm16.823 9.437c-.003-.02.006-.033.003-.053L20.19 3.392c-.148-.81-.775-1.375-1.529-1.375l-13.58-.014c-.778 0-1.417.619-1.448 1.395L2.04 12.874c-.003.025.003.05.003.076-.006.05-.017.1-.017.154v7.128c0 .804.65 1.457 1.451 1.457h16.787c.801 0 1.451-.653 1.451-1.457v-7.128c0-.04-.008-.076-.01-.11z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCompressedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.82 7.655h1.784l-4.068-4v1.776c0 .659.213 1.216.614 1.611.409.4.986.613 1.67.613zm3.21-.28a.88.88 0 01.26.622v12.311a1.4 1.4 0 01-1.384 1.381h-12c-.737 0-1.384-.644-1.384-1.38V3.38c0-.722.659-1.38 1.384-1.38h2.255v3.19h-.936a.6.6 0 00-.593.606.6.6 0 00.593.605h.936v1.523h-.936a.6.6 0 00-.593.605.6.6 0 00.593.605h.936v1.524h-.936a.6.6 0 00-.593.605.6.6 0 00.593.605h.936v1.857h-.927a.6.6 0 00-.594.606v2.266a.6.6 0 00.594.605h3a.6.6 0 00.594-.605V14.33a.6.6 0 00-.594-.606h-.885v-.493h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V10.5h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V7.765h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V5.03h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V2h3.862a.86.86 0 01.6.244l5.218 5.131zm-11.2 8.617v-.816h1.81v.816H7.83z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCompressedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.617 16.44h2.266V15.4H7.617v1.04zm10.557 4.579H5.844c-.202 0-.404-.19-.404-.381V3.361c0-.174.219-.381.403-.381h2.519v2.434H7.196a.41.41 0 00-.406.412.41.41 0 00.406.411h1.166v1.967H7.196a.41.41 0 00-.406.412.41.41 0 00.406.411h1.166v1.967H7.196a.41.41 0 00-.406.412.41.41 0 00.406.411h1.166v2.308H7.208a.41.41 0 00-.407.412v2.314a.41.41 0 00.407.412h3.08a.41.41 0 00.407-.412v-2.314a.41.41 0 00-.406-.412H9.177v-.913h1.137a.408.408 0 00.406-.411.41.41 0 00-.406-.412H9.177v-1.97h1.137a.408.408 0 00.406-.411.41.41 0 00-.406-.412H9.177v-1.97h1.137a.408.408 0 00.406-.41.41.41 0 00-.406-.413H9.177V4.837h1.137a.408.408 0 00.406-.412.41.41 0 00-.406-.412H9.177V2.974h3.487V5.45c0 .958.325 1.782.941 2.384.611.6 1.449.913 2.42.913h2.55v11.888c.002.2-.194.384-.401.384zm.19-13.09h-2.336c-.756 0-1.397-.235-1.854-.683-.454-.443-.695-1.062-.695-1.793V3.156l4.885 4.773zm.824-.341L13.824 2.35a.686.686 0 00-.476-.194H5.843c-.638 0-1.218.574-1.218 1.205v17.28c0 .641.569 1.204 1.218 1.204h12.328c.658 0 1.219-.551 1.219-1.204V8.075a.68.68 0 00-.202-.487z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCompressedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.83 15.992h1.81v-.816H7.83v.816zm10.27 4.313c0 .073-.096.171-.194.171h-12c-.098 0-.196-.11-.196-.17V3.38c.006-.062.12-.174.196-.174h2.255v1.98h-.936a.6.6 0 00-.593.606.6.6 0 00.593.605h.936v1.524h-.936a.6.6 0 00-.593.605.6.6 0 00.593.605h.936v1.523h-.936a.6.6 0 00-.593.606.6.6 0 00.593.605h.936v1.86h-.927a.6.6 0 00-.594.605v2.266a.6.6 0 00.594.605h3a.6.6 0 00.594-.605V14.33a.6.6 0 00-.594-.606h-.885v-.493h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V10.5h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V7.765h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35V5.03h.907a.6.6 0 00.594-.605.6.6 0 00-.594-.605H9.35v-.614h2.997V5.43c0 .995.339 1.852.978 2.48.633.621 1.495.952 2.493.952h2.28v11.442h.002zM13.535 3.658L17.6 7.655h-1.784c-.684 0-1.261-.212-1.667-.61-.4-.395-.614-.953-.614-1.61V3.657zm5.493 3.717l-5.215-5.129A.852.852 0 0013.21 2H5.906c-.725 0-1.384.658-1.384 1.381v16.924c0 .734.647 1.381 1.384 1.381h11.997a1.4 1.4 0 001.384-1.38V7.996a.875.875 0 00-.258-.622z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCssFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.232 0 .448.087.613.246l5.297 5.127a.87.87 0 01.219.389.62.62 0 01.047.235v12.305c0 .751-.644 1.384-1.409 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.244 7.804H4.42c-.667 0-1.207.54-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-4.96 1.342c.352 0 .739.053 1.022.15l-.13.623a3.553 3.553 0 00-.879-.13c-.45 0-.594.16-.594.393 0 .717 1.869.224 1.869 1.656 0 .327-.112.588-.306.77-.257.24-.605.347-1.128.347a3.696 3.696 0 01-1.213-.193l.129-.636c.322.112.745.182 1.01.182.494 0 .724-.129.724-.465 0-.686-1.869-.188-1.869-1.627 0-.745.583-1.07 1.364-1.07zm3.159 0c.353 0 .74.053 1.022.15l-.128.623a3.553 3.553 0 00-.88-.13c-.451 0-.594.16-.594.393 0 .717 1.868.224 1.868 1.656 0 .327-.112.588-.305.77-.258.24-.605.347-1.129.347a3.709 3.709 0 01-1.213-.193l.13-.636c.321.112.744.182 1.01.182.493 0 .723-.129.723-.465 0-.686-1.868-.188-1.868-1.627 0-.745.582-1.07 1.364-1.07zm-5.924 0c.316 0 .722.07.958.165l-.107.61a2.965 2.965 0 00-.787-.128c-.787 0-.97.518-.97 1.246 0 .434.082.799.264 1 .16.182.392.263.804.263.177 0 .46-.033.675-.075l.087.61a3.895 3.895 0 01-.922.113c-.65 0-1.056-.155-1.33-.443-.311-.333-.445-.81-.445-1.445 0-1.146.518-1.916 1.773-1.916zm9.305-7.477v1.765c0 .658.216 1.213.622 1.608.414.398.997.61 1.689.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCssLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.742 2.156a.69.69 0 01.484.2l5.406 5.232c.09.086.143.201.174.322a.38.38 0 01.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205L6.98 17.6H4.422a2.27 2.27 0 01-2.266-2.27v-4.178a2.27 2.27 0 012.266-2.27h2.521v-5.52c0-.63.586-1.205 1.23-1.205h7.569zm-.69.832H8.17c-.185 0-.406.205-.406.378v5.521h6.703a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.268H7.801l-.037 3.042c0 .183.205.373.406.373h12.44v-.003c.207 0 .406-.185.406-.378V8.758h-2.568c-.98 0-1.827-.316-2.443-.915-.622-.6-.952-1.426-.952-2.384v-2.47zm-.582 6.72H4.42c-.793 0-1.44.647-1.44 1.443v4.179c0 .795.644 1.442 1.44 1.442h10.05c.793 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zm-5.011 1.594c.353 0 .74.053 1.022.151l-.129.622a3.553 3.553 0 00-.88-.129c-.45 0-.593.16-.593.392 0 .717 1.868.224 1.868 1.656 0 .328-.112.588-.305.77-.258.241-.605.347-1.129.347a3.696 3.696 0 01-1.213-.193l.13-.636c.321.112.744.182 1.01.182.493 0 .723-.128.723-.465 0-.686-1.868-.187-1.868-1.627 0-.745.582-1.07 1.364-1.07zm3.16 0c.352 0 .739.053 1.022.151l-.129.622a3.553 3.553 0 00-.88-.129c-.45 0-.593.16-.593.392 0 .717 1.868.224 1.868 1.656 0 .328-.112.588-.305.77-.258.241-.605.347-1.13.347a3.709 3.709 0 01-1.212-.193l.129-.636c.322.112.745.182 1.01.182.494 0 .724-.128.724-.465 0-.686-1.869-.187-1.869-1.627 0-.745.583-1.07 1.364-1.07zm-5.925 0c.317 0 .723.07.958.165l-.106.61a2.965 2.965 0 00-.788-.128c-.787 0-.969.518-.969 1.246 0 .435.082.799.264 1 .16.183.392.264.804.264.176 0 .459-.034.675-.076l.086.61a3.895 3.895 0 01-.921.113c-.65 0-1.056-.154-1.33-.443-.312-.333-.446-.81-.446-1.445 0-1.146.518-1.916 1.773-1.916zm9.185-8.135v2.289c0 .728.24 1.347.7 1.79.46.445 1.107.683 1.869.683h2.35l-4.92-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileCssRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025a.86.86 0 01.613.25L21.42 7.4a.876.876 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.096a2.427 2.427 0 012.42-2.425h2.266V3.409c0-.726.673-1.384 1.41-1.384h7.414zm-.88 1.219H8.095c-.073 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.1.16.193.16h12.182c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.891-.33-2.535-.952-.65-.627-.992-1.485-.992-2.482V3.244zm-.364 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zm-4.96 1.345c.352 0 .739.053 1.022.15l-.13.623a3.553 3.553 0 00-.879-.13c-.45 0-.594.16-.594.393 0 .717 1.869.224 1.869 1.655 0 .328-.112.589-.306.77-.257.242-.605.348-1.128.348a3.696 3.696 0 01-1.213-.193l.129-.636c.322.112.745.182 1.01.182.494 0 .723-.129.723-.465 0-.686-1.868-.188-1.868-1.627 0-.745.583-1.07 1.364-1.07zm3.159 0c.353 0 .74.053 1.022.15l-.129.623a3.553 3.553 0 00-.88-.13c-.45 0-.593.16-.593.393 0 .717 1.868.224 1.868 1.655 0 .328-.112.589-.305.77-.258.242-.605.348-1.129.348a3.709 3.709 0 01-1.213-.193l.13-.636c.321.112.744.182 1.01.182.493 0 .723-.129.723-.465 0-.686-1.868-.188-1.868-1.627 0-.745.582-1.07 1.364-1.07zm-5.924 0c.316 0 .722.07.958.165l-.107.61a2.965 2.965 0 00-.787-.128c-.787 0-.97.518-.97 1.246 0 .434.082.798.264 1 .16.182.392.263.804.263.177 0 .46-.033.675-.075l.087.61a3.895 3.895 0 01-.922.113c-.65 0-1.056-.155-1.33-.443-.311-.333-.446-.81-.446-1.445 0-1.146.519-1.916 1.774-1.916zm9.305-7.477v1.765c0 .658.216 1.213.622 1.608.414.4.997.61 1.692.61h1.8l-4.114-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEncryptedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.59 7.653l-4.05-3.984v1.765c0 .658.212 1.213.61 1.608.409.4.983.61 1.664.61h1.776zm1.652.106A.624.624 0 0119.29 8v12.305a1.402 1.402 0 01-1.387 1.384H5.91c-.74 0-1.387-.647-1.387-1.384V3.387C4.522 2.658 5.183 2 5.91 2h7.3c.23 0 .442.09.608.25l5.212 5.125a.893.893 0 01.213.384zM6.234 7.064c0-1.123.347-1.711 1.26-1.711.914 0 1.26.585 1.26 1.711 0 1.126-.346 1.706-1.26 1.706-.913 0-1.26-.582-1.26-1.706zm1.804 0c0-.907-.154-1.207-.544-1.207-.389 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.246.544-1.154zm1.218 5.33c0-1.122.348-1.71 1.26-1.71.914 0 1.261.585 1.261 1.71 0 1.127-.347 1.707-1.26 1.707s-1.26-.583-1.26-1.706zm1.801 0c0-.907-.154-1.206-.543-1.206-.39 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.392 0 .543-.247.543-1.154zm1.449 0c0-1.122.347-1.71 1.26-1.71s1.26.585 1.26 1.71c0 1.127-.347 1.707-1.26 1.707s-1.26-.583-1.26-1.706zm1.8 0c0-.907-.153-1.206-.543-1.206s-.543.297-.543 1.207c0 .91.154 1.154.543 1.154.392 0 .544-.247.544-1.154zm-1.884 5.133c0-1.124.347-1.712 1.26-1.712s1.26.586 1.26 1.712-.347 1.705-1.26 1.705-1.26-.582-1.26-1.705zm1.8 0c0-.908-.153-1.208-.543-1.208s-.543.297-.543 1.208c0 .91.154 1.154.543 1.154.392 0 .544-.247.544-1.154zm-7.607-3.961h.552v-2.292H6.64v-.459c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484H6.615v-.487zm3.07-5.311h.552V5.964H9.71v-.46c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484H9.685v-.487zm6.154 5.31h.552v-2.29h-.527v-.46c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484h-1.695v-.487zm0 5.121h.552v-2.291h-.527v-.46c.193-.027.521-.055.754-.055.336 0 .45.08.45.322v2.487h.466v.482h-1.695v-.485zm-6.104 0h.552v-2.291H9.76v-.46c.194-.027.521-.055.754-.055.336 0 .451.08.451.322v2.487h.465v.482H9.735v-.485zm-3.039 0h.552v-2.291H6.72v-.46c.194-.027.521-.055.754-.055.336 0 .45.08.45.322v2.487h.466v.482H6.696v-.485z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEncryptedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.345 2.156c.18 0 .356.073.482.2l5.355 5.232a.68.68 0 01.171.325.39.39 0 01.034.162v12.563c0 .653-.558 1.205-1.219 1.205H5.843c-.65 0-1.218-.564-1.218-1.205V3.361c0-.63.583-1.205 1.218-1.205h7.502zm-.686.827H5.84c-.185 0-.4.204-.4.378v17.277c0 .188.2.378.4.378h12.325c.207 0 .4-.185.4-.378V8.756h-2.543c-.972 0-1.81-.317-2.42-.916-.617-.603-.944-1.429-.944-2.384V2.983zm.98 12.988c.913 0 1.26.586 1.26 1.712s-.347 1.706-1.26 1.706-1.26-.583-1.26-1.706.347-1.712 1.26-1.712zm2.852.065c.336 0 .45.081.45.322v2.487h.466v.482h-1.695v-.484h.552V16.55h-.527v-.46c.193-.027.521-.055.754-.055zm-6.104 0c.336 0 .45.081.45.322v2.487h.466v.482H9.608v-.484h.552V16.55h-.527v-.46c.194-.027.521-.055.754-.055zm-3.04 0c.337 0 .452.081.452.322v2.487h.465v.482H6.569v-.484h.552V16.55h-.527v-.46c.193-.027.521-.055.754-.055zm6.29.44c-.39 0-.544.296-.544 1.207 0 .91.154 1.154.543 1.154.392 0 .544-.247.544-1.154 0-.908-.154-1.207-.544-1.207zM10.39 10.84c.913 0 1.26.585 1.26 1.711 0 1.126-.347 1.706-1.26 1.706s-1.26-.583-1.26-1.706.347-1.711 1.26-1.711zm3.249 0c.913 0 1.26.585 1.26 1.711 0 1.126-.347 1.706-1.26 1.706s-1.26-.583-1.26-1.706.347-1.711 1.26-1.711zm-6.373.075c.337 0 .451.082.451.322v2.488h.465v.484H6.488v-.487h.552v-2.291h-.527v-.46c.193-.028.521-.056.753-.056zm9.225 0c.336 0 .45.082.45.322v2.488h.466v.484h-1.695v-.487h.552v-2.291h-.527v-.46c.193-.028.521-.056.754-.056zm-6.104.429c-.39 0-.544.297-.544 1.207 0 .91.155 1.154.544 1.154.392 0 .543-.246.543-1.154 0-.907-.154-1.207-.543-1.207zm3.25 0c-.39 0-.544.297-.544 1.207 0 .91.154 1.154.543 1.154.392 0 .544-.246.544-1.154 0-.907-.154-1.207-.544-1.207zm-6.27-5.835c.913 0 1.26.586 1.26 1.712s-.347 1.706-1.26 1.706-1.26-.583-1.26-1.706c0-1.124.347-1.712 1.26-1.712zm2.97.095c.336 0 .45.082.45.323v2.487h.465v.485H9.558V8.41h.552V6.12h-.527v-.46c.193-.028.521-.056.753-.056zm-2.97.41c-.39 0-.543.296-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.247.544-1.154 0-.908-.154-1.208-.544-1.208zm6.11-2.85v2.292c0 .728.24 1.347.694 1.79.457.445 1.098.683 1.852.683h2.33l-4.876-4.764z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEncryptedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.903 20.47c.096 0 .19-.095.19-.168V8.868h-2.277c-.997 0-1.86-.33-2.493-.952-.638-.628-.977-1.487-.977-2.482V3.216H5.912c-.073 0-.185.109-.19.168v16.918c0 .06.097.169.19.169h11.991zM17.59 7.654L13.54 3.67v1.765c0 .658.212 1.213.613 1.608.406.4.983.61 1.663.61h1.774zm1.65.106c.03.073.047.154.047.238v12.305c0 .751-.636 1.384-1.387 1.384H5.91c-.737 0-1.387-.647-1.387-1.384V3.384C4.522 2.658 5.183 2 5.91 2h7.3c.23 0 .442.09.605.25l5.213 5.125a.815.815 0 01.212.384zM6.233 7.064c0-1.123.347-1.711 1.26-1.711.914 0 1.26.585 1.26 1.711 0 1.126-.346 1.706-1.26 1.706-.913 0-1.26-.582-1.26-1.706zm1.804 0c0-.907-.154-1.207-.544-1.207-.389 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.246.544-1.154zm1.218 5.33c0-1.125.348-1.71 1.26-1.71.914 0 1.261.585 1.261 1.71 0 1.127-.347 1.707-1.26 1.707s-1.26-.583-1.26-1.706zm1.801 0c0-.907-.154-1.206-.543-1.206-.39 0-.543.297-.543 1.207 0 .907.154 1.154.543 1.154.392 0 .543-.247.543-1.154zm1.449 0c0-1.125.347-1.71 1.26-1.71s1.26.585 1.26 1.71c0 1.127-.347 1.707-1.26 1.707s-1.26-.583-1.26-1.706zm1.8 0c0-.907-.153-1.206-.543-1.206s-.543.297-.543 1.207c0 .907.154 1.154.543 1.154.392 0 .544-.247.544-1.154zm-1.884 5.133c0-1.124.347-1.712 1.26-1.712s1.26.585 1.26 1.712c0 1.126-.347 1.705-1.26 1.705s-1.26-.582-1.26-1.705zm1.8 0c0-.908-.153-1.208-.543-1.208s-.543.297-.543 1.208c0 .91.154 1.154.543 1.154.392 0 .544-.247.544-1.154zm-7.607-3.961h.552v-2.292H6.64v-.459c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.465v.484H6.615v-.487zm3.07-5.311h.552V5.964H9.71v-.46c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484H9.685v-.487zm6.154 5.31h.552v-2.29h-.527v-.46c.193-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484h-1.695v-.487zm0 5.121h.552v-2.291h-.527v-.46c.193-.027.521-.056.754-.056.336 0 .45.082.45.323v2.487h.466v.485h-1.695v-.488zm-6.104 0h.552v-2.291H9.76v-.46c.194-.027.521-.056.754-.056.336 0 .45.082.45.323v2.487h.466v.485H9.735v-.488zm-3.039 0h.552v-2.291H6.72v-.46c.194-.027.521-.056.754-.056.336 0 .45.082.45.323v2.487h.466v.485H6.696v-.488z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEnexFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132a.86.86 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.77h-2.3A2.427 2.427 0 012 15.134V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zM14.6 9.83H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21H14.6a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.208-1.21zm-7.454 1.656l1.543 2.086v-2.086h.653v3.257h-.597L7.25 12.765v1.977h-.652v-3.257h.549zm-1.124 0l-.056.537h-1.4v.79h1.12v.558h-1.12v.832h1.482v.537H3.824v-3.254h2.198zm6.227 0l-.056.537h-1.4v.79h1.12v.558h-1.12v.832h1.481v.537H10.05v-3.254h2.2zm1.154 0l.647 1.075.591-1.075h.79l-1.067 1.593 1.04 1.661h-.824l-.647-1.103-.586 1.103h-.804l1.079-1.621-.995-1.633h.776zm2.446-7.79V5.46c0 .659.215 1.213.622 1.608.414.4.997.61 1.691.61h1.798l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEnexLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.742 2.156c.182 0 .353.07.481.194l5.41 5.238c.09.08.142.199.173.319.023.05.034.104.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.569zm-.69.827H8.17c-.185 0-.406.204-.406.378v5.518h6.703a2.27 2.27 0 012.266 2.269v4.18a2.27 2.27 0 01-2.266 2.268H7.801l-.037 3.042c0 .182.205.373.406.373h12.44v.002c.207 0 .406-.184.406-.378V8.755h-2.568c-.98 0-1.824-.316-2.443-.915-.622-.603-.952-1.429-.952-2.384V2.983zm-.582 6.722H4.42c-.793 0-1.44.647-1.44 1.443v4.18c0 .795.644 1.442 1.44 1.442h10.05c.793 0 1.44-.647 1.44-1.443v-4.18c0-.795-.645-1.442-1.44-1.442zM7.019 11.61l1.543 2.087V11.61h.653v3.258h-.597L7.123 12.89v1.978H6.47V11.61h.549zm-1.123 0l-.056.538h-1.4v.79h1.12v.557H4.44v.832h1.48v.538H3.697V11.61h2.199zm6.227 0l-.056.538h-1.4v.79h1.12v.557h-1.12v.832h1.48v.538H9.925V11.61h2.199zm1.154 0l.647 1.076.59-1.076h.79l-1.067 1.594 1.04 1.66h-.824l-.647-1.103-.585 1.104h-.804l1.078-1.622-.994-1.633h.776zm2.602-8.448v2.291c0 .728.24 1.348.7 1.79.462.445 1.11.684 1.869.684h2.35l-4.92-4.765z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileEnexRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132a.86.86 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.77h-2.3A2.427 2.427 0 012 15.134V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-.88 1.219H8.095c-.073 0-.187.109-.193.168v5.201h6.697a2.428 2.428 0 012.423 2.426v4.095A2.428 2.428 0 0114.6 17.56H7.933l-.034 2.779c0 .05.101.16.193.16h12.185c.098 0 .194-.096.194-.169V8.896H18.16c-1.014 0-1.891-.33-2.535-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.03 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21H14.6a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.208-1.21zm-7.51 1.656l1.543 2.086v-2.086h.653v3.257h-.597l-1.496-1.977v1.977h-.652v-3.257h.549zm-1.124 0l-.056.537h-1.4v.79h1.12v.558H4.51v.832h1.482v.537H3.767v-3.254h2.2zm6.227 0l-.056.537h-1.4v.79h1.12v.558h-1.12v.832h1.481v.537H9.994v-3.254h2.2zm1.154 0l.647 1.075.591-1.075h.79l-1.067 1.593 1.04 1.661h-.824l-.647-1.103-.586 1.103h-.804l1.079-1.621-.995-1.633h.776zm2.502-7.79v1.764c0 .659.215 1.213.622 1.608.414.4.997.61 1.691.61h1.798l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileErrorFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.6 7.655l-4.064-3.997v1.773c0 .659.213 1.216.617 1.611.406.4.983.61 1.666.61h1.782v.003zm1.43-.28a.88.88 0 01.26.622v12.308a1.4 1.4 0 01-1.384 1.381H5.91c-.737 0-1.384-.644-1.384-1.38V3.38C4.525 2.658 5.183 2 5.91 2h7.302c.227 0 .44.087.603.246l5.215 5.13zM7.645 13.317a.588.588 0 00.84 0l.779-.793.778.793a.592.592 0 00.84 0 .61.61 0 000-.855l-.778-.793.779-.792a.61.61 0 000-.855.588.588 0 00-.84 0l-.78.793-.778-.793a.588.588 0 00-.84 0 .61.61 0 000 .855l.778.792-.778.793a.61.61 0 000 .855zm8.655-3.295a.588.588 0 00-.84 0l-.779.793-.779-.793a.588.588 0 00-.84 0 .61.61 0 000 .855l.779.792-.779.793a.61.61 0 000 .855.592.592 0 00.84 0l.779-.793.779.793a.592.592 0 00.84 0 .61.61 0 000-.855l-.779-.793.78-.792a.616.616 0 000-.855zm-2.042 4.866h-.129c-.857.006-1.72.569-1.72 1.83 0 .178 0 .601-.549.604h-.087c-.563-.014-.563-.434-.563-.613 0-1.23-.865-1.801-1.725-1.821h-.129c-.857.006-1.72.569-1.72 1.815a.6.6 0 00.594.605.6.6 0 00.594-.605c0-.18 0-.602.549-.605h.087c.563.014.563.434.563.613 0 1.23.865 1.802 1.725 1.821h.13c.856-.005 1.719-.568 1.719-1.829 0-.18 0-.602.546-.605h.087c.563.014.563.434.563.613a.6.6 0 00.594.605.6.6 0 00.594-.605c.003-1.232-.866-1.803-1.723-1.823z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileErrorLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.174 21.019c.207 0 .403-.185.403-.381V8.75h-2.549c-.972 0-1.81-.316-2.42-.913-.616-.602-.941-1.426-.941-2.384V2.977H5.843c-.184 0-.403.207-.403.38v17.281c0 .188.205.381.403.381h12.331zm.19-13.09l-4.882-4.77v2.297c0 .728.241 1.35.695 1.793.456.445 1.098.683 1.854.683h2.333V7.93zm.824-.341a.683.683 0 01.205.484v12.566c0 .653-.558 1.205-1.219 1.205H5.844c-.65 0-1.219-.564-1.219-1.205V3.361c0-.63.58-1.205 1.218-1.205h7.505c.176 0 .35.07.476.194l5.364 5.238zM8.35 13.36a.405.405 0 01-.577 0 .414.414 0 010-.583l.944-.955-.944-.955a.414.414 0 010-.583.403.403 0 01.577 0l.944.955.944-.955a.403.403 0 01.577 0c.16.16.16.42 0 .583l-.944.955.944.955c.16.16.16.42 0 .583a.405.405 0 01-.577 0l-.944-.955-.944.955zm8.029-3.073c.16.16.16.42 0 .583l-.944.955.944.955c.16.162.16.42 0 .583a.405.405 0 01-.577 0l-.945-.956-.943.956a.405.405 0 01-.577 0 .414.414 0 010-.583l.943-.955-.944-.955a.414.414 0 010-.583c.16-.16.418-.16.578 0l.943.955.944-.955a.402.402 0 01.578 0zm-1.956 5.025c.726.017 1.575.462 1.575 1.656a.41.41 0 01-.407.411.408.408 0 01-.406-.411c0-.673-.423-.824-.778-.832h-.099c-.35.002-.761.148-.761.823 0 1.219-.844 1.656-1.566 1.661h-.13c-.725-.017-1.573-.462-1.573-1.655 0-.672-.423-.824-.78-.832h-.097c-.353.003-.762.148-.762.823a.41.41 0 01-.406.412.408.408 0 01-.406-.412c0-1.21.843-1.641 1.566-1.647h.128c.726.017 1.575.462 1.575 1.656 0 .672.423.823.778.832h.107c.498-.003.753-.283.753-.824 0-1.224.843-1.658 1.566-1.664l.123.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileErrorRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.906 20.476c.098 0 .193-.098.193-.17V8.865h-2.28c-.997 0-1.86-.328-2.493-.953-.638-.63-.975-1.487-.975-2.479V3.21H5.91c-.073 0-.19.112-.196.17v16.925c0 .06.1.171.196.171h11.997zm-.305-12.82l-4.065-3.998v1.773c0 .659.213 1.216.617 1.611.406.4.983.61 1.666.61 0 .003 1.782.003 1.782.003zm1.428-.28c.166.162.26.389.26.621v12.308a1.4 1.4 0 01-1.383 1.381H5.91c-.737 0-1.384-.644-1.384-1.38V3.38C4.525 2.658 5.183 2 5.91 2h7.302c.227 0 .44.087.603.246l5.215 5.13zM7.646 13.318a.61.61 0 010-.854l.778-.793-.778-.792a.61.61 0 010-.855.585.585 0 01.829-.011l.011.011.779.793.778-.793a.585.585 0 01.83-.008l.008.008a.61.61 0 010 .855l-.779.792.779.793a.61.61 0 010 .854.588.588 0 01-.832.009l-.008-.009-.78-.792-.778.792a.59.59 0 01-.835.006c.003-.003 0-.006-.002-.006zm8.655-3.297a.61.61 0 010 .855l-.779.792.78.793a.61.61 0 010 .854.588.588 0 01-.833.009l-.008-.009-.779-.792-.779.792a.59.59 0 01-.834.006l-.006-.006a.61.61 0 010-.854l.779-.793-.779-.792a.61.61 0 010-.855.585.585 0 01.83-.01l.01.01.779.793.779-.793a.585.585 0 01.829-.01l.011.01zm-2.042 4.866c.86.02 1.726.59 1.726 1.823a.6.6 0 01-.594.605.6.6 0 01-.594-.605c0-.179 0-.599-.563-.613h-.087c-.549.003-.549.426-.549.605 0 1.26-.866 1.824-1.72 1.83h-.132c-.86-.023-1.725-.592-1.725-1.822 0-.179 0-.599-.563-.613h-.087c-.549.003-.549.426-.549.605a.6.6 0 01-.594.605.6.6 0 01-.594-.605c0-1.246.863-1.81 1.723-1.815h.129c.86.02 1.725.59 1.725 1.823 0 .18 0 .6.563.614h.087c.55-.003.55-.426.55-.605 0-1.26.865-1.824 1.72-1.83l.128-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.232 0 .448.09.616.25L21.423 7.4c.11.109.174.243.216.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zm-1.244 7.807H4.42a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-5.244 1.361l1.373 3.804h-.93l-.317-.955H7.913l-.294.955h-.83l1.278-3.804h.955zm2.695 0v3.804h-.868v-3.804h.868zm-3.193.95h-.011l-.395 1.269h.823l-.417-1.27zm7.325-8.446v1.765c0 .658.215 1.213.622 1.608.414.4.997.61 1.691.61h1.802l-4.115-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileHtmlFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.23 0 .445.087.61.244l5.3 5.131a.843.843 0 01.219.384c.03.073.047.154.047.238v12.305c0 .751-.644 1.384-1.409 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.77H4.42A2.427 2.427 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-.597 7.804H4.42c-.667 0-1.207.54-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h10.493a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-10.39 1.748v1.26h1.09v-1.26h.706v3.095h-.706v-1.302h-1.09v1.302h-.705v-3.095h.706zm5.777 0l.977 1.728 1.009-1.728h.543v3.095h-.647v-1.781l-.641 1.075h-.544l-.66-1.095v1.801h-.595v-3.095h.558zm3.904 0v2.582h1.37v.513H13.5v-3.095h.705zm-4.829 0l-.053.51h-.935v2.582H7.68v-2.582h-.96v-.51h2.655zm6.47-7.883v1.765c0 .658.217 1.213.626 1.608.414.4.997.61 1.689.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileHtmlLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.18 0 .35.07.482.194l5.41 5.238c.089.086.14.201.17.325a.43.43 0 01.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.564-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.27v-4.179a2.27 2.27 0 012.266-2.268h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.571zm-.691.83H8.17c-.185 0-.406.204-.406.378v5.52h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.269H7.803l-.036 3.042c0 .182.204.372.406.372H20.61c.207 0 .403-.185.403-.378V8.758h-2.565c-.98 0-1.827-.316-2.443-.915-.622-.6-.952-1.426-.952-2.384V2.985zm-.58 6.722H4.42c-.793 0-1.44.647-1.44 1.443v4.179c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zm-10.16 2v1.26h1.09v-1.26h.706v3.095h-.706v-1.302h-1.09v1.302h-.706v-3.095h.706zm5.776 0l.978 1.728 1.008-1.728h.543v3.095h-.647v-1.781l-.641 1.075h-.543l-.662-1.095v1.801h-.593v-3.095h.557zm3.905 0v2.583h1.37v.512h-2.076v-3.095h.706zm-4.83 0l-.053.51h-.935V14.8H7.47v-2.583h-.96v-.51h2.655zm6.715-8.543v2.291c0 .728.24 1.347.7 1.79.462.445 1.11.683 1.869.683h2.35l-4.92-4.764z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileHtmlRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132a.86.86 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.406 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.77H4.42A2.427 2.427 0 012 15.134V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-.877 1.219H8.098c-.073 0-.188.109-.193.168v5.201h7.014c1.333 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426H7.94l-.033 2.779c0 .05.1.16.193.16h12.18c.098 0 .193-.096.193-.169V8.896h-2.31c-1.015 0-1.891-.33-2.536-.952-.65-.63-.994-1.487-.994-2.482V3.244zm.28 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h10.493a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zM4.552 11.58v1.261h1.09v-1.26h.705v3.095h-.706v-1.302h-1.09v1.302h-.705V11.58h.706zm5.776 0l.977 1.73 1.009-1.73h.543v3.096h-.647v-1.781l-.641 1.075h-.544l-.66-1.095v1.801H9.77V11.58h.558zm3.904 0v2.583h1.37v.513h-2.075V11.58h.705zm-4.829 0l-.053.51h-.935v2.583h-.706V12.09h-.961v-.51h2.655zm6.446-7.884V5.46c0 .659.215 1.213.622 1.608.414.4.997.61 1.691.61h1.798l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileIlustratorLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.747 2.156c.182 0 .353.07.485.196l5.409 5.236a.683.683 0 01.168.325c.02.05.034.106.034.162v12.563c0 .653-.564 1.205-1.23 1.205H8.176c-.656 0-1.233-.564-1.233-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.27v-4.179a2.27 2.27 0 012.266-2.268h2.521V3.36c0-.63.586-1.205 1.233-1.205h7.571zm-.692.83H8.173c-.185 0-.406.204-.406.378v5.52h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.269H7.806l-.036 3.042c0 .182.204.372.406.372h12.437c.207 0 .403-.185.403-.378V8.758H18.45c-.98 0-1.826-.316-2.442-.915-.622-.6-.953-1.426-.953-2.384V2.985zm-.58 6.722H4.423c-.792 0-1.44.647-1.44 1.443v4.179c0 .795.645 1.442 1.44 1.442h10.054c.792 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zM9.18 11.322l1.372 3.803h-.93l-.316-.955H8.069l-.294.955h-.829l1.277-3.803h.956zm2.694 0v3.803h-.868v-3.803h.868zm-3.193.95H8.67l-.395 1.268h.823l-.417-1.269zm7.202-9.107v2.291c0 .728.24 1.347.7 1.79.462.445 1.11.683 1.868.683h2.35l-4.918-4.764z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileIlustratorRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.232 0 .448.09.616.25L21.423 7.4c.11.109.174.243.216.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zm-.877 1.219H8.098c-.073 0-.188.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.093a2.427 2.427 0 01-2.42 2.425h-6.33l-.034 2.78c0 .05.1.159.193.159h12.18v.003c.097 0 .193-.096.193-.169V8.896H18.16c-1.014 0-1.891-.33-2.535-.952-.65-.627-.992-1.487-.992-2.482V3.244zm-.367 6.588H4.42a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-5.244 1.361l1.373 3.804h-.93l-.317-.955H7.913l-.294.955h-.83l1.278-3.804h.955zm2.695 0v3.804h-.868v-3.804h.868zm-3.193.95h-.011l-.395 1.269h.823l-.417-1.27zm7.325-8.446v1.765c0 .658.215 1.213.622 1.608.414.4.997.61 1.691.61h1.802l-4.115-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileImageFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.55 7.661l-4.042-3.978v1.762c0 .656.21 1.21.614 1.605.406.398.98.611 1.66.611h1.768zm1.647.106a.614.614 0 01.048.239v12.28a1.4 1.4 0 01-1.384 1.38H5.895c-.737 0-1.384-.644-1.384-1.38V3.4c0-.723.658-1.381 1.384-1.381h7.283c.227 0 .442.086.602.246l5.205 5.118c.106.103.17.24.212.383zm-3.109 1.964h-8.42c-.555 0-1.022.429-1.022.933v7.815c0 .504.467.936 1.02.936h8.42c.543 0 1.02-.437 1.02-.936v-7.815c.005-.496-.474-.933-1.018-.933zm-6.594 4.4a.864.864 0 01-.857-.87c0-.482.384-.872.857-.872.474 0 .858.39.858.871a.867.867 0 01-.858.872zm-.756 3.454a.512.512 0 01-.398-.19.536.536 0 01.068-.742l2.437-2.065a.517.517 0 01.686.02l.269.258 1.557-1.261a.506.506 0 01.633-.006l1.499 1.168a.534.534 0 01.098.737.51.51 0 01-.726.098l-1.179-.919-1.126.91.714.687a.531.531 0 01.023.742.513.513 0 01-.731.023l-1.41-1.35-2.086 1.767a.497.497 0 01-.328.123z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileImageLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.174 21.016c.207 0 .4-.185.4-.378V8.756h-2.543c-.972 0-1.81-.317-2.423-.916-.616-.603-.941-1.429-.941-2.384v-2.47H5.849c-.182 0-.4.204-.4.378v17.274c0 .188.201.378.4.378h12.325zm.188-13.09l-4.877-4.761v2.288c0 .728.238 1.348.692 1.79.456.445 1.098.684 1.851.684h2.334zm1-.013a.39.39 0 01.03.162v12.563c0 .653-.557 1.205-1.22 1.205H5.845c-.65 0-1.221-.564-1.221-1.205V3.361c0-.63.583-1.205 1.221-1.205h7.502c.179 0 .347.07.476.194l5.361 5.235a.673.673 0 01.177.328zm-3.014 10.882a.173.173 0 00.123-.059l-.011-7.941c-.003.034-.06-.003-.11-.003H7.675a.17.17 0 00-.109.04v7.96c0-.011.006-.014.014-.014.02 0 .056.017.098.017h8.67zm0-8.832c.495 0 .93.39.93.832v7.997c0 .443-.435.832-.93.832H7.675c-.504 0-.93-.38-.93-.832v-7.997c0-.451.426-.832.928-.832h8.675zm-6.883 2.835a.44.44 0 000 .88c.241 0 .435-.2.435-.44a.434.434 0 00-.435-.44zm0 1.706a1.26 1.26 0 01-1.252-1.267c0-.697.563-1.266 1.252-1.266.692 0 1.255.569 1.255 1.266 0 .698-.563 1.267-1.255 1.267zm4.914-.754l1.669 1.291c.18.14.213.398.076.58a.405.405 0 01-.575.076l-1.417-1.095-1.507 1.21.938.89a.415.415 0 01.017.586.409.409 0 01-.58.02l-1.678-1.597-2.436 2.05a.41.41 0 01-.58-.053.418.418 0 01.053-.583l2.717-2.285a.407.407 0 01.543.017l.404.383 1.848-1.484a.416.416 0 01.508-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileImageRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.903 20.47c.096 0 .19-.095.19-.168V8.868h-2.277c-.997 0-1.86-.33-2.493-.952-.641-.63-.977-1.487-.977-2.482V3.216H5.912c-.073 0-.185.109-.19.168v16.918c0 .06.097.169.19.169h11.991zM17.59 7.654l-4.05-3.986V5.43c0 .659.212 1.213.613 1.608.406.4.98.61 1.663.61h1.774v.004zm1.65.106c.03.073.047.154.047.238v12.305c0 .751-.636 1.384-1.387 1.384H5.91c-.737 0-1.387-.647-1.387-1.384V3.384C4.522 2.658 5.183 2 5.91 2h7.3c.23 0 .442.087.605.25l5.213 5.125c.109.104.17.241.212.384zm-3.127 10.62v-7.584L7.7 10.781v7.586l8.414.011zm.014-8.65c.544 0 1.023.436 1.023.935v7.832c0 .498-.48.935-1.023.935h-8.44c-.554 0-1.022-.428-1.022-.935v-7.832c0-.507.47-.936 1.023-.936h8.44zm-6.61 4.408a.869.869 0 01-.86-.874c0-.482.384-.874.86-.874.473 0 .857.392.857.874a.866.866 0 01-.857.874zm-.757 3.46a.508.508 0 01-.397-.19.536.536 0 01.067-.743l2.443-2.07a.514.514 0 01.686.022l.269.258 1.56-1.263a.506.506 0 01.636-.006l1.501 1.17a.534.534 0 01.098.74.51.51 0 01-.725.098l-1.182-.918-1.126.91.717.686c.21.2.218.532.022.745a.513.513 0 01-.731.023l-1.412-1.353-2.09 1.77a.532.532 0 01-.336.12z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileJpegFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.23 0 .445.087.61.244l5.3 5.131c.11.104.174.241.219.384.03.073.047.154.047.238v12.305c0 .751-.644 1.384-1.409 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.106v-4.092a2.43 2.43 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.241 7.801H4.42c-.667 0-1.207.54-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.095c0-.666-.54-1.21-1.204-1.21zm-8.695 1.67v2.313c0 .404-.067.622-.232.787-.149.143-.384.21-.751.21-.16 0-.266-.01-.499-.042l-.053-.565c.149.028.314.039.384.039.314 0 .412-.084.412-.446v-2.296h.74zm7.897-.062c.322 0 .705.067.916.157l-.096.54a2.89 2.89 0 00-.767-.117c-.656 0-.925.39-.925 1.095 0 .364.048.664.19.863.119.165.315.26.628.26.118 0 .28-.014.395-.033v-.684h-.456v-.532h1.19v1.655a4.523 4.523 0 01-1.157.166c-1.165.002-1.56-.639-1.56-1.667 0-1.014.535-1.703 1.642-1.703zm-6.093.062c.507 0 .83.07 1.04.266.176.162.26.411.26.759 0 .347-.081.608-.241.787-.19.213-.485.314-.91.314h-.521v1.12h-.74v-3.246h1.112zm4.011 0l-.056.535H9.938v.787h1.115v.554H9.938v.83h1.477v.534H9.199v-3.24h2.19zm-4.042.535H7v1.033h.367c.238 0 .336-.033.431-.123.084-.084.13-.224.13-.412 0-.176-.04-.302-.124-.384-.09-.08-.227-.114-.457-.114zm8.499-8.337v1.765c0 .658.216 1.213.625 1.608.414.4.997.61 1.689.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileJpegLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.747 2.156c.18 0 .35.07.482.194l5.409 5.238c.09.084.14.199.17.319.023.05.035.104.035.162v12.563c0 .653-.564 1.205-1.23 1.205H8.176c-.656 0-1.233-.563-1.233-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.233-1.205h7.571zm-.692.827H8.173c-.185 0-.406.204-.406.378v5.518h6.706a2.27 2.27 0 012.266 2.269v4.18a2.27 2.27 0 01-2.266 2.268H7.806l-.036 3.042c0 .182.204.373.406.373h12.437v.002c.207 0 .403-.184.403-.378V8.755H18.45c-.98 0-1.826-.316-2.442-.915-.622-.603-.953-1.429-.953-2.384V2.983zm-.58 6.722H4.423c-.792 0-1.44.647-1.44 1.443v4.18c0 .795.645 1.442 1.44 1.442h10.054c.792 0 1.44-.647 1.44-1.443v-4.18c0-.795-.645-1.442-1.44-1.442zM5.73 11.624v2.314c0 .403-.067.622-.232.787-.148.143-.384.21-.75.21-.16 0-.267-.011-.5-.042l-.053-.566c.149.028.314.04.384.04.314 0 .412-.085.412-.446v-2.297h.74zm7.897-.062c.322 0 .706.068.916.157l-.095.54a2.89 2.89 0 00-.768-.117c-.655 0-.924.39-.924 1.095 0 .365.047.664.19.863.118.165.314.26.628.26.117 0 .28-.013.395-.033v-.683h-.457v-.533h1.19v1.656a4.523 4.523 0 01-1.156.165c-1.166.003-1.56-.638-1.56-1.667 0-1.014.534-1.703 1.64-1.703zm-6.093.062c.507 0 .83.07 1.04.266.176.163.26.412.26.76 0 .347-.081.607-.24.786-.191.213-.485.314-.911.314h-.521v1.12h-.74v-3.246h1.112zm4.012 0l-.056.535h-1.395v.787h1.114v.555h-1.114v.829h1.476v.535H9.355v-3.241h2.19zm-4.042.535h-.348v1.034h.367c.238 0 .336-.034.432-.124.084-.084.128-.224.128-.411 0-.177-.039-.303-.123-.384-.09-.081-.227-.115-.456-.115zm8.378-8.997v2.291c0 .728.24 1.348.7 1.79.462.445 1.11.684 1.868.684h2.35l-4.918-4.765z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileJpegRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132c.11.106.174.243.219.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zm-.88 1.219H8.095c-.073 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.093a2.426 2.426 0 01-2.42 2.425h-6.33l-.034 2.78c0 .05.1.159.193.159h12.182v.003c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.888-.33-2.532-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.364 6.588H4.42a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-8.692 1.667v2.313c0 .404-.067.622-.232.787-.149.143-.384.21-.751.21-.16 0-.266-.01-.499-.042l-.053-.565c.149.028.314.039.384.039.314 0 .412-.084.412-.446V11.5h.74zm7.897-.062c.322 0 .705.067.916.157l-.096.54a2.89 2.89 0 00-.767-.117c-.656 0-.925.39-.925 1.095 0 .364.048.664.19.863.119.165.315.26.628.26.118 0 .28-.014.395-.033v-.684h-.456v-.532h1.19v1.655a4.523 4.523 0 01-1.157.166c-1.165.002-1.56-.639-1.56-1.667 0-1.014.535-1.703 1.642-1.703zm-6.093.062c.507 0 .83.07 1.04.266.176.162.26.411.26.759 0 .347-.081.608-.241.787-.19.213-.485.314-.91.314h-.521v1.12h-.74v-3.246h1.112zm4.011 0l-.056.535H9.938v.787h1.115v.554H9.938v.83h1.477v.534H9.199V11.5h2.19zm-4.042.535H7v1.033h.367c.238 0 .336-.033.431-.123.084-.084.13-.224.13-.412 0-.176-.04-.302-.124-.384-.09-.08-.227-.114-.457-.114zm8.502-8.34V5.46c0 .659.215 1.213.622 1.608.414.4.997.61 1.689.61h1.8l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp3Filled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2a.89.89 0 01.619.252l5.291 5.123a.843.843 0 01.219.384c.03.073.047.154.047.238v12.305c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773H4.423A2.422 2.422 0 012 15.106v-4.095a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.244 7.801H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.095c0-.666-.54-1.21-1.207-1.21zm-1.207 1.412c.465 0 .86.11 1.087.336.156.157.255.373.255.68 0 .384-.169.653-.49.816.389.14.621.431.621.913 0 .286-.087.535-.26.714-.244.255-.639.384-1.2.384a4.653 4.653 0 01-.893-.09v-.582c.216.039.47.064.74.064.302 0 .482-.04.61-.123.13-.087.2-.227.2-.426 0-.193-.07-.325-.186-.406-.134-.098-.341-.129-.72-.129h-.103v-.54h.129c.339 0 .512-.043.644-.157.087-.076.146-.2.146-.379 0-.14-.04-.26-.124-.336-.109-.098-.29-.14-.582-.14a5.41 5.41 0 00-.723.054v-.572a4.3 4.3 0 01.849-.081zm-8.126.07L6.1 13.347l1.204-2.064h.647v3.695h-.77v-2.13l-.767 1.286h-.648l-.79-1.308v2.152H4.27v-3.695h.664zm5.092 0c.577 0 .944.081 1.182.302.2.185.297.471.297.866s-.092.692-.274.896c-.216.244-.552.356-1.037.356H9.6v1.275h-.843v-3.695h1.27zm-.03.61h-.396v1.18h.418v-.003c.269 0 .384-.04.49-.14.098-.098.146-.255.146-.47 0-.2-.042-.345-.14-.438-.104-.092-.26-.128-.519-.128zm5.85-8.224v1.765c0 .656.217 1.213.626 1.608.414.4.997.61 1.689.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp3Light: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.18 0 .35.07.482.194l5.41 5.235a.624.624 0 01.17.322c.023.05.034.104.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.571zm-.691.824H8.17c-.185 0-.406.204-.406.378v5.518h6.706a2.27 2.27 0 012.266 2.269v4.18a2.27 2.27 0 01-2.266 2.268H7.803l-.036 3.042c0 .182.204.373.406.373H20.61v.003c.207 0 .403-.185.403-.379V8.75h-2.565c-.98 0-1.827-.316-2.443-.916-.622-.602-.952-1.428-.952-2.384V2.98zm-.58 6.722H4.42c-.793 0-1.44.648-1.44 1.443v4.18c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.443v-4.179c0-.795-.645-1.443-1.44-1.443zm-1.26 1.662c.464 0 .86.109 1.086.336.157.157.255.372.255.68 0 .384-.168.653-.49.815.39.14.622.432.622.914 0 .285-.087.535-.26.714-.245.255-.64.384-1.2.384a4.653 4.653 0 01-.893-.09v-.583c.215.04.47.065.74.065.302 0 .481-.04.61-.123.129-.087.199-.227.199-.426 0-.193-.07-.325-.185-.406-.135-.098-.342-.13-.72-.13h-.104v-.54h.13c.338 0 .512-.042.643-.157.087-.075.146-.199.146-.378 0-.14-.04-.26-.123-.336-.11-.098-.291-.14-.583-.14a5.41 5.41 0 00-.722.053v-.571a4.3 4.3 0 01.848-.081zm-8.127.07l1.168 2.064 1.205-2.064h.647v3.694h-.77V13l-.768 1.286h-.647l-.79-1.308v2.151h-.709v-3.694h.664zm5.093 0c.577 0 .944.08 1.182.302.199.185.297.47.297.866 0 .395-.093.692-.275.896-.216.244-.552.356-1.036.356h-.594v1.274H8.91v-3.694h1.269zm-.031.61h-.395v1.18h.417v-.003c.27 0 .384-.04.49-.14.098-.098.146-.255.146-.471 0-.199-.042-.345-.14-.437-.104-.092-.26-.129-.518-.129zm5.73-8.885v2.289c0 .728.242 1.347.701 1.79.462.445 1.107.683 1.869.683h2.35l-4.92-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp3Regular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .456.093.619.252l5.291 5.124a.86.86 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.406-.647-1.406-1.384l.034-2.773h-2.3a2.427 2.427 0 01-2.42-2.425v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.406-1.384h7.415zm-.883 1.219H8.092c-.072 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.093a2.427 2.427 0 01-2.42 2.425h-6.33l-.034 2.78c0 .05.101.159.193.159h12.185v.003c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.891-.33-2.535-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.36 6.588H4.42a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-1.208 1.409c.465 0 .86.11 1.087.336.156.157.255.373.255.68 0 .384-.169.653-.49.816.389.14.621.431.621.913 0 .286-.087.535-.26.714-.244.255-.639.384-1.2.384a4.653 4.653 0 01-.893-.09v-.582c.216.039.47.064.74.064.302 0 .482-.04.61-.123.13-.087.2-.227.2-.426 0-.193-.07-.325-.186-.406-.134-.098-.341-.129-.72-.129h-.103v-.54h.129c.339 0 .512-.043.644-.157.087-.076.146-.2.146-.379 0-.14-.04-.26-.124-.336-.109-.098-.291-.14-.582-.14a5.41 5.41 0 00-.723.054v-.572a4.3 4.3 0 01.849-.081zm-8.126.07L6.1 13.375l1.204-2.064h.647v3.695h-.77v-2.13l-.767 1.286h-.648l-.79-1.308v2.152H4.27V11.31h.664zm5.092 0c.577 0 .944.081 1.182.302.2.185.297.471.297.866s-.092.692-.274.896c-.216.244-.552.356-1.037.356H9.6v1.275h-.843V11.31h1.27zm-.03.61h-.396v1.18h.418v-.003c.269 0 .384-.04.49-.14.098-.098.146-.255.146-.47 0-.2-.042-.345-.14-.438-.104-.092-.26-.128-.519-.128zm5.85-8.224v1.765c0 .658.217 1.213.623 1.608.414.4.997.61 1.692.61h1.8l-4.114-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp4Filled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.232 0 .448.087.613.246l5.297 5.127a.848.848 0 01.219.386c.03.073.047.154.047.238v12.305c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773H4.423A2.427 2.427 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.244 7.801H4.42c-.667 0-1.207.54-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.095c0-.666-.54-1.21-1.207-1.21zm-9.423 1.426l1.163 2.056 1.201-2.056h.647v3.68h-.77v-2.12l-.765 1.28h-.647l-.787-1.302v2.143h-.703v-3.681h.661zm5.076 0c.577 0 .94.081 1.179.302.199.182.297.468.297.86 0 .392-.092.69-.275.894-.215.24-.549.356-1.033.356h-.591v1.269h-.84v-3.681h1.263zm3.501-.003l-.829 2.26h.852v-.876h.77v.877h.431v.577h-.431v.846h-.77v-.846h-1.62a.778.778 0 01-.022-.188c0-.151.028-.322.112-.56l.765-2.09h.742zm-3.535.61h-.392v1.174h.412c.269 0 .38-.036.49-.14.098-.098.146-.252.146-.467 0-.2-.042-.345-.14-.437-.101-.093-.258-.13-.516-.13zm5.96-8.165v1.765c0 .658.217 1.213.626 1.608.414.4.997.61 1.689.61h1.8L15.847 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp4Light: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.742 2.156c.182 0 .355.07.484.194l5.41 5.235a.638.638 0 01.17.322c.023.05.034.104.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.569zm-.69.824H8.17c-.185 0-.406.204-.406.378v5.518h6.703a2.27 2.27 0 012.266 2.269v4.18a2.27 2.27 0 01-2.266 2.268H7.801l-.037 3.042c0 .182.205.373.406.373h12.44v.003c.207 0 .406-.185.406-.379V8.75h-2.568c-.98 0-1.827-.316-2.443-.913-.622-.602-.952-1.429-.952-2.384V2.98zm-.582 6.722H4.42c-.793 0-1.44.648-1.44 1.443v4.18c0 .795.644 1.442 1.44 1.442h10.05c.793 0 1.44-.647 1.44-1.443v-4.179c0-.795-.645-1.443-1.44-1.443zm-9.473 1.676l1.162 2.056 1.202-2.056h.647v3.68h-.77v-2.12l-.765 1.28h-.647l-.787-1.303v2.143h-.703v-3.68h.66zm5.075 0c.577 0 .941.08 1.18.302.198.182.296.468.296.86 0 .392-.092.69-.274.894-.216.24-.55.355-1.034.355h-.59v1.27h-.841v-3.681h1.263zm3.502-.003l-.83 2.26h.852v-.877h.77v.877h.432v.577h-.432v.846h-.77v-.846h-1.619a.778.778 0 01-.022-.187c0-.152.028-.323.112-.56l.764-2.09h.743zm-3.535.61h-.393v1.174h.412c.27 0 .381-.036.49-.14.098-.098.146-.252.146-.468 0-.199-.042-.344-.14-.437-.1-.092-.258-.129-.515-.129zm5.84-8.826V5.45c0 .729.24 1.348.7 1.79.462.446 1.107.681 1.869.681h2.35l-4.92-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMp4Regular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.022a.86.86 0 01.613.25l5.297 5.126a.868.868 0 01.219.39c.03.072.047.153.047.237V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.406-.647-1.406-1.384l.034-2.773h-2.3a2.427 2.427 0 01-2.42-2.425v-4.096a2.427 2.427 0 012.42-2.425h2.266V3.406c0-.723.67-1.384 1.406-1.384h7.415zm-.883 1.222H8.092c-.072 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.101.16.193.16h12.185c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.891-.33-2.535-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.36 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zm-9.424 1.426l1.163 2.056 1.201-2.056h.647v3.68h-.77v-2.12l-.765 1.28h-.647l-.787-1.302v2.143h-.703v-3.681h.661zm5.076 0c.577 0 .94.081 1.179.302.199.182.297.468.297.86 0 .392-.093.69-.275.894-.215.24-.549.356-1.033.356h-.591v1.269h-.84v-3.681h1.263zm3.501-.003l-.829 2.26h.852v-.876h.77v.877h.431v.577h-.431v.846h-.77v-.846h-1.62a.778.778 0 01-.022-.188c0-.151.028-.322.112-.56l.765-2.09h.742zm-3.535.61h-.392v1.174h.412c.269 0 .38-.036.49-.14.098-.098.146-.252.146-.467 0-.2-.042-.345-.14-.437-.101-.093-.258-.13-.516-.13zm5.96-8.165v1.765c0 .658.217 1.213.623 1.608.414.4.997.61 1.692.61h1.8l-4.114-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMusicFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.54 3.67v1.764c0 .658.212 1.213.613 1.608.406.398.98.61 1.663.61h1.774L13.54 3.67zm5.7 4.09c.03.072.047.153.047.237v12.305c0 .751-.636 1.384-1.386 1.384H5.909c-.74 0-1.387-.647-1.387-1.384V3.384C4.522 2.658 5.183 2 5.91 2h7.3a.85.85 0 01.605.25l5.213 5.125a.845.845 0 01.212.384zm-4.51 4.56l-3.743-1.032v-.61l3.743 1.03v.611zm-.773 6.089h-.104c-.513-.008-.77-.291-.77-.843 0-.205 0-.827.756-.835h.112c.518.014.779.297.779.84 0 .547-.26.827-.773.838zM9.189 16.4h-.115c-.51-.009-.77-.292-.77-.844 0-.204 0-.826.756-.832h.11c.518.012.781.297.781.844 0 .54-.26.82-.762.832zm5.947-5.673l-4.328-1.193-.134-.02a.726.726 0 00-.72.734v3.591a2.038 2.038 0 00-.757-.168h-.142c-.824.009-1.785.507-1.785 1.888 0 1.381.964 1.885 1.79 1.897h.143c.793-.017 1.706-.493 1.776-1.746l.014-3.33 3.742 1.034v2.437a2.038 2.038 0 00-.756-.169l-.143-.002c-.823.008-1.784.507-1.784 1.888 0 1.38.966 1.885 1.79 1.896h.143c.826-.017 1.79-.518 1.79-1.888v-6.115a.746.746 0 00-.64-.734z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMusicLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.171 21.016c.208 0 .4-.185.4-.378V8.758h-2.543c-.972 0-1.81-.316-2.423-.915-.616-.603-.94-1.426-.94-2.384V2.985h-6.82c-.182 0-.4.205-.4.379v17.274c0 .188.201.378.4.378H18.17zM18.36 7.93l-4.877-4.764v2.291c0 .728.238 1.347.692 1.79.457.445 1.098.683 1.852.683h2.333zm1-.016c.022.05.034.103.034.162v12.563c0 .653-.558 1.205-1.222 1.205H5.846c-.65 0-1.221-.564-1.221-1.205V3.361c0-.63.583-1.205 1.221-1.205h7.502c.179 0 .347.07.476.194l5.361 5.238a.646.646 0 01.174.325zm-5.241 10.913c.42-.009.916-.185.916-.978 0-.795-.501-.972-.922-.983h-.117c-.41.003-.902.176-.902.978 0 .8.496.977.913.983h.112zM10.942 11.4l4.092 1.123v-.753l-4.092-1.12v.75zm-1.734 5.375c.417-.005.916-.182.916-.974 0-.796-.502-.972-.922-.984l-.12-.002c-.41.002-.9.179-.9.977 0 .804.496.98.914.986l.112-.003zm6.095-5.792c.308.033.549.3.549.619v6.246c0 1.308-.927 1.79-1.72 1.804h-.14c-.793-.011-1.72-.493-1.72-1.812 0-1.322.922-1.796 1.712-1.804h.142c.303.008.622.081.905.243v-2.904l-4.092-1.12-.014 3.688c-.07 1.19-.944 1.645-1.706 1.656h-.135c-.798-.011-1.725-.493-1.725-1.812 0-1.323.921-1.796 1.711-1.804l.149.002c.3.009.616.084.896.244v-3.86c0-.344.278-.625.62-.625l.106.014 4.462 1.225z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileMusicRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.094 20.302V8.868h-2.278c-1 0-1.86-.33-2.493-.952-.638-.63-.977-1.487-.977-2.482V3.216H5.912c-.073 0-.185.109-.19.168v16.918c0 .06.097.169.19.169h11.991c.096 0 .19-.096.19-.169zM13.539 3.67v1.765c0 .658.213 1.213.614 1.608.406.398.98.61 1.663.61h1.774L13.54 3.67zm5.7 4.09a.61.61 0 01.048.238v12.305c0 .751-.636 1.384-1.387 1.384H5.91c-.74 0-1.387-.647-1.387-1.384V3.384C4.522 2.658 5.183 2 5.91 2h7.3a.85.85 0 01.605.25l5.213 5.125a.845.845 0 01.212.384zm-4.51 4.56v-.61l-3.742-1.031v.61l3.743 1.031zm-.772 6.09c.512-.011.773-.291.773-.835 0-.543-.264-.829-.78-.84h-.111c-.756.008-.756.63-.756.835 0 .551.257.834.77.843h.104v-.003zM9.189 16.4c.501-.01.762-.29.762-.834 0-.546-.263-.83-.782-.843H9.06c-.756.005-.756.63-.756.832 0 .551.258.834.77.843h.115v.002zm5.947-5.672a.73.73 0 01.63.729v6.114c0 1.37-.964 1.874-1.79 1.888h-.143c-.823-.01-1.79-.515-1.79-1.896 0-1.381.964-1.882 1.785-1.888l.143.003c.252.005.512.064.756.168v-2.437l-3.742-1.034-.014 3.33c-.068 1.253-.98 1.73-1.776 1.746h-.143c-.824-.011-1.79-.515-1.79-1.896 0-1.381.96-1.88 1.784-1.888h.143c.252.005.513.064.756.168v-3.591c0-.404.322-.734.72-.734l.135.02 4.336 1.198z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileOkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.717 13.115l1.04 1.045 2.834-2.85a.601.601 0 01.849-.002l.003.003a.605.605 0 010 .854l-3.26 3.278a.598.598 0 01-.847.002l-.003-.002-1.465-1.471a.605.605 0 010-.854.596.596 0 01.85-.003c0-.003 0 0 0 0zM18.171 7.66h1.807l-4.118-4v1.773c0 .664.216 1.219.625 1.614.411.403.997.61 1.686.613zm-.025 7.964a.606.606 0 00.002-1.21h-5.49c-.033.232-.056.45-.09.635-.039.196-.1.39-.184.572l5.762.003zm0 2.868a.601.601 0 00.602-.602v-.003a.606.606 0 00-.602-.605h-7.068c-.512.468-1.09.871-1.621 1.21h8.689zm-9.667-.812c.014-.009.022-.017.04-.026a6.9 6.9 0 00.425-.266c.042-.022.073-.05.112-.073.008-.008.025-.014.04-.025.176-.12.355-.249.529-.378 0 0 .008 0 .008-.008.168-.12.33-.252.482-.381.017-.009.025-.023.042-.031.143-.12.28-.252.409-.373.017-.022.042-.042.056-.064.12-.12.232-.24.328-.361a.322.322 0 01.05-.065c.095-.129.176-.252.232-.37.009-.016.017-.025.026-.042.064-.128.112-.249.129-.37.201-1.167.249-3.618.254-4.79-.972-.024-1.588-.433-2.142-.806-.13-.078-.241-.151-.362-.227-.095-.056-.185-.112-.28-.162a1.168 1.168 0 01-.103-.048 2.793 2.793 0 00-.328-.137 1.265 1.265 0 01-.09-.025c-.294-.09-.6-.14-.907-.146H7.42c-.947 0-1.468.347-2.07.74-.563.378-1.196.798-2.143.823.006 1.16.056 3.605.258 4.765.199 1.168 2.431 2.66 3.955 3.425.168-.078.345-.176.521-.274.177-.09.362-.193.538-.305zm9.644-6.177h-5.302c-.009.387-.025.798-.042 1.21h5.344a.603.603 0 00.602-.602v-.003a.61.61 0 00-.602-.605zm3.297-4.126a.897.897 0 01.266.622v12.31c0 .752-.641 1.379-1.403 1.379H8.134c-.745 0-1.397-.636-1.397-1.378v-1.034c-1.171-.608-4.132-2.316-4.462-4.227-.289-1.65-.28-5.465-.272-5.627 0-.185.078-.361.232-.473a.613.613 0 01.513-.112c.851.137 1.308-.171 1.935-.589.516-.339 1.14-.74 2.057-.885V3.387C6.737 2.66 7.403 2 8.134 2h7.398c.224 0 .443.09.602.252l5.286 5.126z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileOkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.025 20.64V8.75h-2.566c-.975 0-1.82-.314-2.434-.913-.622-.6-.95-1.423-.95-2.378V2.983H8.218c-.188 0-.409.204-.409.378v4.224c1.09.064 1.762.518 2.359.913.655.437 1.162.781 2.154.633a.4.4 0 01.344.09c.09.075.146.19.146.305.008.081.008 1.12-.031 2.336h5.627c.23 0 .41.182.41.412a.41.41 0 01-.41.412h-5.65a28.46 28.46 0 01-.156 2.14h5.832a.412.412 0 010 .824H12.43c-.286.764-.983 1.498-1.762 2.114h7.767c.23 0 .41.182.41.412a.41.41 0 01-.41.412H9.512a20.11 20.11 0 01-1.703.963v1.095c0 .183.204.379.409.379H20.62c.205-.006.404-.196.404-.384zm-17.78-5.548c.247 1.431 2.998 3.07 4.245 3.686a17.962 17.962 0 001.672-.955c1.18-.773 2.409-1.796 2.571-2.731.222-1.283.26-4.04.26-5.118-1.038.05-1.669-.386-2.276-.79-.614-.412-1.197-.798-2.23-.798h-.009c-1.033 0-1.605.386-2.22.798-.623.412-1.261.849-2.287.799.012 1.086.054 3.834.275 5.109zM20.81 7.927l-4.916-4.774V5.46c0 .722.246 1.342.706 1.787.46.454 1.106.683 1.86.683h2.35v-.002zm.83-.34a.667.667 0 01.204.485v12.569c0 .65-.558 1.202-1.222 1.202H8.218c-.656 0-1.23-.57-1.23-1.202v-1.185c-1.073-.543-4.227-2.305-4.554-4.224-.286-1.67-.278-5.546-.278-5.712 0-.123.056-.246.157-.319a.418.418 0 01.353-.076c.975.157 1.49-.196 2.137-.633.566-.378 1.205-.798 2.188-.896V3.358c0-.625.583-1.202 1.23-1.202h7.546a.7.7 0 01.485.19l5.386 5.242zM6.81 15.641a.412.412 0 01-.291-.12l-1.496-1.502a.41.41 0 11.58-.583l1.207 1.21 3.04-3.053a.41.41 0 11.579.583l-3.33 3.344a.4.4 0 01-.289.12z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileOkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.482 20.308V8.86H18.17c-1.011 0-1.885-.33-2.527-.952-.641-.628-.986-1.485-.986-2.482V3.21H8.134c-.072 0-.193.112-.193.168v3.95c1.011.115 1.678.549 2.216.918.633.42 1.092.726 1.975.58a.62.62 0 01.498.138.605.605 0 01.216.45c0 .073 0 .978-.034 2.082h5.314a.61.61 0 01.602.605.604.604 0 01-.602.605h-5.353a26.33 26.33 0 01-.12 1.703h5.487c.336 0 .602.266.602.605 0 .33-.266.605-.602.605h-5.745c-.258.588-.745 1.16-1.308 1.67h7.053c.336 0 .602.266.602.604a.604.604 0 01-.602.606H9.457c-.62.394-1.188.694-1.516.862v.953c0 .056.095.168.193.168h12.149c.103-.006.199-.101.199-.174zm-17.02-5.465c.202 1.16 2.432 2.653 3.955 3.417 1.524-.764 3.765-2.257 3.964-3.417.095-.58.16-1.49.202-2.395.03-.902.047-1.807.056-2.386-.972-.026-1.589-.435-2.152-.807-.593-.403-1.114-.75-2.07-.75-.955 0-1.467.347-2.07.75-.563.37-1.196.79-2.143.815.009 1.168.06 3.605.258 4.773zM15.86 3.661v1.765c0 .66.216 1.218.625 1.613.408.404.994.614 1.686.614h1.807L15.86 3.66zm5.56 3.717a.833.833 0 01.266.62v12.31c0 .742-.641 1.378-1.403 1.378H8.134c-.745 0-1.395-.644-1.395-1.378v-1.03c-1.162-.614-4.123-2.331-4.459-4.225-.288-1.66-.283-5.473-.274-5.636a.593.593 0 01.745-.58c.851.13 1.308-.17 1.935-.588.513-.347 1.132-.756 2.053-.893V3.38c0-.726.667-1.378 1.395-1.378h7.398c.224 0 .443.087.61.24l5.278 5.135zM9.594 11.302a.602.602 0 01.851 0 .605.605 0 010 .855l-3.26 3.277a.6.6 0 01-.852 0l-1.465-1.473a.605.605 0 010-.855.602.602 0 01.852 0l1.04 1.045 2.834-2.849z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePdfFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132c.11.106.174.243.219.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.77h-2.3A2.427 2.427 0 012 15.134V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zM14.266 9.83H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zm-5.19 1.468c.703 0 1.17.11 1.479.417.297.292.45.754.45 1.42 0 .673-.145 1.138-.45 1.451-.278.283-.703.418-1.365.418H7.933v-3.706h1.143zm-3.227 0c.58 0 .947.081 1.185.302.201.185.297.471.297.866s-.093.695-.278.9c-.215.243-.552.358-1.039.358h-.597V15h-.84v-3.703h1.272zm8.243 0l-.064.61h-1.532v.9h1.213v.633h-1.213V15h-.846v-3.703h2.442zm-5.056.619h-.26v2.47h.358c.379 0 .65-.114.796-.33.146-.216.196-.465.196-.922 0-.532-.081-.781-.26-.974-.169-.18-.418-.244-.83-.244zm-3.22-.006H5.42v1.182h.418v-.002c.271 0 .383-.04.493-.14.098-.098.145-.255.145-.471 0-.199-.042-.347-.14-.44-.104-.092-.26-.129-.52-.129zm10.03-8.215V5.46c0 .659.216 1.213.622 1.608.414.4.997.61 1.692.61h1.797l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePdfLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.747 2.156c.182 0 .353.07.485.196l5.409 5.236a.687.687 0 01.168.322c.022.05.034.106.034.162v12.563c0 .653-.564 1.205-1.23 1.205H8.176c-.656 0-1.233-.563-1.233-1.205L6.98 17.6H4.422a2.27 2.27 0 01-2.266-2.27v-4.178a2.27 2.27 0 012.266-2.27h2.521v-5.52c0-.63.586-1.205 1.233-1.205h7.571zm-.692.832H8.173c-.182 0-.406.207-.406.378v5.521h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.268H7.806l-.036 3.042c0 .18.207.373.406.373h12.437v-.003c.207 0 .403-.185.403-.378V8.758H18.45c-.98 0-1.826-.316-2.442-.915-.622-.603-.953-1.429-.953-2.384v-2.47zm-.58 6.72H4.423c-.792 0-1.44.647-1.44 1.443v4.179c0 .795.645 1.442 1.44 1.442h10.054c.792 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zm-5.243 1.717c.703 0 1.17.11 1.479.418.297.29.45.753.45 1.42 0 .672-.145 1.137-.45 1.45-.277.284-.703.418-1.364.418H8.089v-3.706h1.143zm-3.227 0c.58 0 .947.081 1.185.303.202.185.297.47.297.865s-.093.695-.278.9c-.215.243-.551.358-1.039.358h-.596v1.277h-.84v-3.703h1.271zm8.244 0l-.065.61h-1.532v.9h1.213v.633h-1.213v1.56h-.846v-3.703h2.443zm-5.056.62h-.26v2.47h.358c.378 0 .65-.115.795-.33.146-.216.196-.466.196-.922 0-.533-.08-.782-.26-.975-.168-.18-.418-.244-.83-.244zm-3.222-.006h-.395v1.182h.418v-.003c.271 0 .384-.04.493-.14.098-.098.145-.255.145-.47 0-.2-.042-.348-.14-.44-.103-.093-.26-.13-.52-.13zm9.91-8.874v2.288c0 .728.242 1.348.701 1.79.462.445 1.106.684 1.868.684h2.347l-4.915-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePdfRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.3 5.132c.11.106.174.243.219.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.77h-2.3A2.427 2.427 0 012 15.134V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.673-1.384 1.41-1.384h7.414zm-.88 1.219H8.095c-.073 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.1.16.193.16h12.182c.098 0 .194-.096.194-.169V8.896H18.16c-1.014 0-1.891-.33-2.535-.952-.65-.627-.995-1.487-.995-2.482V3.244zm-.364 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zM9.16 11.297c.703 0 1.17.11 1.479.417.297.292.45.754.45 1.42 0 .673-.145 1.138-.45 1.451-.278.283-.703.418-1.365.418H8.017v-3.706H9.16zm-3.227 0c.58 0 .947.081 1.185.302.201.185.297.471.297.866s-.093.695-.278.9c-.215.243-.552.358-1.039.358h-.597V15h-.84v-3.703h1.272zm8.243 0l-.064.61H12.58v.9h1.213v.633H12.58V15h-.846v-3.703h2.442zm-5.056.619h-.26v2.47h.358c.379 0 .65-.114.796-.33.146-.216.196-.465.196-.922 0-.532-.081-.781-.26-.974-.169-.18-.418-.244-.83-.244zM5.9 11.91h-.396v1.182h.418v-.002c.271 0 .383-.04.493-.14.098-.099.145-.255.145-.471 0-.199-.042-.347-.14-.44-.103-.092-.26-.129-.52-.129zm9.946-8.215v1.764c0 .659.216 1.213.622 1.608.414.4.997.61 1.692.61h1.797l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePngFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.535 2.025a.86.86 0 01.613.25L21.445 7.4c.115.109.18.243.222.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.123c-.748 0-1.409-.647-1.409-1.384l.034-2.773H4.445a2.425 2.425 0 01-2.42-2.423V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-1.24 7.804H4.447a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.208 1.207 1.208h9.846a1.21 1.21 0 001.207-1.208V11.04c0-.666-.54-1.21-1.207-1.21zm-1.049 1.434c.365 0 .802.076 1.037.177l-.107.613a3.292 3.292 0 00-.87-.134c-.743 0-1.048.44-1.048 1.24 0 .415.053.754.215.978.135.188.356.297.709.297.135 0 .317-.017.445-.036v-.773h-.515v-.603h1.35V14.9c-.35.107-.907.188-1.31.188-1.32-.003-1.765-.728-1.765-1.894 0-1.151.607-1.93 1.86-1.93zm-7.66.07c.574 0 .94.082 1.176.3.199.182.297.468.297.86 0 .392-.093.689-.275.894-.215.24-.549.355-1.03.355h-.592v1.27h-.84v-3.679h1.263zm2.683 0l1.742 2.353v-2.353h.737v3.675h-.672l-1.69-2.23v2.23H7.65v-3.675h.619zm-2.714.608h-.393v1.171h.412c.27 0 .381-.036.49-.14.098-.098.146-.252.146-.468 0-.199-.042-.344-.14-.434-.1-.092-.258-.129-.515-.129zm10.319-8.246v1.764c0 .656.216 1.213.622 1.608.414.4.997.61 1.692.61h1.797l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePngLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.18 0 .35.07.482.194l5.41 5.235a.687.687 0 01.17.328.43.43 0 01.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.564-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.27v-4.179a2.27 2.27 0 012.266-2.268h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.571zm-.691.83H8.17c-.185 0-.406.204-.406.378v5.52h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.269H7.803l-.036 3.042c0 .182.204.372.406.372H20.61c.207 0 .403-.185.403-.378V8.756h-2.565c-.98 0-1.827-.317-2.443-.916-.622-.603-.952-1.426-.952-2.384v-2.47zm-.58 6.722H4.42c-.793 0-1.44.647-1.44 1.443v4.179c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zm-1.101 1.684c.364 0 .801.075 1.036.176l-.106.613a3.292 3.292 0 00-.871-.134c-.743 0-1.048.44-1.048 1.24 0 .415.053.754.216.978.134.188.356.297.709.297.134 0 .316-.016.445-.036v-.773h-.516v-.602h1.35v1.876c-.35.107-.907.188-1.31.188-1.32-.003-1.765-.728-1.765-1.893 0-1.152.608-1.93 1.86-1.93zm-7.661.07c.574 0 .941.08 1.176.3.2.181.297.467.297.86 0 .391-.092.688-.274.893-.216.24-.55.356-1.031.356h-.591v1.268h-.84v-3.677H5.71zm2.683 0l1.743 2.353v-2.353h.736v3.675h-.672l-1.689-2.23v2.23h-.737v-3.675h.62zm-2.714.607h-.392v1.171H5.7c.269 0 .38-.036.49-.14.098-.098.146-.252.146-.468 0-.198-.042-.344-.14-.434-.101-.092-.258-.129-.516-.129zm10.2-8.904v2.288c0 .728.24 1.348.7 1.79.462.445 1.107.684 1.869.684h2.35l-4.92-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePngRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.535 2.025a.86.86 0 01.613.25L21.445 7.4c.115.109.18.243.222.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.123c-.75 0-1.409-.647-1.409-1.384l.034-2.773H4.445a2.425 2.425 0 01-2.42-2.423V11.04a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-.877 1.219H8.123c-.073 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.425 2.425 0 01-2.42 2.423h-6.33l-.034 2.78c0 .05.1.159.193.159h12.182v.003c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.89-.33-2.532-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.364 6.585H4.448a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.208 1.207 1.208h9.846a1.21 1.21 0 001.207-1.208V11.04c0-.666-.54-1.21-1.207-1.21zm-1.02 1.434c.365 0 .802.076 1.037.177l-.107.613a3.292 3.292 0 00-.87-.134c-.743 0-1.048.44-1.048 1.24 0 .415.053.754.215.978.135.188.356.297.709.297.134 0 .317-.017.445-.036v-.773h-.515v-.603h1.35V14.9c-.35.107-.907.188-1.31.188-1.32-.003-1.765-.729-1.765-1.894 0-1.151.607-1.93 1.86-1.93zm-7.66.07c.574 0 .94.082 1.176.3.199.182.297.468.297.86 0 .392-.093.689-.275.894-.215.24-.549.355-1.03.355H5.19v1.27h-.84v-3.679h1.263zm2.683 0l1.742 2.353v-2.353h.737v3.675h-.672l-1.69-2.23v2.23h-.736v-3.675h.619zm-2.714.608H5.19v1.171h.412c.27 0 .381-.036.49-.14.098-.098.146-.252.146-.468 0-.199-.042-.344-.14-.434-.1-.092-.258-.129-.515-.129zm10.29-8.246v1.764c0 .656.217 1.213.623 1.608.414.4.997.61 1.689.61h1.8l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePptFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.535 2.025a.86.86 0 01.613.25L21.445 7.4c.115.109.18.243.222.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.123c-.748 0-1.409-.647-1.409-1.384l.034-2.773H4.445a2.427 2.427 0 01-2.42-2.425v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-1.24 7.807H4.447a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-8.508 1.501c.591 0 .964.082 1.207.308.205.188.303.48.303.883s-.093.706-.28.916c-.221.25-.563.364-1.059.364h-.605v1.3h-.86v-3.77h1.294zm3.415 0c.59 0 .963.082 1.207.308.204.188.302.48.302.883s-.092.706-.28.916c-.22.25-.563.364-1.058.364h-.606v1.3h-.86v-3.77h1.295zm5.022 0l-.067.622h-1.14v3.149h-.86v-3.149h-1.168v-.622h3.235zm-8.47.625H5.35v1.202h.426v-.003c.274 0 .392-.04.501-.143.098-.098.149-.258.149-.479 0-.204-.045-.353-.143-.445-.104-.093-.263-.132-.53-.132zm3.414 0h-.403v1.202h.425v-.003c.275 0 .393-.04.502-.143.098-.098.148-.258.148-.479 0-.204-.044-.353-.143-.445-.103-.093-.263-.132-.529-.132zm6.706-8.263v1.764c0 .656.216 1.213.622 1.608.414.4.997.61 1.692.61h1.797l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePptLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.183 0 .353.07.485.196l5.409 5.236a.683.683 0 01.168.325.39.39 0 01.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.564-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.27v-4.179a2.27 2.27 0 012.266-2.268h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.571zm-.691.827H8.17c-.182 0-.406.207-.406.378v5.52h6.706a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.269H7.803l-.036 3.042c0 .182.204.372.406.372H20.61v.003c.207 0 .403-.185.403-.378V8.756h-2.565c-.98 0-1.827-.317-2.443-.916-.622-.603-.952-1.429-.952-2.384V2.983zm-.58 6.725H4.42c-.793 0-1.44.647-1.44 1.443v4.179c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.442v-4.18c0-.795-.645-1.442-1.44-1.442zm-8.56 1.754c.59 0 .963.08 1.207.308.204.187.302.479.302.882s-.092.706-.28.916c-.221.25-.563.364-1.059.364h-.605v1.3h-.86v-3.77h1.295zm3.414 0c.591 0 .964.08 1.207.308.205.187.303.479.303.882s-.093.706-.28.916c-.221.25-.563.364-1.059.364h-.605v1.3h-.86v-3.77h1.294zm5.023 0l-.068.621h-1.14v3.149h-.86v-3.149h-1.168v-.621h3.236zm-8.471.624h-.403v1.202H5.9v-.003c.275 0 .393-.04.502-.143.098-.098.148-.257.148-.479 0-.204-.045-.353-.143-.445-.103-.093-.263-.132-.53-.132zm3.415 0H8.89v1.202h.426v-.003c.274 0 .392-.04.501-.143.098-.098.149-.257.149-.479 0-.204-.045-.353-.143-.445-.104-.093-.263-.132-.53-.132zm6.585-8.921v2.291c0 .728.24 1.347.7 1.79.462.445 1.11.683 1.869.683h2.35l-4.92-4.764z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePptRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.535 2.025a.86.86 0 01.613.25L21.445 7.4c.115.109.18.243.222.386.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.123c-.75 0-1.409-.647-1.409-1.384l.034-2.773H4.445a2.427 2.427 0 01-2.42-2.425v-4.093a2.427 2.427 0 012.42-2.426h2.266V3.41c0-.726.67-1.384 1.41-1.384h7.414zm-.877 1.219H8.123c-.073 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.093a2.427 2.427 0 01-2.42 2.425h-6.33l-.034 2.78c0 .05.1.159.193.159h12.182v.003c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.89-.33-2.532-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.364 6.588H4.448a1.21 1.21 0 00-1.207 1.21v4.092c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.092c0-.667-.54-1.21-1.207-1.21zm-8.283 1.501c.591 0 .964.082 1.207.308.205.188.303.48.303.883s-.092.706-.28.916c-.221.249-.563.364-1.059.364h-.605v1.3h-.86v-3.77h1.294zm3.415 0c.59 0 .963.082 1.207.308.204.188.303.48.303.883s-.093.706-.28.916c-.222.249-.564.364-1.06.364h-.604v1.3h-.86v-3.77h1.294zm5.022 0l-.067.622h-1.14v3.149h-.86v-3.149h-1.168v-.622h3.235zm-8.47.625h-.404v1.202H6v-.003c.274 0 .392-.04.501-.143.098-.098.149-.258.149-.479 0-.205-.045-.353-.143-.445-.104-.093-.263-.132-.53-.132zm3.414 0H8.99v1.202h.426v-.003c.274 0 .392-.04.5-.143.099-.098.15-.258.15-.479 0-.205-.045-.353-.143-.445-.104-.093-.264-.132-.53-.132zm6.482-8.263v1.764c0 .656.216 1.213.622 1.608.414.4.997.61 1.689.61h1.8l-4.111-3.982z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePsdFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.232 0 .448.087.613.246l5.297 5.127a.887.887 0 01.219.389.62.62 0 01.047.235v12.305c0 .751-.644 1.384-1.409 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.244 7.801H4.42c-.667 0-1.207.54-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.095c0-.666-.54-1.21-1.207-1.21zM9.19 11.157a3.4 3.4 0 011.034.151l-.129.628a3.616 3.616 0 00-.888-.13c-.454 0-.6.163-.6.396 0 .725 1.889.227 1.889 1.672 0 .33-.115.594-.308.779-.26.243-.611.353-1.143.353a3.627 3.627 0 01-1.227-.194l.129-.644c.325.115.75.185 1.022.185.499 0 .731-.129.731-.47 0-.693-1.888-.191-1.888-1.645 0-.75.591-1.081 1.378-1.081zm-3.316.07c.58 0 .947.081 1.185.302.199.185.297.471.297.866s-.093.692-.278.9c-.215.243-.551.358-1.039.358h-.594v1.277h-.843v-3.703h1.272zm6.412 0c.703 0 1.168.11 1.476.417.297.292.448.75.448 1.418 0 .672-.146 1.137-.448 1.45-.277.28-.703.418-1.364.418h-1.255v-3.703h1.143zm-.037.616h-.26v2.468h.358c.378 0 .65-.115.796-.33.145-.216.196-.466.196-.92 0-.529-.081-.778-.26-.974-.169-.18-.418-.244-.83-.244zm-6.406-.003h-.398v1.18h.418v-.003c.271 0 .383-.04.493-.14.098-.098.145-.255.145-.47 0-.2-.042-.348-.14-.438-.103-.092-.26-.129-.518-.129zm10.003-8.17v1.764c0 .658.216 1.213.625 1.608.414.398.997.61 1.689.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePsdLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.747 2.156c.18 0 .35.07.482.194l5.409 5.235c.09.087.143.199.17.322.023.05.035.104.035.162v12.563c0 .653-.564 1.205-1.23 1.205H8.176c-.656 0-1.233-.563-1.233-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.233-1.205h7.571zm-.689.824H8.173c-.185 0-.406.204-.406.378v5.518h6.706a2.27 2.27 0 012.266 2.269v4.18a2.27 2.27 0 01-2.266 2.268H7.806l-.036 3.042c0 .182.204.373.406.373h12.437v.003c.207 0 .406-.185.406-.379V8.75h-2.566c-.98 0-1.826-.316-2.442-.913-.622-.602-.953-1.429-.953-2.384V2.98zm-.582 6.722H4.422c-.792 0-1.44.648-1.44 1.443v4.18c0 .795.645 1.442 1.44 1.442h10.054c.792 0 1.44-.647 1.44-1.443v-4.179c0-.795-.645-1.443-1.44-1.443zm-5.213 1.662c.358 0 .748.053 1.033.15l-.129.628a3.616 3.616 0 00-.888-.129c-.453 0-.599.163-.599.395 0 .726 1.888.227 1.888 1.673 0 .33-.115.593-.308.778-.26.244-.61.353-1.143.353a3.627 3.627 0 01-1.227-.193l.129-.644c.325.115.75.185 1.022.185.499 0 .731-.13.731-.471 0-.692-1.887-.19-1.887-1.644 0-.75.59-1.081 1.378-1.081zm-3.317.07c.58 0 .947.08 1.185.302.199.185.297.47.297.866 0 .395-.092.692-.277.899-.216.243-.552.358-1.04.358h-.593v1.278h-.844v-3.703h1.272zm6.412 0c.703 0 1.168.109 1.476.417.297.291.448.75.448 1.417 0 .673-.145 1.138-.448 1.451-.277.28-.703.418-1.364.418h-1.255v-3.703h1.143zm-.036.616h-.261v2.468h.359c.378 0 .65-.115.795-.33.146-.217.196-.466.196-.92 0-.53-.081-.778-.26-.974-.168-.18-.418-.244-.83-.244zm-6.407-.003h-.397v1.18h.417v-.004c.272 0 .384-.039.493-.14.098-.098.146-.254.146-.47 0-.199-.042-.348-.14-.437-.104-.093-.26-.129-.519-.129zm9.967-8.888V5.45c0 .729.24 1.348.7 1.79.462.446 1.106.681 1.868.681h2.35l-4.918-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilePsdRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025a.86.86 0 01.613.25L21.42 7.4a.893.893 0 01.219.386c.03.073.047.154.047.238V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.096a2.427 2.427 0 012.42-2.425h2.266V3.409c0-.726.673-1.384 1.41-1.384h7.414zm-.883 1.219H8.092c-.072 0-.187.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.101.16.193.16h12.185c.098 0 .194-.096.194-.169V8.896h-2.314c-1.014 0-1.891-.33-2.535-.952-.65-.63-.995-1.487-.995-2.482V3.244zm-.36 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zM9.19 11.241a3.4 3.4 0 011.034.151l-.129.628a3.616 3.616 0 00-.888-.13c-.454 0-.6.163-.6.396 0 .725 1.889.227 1.889 1.672 0 .33-.115.594-.308.779-.26.243-.611.353-1.143.353a3.627 3.627 0 01-1.227-.194l.129-.644c.325.115.75.185 1.022.185.499 0 .731-.129.731-.47 0-.693-1.888-.191-1.888-1.645 0-.75.591-1.081 1.378-1.081zm-3.316.07c.58 0 .947.081 1.185.302.199.185.297.471.297.866s-.093.692-.278.9c-.215.243-.551.358-1.039.358h-.594v1.277h-.843v-3.703h1.272zm6.412 0c.703 0 1.168.11 1.476.417.297.292.448.75.448 1.418 0 .672-.146 1.137-.448 1.45-.277.28-.703.418-1.364.418h-1.255v-3.703h1.143zm-.037.616h-.26v2.468h.358c.378 0 .65-.115.796-.33.145-.216.196-.466.196-.92 0-.529-.081-.778-.26-.974-.169-.18-.418-.244-.83-.244zm-6.406-.003h-.398v1.18h.418V13.1c.271 0 .383-.04.493-.14.098-.098.145-.255.145-.47 0-.2-.042-.348-.14-.438-.103-.092-.26-.129-.518-.129zm10.003-8.227v1.765c0 .658.216 1.213.622 1.608.414.4.997.61 1.692.61h1.8l-4.114-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilesDigitalFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.347 18.804H3.202V8.59H6.81v1.134c0 .681.232 1.275.672 1.71.434.433 1.017.657 1.7.657h1.163v6.712h.002zM8.014 8.64l2.289 2.219h-1.12c-.259 0-.603-.048-.866-.305-.202-.205-.306-.485-.306-.83V8.641h.003zm10.706 6.49c.947 0 1.683-.271 2.182-.803.49-.51.731-1.241.731-2.18V6.636c0-.936-.24-1.658-.731-2.168-.496-.527-1.235-.79-2.182-.79l-11.451.008c-.947 0-1.684.264-2.182.787-.48.502-.731 1.233-.731 2.168v.715H3.08c-.577 0-1.081.51-1.081 1.1v10.485c0 .591.496 1.093 1.081 1.093h7.387c.585 0 1.081-.502 1.081-1.093v-1.784h9.479a.604.604 0 00.602-.616.608.608 0 00-.602-.617h-9.479v-.79l7.17-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilesDigitalLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.596 19H3.061c-.04 0-.084-.047-.087-.067V8.689c.009-.028.062-.07.087-.072h4.008v1.31c0 .611.216 1.14.625 1.527.403.384.955.585 1.591.585h1.398v6.891c0 .025-.042.073-.087.07zM5.386 6.913c0-.638.151-1.117.45-1.417.309-.31.813-.468 1.5-.468l11.686-.005c.683 0 1.185.157 1.496.467.3.3.45.78.45 1.418v5.39c0 .643-.153 1.125-.456 1.433-.31.317-.812.477-1.493.477l-7.521.002v-2.73a.376.376 0 00-.034-.158.547.547 0 00-.14-.243L8.053 7.975a.576.576 0 00-.407-.16h-2.26v-.902zm2.501 2.023l2.429 2.302h-1.03c-.421 0-.774-.123-1.023-.361-.244-.232-.376-.56-.376-.95v-.991zm13.547 6.843H11.5v-.768l7.52-.002c.911 0 1.611-.244 2.085-.723.454-.462.683-1.132.683-1.992V6.905c0-.857-.23-1.521-.686-1.978-.47-.47-1.17-.708-2.084-.708l-11.69.005c-.912 0-1.61.241-2.08.709-.457.457-.687 1.12-.687 1.978v.902h-1.5c-.473.002-.905.417-.905.874v10.246c0 .465.423.871.905.871h7.535c.49 0 .905-.398.905-.871v-2.35h9.933a.404.404 0 00.409-.4v-.003a.408.408 0 00-.41-.401z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFilesDigitalRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.501 11.073a.732.732 0 00-.184-.311l-3.208-3.18a.756.756 0 00-.53-.22H5.56v-.715c0-.6.13-1.042.384-1.305.263-.28.714-.42 1.322-.42l11.451-.009c.616 0 1.059.14 1.322.42.258.264.384.706.384 1.306v5.512c0 .608-.129 1.053-.384 1.322-.271.289-.714.429-1.322.429l-7.168.008v-2.588a.559.559 0 00-.048-.25zM8.014 9.725V9.2l1.683 1.66h-.512c-.255 0-.602-.047-.866-.304-.201-.205-.305-.485-.305-.83zm2.333 9.079H3.202V8.59H6.81v1.134c0 .681.232 1.275.672 1.71.434.433 1.02.657 1.7.657h1.163v6.712h.002zm8.373-3.672c.947 0 1.683-.272 2.182-.804.49-.51.731-1.241.731-2.177V6.636c0-.939-.24-1.661-.731-2.171-.496-.527-1.235-.79-2.182-.79l-11.451.008c-.947 0-1.684.264-2.182.788-.482.501-.731 1.232-.731 2.168v.714H3.08c-.577 0-1.081.51-1.081 1.1v10.485c0 .591.496 1.093 1.081 1.093h7.387c.585 0 1.081-.502 1.081-1.093v-1.784h9.479a.604.604 0 00.602-.616.608.608 0 00-.602-.616h-9.476v-.79h7.168z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileSketchFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.59 7.653l-4.054-3.984v1.765c0 .658.213 1.213.614 1.608.406.398.98.61 1.664.61h1.776zm1.652.106a.61.61 0 01.045.238v12.305c0 .751-.636 1.384-1.386 1.384H5.906c-.737 0-1.386-.647-1.386-1.384V3.384C4.52 2.658 5.18 2 5.906 2h7.3c.23 0 .442.087.605.25l5.213 5.125c.115.11.176.244.218.384zm-4.549 4.96l.34-.985.498.986h-.838zm-.33.973h1.014l-1.941 2.714.927-2.714zm-4.871 0l.94 2.756-1.99-2.756h1.05zm.507-1.474l-.42-1.23h1.38l-.96 1.23zm3.854.003l-.978-1.232h1.4l-.422 1.232zm-3.025.499l1.09-1.39 1.1 1.39h-2.19zm2.52.972l-1.425 4.165-1.423-4.165h2.849zm-4.531-1.978l.344 1.006h-.865l.52-1.006zm7.927 1.283c-.003-.005 0-.008-.003-.014l-1.364-2.692-.003-.01c-.003-.007-.008-.01-.011-.012a.451.451 0 00-.143-.157l-.056-.034c-.02-.008-.037-.025-.056-.033-.042-.014-.087-.014-.129-.02-.011 0-.02-.008-.03-.008h-6.04c-.011 0-.02.008-.03.008-.043.003-.085.003-.127.017-.02.008-.036.022-.053.034a.502.502 0 00-.193.18c-.006.007-.014.01-.02.018l-1.409 2.704c-.003.005 0 .01-.003.016a.484.484 0 00-.05.21l.003.02c0 .017.008.034.01.05.01.068.032.127.065.183.006.01.006.025.011.036l4.429 6.132h.003a.453.453 0 00.148.128c.014.009.028.014.042.02a.448.448 0 00.194.048h.002c.068 0 .132-.02.19-.048l.043-.022a.504.504 0 00.148-.13c.003 0 .003 0 .003-.002l4.39-6.132c.008-.01.005-.025.013-.036a.46.46 0 00.062-.174c.003-.02.011-.036.011-.056 0-.008.006-.014.006-.022a.583.583 0 00-.053-.202z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileSketchLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.049 20.86c.207 0 .4-.185.4-.378V8.602h-2.543c-.972 0-1.81-.316-2.42-.916-.616-.602-.944-1.428-.944-2.383V2.829H5.724c-.182 0-.4.205-.4.378v17.275c0 .187.201.378.4.378H18.05zm.188-13.087L13.36 3.008V5.3c0 .728.24 1.347.695 1.79.456.445 1.098.683 1.851.683h2.33zm1-.017a.39.39 0 01.03.163v12.563c0 .652-.557 1.204-1.22 1.204H5.72c-.65 0-1.221-.563-1.221-1.204V3.204C4.5 2.574 5.083 2 5.721 2h7.502c.179 0 .353.07.479.193L19.06 7.43a.65.65 0 01.177.327zm-4.6 5.065h1.11l-.662-1.3-.448 1.3zm-.285.829L13.2 16.997l2.412-3.347h-1.26zm-4.888 0h-1.3l2.465 3.39-1.165-3.39zm.434-1.258l1.187-1.504H9.38l.518 1.504zm2.812-1.504l1.205 1.51.52-1.51H12.71zm-2.104 1.933H13.2l-1.305-1.633-1.289 1.633zm2.88.829h-3.157l1.577 4.585 1.58-4.585zm-4.762-2.143l-.689 1.314h1.143l-.454-1.314zm8.059 1.549a.412.412 0 01.042.18c0 .005-.003.01-.003.016 0 .017-.005.03-.008.045a.393.393 0 01-.056.151c-.006.009-.003.02-.012.028l-4.51 6.258c-.016.025-.044.04-.067.059a.363.363 0 01-.05.045.41.41 0 01-.213.07.386.386 0 01-.213-.07c-.02-.012-.033-.028-.05-.042-.023-.02-.05-.034-.067-.06L7.024 13.48c-.006-.008-.006-.02-.011-.028a.376.376 0 01-.056-.157c-.003-.014-.009-.025-.009-.042 0-.006-.003-.011-.003-.017 0-.064.02-.126.045-.182.003-.005 0-.008.003-.011l1.448-2.762c.003-.005.011-.011.014-.017a.4.4 0 01.115-.123c.017-.011.03-.022.05-.03.017-.01.028-.023.048-.029.034-.011.07-.011.104-.014.01 0 .02-.008.03-.008h6.208c.011 0 .02.008.03.008.034.003.07.003.104.014.02.006.031.02.05.031a.271.271 0 01.051.03c.05.034.09.076.118.13.003.005.008.008.01.014l1.407 2.762c.003 0 .003.005.003.008z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileSketchRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.903 20.47c.098 0 .19-.095.19-.168V8.868h-2.277c-1 0-1.86-.33-2.493-.952-.638-.63-.977-1.487-.977-2.482V3.216H5.909c-.07 0-.185.112-.19.168v16.918c0 .06.098.169.19.169h11.994zM17.59 7.654L13.54 3.67v1.765c0 .658.212 1.213.615 1.608.407.398.98.61 1.664.61h1.77zm1.652.106a.614.614 0 01.045.235V20.3a1.4 1.4 0 01-1.387 1.383H5.91c-.74 0-1.387-.647-1.387-1.383V3.38c0-.722.661-1.38 1.387-1.38h7.3c.227 0 .442.087.605.246l5.213 5.127a.887.887 0 01.215.386zm-4.549 4.96h.838l-.499-.988-.339.989zm-.333.97l-.924 2.714 1.94-2.714H14.36zm-4.868 0h-1.05l1.99 2.76-.94-2.76zm.507-1.473l.963-1.23h-1.38c-.004.003.417 1.23.417 1.23zm3.854.005l.423-1.232h-1.4l.977 1.232zm-3.025.499h2.19l-1.1-1.39-1.09 1.39zm2.52.969h-2.845l1.423 4.165 1.423-4.165zm-4.532-1.975l-.523 1.006h.865l-.342-1.006zm7.928 1.283c.03.065.05.137.05.207 0 .006-.003.012-.006.02 0 .02-.008.036-.01.056a.478.478 0 01-.062.174c-.009.01-.006.025-.014.036l-4.39 6.135c0 .002-.003.002-.003.002a.438.438 0 01-.148.13l-.042.019a.504.504 0 01-.193.047h-.003a.458.458 0 01-.193-.047l-.042-.02a.47.47 0 01-.149-.129h-.003l-4.425-6.134c-.009-.011-.006-.025-.012-.036a.375.375 0 01-.064-.18c-.003-.017-.011-.033-.011-.05 0-.009-.003-.014-.003-.02 0-.073.02-.145.05-.21.003-.005 0-.011.003-.017l1.41-2.703c.002-.008.013-.01.019-.02a.46.46 0 01.193-.179c.02-.008.034-.025.053-.033.042-.014.084-.014.126-.017.012-.003.02-.011.031-.011h6.04c.01 0 .019.008.03.008.042.003.084.003.129.02.022.008.036.025.056.033l.056.034a.472.472 0 01.14.157c.003.003.008.005.011.011l.003.011 1.364 2.692c.009.006.006.009.009.014z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileZipFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2c.23 0 .445.087.61.244l5.303 5.131c.17.171.263.39.263.625v12.305c0 .751-.644 1.384-1.409 1.384H8.098c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.432 2.432 0 012 15.106v-4.092a2.426 2.426 0 012.42-2.426h2.266V3.384C6.686 2.658 7.36 2 8.096 2h7.414zm-1.244 7.801H4.42c-.667 0-1.207.54-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21v-4.095c0-.666-.54-1.21-1.207-1.21zm-6.1 1.457v.518l-1.771 2.56h1.781v.622H5.328v-.496l1.798-2.582H5.381v-.622h2.784zm1.467-.003v3.703h-.846v-3.703h.846zm2.081 0c.58 0 .947.081 1.185.302.202.185.297.471.297.866s-.092.692-.277.9c-.216.243-.552.358-1.04.358h-.596v1.277h-.846v-3.703h1.277zm-.03.613h-.396v1.182h.418v-.002c.272 0 .384-.04.493-.14.098-.098.146-.255.146-.471 0-.199-.043-.347-.14-.44-.104-.092-.261-.129-.522-.129zm4.162-8.199v1.765c0 .658.216 1.213.622 1.608.414.4.997.61 1.692.61h1.804L15.846 3.67z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileZipLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.744 2.156c.18 0 .356.07.485.194l5.406 5.235c.09.087.143.202.171.322.023.05.034.104.034.162v12.563c0 .653-.563 1.205-1.23 1.205H8.173c-.655 0-1.23-.563-1.23-1.205l.037-3.036H4.422a2.27 2.27 0 01-2.266-2.269v-4.18A2.27 2.27 0 014.422 8.88h2.521V3.36c0-.63.586-1.205 1.23-1.205h7.571zm-.691.821H8.17c-.185 0-.403.204-.403.378v5.518h6.703a2.27 2.27 0 012.266 2.27v4.179a2.27 2.27 0 01-2.266 2.268H7.803l-.036 3.042c0 .183.204.373.403.373h12.44v.006c.207 0 .406-.185.406-.379V8.75h-2.568c-.98 0-1.827-.316-2.443-.916-.622-.602-.952-1.426-.952-2.384V2.977zm-.58 6.725H4.42c-.793 0-1.44.648-1.44 1.443v4.18c0 .795.644 1.442 1.44 1.442h10.053c.792 0 1.44-.647 1.44-1.443v-4.179c0-.795-.645-1.443-1.44-1.443zm-6.182 1.79v.519l-1.77 2.56H8.3v.622H5.454v-.496l1.798-2.583H5.506v-.622h2.785zm1.467-.002v3.703h-.845V11.49h.845zm2.082 0c.58 0 .947.08 1.185.302.201.185.297.47.297.866 0 .395-.093.692-.278.899-.215.244-.552.358-1.039.358h-.597v1.278h-.846V11.49h1.278zm-.031.613h-.395v1.182h.417v-.003c.272 0 .384-.039.493-.14.098-.098.146-.255.146-.47 0-.2-.042-.348-.14-.44-.104-.093-.26-.129-.521-.129zm4.07-8.944V5.45c0 .729.24 1.348.7 1.79.46.446 1.107.684 1.869.684h2.35V7.92l-4.92-4.762z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFileZipRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.51 2.025c.23 0 .445.087.61.244l5.303 5.134c.17.168.263.39.263.622V20.33c0 .751-.644 1.384-1.409 1.384H8.095c-.75 0-1.409-.647-1.409-1.384l.034-2.773h-2.3A2.427 2.427 0 012 15.132v-4.096a2.427 2.427 0 012.42-2.425h2.266V3.409c0-.726.673-1.384 1.41-1.384h7.414zm-.877 1.219H8.098c-.073 0-.188.109-.193.168v5.201h6.364c1.336 0 2.42 1.09 2.42 2.426v4.095a2.427 2.427 0 01-2.42 2.426h-6.33l-.034 2.779c0 .05.1.16.193.16h12.18c.097 0 .193-.096.193-.169V8.896H18.16c-1.014 0-1.891-.33-2.535-.952-.65-.627-.992-1.487-.992-2.482V3.244zm-.367 6.585H4.42a1.21 1.21 0 00-1.207 1.21v4.095c0 .667.54 1.21 1.207 1.21h9.846a1.21 1.21 0 001.207-1.21V11.04c0-.666-.54-1.21-1.207-1.21zm-6.1 1.457v.518l-1.771 2.56h1.781v.622H5.328v-.496l1.798-2.582H5.381v-.622h2.784zm1.467-.003v3.703h-.846v-3.703h.846zm2.081 0c.58 0 .947.081 1.185.302.202.185.297.471.297.866s-.092.692-.277.9c-.216.243-.552.358-1.04.358h-.596v1.277h-.846v-3.703h1.277zm-.03.613h-.396v1.182h.418v-.002c.272 0 .384-.04.493-.14.098-.099.145-.255.145-.471 0-.199-.042-.347-.14-.44-.103-.092-.26-.129-.52-.129zm4.165-8.199v1.765c0 .658.215 1.213.622 1.608.414.4.997.61 1.691.61h1.802l-4.115-3.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFingerprintFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.112 4.266c.188.03 1.182.221 2.289.922 1.103.7 2.549 2.061 3.162 4.585.048.18.423 1.68-.378 2.756-.493.661-1.289 1.006-2.361 1.02a2.22 2.22 0 01-1.527-.49c-.65-.521-1.04-1.381-1.151-2.558-.031-.339-.171-.602-.412-.787-.333-.255-.854-.353-1.395-.263l-.03.006h-.02a1.8 1.8 0 00-.692.246c-.42.258-.647.656-.69 1.216-.053.692.163 1.823.93 2.924.566.812 1.622 1.874 3.451 2.32a.603.603 0 01-.285 1.17c-2.193-.535-3.468-1.818-4.154-2.798-.804-1.157-1.233-2.54-1.143-3.706.095-1.227.767-1.865 1.316-2.185.51-.297.998-.367 1.135-.384.868-.142 1.709.04 2.308.5.51.391.812.954.877 1.627.078.826.322 1.425.703 1.728.325.26.664.235.666.235l.037-.005h.036c.692-.006 1.174-.188 1.434-.535.401-.536.264-1.443.183-1.72l-.006-.026c-.986-4.075-4.445-4.607-4.482-4.613l-.025-.003-.025-.005c-2.303-.533-4.785.325-6.182 2.131C5.58 9 5.3 11.003 5.89 13.216c.53 1.98 1.742 3.944 3.162 5.126 1.244 1.033 2.714 1.795 4.143 2.14a.601.601 0 01.443.725.597.597 0 01-.726.448c-1.602-.386-3.246-1.235-4.63-2.383-1.628-1.353-2.955-3.502-3.555-5.743-.692-2.582-.336-4.958 1-6.689 1.673-2.168 4.639-3.201 7.384-2.574zm-.795 1.89a5.154 5.154 0 012.955 1.558c.818.869 1.26 1.964 1.252 3.082a.602.602 0 01-.602.596h-.006a.601.601 0 01-.597-.608c.014-1.652-1.386-3.162-3.187-3.44-1.757-.268-3.468.687-3.98 2.227l-.006.012c-.533 1.493-.404 3.075.372 4.574 1.02 1.966 3.123 3.638 5.359 4.26a.601.601 0 11-.322 1.16c-2.58-.717-4.92-2.58-6.104-4.866-.936-1.8-1.087-3.711-.44-5.526.345-1.03 1.081-1.902 2.076-2.457a5.075 5.075 0 013.23-.571zm-.956 3.805a.601.601 0 01.625.577c.003.03.106 2.033 1.462 3.126.82.66 1.964.871 3.392.627a.6.6 0 11.205 1.185 7.963 7.963 0 01-1.306.115c-1.21 0-2.232-.333-3.056-1-1.781-1.445-1.896-3.902-1.899-4.006a.601.601 0 01.577-.624zm3.143-7.538c1.961.613 3.801 1.955 4.927 3.591a.603.603 0 01-.501.944.607.607 0 01-.496-.26c-.977-1.423-2.582-2.592-4.294-3.127-2.555-.798-5.328-.277-7.608 1.432a12.364 12.364 0 00-1.81 1.67.602.602 0 01-.894-.804c.629-.7 1.298-1.314 1.987-1.83 2.594-1.941 5.76-2.53 8.69-1.616z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFingerprintRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.087 16.422c-1.43 0-2.635-.396-3.6-1.188-2.102-1.728-2.239-4.682-2.246-4.808a.502.502 0 01.475-.52.5.5 0 01.511.478c0 .027.13 2.636 1.886 4.075 1.065.87 2.54 1.153 4.37.833a.501.501 0 01.209.98c-.014.004-.027.004-.038.007a9.297 9.297 0 01-1.567.143M14.6 21.418a.454.454 0 01-.133-.02c-3.107-.875-5.924-3.15-7.348-5.932-1.117-2.185-1.301-4.498-.527-6.694.817-2.478 3.512-4.032 6.246-3.602 2.804.437 4.986 2.865 4.962 5.528a.497.497 0 01-.493.5h-.002a.496.496 0 01-.488-.506c.016-2.179-1.796-4.173-4.125-4.535-2.271-.349-4.495.912-5.164 2.94-.682 1.936-.518 3.975.472 5.908 1.298 2.548 3.879 4.63 6.73 5.433a.497.497 0 01.34.614.492.492 0 01-.47.366M13.785 24a.445.445 0 01-.117-.014c-1.931-.475-3.915-1.51-5.589-2.92C4.357 17.928 1.38 10.65 4.976 5.932c2.004-2.63 5.566-3.88 8.847-3.112.013 0 5.084.792 6.487 6.684.017.058.53 1.911-.423 3.213-.564.764-1.485 1.158-2.739 1.171.021.003-.863.11-1.686-.56-.745-.601-1.189-1.615-1.321-3.008-.048-.492-.25-.881-.601-1.158-.465-.359-1.175-.498-1.907-.372-.22.02-1.823.222-1.963 2.055-.163 2.146 1.496 5.789 5.57 6.793a.5.5 0 01-.232.969c-4.624-1.147-6.501-5.358-6.314-7.843.164-2.183 1.919-2.9 2.824-2.97.966-.172 1.936.037 2.626.569.57.444.911 1.082.983 1.854.102 1.09.427 1.889.94 2.312a1.48 1.48 0 001.023.355c.983-.013 1.643-.27 2.012-.772.655-.89.266-2.346.263-2.358-1.257-5.264-5.672-5.952-5.716-5.956-2.968-.69-6.116.409-7.889 2.738-3.192 4.19-.38 10.948 2.954 13.765 1.557 1.311 3.401 2.278 5.187 2.715a.502.502 0 01.365.601.496.496 0 01-.48.383m7.221-18.327a.493.493 0 01-.406-.216c-1.233-1.816-3.254-3.309-5.41-3.988-3.212-1.022-6.705-.36-9.57 1.816a15.9 15.9 0 00-2.26 2.111.49.49 0 01-.687.047l-.01-.01a.504.504 0 01-.037-.707 16.958 16.958 0 012.4-2.243C8.15.117 11.965-.6 15.485.513c2.36.747 4.573 2.382 5.928 4.373a.507.507 0 01-.126.697.493.493 0 01-.28.09"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFireFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.444 11.182a9.422 9.422 0 00-1.423-1.238c-4.11-2.989-2.347-7.16-2.272-7.336a.422.422 0 00-.059-.432.406.406 0 00-.411-.137c-1.843.437-3.737 1.395-5.33 2.698-5.27 4.308-5.28 11.05-2.967 13.991 1.039 1.322 2.524 2.255 4.157 2.726a4.015 4.015 0 01-.757-.58 3.392 3.392 0 01-.162-4.647c.207-.238.442-.457.7-.653 1.586-1.238.885-3.005.877-3.022a.616.616 0 01.104-.642.63.63 0 01.619-.196c.888.227 1.798.717 2.56 1.387 1.706 1.496 3.056 4.98 1.386 7.258a4.053 4.053 0 01-1.773 1.355c.224-.033.448-.061.673-.115.08-.01 2.01-.29 3.77-1.904a5.945 5.945 0 001.955-4.185c.056-1.597-.53-3.135-1.647-4.328"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFireLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.574 18.98a7.111 7.111 0 01-2.569 1.49c.1-.11.196-.222.286-.342 1.6-2.174.288-5.51-1.356-6.947-.74-.644-1.619-1.118-2.476-1.336a.411.411 0 10-.485.554c.009.02.768 1.922-.94 3.252a4.56 4.56 0 00-.67.625 3.156 3.156 0 00-.286 3.793 7.043 7.043 0 01-2.462-1.953c-3.07-3.888-.367-10.165 2.846-12.778 1.291-1.054 2.79-1.863 4.285-2.328-.389 1.513-.767 4.966 2.79 7.54.48.34.92.718 1.306 1.13.966 1.022 1.47 2.341 1.42 3.71-.053 1.368-.653 2.642-1.69 3.59m-6.123 1.792c-.005 0-.72-.123-1.358-.745a2.335 2.335 0 01-.107-3.21c.166-.185.348-.359.552-.513 1.34-1.042 1.544-2.437 1.406-3.426a5.741 5.741 0 011.451.922c1.376 1.199 2.538 4.07 1.236 5.84a3.046 3.046 0 01-2.227 1.205c-.087-.003-.174.005-.26.002-.029 0-.057 0-.085-.002-.201-.012-.4-.048-.6-.073h-.008m6.99-9.656a9.768 9.768 0 00-1.424-1.232c-4.109-2.978-2.347-7.129-2.271-7.305a.411.411 0 00-.06-.429.395.395 0 00-.408-.137c-1.846.437-3.743 1.39-5.336 2.686-5.272 4.288-5.28 11-2.97 13.927 1.353 1.712 3.449 2.784 5.656 3.014.185.028.367.045.552.045l.339.003c.613 0 1.232-.067 1.837-.205.081-.01 2.011-.291 3.77-1.896 1.202-1.098 1.897-2.577 1.956-4.163.061-1.593-.524-3.123-1.642-4.308"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFireRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.987 18.68a6.537 6.537 0 01-1.773 1.163c1.378-2.218.11-5.437-1.49-6.846-.74-.652-1.622-1.131-2.482-1.353a.6.6 0 00-.7.815c.006.017.69 1.74-.852 2.947-.249.19-.476.404-.677.636a3.317 3.317 0 00-.594 3.35 6.525 6.525 0 01-1.762-1.538C3.749 14.137 6.329 8.126 9.382 5.62a12.556 12.556 0 013.757-2.134C12.797 5.157 12.71 8.33 16 10.739c.451.323.869.687 1.233 1.079a4.835 4.835 0 011.325 3.49 4.804 4.804 0 01-1.572 3.373m-5.77 1.706c-.006 0-.639-.113-1.21-.678-.781-.77-.82-2.031-.095-2.866.148-.17.32-.33.51-.476 1.215-.955 1.515-2.199 1.47-3.182.376.199.726.44 1.045.723 1.246 1.098 2.347 3.831 1.168 5.448a2.733 2.733 0 01-2.04 1.103c-.036 0-.075.003-.111 0-.065.003-.132 0-.2-.002-.162-.012-.318-.04-.478-.06-.017-.005-.04-.005-.059-.01m6.89-9.398A9.515 9.515 0 0016.7 9.756c-3.849-2.812-2.207-6.742-2.137-6.907a.606.606 0 00-.087-.63.597.597 0 00-.6-.202c-1.815.431-3.68 1.38-5.252 2.67-3.507 2.882-6.31 9.573-2.907 13.924 1.347 1.722 3.434 2.798 5.624 3.028.185.025.367.044.55.044.041 0 .08-.005.12-.008.07.003.14.011.21.011.608 0 1.213-.064 1.81-.201.08-.012 2.013-.295 3.764-1.91a6.004 6.004 0 001.96-4.22 6.025 6.025 0 00-1.646-4.366"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirewallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.47 7.644l-3.38-.008V3.24h3.187c.056.017.194.18.194.364v4.04zm0 6.659l-7.232-.043V8.938c0-.025-.008-.05-.008-.067l7.24.017v5.415zm0 5.778c0 .208-.128.356-.17.364h-3.21v-4.918l3.38.016v4.538zm-4.599.364h-5.356c.017-.016.04-.033.056-.05a3.794 3.794 0 001.233-2.675 3.805 3.805 0 00-.616-2.227l4.686.025-.003 4.927zM8.445 9.457a.259.259 0 00-.042-.275.24.24 0 00-.26-.09c-1.037.25-2.093.78-3.017 1.482v-1.73l6.908.016c0 .025-.017.05-.017.076v5.322l-1.37-.009H9.99l-.12-.098c-2.583-1.91-1.471-4.577-1.424-4.694zM5.13 3.605c0-.182.137-.347.17-.364h2.962v4.372l-3.13-.008v-4H5.13zm4.344-.364h6.398v4.386l-6.398-.016V3.24zM20.3 2h-15c-.729 0-1.387.762-1.387 1.605v8.078c-2.417 2.732-2.302 6.398-.989 8.096.659.846 1.591 1.44 2.62 1.74a2.291 2.291 0 01-.48-.373c-.803-.804-.843-2.104-.106-2.972a3.65 3.65 0 01.445-.415c.998-.795.552-1.927.552-1.938a.411.411 0 01.065-.415.407.407 0 01.389-.126c.56.149 1.126.465 1.613.894 1.07.952 1.922 3.187.869 4.644-.283.39-.673.686-1.112.863h12.518c.745 0 1.386-.74 1.386-1.605V3.605C21.686 2.77 21.023 2 20.3 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirewallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.636 20.742H17.15v-5.378l3.863.02v4.78c.003.317-.227.578-.378.578zm-9.717-.255a3.863 3.863 0 001.266-2.717c.033-.883-.252-1.726-.776-2.434l4.916.022v5.38H10.61c.1-.078.204-.156.308-.251zm-3.731.51a1.849 1.849 0 01-.493-.045c-.003 0-.4-.07-.757-.423a1.308 1.308 0 01-.058-1.787h.002c.096-.112.205-.21.32-.3.624-.47.983-1.219.955-2.003.213.118.423.263.616.432.787.691 1.487 2.417.742 3.437-.3.408-.767.655-1.277.689-.02-.003-.034 0-.05 0zm-3.39-1.647c-1.846-2.356-.204-6.174 1.737-7.768a8.044 8.044 0 012.342-1.339c-.21 1.084-.23 3.081 1.854 4.605.289.205.552.434.784.686.563.594.866 1.387.838 2.205a3.033 3.033 0 01-.994 2.132 4.22 4.22 0 01-1.06.708c.824-1.428.032-3.442-.982-4.336-.477-.417-1.048-.728-1.603-.868a.42.42 0 00-.504.308.419.419 0 00.02.255c.002.011.431 1.09-.535 1.846-.16.123-.306.26-.437.409a2.14 2.14 0 00-.412 2.09c-.4-.25-.754-.567-1.048-.933zM5.314 2.99h3.232v5.33l-3.61-.008V3.568c0-.317.252-.577.378-.577zm15.7.577v4.784l-3.863-.008v-5.35h3.482c.129-.003.381.26.381.574zM9.375 8.324V2.991l6.947.003V8.34l-6.947-.017zm1.404 6.174a.4.4 0 00-.12.022 5.969 5.969 0 00-.446-.35c-2.44-1.781-1.4-4.266-1.356-4.37a.415.415 0 00-.062-.434.41.41 0 00-.414-.14c-1.165.278-2.361.885-3.373 1.712l-.075.07V9.15l7.456.016v5.34l-1.61-.009zm2.442.011V9.167l7.793.02v5.361l-7.793-.039zm7.415-12.35l-15.32-.003c-.633 0-1.21.673-1.21 1.412v8.277c-1.77 2.11-2.843 5.62-.958 8.02.916 1.168 2.362 1.865 3.855 1.958.039.003.078.014.117.014.014 0 .028-.003.045-.003.056 0 .11.009.166.009.389 0 .778-.042 1.162-.132.238-.042.47-.107.695-.188a.36.36 0 00.185.05h11.26c.644 0 1.207-.658 1.207-1.411V3.568c.003-.74-.574-1.409-1.204-1.409z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirewallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.328 20.199h-3.21v-4.854l3.378.016v4.48c.003.195-.126.344-.168.358zM3.983 18.933C2.27 16.748 3.818 13.19 5.636 11.7a7.6 7.6 0 011.863-1.126c-.146 1.272.176 3.003 1.955 4.3.269.19.515.406.73.636.516.549.782 1.255.757 1.983a2.735 2.735 0 01-.899 1.919c-.151.14-.305.255-.46.355.39-1.397-.338-3.075-1.243-3.873a4.085 4.085 0 00-1.636-.888.596.596 0 00-.605.19.615.615 0 00-.11.63c.037.096.334.936-.447 1.547-.166.126-.32.271-.454.425a2.282 2.282 0 00-.552 1.678 3.269 3.269 0 01-.552-.543zm1.34-15.709h2.963v4.314l-3.132-.009V3.583a.509.509 0 01.168-.359zm15.176.361v3.98l-3.379-.008V3.221h3.185c.056.023.194.185.194.364zm-7.23 10.513V8.84c0-.025-.011-.042-.014-.067l7.244.017v5.342l-7.23-.034zm2.633 1.238V20.2h-4.936c.723-.717 1.152-1.65 1.188-2.658a3.951 3.951 0 00-.591-2.225l4.339.02zm-6.4-7.795V3.224h6.4v4.333l-6.4-.016zm-.676 1.717a.607.607 0 00-.608-.205c-1.053.252-2.126.782-3.064 1.49V8.756l6.913.017c-.003.025-.014.045-.014.07v5.25l-1.375-.006h-.003a.569.569 0 00-.196.039c-.104-.084-.205-.17-.314-.246A3.316 3.316 0 018.92 9.9a.64.64 0 00-.093-.642zM7.11 20.45a1.622 1.622 0 01-.445-.042c-.003 0-.33-.062-.622-.353a1.072 1.072 0 01-.048-1.445c.079-.09.171-.177.283-.264a2.51 2.51 0 00.99-1.74c.092.065.181.138.268.21.714.631 1.32 2.186.69 3.049a1.46 1.46 0 01-1.105.585h-.01zM20.328 2H5.319c-.725 0-1.386.756-1.386 1.585v8.11c-1.748 2.112-2.787 5.596-.905 7.997.93 1.185 2.4 1.89 3.908 1.977.033 0 .07.012.103.012.014 0 .025-.003.04-.003.055 0 .111.008.165.008a5.17 5.17 0 001.154-.129 4.25 4.25 0 00.678-.179c.07.028.142.045.22.045h11.032c.75 0 1.386-.726 1.386-1.586V3.585c0-.829-.66-1.585-1.386-1.585z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirstAidKitFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.333 4.947v1.596h7.023V4.947a.437.437 0 00-.227-.053H8.563a.415.415 0 00-.23.053zM20.23 6.543c.804 0 1.456.645 1.456 1.44v11.485c0 .792-.652 1.437-1.456 1.437H3.457A1.448 1.448 0 012 19.468V7.983c0-.793.653-1.44 1.457-1.44H7.1v-1.66c0-.673.638-1.202 1.456-1.202h6.566c.818 0 1.46.53 1.46 1.201v1.661h3.647zm-4.706 5.342h-1.82v-1.793c0-.551-.452-1.036-.965-1.036h-1.8c-.513 0-.961.485-.961 1.036v1.796H8.16c-.572 0-1.05.434-1.05.95v1.775c0 .516.481.95 1.052.95h1.821v1.793c0 .563.44 1.036.961 1.036h1.804c.52 0 .96-.476.96-1.04v-1.795h1.819c.56 0 1.05-.442 1.05-.95v-1.775c0-.504-.493-.947-1.053-.947z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirstAidKitLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.005 19.367V7.605a.44.44 0 00-.443-.437H3.436a.44.44 0 00-.442.437v11.762c0 .24.199.437.442.437h17.126a.44.44 0 00.443-.437zM8.204 4.429v1.91h7.59v-1.91c0-.05-.15-.194-.442-.194H8.646c-.29 0-.442.143-.442.194zm12.358 1.91c.706 0 1.28.569 1.28 1.266v11.762c0 .698-.574 1.266-1.28 1.266H3.436c-.706 0-1.28-.568-1.28-1.266V7.605c0-.697.574-1.266 1.28-1.266h3.93v-1.91c0-.575.563-1.023 1.28-1.023h6.706c.717 0 1.28.448 1.28 1.023v1.91h3.93zm-4.775 6.235c0 .05.016.082.022.087l-.05-.437v.415l-2.488.003a.413.413 0 01-.42-.415V9.77c-.006-.014-.006-.022-.003-.028h-1.686l-.023 2.485c0 .23-.187.415-.42.415l-2.484.002c-.017.003-.023.003-.028 0v1.675l2.512.017c.233 0 .42.185.42.415l.003 2.456c.003.014.003.023 0 .026h1.692l.017-2.485a.417.417 0 01.42-.412h2.485c.014-.005.022-.005.028-.003v-1.759h.003zm-.029-.764c.46 0 .866.358.866.764v1.821c0 .406-.403.765-.866.765h-2.064l.003 2.045c0 .462-.356.854-.773.854h-1.84c-.42 0-.774-.392-.774-.854l-.002-2.045-2.068.003c-.468 0-.865-.35-.865-.765v-1.82c0-.415.395-.766.865-.766l2.065-.002V9.765c0-.457.361-.855.773-.855h1.84c.412 0 .773.401.773.855v2.042l2.067.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFirstAidKitRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.457 19.465V7.98a.226.226 0 00-.227-.227H3.457a.226.226 0 00-.227.227v11.485c0 .123.1.224.227.224h16.77a.226.226 0 00.23-.224zM8.333 4.947v1.596h7.023V4.947a.459.459 0 00-.227-.053H8.56a.43.43 0 00-.227.053zM20.23 6.543c.804 0 1.456.645 1.456 1.44v11.485c0 .792-.652 1.437-1.456 1.437H3.457A1.448 1.448 0 012 19.468V7.98c0-.792.653-1.44 1.457-1.44H7.1V4.88c0-.673.638-1.202 1.456-1.202h6.566c.818 0 1.46.53 1.46 1.202v1.663h3.647zm-4.885 7.802v-1.247H13.09a.614.614 0 01-.617-.605v-2.224h-1.266v2.224a.612.612 0 01-.613.608l-2.255.003v1.246l2.255-.003a.61.61 0 01.616.605l.003 2.224 1.266.003-.003-2.224a.615.615 0 01.613-.608l2.256-.002zm.182-2.46c.557 0 1.05.443 1.05.95v1.778c0 .505-.493.95-1.05.95h-1.818v1.796c0 .563-.44 1.036-.961 1.036h-1.801c-.521 0-.961-.476-.961-1.036v-1.793h-1.82c-.572 0-1.054-.434-1.054-.95v-1.778c0-.516.482-.95 1.05-.95H9.98v-1.796c0-.551.449-1.036.961-1.036h1.801c.513 0 .961.485.961 1.036v1.793h1.824z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlagFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.443 7.465a.16.16 0 01-.006-.227l3.14-3.134c.305-.393.356-.928.134-1.373a1.305 1.305 0 00-1.176-.728H4.992a1.31 1.31 0 00-1.314 1.305v17.745c0 .317.258.574.577.574.32 0 .577-.257.577-.574V12.71h14.7c.504 0 .955-.28 1.177-.729.224-.45.17-.974-.182-1.425.002 0-3.084-3.09-3.084-3.09z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlagLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.77 11.739a.35.35 0 01-.322.199H4.162V3.296c0-.196.16-.355.359-.355h14.924c.207 0 .3.15.322.198.031.06.084.216-.003.337l-3.168 3.15a1.143 1.143 0 000 1.612l3.138 3.126c.123.16.064.316.036.375zm-2.61-4.05a.362.362 0 01-.003-.51L20.36 3.99c.269-.342.314-.81.118-1.199a1.14 1.14 0 00-1.031-.636H4.523c-.633 0-1.148.51-1.148 1.138V21.45c0 .216.176.393.395.393a.393.393 0 00.395-.39v-8.73h15.283c.44 0 .835-.245 1.03-.637.197-.392.152-.851-.15-1.238l-3.169-3.16z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlagRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.728 11.527a.153.153 0 01-.143.09H4.838v-8.28c0-.088.07-.158.16-.158h14.59c.087 0 .126.056.143.09.02.042.034.1.034.11l-3.101 3.086a1.317 1.317 0 00-.003 1.852l3.05 3.044c.05.065.037.126.017.166zm-2.24-4.02c-.065-.067-.068-.168-.003-.23l3.148-3.145c.305-.398.359-.925.135-1.376a1.31 1.31 0 00-1.183-.73H4.995c-.726 0-1.317.587-1.317 1.307v17.801c0 .317.26.575.58.575.319 0 .58-.258.58-.575v-8.37h14.747c.505 0 .958-.28 1.183-.73.224-.451.17-.978-.183-1.432l-3.098-3.095z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlechaAdelanteRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.608 12.11a.833.833 0 000-.637c-.02-.05-.056-.086-.081-.128-.028-.045-.048-.093-.087-.135l-8.43-8.919a.845.845 0 00-1.227 1.16l7.084 7.493H2.83a.846.846 0 000 1.692h16.04l-7.239 7.652a.847.847 0 00.031 1.194.847.847 0 001.193-.031l8.586-9.081c.039-.04.056-.09.087-.135.025-.042.061-.078.08-.126"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlowerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.019 14.367c-.034-.011-.065-.022-.101-.022-.995-.023-1.586-.415-1.801-1.197-.003-.016-.017-.028-.023-.042v-.016a3.299 3.299 0 01-.087-.787c0-.785.213-1.35.636-1.676.017-.014.028-.033.042-.05.025-.008.05-.006.073-.02.314-.196.734-.294 1.24-.294.514 0 .928.096 1.233.286.023.014.048.017.07.028.014.014.026.034.042.045.429.32.648.885.648 1.68 0 .297-.028.558-.084.774-.003.005 0 .014-.003.02 0 .005-.006.008-.006.013-.213.799-.767 1.19-1.748 1.224a.434.434 0 00-.131.034m7.053-.126c2.246-.639 3.213-2.387 2.588-4.678-.627-2.286-2.342-3.266-4.588-2.63-.647.185-1.32.63-1.955 1.173.355-.781.605-1.577.605-2.268.005-1.166-.334-2.132-.978-2.793-.644-.661-1.588-1.014-2.731-1.02h-.003c-2.333 0-3.725 1.418-3.725 3.787-.006.712.246 1.521.607 2.317-.635-.546-1.308-.995-1.955-1.18-1.1-.316-2.103-.243-2.902.213-.795.457-1.38 1.292-1.689 2.418-.308 1.123-.232 2.148.216 2.958.448.812 1.269 1.406 2.37 1.72.33.095.7.134 1.09.134.193 0 .4-.025.602-.045-.572.387-1.079.827-1.398 1.306-.642.966-.89 1.96-.72 2.874.17.913.762 1.742 1.709 2.395.75.523 1.52.792 2.257.792.188 0 .373-.017.555-.053.896-.174 1.711-.776 2.356-1.74.308-.462.515-1.07.655-1.722.143.644.347 1.246.653 1.706.641.963 1.456 1.566 2.353 1.74.185.036.372.055.563.055.734 0 1.501-.266 2.252-.787 1.93-1.33 2.3-3.302.991-5.274-.319-.48-.823-.914-1.392-1.3.177.014.359.036.53.036.39 0 .756-.039 1.084-.134"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlowerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.73 12.243c-.345.622-.976 1.067-1.88 1.325-.85.244-2.289.053-4.073-.532.003-.011 0-.025.003-.037a4.251 4.251 0 00-.151-1.796 3.96 3.96 0 00-.177-.391 1.774 1.774 0 00-.19-.292c-.034-.044-.065-.095-.099-.134 1.194-1.387 2.297-2.275 3.132-2.513 1.804-.51 3.073.216 3.577 2.05.25.917.202 1.698-.143 2.32m-2.554 3.994c1.05 1.586.775 3.048-.774 4.115-1.543 1.073-2.974.79-4.028-.787-.515-.773-.8-2.325-.795-4.297.04-.005.076-.014.115-.022l.154-.03c.117-.029.232-.06.339-.096.033-.011.067-.02.098-.034a2.16 2.16 0 00.361-.176c.025-.014.045-.031.067-.045a2.282 2.282 0 00.317-.247c.07-.064.132-.134.19-.204.014-.017.031-.03.042-.05a2.46 2.46 0 00.18-.272c.014-.023.022-.048.036-.07.022-.045.048-.087.067-.132 1.801.734 3.115 1.577 3.63 2.347m-7.464 3.345c-.524.79-1.14 1.258-1.83 1.392-.689.126-1.428-.073-2.198-.61-.774-.535-1.233-1.16-1.365-1.86-.131-.7.07-1.457.594-2.247.504-.759 1.799-1.597 3.58-2.32.025.054.053.107.084.16.011.017.02.037.03.054a2.2 2.2 0 00.186.266l.05.056c.059.067.123.131.193.196a2.462 2.462 0 00.345.252c.014.008.022.017.036.025a2.304 2.304 0 00.465.199 3.325 3.325 0 00.505.118c.042.005.08.016.126.022 0 1.97-.286 3.524-.801 4.297m-5.555-5.997c-1.804-.513-2.521-1.81-2.02-3.647.252-.919.69-1.563 1.3-1.913a2.37 2.37 0 011.202-.303c.333 0 .692.056 1.073.165.82.236 1.944 1.143 3.117 2.507-.02.023-.033.05-.053.076-.04.048-.073.104-.11.157a2.633 2.633 0 00-.268.52 2.932 2.932 0 00-.112.404c-.014.067-.034.13-.045.196a4.383 4.383 0 00-.017 1.294c-1.77.597-3.21.788-4.067.544m6.857-10.588c1.871.008 2.9 1.064 2.89 2.972 0 .893-.562 2.243-1.59 3.82l-.009-.002a2.828 2.828 0 00-.67-.174 4.066 4.066 0 00-.63-.053 3.85 3.85 0 00-.644.056l-.086.016c-.21.04-.41.093-.586.166C9.673 8.238 9.1 6.85 9.104 5.955c0-1.908 1.034-2.958 2.908-2.958m.093 11.476c-.031.005-.068.003-.101.003h-.082c-.994-.023-1.585-.412-1.823-1.255a3.193 3.193 0 01-.087-.787c0-.785.213-1.348.633-1.673a.988.988 0 01.118-.07c.313-.196.734-.294 1.24-.294.513 0 .928.095 1.233.286.011.005.104.067.112.075.429.32.647.883.647 1.678 0 .297-.028.558-.087.773l-.002.026c0 .002-.003.005-.003.008-.213.796-.768 1.188-1.798 1.23m9.557-4.779c-.628-2.283-2.336-3.269-4.588-2.63-.647.185-1.32.63-1.955 1.173.355-.781.605-1.577.605-2.271.008-2.376-1.379-3.801-3.71-3.81h-.002c-2.333 0-3.728 1.418-3.728 3.79-.003.709.246 1.518.605 2.311-.633-.543-1.306-.992-1.955-1.18-1.101-.316-2.104-.243-2.902.214-.796.456-1.381 1.294-1.69 2.417-.624 2.289.342 4.04 2.589 4.675a3.93 3.93 0 001.087.135c.196 0 .403-.026.605-.045-.572.386-1.079.823-1.398 1.305-.642.97-.89 1.96-.72 2.874.17.913.762 1.742 1.709 2.392.75.524 1.52.793 2.255.793.187 0 .372-.017.554-.053.9-.174 1.715-.776 2.359-1.743.308-.462.512-1.07.655-1.72.143.645.348 1.247.653 1.704.793 1.187 1.812 1.795 2.919 1.795.722 0 1.484-.26 2.246-.787 1.93-1.33 2.3-3.303.992-5.277v-.003c-.32-.48-.824-.913-1.392-1.3.176.014.358.04.53.04.388 0 .755-.04 1.08-.135 1.104-.314 1.925-.908 2.373-1.72.456-.795.53-1.818.224-2.944"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFlowerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.947 12.703a4.62 4.62 0 00-.022-1.022c-.009-.056-.02-.112-.028-.168a3.43 3.43 0 00-.076-.337c-.017-.056-.03-.114-.05-.168a3.043 3.043 0 00-.107-.263 2.238 2.238 0 00-.176-.322l-.05-.081c-.018-.023-.032-.053-.051-.076 1.084-1.232 2.103-2.045 2.843-2.255 1.658-.473 2.779.171 3.24 1.855.463 1.689-.17 2.831-1.828 3.305-.751.21-2.082.042-3.695-.468m3.465 5.445c-.118.63-.538 1.197-1.247 1.687-1.42.983-2.68.736-3.647-.715-.465-.697-.73-2.103-.745-3.899.028-.005.05-.017.076-.022.146-.031.288-.073.429-.126l.148-.062c.12-.053.235-.115.342-.182.036-.025.075-.045.109-.067a2.56 2.56 0 00.37-.325c.022-.025.042-.056.064-.084.084-.1.16-.21.23-.325.014-.022.03-.04.045-.062 1.633.678 2.812 1.446 3.28 2.143.479.723.664 1.41.546 2.04m-7.849.988c-.482.723-1.039 1.149-1.658 1.27-.62.114-1.286-.07-1.994-.564-1.42-.98-1.661-2.266-.698-3.72.454-.683 1.616-1.442 3.23-2.117.014.025.036.044.05.07.067.106.14.207.221.302.031.034.057.07.087.104.112.117.236.224.373.316.036.023.078.042.115.065.274.168.577.283.893.341.042.009.079.026.12.034-.01 1.798-.277 3.202-.739 3.9M5.36 13.181c-.827-.235-1.4-.636-1.709-1.193-.308-.558-.347-1.266-.118-2.11.23-.84.625-1.428 1.171-1.742.328-.182.7-.274 1.076-.266.305 0 .636.05.992.154.739.213 1.753 1.023 2.829 2.252a2.54 2.54 0 00-.275.493c-.022.05-.04.104-.059.157a3.695 3.695 0 00-.131.457c-.012.061-.026.123-.037.187a4.511 4.511 0 00-.036 1.149c-1.61.51-2.941.683-3.703.462m6.65-9.936c1.72.009 2.624.939 2.619 2.692 0 .793-.516 2.045-1.432 3.48-.028-.012-.061-.015-.09-.023-.128-.04-.26-.07-.392-.092a4.407 4.407 0 00-.711-.064c-.207 0-.4.016-.588.044l-.107.017a3.41 3.41 0 00-.442.106c-.023.006-.048.009-.067.017-.91-1.431-1.426-2.69-1.42-3.499 0-1.75.91-2.678 2.63-2.678m.134 10.793c-.048 0-.092.003-.14.009h-.076c-1.156-.026-1.448-.591-1.565-1.014a.435.435 0 00-.023-.065c-.017-.064-.025-.134-.036-.204-.006-.042-.017-.082-.023-.126a4.156 4.156 0 01-.02-.376c0-.694.18-1.185.533-1.462.022-.017.05-.03.1-.062.275-.17.648-.257 1.107-.257.462 0 .83.084 1.098.25.014.01.079.052.095.06.362.272.547.765.547 1.471a2.69 2.69 0 01-.084.731v.003c-.12.465-.404 1-1.513 1.042m9.51-4.51c-.65-2.364-2.423-3.378-4.748-2.722-.454.129-.916.39-1.37.711.19-.546.317-1.084.317-1.574.008-2.46-1.426-3.933-3.838-3.944h-.003C9.597 2 8.154 3.468 8.154 5.919c-.003.507.124 1.059.32 1.616-.454-.322-.916-.583-1.373-.714-1.132-.325-2.168-.247-2.997.227-.83.476-1.437 1.339-1.75 2.495-.648 2.37.352 4.18 2.677 4.838.308.09.655.129 1.014.134-.336.28-.63.583-.843.905-1.353 2.042-.97 4.081 1.022 5.454.77.538 1.563.812 2.325.812.196 0 .392-.017.583-.056.935-.18 1.779-.8 2.44-1.792a4.38 4.38 0 00.47-1.02c.123.37.272.717.462 1.003.821 1.23 1.874 1.86 3.023 1.86.748 0 1.538-.27 2.325-.815.975-.673 1.585-1.53 1.762-2.485.176-.95-.079-1.98-.74-2.975v-.003c-.216-.325-.515-.627-.857-.91.322-.003.641-.045.952-.126 2.328-.658 3.33-2.468 2.684-4.838"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderEncryptedFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.605 3.792c.807 0 1.462.655 1.462 1.462v.734h8.157c.807 0 1.462.655 1.462 1.462v11.283c0 .806-.655 1.462-1.462 1.462H3.462A1.463 1.463 0 012 18.733V5.253c0-.806.655-1.461 1.462-1.461h7.143zM9.028 14.189c-.913 0-1.26.589-1.26 1.712 0 1.126.347 1.706 1.26 1.706s1.26-.58 1.26-1.706-.347-1.712-1.26-1.712zm9.123 0c-.913 0-1.26.589-1.26 1.712 0 1.126.347 1.706 1.26 1.706s1.26-.58 1.26-1.706-.347-1.712-1.26-1.712zm-6.07.098c-.232 0-.56.028-.753.056v.46h.53v2.291h-.556v.488h1.695v-.485h-.465V14.61c0-.241-.115-.323-.45-.323zm2.91 0c-.232 0-.56.028-.753.056v.46h.527v2.291h-.552v.488h1.695v-.485h-.465V14.61c0-.241-.115-.323-.451-.323zm-9.568-.002c-.233 0-.56.028-.754.056v.459h.527v2.291h-.552v.488H6.34v-.485h-.465v-2.487c0-.241-.115-.322-.451-.322zm3.605.409c.39 0 .543.3.543 1.207s-.154 1.154-.543 1.154c-.39 0-.543-.244-.543-1.154 0-.91.154-1.207.543-1.207zm9.12 0c.39 0 .544.3.544 1.207s-.154 1.154-.544 1.154c-.389 0-.543-.244-.543-1.154 0-.91.154-1.207.543-1.207zm-9.12-5.908c-.913 0-1.26.588-1.26 1.712 0 1.126.347 1.705 1.26 1.705s1.26-.58 1.26-1.705c0-1.127-.347-1.712-1.26-1.712zm-3.591 0c-.913 0-1.26.588-1.26 1.712 0 1.126.347 1.705 1.26 1.705s1.26-.58 1.26-1.705c0-1.127-.347-1.712-1.26-1.712zm12.714 0c-.913 0-1.26.588-1.26 1.712 0 1.126.347 1.705 1.26 1.705s1.26-.58 1.26-1.705c0-1.127-.347-1.712-1.26-1.712zm-6.07.098c-.232 0-.56.028-.753.056v.46h.53v2.29h-.556v.488h1.695v-.484h-.465V9.206c0-.24-.115-.322-.45-.322zm2.91 0c-.232 0-.56.028-.753.056v.46h.527v2.29h-.552v.488h1.695v-.484h-.465V9.206c0-.24-.115-.322-.451-.322zm-5.963.406c.39 0 .543.3.543 1.208 0 .907-.154 1.154-.543 1.154-.39 0-.543-.244-.543-1.154 0-.91.154-1.208.543-1.208zm-3.591 0c.39 0 .543.3.543 1.208 0 .907-.154 1.154-.543 1.154-.39 0-.543-.244-.543-1.154 0-.91.154-1.208.543-1.208zm12.711 0c.39 0 .544.3.544 1.208 0 .907-.154 1.154-.544 1.154-.389 0-.543-.244-.543-1.154 0-.91.154-1.208.543-1.208z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderEncryptedLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.73 3.813a1.26 1.26 0 011.255 1.263v1h.052l.7-.001h.182l2.494-.001h.29l4.885-.001a1.26 1.26 0 011.255 1.263v11.617a1.26 1.26 0 01-1.255 1.263H3.414a1.26 1.26 0 01-1.258-1.263V5.076a1.26 1.26 0 011.258-1.263h7.316zm.003.823H3.414a.438.438 0 00-.437.44v13.88c0 .24.196.436.437.436h17.174a.44.44 0 00.434-.44V7.337a.435.435 0 00-.434-.437h-9.012a.408.408 0 01-.409-.411V5.076a.44.44 0 00-.434-.44zm-1.94 9.574c.912 0 1.26.586 1.26 1.712s-.348 1.706-1.26 1.706c-.914 0-1.261-.58-1.261-1.706 0-1.124.347-1.712 1.26-1.712zm9.122 0c.914 0 1.26.586 1.26 1.712s-.346 1.706-1.26 1.706c-.913 0-1.26-.58-1.26-1.706 0-1.124.347-1.712 1.26-1.712zm-6.07.098c.336 0 .451.082.451.322v2.488h.465v.484h-1.694v-.487h.554v-2.291h-.53v-.46c.194-.028.522-.056.754-.056zm2.91 0c.337 0 .452.082.452.322v2.488h.465v.484h-1.695v-.487h.552v-2.291h-.527v-.46c.193-.028.521-.056.754-.056zm-9.568-.003c.336 0 .451.082.451.323v2.487h.465v.485H4.408v-.488h.552v-2.291h-.526v-.46c.193-.027.52-.056.753-.056zm3.605.41c-.39 0-.543.296-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.247.544-1.154 0-.908-.155-1.208-.544-1.208zm9.12 0c-.389 0-.543.296-.543 1.207 0 .91.154 1.154.544 1.154.389 0 .543-.247.543-1.154 0-.908-.154-1.208-.543-1.208zm-9.12-5.908c.913 0 1.26.585 1.26 1.711 0 1.126-.347 1.706-1.26 1.706s-1.26-.58-1.26-1.706c0-1.123.347-1.711 1.26-1.711zm-3.59 0c.912 0 1.26.585 1.26 1.711 0 1.126-.348 1.706-1.26 1.706-.914 0-1.261-.58-1.261-1.706 0-1.123.347-1.711 1.26-1.711zm12.713 0c.914 0 1.26.585 1.26 1.711 0 1.126-.346 1.706-1.26 1.706-.913 0-1.26-.58-1.26-1.706 0-1.123.347-1.711 1.26-1.711zm-6.07.098c.336 0 .451.081.451.322v2.487h.465v.485h-1.694v-.487h.554V9.42h-.53v-.459c.194-.028.522-.056.754-.056zm2.91 0c.337 0 .452.081.452.322v2.487h.465v.485h-1.695v-.487h.552V9.42h-.527v-.459c.193-.028.521-.056.754-.056zm-5.963.406c-.39 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.246.544-1.154 0-.907-.155-1.207-.544-1.207zm-3.59 0c-.39 0-.544.297-.544 1.207 0 .91.154 1.154.543 1.154.39 0 .543-.246.543-1.154 0-.907-.154-1.207-.543-1.207zm12.71 0c-.389 0-.543.297-.543 1.207 0 .91.154 1.154.544 1.154.389 0 .543-.246.543-1.154 0-.907-.154-1.207-.543-1.207z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderEncryptedRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.412 18.691V7.408a.184.184 0 00-.188-.187h-8.793a.638.638 0 01-.638-.64V5.213a.184.184 0 00-.188-.187H3.462a.184.184 0 00-.187.187v13.48c0 .106.08.187.187.187h16.76c.106 0 .19-.081.19-.188zm-.19-12.748c.806 0 1.464.656 1.464 1.462v11.286c0 .807-.655 1.462-1.465 1.462H3.462A1.463 1.463 0 012 18.691V5.212c0-.807.655-1.462 1.462-1.462h7.143c.807 0 1.462.655 1.462 1.462v.734h8.154v-.003zM7.767 10.456c0-1.126.347-1.712 1.26-1.712s1.26.586 1.26 1.712-.347 1.706-1.26 1.706-1.26-.58-1.26-1.706zm1.803 0c0-.908-.154-1.207-.543-1.207-.39 0-.543.297-.543 1.207 0 .907.154 1.154.543 1.154.39 0 .543-.247.543-1.154zm-5.395 0c0-1.126.348-1.712 1.261-1.712.913 0 1.26.586 1.26 1.712s-.347 1.706-1.26 1.706-1.26-.58-1.26-1.706zm1.804 0c0-.908-.154-1.207-.543-1.207-.39 0-.543.297-.543 1.207 0 .907.154 1.154.543 1.154.39 0 .543-.247.543-1.154zm10.91 0c0-1.126.348-1.712 1.261-1.712.913 0 1.26.586 1.26 1.712s-.347 1.706-1.26 1.706c-.916 0-1.26-.58-1.26-1.706zm1.802 0c0-.908-.154-1.207-.544-1.207-.389 0-.543.297-.543 1.207 0 .907.154 1.154.543 1.154.39 0 .544-.247.544-1.154zm-7.387 1.193h.552V9.358h-.53v-.46c.194-.028.522-.056.754-.056.336 0 .451.082.451.323v2.487h.465v.485h-1.694v-.488h.002zm-6.66 5.4h.551v-2.29H4.67v-.46c.194-.028.521-.056.754-.056.336 0 .45.081.45.322v2.488h.466v.484H4.644v-.487zm9.568-5.4h.552V9.358h-.527v-.46c.193-.028.521-.056.754-.056.336 0 .45.082.45.323v2.487h.466v.485h-1.695v-.488zm-6.445 4.21c0-1.126.347-1.711 1.26-1.711s1.26.585 1.26 1.711c0 1.126-.347 1.706-1.26 1.706s-1.26-.58-1.26-1.706zm1.803 0c0-.907-.154-1.207-.543-1.207-.39 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .543-.246.543-1.154zm7.32 0c0-1.126.347-1.711 1.26-1.711s1.26.585 1.26 1.711c0 1.126-.347 1.706-1.26 1.706-.916 0-1.26-.58-1.26-1.706zm1.8 0c0-.907-.153-1.207-.543-1.207-.389 0-.543.297-.543 1.207 0 .91.154 1.154.543 1.154.39 0 .544-.246.544-1.154zm-7.386 1.194h.552V14.76h-.53v-.46c.194-.027.522-.055.754-.055.336 0 .451.081.451.322v2.487h.465v.485h-1.694v-.487h.002zm2.908 0h.552V14.76h-.527v-.46c.193-.027.521-.055.754-.055.336 0 .45.081.45.322v2.487h.466v.485h-1.695v-.487z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.406 6.038h-8.563v-.991a1.264 1.264 0 00-1.272-1.255H3.255A1.262 1.262 0 002 5.047v13.795c.006.692.563 1.25 1.255 1.255h17.151a1.264 1.264 0 001.28-1.247V7.293a1.264 1.264 0 00-1.272-1.255h-.008z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.51 20.168H3.407a1.266 1.266 0 01-1.252-1.257V5.07a1.262 1.262 0 011.252-1.258h7.289c.336-.006.658.126.899.361.24.235.375.56.378.896v.995h8.538a1.26 1.26 0 011.277 1.257v11.586a1.269 1.269 0 01-1.28 1.26zM3.407 4.633a.437.437 0 00-.434.437v13.84c0 .242.193.438.434.438h17.104a.437.437 0 00.431-.437V7.325a.437.437 0 00-.431-.437h-9a.41.41 0 01-.409-.411V5.07a.436.436 0 00-.409-.437H3.408z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFolderRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.465 5.108a.184.184 0 00-.188.188v13.479c0 .106.082.187.188.187h16.76a.188.188 0 00.187-.187V7.492a.184.184 0 00-.188-.188h-8.793a.638.638 0 01-.638-.639v-1.37a.184.184 0 00-.188-.187h-7.14zm16.76 15.129H3.464A1.466 1.466 0 012 18.772V5.296c0-.807.655-1.463 1.465-1.463h7.14c.807 0 1.465.656 1.465 1.463v.73h8.154c.807 0 1.462.656 1.462 1.463v11.286c0 .806-.655 1.462-1.462 1.462z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFootballBallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.148 16.028h-2.73c-.25 0-.496.048-.732.129l-.596-.972c.112-.171.21-.356.277-.56l.835-2.566c.087-.263.117-.535.109-.801l1.174-.493c.145.213.325.4.529.543l2.182 1.588c.064.048.14.076.207.118-.098 1.216-.355 2.23-.722 3.081a2.45 2.45 0 00-.533-.067zm-4.882 1.577l-.835 2.566c-.022.073-.028.151-.044.227a11.44 11.44 0 01-1.037.059h-.185c-.24 0-.49-.003-.706-.009-.367-.008-.81-.042-1.29-.11-.018-.066-.02-.136-.043-.204l-.832-2.563a2.248 2.248 0 00-.4-.73l.582-.88c.3.151.63.246.983.246h2.734c.336 0 .656-.078.947-.21l.535.874a2.135 2.135 0 00-.409.734zm-6.372-1.482a2.186 2.186 0 00-.768-.137H4.412c-.132 0-.26.014-.387.036-.378-.86-.641-1.88-.742-3.1.053-.031.11-.056.16-.09l2.176-1.583a2.21 2.21 0 00.527-.532l1.23.569c-.01.257.025.518.109.773l.974 3.003h.05c.015.022.032.039.046.061l-.661 1zM7.972 3.88c.106.12.213.24.345.336l2.176 1.58c.218.165.468.28.734.352v1.429a2.07 2.07 0 00-.726.339L8.32 9.501c-.232.166-.42.373-.571.6l-1.193-.552a2.144 2.144 0 00-.101-.857l-.832-2.566a2.257 2.257 0 00-.266-.54c.784-.816 1.7-1.354 2.616-1.706zm4.487 2.271c.264-.073.513-.187.726-.347l2.182-1.586c.137-.098.246-.224.356-.344a7.06 7.06 0 012.605 1.709 2.196 2.196 0 00-.311.61l-.832 2.56a2.18 2.18 0 00-.104.852l-1.154.485a2.191 2.191 0 00-.557-.58l-2.18-1.583a2.109 2.109 0 00-.73-.342V6.151zm-.165-4.148c-.1 0-.202-.003-.305-.003-.207 0-.415.003-.597.006C9.515 2.039 2 2.746 2 11.818c0 9.05 7.501 9.812 9.431 9.86.224.005.485.008.734.008h.2c1.974-.017 9.321-.694 9.321-9.81 0-9.13-7.417-9.845-9.392-9.873z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFootballBallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.484 19.654c-.986.622-2.042.96-2.955 1.148.011-.05.017-.103.033-.154l.838-2.574c.076-.244.235-.465.457-.622.215-.157.467-.224.739-.238h2.709c.16 0 .313.04.46.098a6.906 6.906 0 01-2.281 2.342zm-4.972 1.367h-.188c-.243 0-.498-.003-.717-.009-.316-.008-.82-.039-1.423-.134a2.102 2.102 0 00-.095-.527l-.835-2.563a1.988 1.988 0 00-.462-.778l.765-1.157a2.01 2.01 0 001.059.302h2.73c.368 0 .718-.1 1.023-.274l.712 1.16c-.213.22-.373.49-.468.784l-.83 2.566a2.128 2.128 0 00-.095.546c-.49.059-.904.081-1.176.084zm-8.258-3.81c.098-.025.202-.045.325-.045h2.706c.25.023.516.082.734.239.218.156.378.38.457.63l.837 2.571c.011.031.011.065.02.098-.863-.207-1.832-.546-2.745-1.12a7.104 7.104 0 01-2.334-2.373zm.348-10.997c.086.115.154.241.199.381l.837 2.574a1.248 1.248 0 01-.457 1.398l-2.187 1.588-.009.006c0-.065-.008-.126-.008-.193 0-2.591.661-4.437 1.625-5.754zM8.078 3.64c.14.216.302.412.515.563l2.182 1.585c.238.177.519.294.815.356v1.754c-.294.05-.571.165-.812.341L8.593 9.825a2.08 2.08 0 00-.61.694l-1.485-.686a2.04 2.04 0 00-.081-.921l-.835-2.569a2.053 2.053 0 00-.454-.768c.883-.946 1.933-1.551 2.95-1.935zm3.484-.658c.292-.006.583-.006.874-.003.516.008 1.527.073 2.67.386-.059.062-.112.126-.182.177l-2.19 1.59c-.41.309-1.054.312-1.474-.002L9.072 3.54a1.192 1.192 0 01-.17-.165 10.793 10.793 0 012.66-.392zm7.325 2.596a2.062 2.062 0 00-.515.832l-.835 2.563a2.03 2.03 0 00-.084.916l-1.45.61a2.072 2.072 0 00-.595-.671L13.23 8.245a1.934 1.934 0 00-.815-.345V6.147c.294-.059.577-.177.81-.353l2.182-1.585c.218-.155.383-.359.523-.578a8.382 8.382 0 011.524.748c.54.337 1.014.743 1.434 1.2zm-9.434 8.894l-.092-.283h-.003l-.742-2.294a1.246 1.246 0 01.459-1.406l2.19-1.591c.407-.309 1.05-.311 1.474.002l2.188 1.589c.445.319.63.885.459 1.406l-.838 2.566c-.168.518-.65.87-1.196.87h-2.708c-.524.032-1.017-.335-1.19-.86zM8.128 16.53a1.782 1.782 0 00-.849-.182H4.582a2.21 2.21 0 00-.723.142c-.46-.988-.736-2.134-.834-3.423.16-.064.313-.145.453-.246l2.18-1.585c.23-.163.42-.381.565-.625l1.524.703c-.028.28.003.566.09.835l.93 2.86h.025c.048.095.115.17.174.257-.003 0-.838 1.264-.838 1.264zm7.63.042L15 15.335c.14-.183.252-.39.328-.62l.835-2.565c.095-.286.117-.583.087-.869l1.47-.619c.149.252.34.474.569.636l2.185 1.586c.154.112.325.196.504.263-.098 1.294-.37 2.44-.818 3.426a2.038 2.038 0 00-.851-.188h-2.706a2.616 2.616 0 00-.844.188zm5.255-4.317c-.02-.011-.039-.02-.056-.033l-2.19-1.589a1.225 1.225 0 01-.454-.624 1.226 1.226 0 010-.776l.835-2.572c.053-.165.146-.308.258-.437 1.067 1.474 1.616 3.406 1.616 5.807 0 .076-.006.148-.009.224zM12.45 2.158c-.3-.003-.6-.003-.899.003-1.88.034-9.395.74-9.395 9.812 0 9.05 7.504 9.813 9.432 9.86.224.006.484.009.736.009h.196c1.978-.017 9.323-.695 9.323-9.813 0-9.129-7.415-9.843-9.393-9.87z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFootballBallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.756 20.162l.712-2.184c.061-.202.196-.387.378-.519.182-.131.414-.193.619-.199h2.633c-1.148 1.726-2.832 2.533-4.342 2.902zm-2.375.292h-.185c-.24 0-.49-.003-.706-.009-.367-.008-.81-.042-1.291-.109-.017-.07-.02-.14-.042-.204l-.832-2.563a2.248 2.248 0 00-.4-.731l.582-.88c.303.151.63.246.983.246h2.734c.336 0 .656-.078.947-.212l.535.874a2.212 2.212 0 00-.41.739l-.834 2.566c-.022.073-.03.151-.047.227a10.28 10.28 0 01-1.034.056zM4.7 17.218h2.475c.205 0 .418.07.597.202.182.132.317.317.381.527l.684 2.106c-1.457-.412-3.031-1.227-4.138-2.835zm6.744-13.983c.174-.003.373-.005.572-.005l.286.002c.549.009 1.266.065 2.042.227l-1.863 1.353c-.336.255-.874.26-1.227-.005l-1.846-1.34a11.152 11.152 0 012.036-.232zM9.52 14.255l-.14-.423-.698-2.154a1.045 1.045 0 01.384-1.177l2.193-1.593a1.07 1.07 0 011.23.005l2.188 1.591c.372.27.526.74.384 1.177l-.835 2.565a1.055 1.055 0 01-1.003.732H10.5a1.036 1.036 0 01-.98-.723zm10.95-2.7l-1.715-1.247a1.025 1.025 0 01-.375-.52c-.07-.214-.07-.44.003-.65l.806-2.49c.74 1.19 1.233 2.78 1.28 4.907zm-4.72-7.681a7.06 7.06 0 012.605 1.709 2.224 2.224 0 00-.311.61l-.832 2.56c-.093.272-.123.56-.104.85l-1.154.484a2.234 2.234 0 00-.557-.58l-2.18-1.583a2.072 2.072 0 00-.733-.341V6.15c.266-.073.515-.187.725-.347l2.182-1.586c.14-.098.25-.224.359-.344zm-7.748.006c.106.117.213.24.344.336l2.177 1.58c.218.165.468.28.734.352v1.429c-.264.07-.513.18-.726.339L8.35 9.501c-.232.166-.42.373-.571.6l-1.194-.552a2.164 2.164 0 00-.1-.86l-.832-2.566a2.257 2.257 0 00-.266-.54A7.107 7.107 0 018.003 3.88zm-3.465 2.8l.779 2.404c.07.199.067.426-.003.641a1.05 1.05 0 01-.381.527l-1.656 1.205c.05-2.065.535-3.617 1.26-4.776zm-.098 9.306c-.132 0-.26.014-.387.036-.378-.86-.641-1.88-.74-3.1.051-.031.11-.054.16-.09l2.177-1.583c.204-.145.38-.327.526-.532l1.23.569c-.008.257.025.518.11.773l.974 3.003h.05c.015.022.034.039.048.061l-.664 1.003a2.19 2.19 0 00-.77-.137H4.44v-.003zm14.736.042h-2.73a2.27 2.27 0 00-.732.129l-.596-.97c.114-.17.213-.358.277-.56l.835-2.565c.087-.266.117-.535.109-.802l1.17-.493c.15.213.326.398.53.544l2.182 1.588c.065.048.14.079.208.118-.098 1.215-.359 2.23-.726 3.081a2.208 2.208 0 00-.527-.07zM12.322 2.003C12.222 2 12.12 2 12.017 2c-.21 0-.418.003-.597.006-1.88.036-9.395.74-9.395 9.812 0 9.053 7.504 9.815 9.432 9.86.226.005.484.008.736.008h.196c1.978-.017 9.322-.694 9.322-9.81.003-9.13-7.411-9.845-9.389-9.873z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFragranceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.455 20.642H7.58a.222.222 0 010-.443h8.876a.221.221 0 010 .443zM9.867 4.266a.9.9 0 01.9-.902h2.128a.9.9 0 01.9.902v2.558a10.536 10.536 0 00-1.793-.171c-.712 0-1.429.076-2.132.227V4.266h-.003zm10.336 9.653c0-3.316-1.94-5.835-5.213-6.829V4.266a2.103 2.103 0 00-2.095-2.106h-2.129a2.102 2.102 0 00-2.095 2.106V7.22c-2.689.952-4.871 3.123-4.871 6.7 0 2.375.941 4.336 2.672 5.625-.19.243-.31.546-.31.88 0 .784.635 1.422 1.42 1.422h8.876c.782 0 1.418-.638 1.418-1.423a1.41 1.41 0 00-.294-.857c1.717-1.274 2.621-3.204 2.621-5.647zm-11.28-1.333v2.846c0 .395.32.717.715.717h4.481a.716.716 0 00.715-.717v-2.846a.716.716 0 00-.715-.717H9.638a.716.716 0 00-.715.717zm.715 4.764a1.917 1.917 0 01-1.914-1.918v-2.846a1.92 1.92 0 011.914-1.922h4.481a1.92 1.92 0 011.913 1.922v2.846a1.917 1.917 0 01-1.913 1.918H9.638zm1.383-3.787a.4.4 0 110-.8h1.673a.4.4 0 110 .8H11.02zm-.63 1.591a.4.4 0 110-.8h2.927a.4.4 0 110 .8h-2.927zM12.083 5.02c0 .19.143.347.316.347.174 0 .317-.157.317-.347 0-.19-.143-.35-.317-.35-.173 0-.316.157-.316.35zm1.431 0c0 .633-.501 1.151-1.115 1.151-.616 0-1.114-.518-1.114-1.151 0-.636.501-1.151 1.114-1.151.617-.003 1.115.515 1.115 1.15zm2.675-.77a.602.602 0 01-.423-1.028l.712-.717a.602.602 0 01.849.852l-.712.713a.592.592 0 01-.426.18zm.18.605a.6.6 0 01.6-.603h1.304a.6.6 0 01.6.603.6.6 0 01-.6.602h-1.305a.603.603 0 01-.6-.602zm-.552.784a.598.598 0 01.849 0l.753.756a.602.602 0 01-.423 1.028.59.59 0 01-.423-.176l-.753-.756a.604.604 0 01-.003-.852z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFragranceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.408 19.188c1.95-1.07 2.98-2.93 2.98-5.39 0-4.386-3.53-5.736-5.047-6.112a9.741 9.741 0 00-2.34-.28c-.882 0-1.778.123-2.63.376-.014.005-.03.008-.044.014-2.566.773-4.706 2.72-4.706 6.002 0 2.423 1.05 4.28 3.036 5.376a.074.074 0 00.017.014h8.734zm.162 1.68a.431.431 0 000-.86h-9.1a.431.431 0 000 .86h9.1zM9.612 3.944v2.924a10.316 10.316 0 012.39-.283c.7 0 1.38.084 2.042.213V3.944c0-.622-.505-1.126-1.126-1.126h-2.182c-.62 0-1.124.507-1.124 1.126zm10.594 9.854c0 2.507-.966 4.468-2.793 5.726.247.227.404.552.404.913 0 .69-.56 1.25-1.25 1.25H7.47a1.25 1.25 0 01-1.249-1.25c0-.37.165-.698.42-.927-1.411-.97-2.84-2.695-2.84-5.712 0-3.602 2.25-5.77 4.992-6.692V3.944A1.945 1.945 0 0110.736 2h2.182c1.072 0 1.944.871 1.944 1.944V6.98c3.353.958 5.344 3.482 5.344 6.818zm-5.095 1.544v-2.905a.937.937 0 00-.936-.936H9.582a.937.937 0 00-.936.936v2.905c0 .518.42.938.936.938h4.593c.516 0 .936-.42.936-.938zm-.936-4.661c.97 0 1.757.787 1.757 1.753v2.905c0 .97-.787 1.756-1.757 1.756H9.582c-.97 0-1.757-.787-1.757-1.756v-2.905c0-.969.787-1.753 1.757-1.753h4.593zm-2.14-5.807a.466.466 0 10.932-.001.466.466 0 00-.932 0zm1.751 0a1.285 1.285 0 11-2.567.001 1.285 1.285 0 012.567-.001zm2.51-.535a.41.41 0 01-.289-.7l.818-.818a.41.41 0 01.58.58l-.818.817a.407.407 0 01-.291.12zm-.087.513c0-.227.182-.41.409-.41h1.496c.227 0 .409.183.409.41a.408.408 0 01-.41.409h-1.495a.41.41 0 01-.409-.41zm-.154.677a.41.41 0 01.58 0l.862.866a.41.41 0 01-.288.7.4.4 0 01-.289-.12l-.862-.866a.408.408 0 01-.003-.58zm-5.49 7.908a.41.41 0 010-.818h2.624c.227 0 .41.182.41.409a.408.408 0 01-.41.409h-2.624zm3.613.804c.227 0 .41.182.41.409a.408.408 0 01-.41.409h-4.6a.408.408 0 01-.408-.41c0-.226.182-.408.409-.408h4.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFragranceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.458 20.642a.22.22 0 00.219-.221.22.22 0 00-.219-.222H7.582a.225.225 0 00-.222.222c0 .12.098.22.222.22h8.876zM5.002 13.919c0 2.289.983 4.042 2.843 5.079h8.403c1.804-1.014 2.762-2.765 2.762-5.079 0-4.151-3.333-5.434-4.77-5.795h-.003a9.356 9.356 0 00-2.235-.27 8.9 8.9 0 00-2.496.356c-.009.003-.017.003-.025.006C7.04 8.947 5 10.796 5 13.919zM9.87 4.266V6.88a10.17 10.17 0 012.132-.227c.61 0 1.207.07 1.792.17V4.267a.9.9 0 00-.899-.902h-2.129a.9.9 0 00-.896.902zm10.336 9.653c0 2.443-.905 4.375-2.624 5.647.182.238.294.535.294.857 0 .785-.636 1.423-1.418 1.423H7.582c-.782 0-1.42-.638-1.42-1.423 0-.333.12-.636.31-.88C4.742 18.256 3.8 16.295 3.8 13.92c0-3.574 2.182-5.748 4.871-6.7V4.266c0-1.162.941-2.106 2.095-2.106h2.13c1.156 0 2.094.944 2.094 2.106V7.09c3.278.994 5.216 3.513 5.216 6.83zm-11.28-1.333v2.846c0 .395.32.717.714.717h4.482a.716.716 0 00.714-.717v-2.846a.716.716 0 00-.714-.717H9.64a.716.716 0 00-.714.717zm.714 4.764a1.917 1.917 0 01-1.913-1.918v-2.846a1.92 1.92 0 011.913-1.922h4.482c1.053 0 1.913.863 1.913 1.922v2.846a1.917 1.917 0 01-1.913 1.918H9.64zm2.446-12.33c0 .19.143.347.316.347.174 0 .317-.157.317-.347 0-.19-.143-.35-.317-.35-.173 0-.316.157-.316.35zm1.431 0c0 .633-.501 1.151-1.115 1.151-.616 0-1.115-.518-1.115-1.151 0-.636.502-1.151 1.115-1.151.616-.003 1.115.515 1.115 1.15zm2.675-.77a.602.602 0 01-.423-1.028l.712-.717a.602.602 0 01.849.852l-.712.713a.592.592 0 01-.426.18zm.18.605a.6.6 0 01.599-.603h1.305a.6.6 0 01.6.603.6.6 0 01-.6.602h-1.305a.603.603 0 01-.6-.602zm-.552.784a.598.598 0 01.848 0l.754.756a.602.602 0 01-.423 1.028.59.59 0 01-.423-.176l-.754-.756a.604.604 0 01-.002-.852zm-4.796 7.924a.4.4 0 110-.8h1.672a.4.4 0 110 .8h-1.672zm-.63 1.591a.4.4 0 110-.8h2.927a.4.4 0 110 .8h-2.927z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFullscreenLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.74 8.83a.579.579 0 01-.58-.578V2.74c0-.32.26-.58.58-.58h5.512a.581.581 0 010 1.16H3.32v4.932c0 .32-.26.577-.58.577zm5.524 11.86a.581.581 0 010 1.16H2.74a.583.583 0 01-.58-.58v-5.513c0-.32.258-.58.577-.58a.59.59 0 01.58.577v4.933c.003.002 4.947.002 4.947.002zm13.002-5.524a.59.59 0 01.577.58v5.523c0 .32-.257.577-.577.577h-5.523a.581.581 0 010-1.16h4.946v-4.943c0-.32.258-.577.577-.577zm0-13.006c.32 0 .58.258.58.577v5.538a.576.576 0 11-1.154 0V3.317h-4.938a.579.579 0 110-1.157h5.512z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconFullscreenRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.003 9.2a.844.844 0 01-.843-.844V3.003c0-.465.378-.843.843-.843H8.36a.845.845 0 010 1.69H3.846v4.509c0 .462-.378.84-.843.84zm5.364 10.96a.845.845 0 010 1.69H3.01a.844.844 0 01-.843-.844V15.65a.844.844 0 011.686 0v4.51h4.515zm12.63-5.367c.466 0 .844.378.844.843v5.353a.844.844 0 01-.843.843h-5.359a.845.845 0 010-1.686h4.513v-4.51a.846.846 0 01.846-.843zm.006-12.61c.465 0 .843.375.843.843v5.352a.845.845 0 01-1.689 0V3.871h-4.512a.844.844 0 010-1.686h5.358v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGarajeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.854 21.686v-2.05h7.95v2.05h-7.95zm0-3.131V16.5h7.947v2.054H7.854zm0-3.258v-2.053h7.947v2.053H7.854zm13.41-4.734c.408.4.532.97.324 1.479-.232.566-.81.933-1.47.933h-.745v7.274c0 .793-.704 1.434-1.57 1.434h-.77v-9.03a.616.616 0 00-.616-.617H7.238a.616.616 0 00-.616.617v9.033h-.857c-.866 0-1.569-.644-1.569-1.434v-7.274h-.625c-.66 0-1.238-.367-1.47-.933-.21-.513-.087-1.081.322-1.482l8.274-8.106c.62-.608 1.673-.608 2.292 0l8.274 8.106z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGarajeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.023 2.505l.121.107 8.272 8.107c.409.403.535.969.325 1.481-.215.523-.723.876-1.32.927l-.15.006h-.746v7.277c0 .746-.627 1.363-1.426 1.429l-.142.006h-1.384l-.022-.006-.012.001-.01.002H7.421l-.012-.003-.007.001-.007.002H5.923c-.817 0-1.49-.575-1.562-1.304l-.007-.13v-7.275h-.63c-.66 0-1.235-.367-1.468-.933a1.328 1.328 0 01.229-1.378l.096-.103 8.272-8.107c.58-.57 1.54-.605 2.17-.107zm-1.508.62l-.088.073-8.274 8.112c-.233.227-.188.465-.137.582.07.172.263.373.582.415l.126.008H4.77a.41.41 0 01.4.326l.009.083v7.684c0 .308.278.563.638.606l.11.007h1.062v-8.213a.41.41 0 01.326-.4l.082-.009h9.177a.41.41 0 01.4.326l.009.083v8.213h.975c.374 0 .686-.23.74-.525l.008-.091V12.72c0-.198.139-.362.326-.4l.083-.009h1.156c.398 0 .63-.23.712-.423a.497.497 0 00-.07-.508l-.067-.077-8.272-8.106c-.273-.268-.749-.292-1.058-.073zm4.646 15.843H7.805v2.05h8.356v-2.05zm0-2.868H7.805v2.05h8.356V16.1zm0-2.883H7.805v2.062h8.356v-2.062z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGarajeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.238 10.445l-8.104-7.94c-.683-.67-1.843-.67-2.526 0L2.5 10.447c-.459.451-.596 1.09-.36 1.67.257.63.895 1.039 1.624 1.039h.414v6.927c0 .885.779 1.605 1.737 1.605h1.443c.005 0 .008-.003.014-.003.002 0 .005.003.008.003h8.921c.009 0 .015-.003.02-.003.009 0 .017.003.025.003h1.356c.958 0 1.737-.72 1.737-1.605v-6.927h.53c.727 0 1.366-.406 1.624-1.04.244-.582.103-1.22-.356-1.672zm-8.947-7.084l8.104 7.944c.112.11.14.23.09.353-.054.135-.222.289-.51.289h-1.132a.601.601 0 00-.602.602v7.53c0 .218-.244.4-.532.4h-.754v-7.846a.601.601 0 00-.602-.602H7.36a.601.601 0 00-.602.602v7.846h-.84c-.289 0-.532-.182-.532-.4v-7.53a.601.601 0 00-.603-.602H3.768c-.292 0-.457-.157-.51-.289-.054-.126-.023-.243.09-.353l8.103-7.944a.633.633 0 01.84 0zm3.46 15.51v1.608H7.964v-1.608h7.787zm0-2.81v1.608H7.964v-1.607h7.787zm0-2.823v1.62H7.964v-1.62h7.787z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGasStationFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.644 8.826c0 .628-.476 1.16-1.039 1.16h-5c-.563 0-1.042-.532-1.042-1.16v-3.09c0-.616.485-1.159 1.042-1.159h5c.555 0 1.04.543 1.04 1.16v3.09zm8.86-.277c0 .008-.005.017-.005.025v.143c-.023.451-.185 1.188-1.311 1.207l-.149.003h-.056c-1.314-.02-1.314-1.039-1.314-1.423 0-.384 0-1.398 1.289-1.406h.045l.162.003c.482.011.785.151.983.342l.048.05c.303.336.305.798.305 1.028.003.003.003.017.003.028zm1.202.067c0-.036.005-.067.005-.103 0-.872-.263-1.449-.619-1.84l-.002-.006-.009-.009a1.036 1.036 0 00-.078-.078l-4.334-4.378a.605.605 0 00-.854-.006.602.602 0 00-.005.852l2.823 2.851c-.745.084-2.174.518-2.174 2.594 0 2.431 1.978 2.622 2.505 2.63h.072c.06 0 .118 0 .168-.003a3.02 3.02 0 001.292-.322l.005 8.098c0 1.37-.955 1.594-1.523 1.605h-.182c-.57-.008-1.521-.23-1.521-1.616v-3.874a2.748 2.748 0 00-2.748-2.742h-.48V3.417c0-.72-.672-1.378-1.408-1.378H3.434c-.737 0-1.409.658-1.409 1.378v16.914c0 .733.658 1.378 1.41 1.378h9.204c.75 0 1.409-.645 1.409-1.378v-6.855h.479c.848 0 1.54.69 1.54 1.535v3.874c0 2.056 1.462 2.807 2.79 2.824H19c1.25-.023 2.709-.773 2.709-2.813l-.003-10.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGasStationLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.26 10.422c.798-.017 1.75-.348 1.75-1.85 0-1.5-.96-1.84-1.764-1.859l-.188-.003h-.039c-.787.009-1.725.334-1.725 1.846 0 1.521.95 1.852 1.747 1.863l.219.003zM13.195 20.64V3.377c0-.174-.22-.381-.408-.381H3.389c-.188 0-.41.204-.41.38V20.64c0 .19.208.381.41.381l9.398.003c.201-.003.408-.193.408-.384zm8.64-12.008l.008 10.546c0 1.93-1.381 2.641-2.564 2.661l-.142.003h-.087c-1.233-.017-2.558-.731-2.558-2.678v-3.952a1.774 1.774 0 00-1.778-1.77h-.698v7.2c0 .64-.574 1.203-1.23 1.203H3.39c-.656 0-1.233-.563-1.233-1.202V3.377c0-.63.588-1.202 1.233-1.202h9.398c.644 0 1.232.572 1.232 1.202v9.24h.697a2.598 2.598 0 012.6 2.595v3.952c0 1.653 1.227 1.849 1.756 1.857h.193c.53-.011 1.757-.21 1.757-1.843l-.006-8.55c-.63.539-1.445.609-1.742.614h-.247c-.537-.008-2.56-.201-2.56-2.683 0-2.48 2-2.664 2.54-2.67h.048l.157.003-3.042-3.036a.41.41 0 01.58-.58l4.126 4.118c.011.008.014.022.023.03.51.381.932 1.031.932 2.149l-.002.028c.002.011.005.02.005.03zm-11.096.26V5.738c0-.075-.05-.151-.079-.168l-5.058.009c.016.008-.034.08-.034.16v3.153c0 .079.04.137.062.16h5.078c-.02-.008.03-.073.03-.16zm-.034-4.134c.457 0 .857.456.857.98v3.154c0 .53-.392.98-.857.98H5.602c-.465 0-.858-.448-.858-.98V5.735c0-.52.401-.98.858-.98l5.103.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGasStationRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.05 3.426v8.851h.482a2.748 2.748 0 012.748 2.743l.003 3.87c0 1.39.952 1.611 1.52 1.62h.183c.569-.011 1.524-.233 1.524-1.605l-.006-8.095c-.4.201-.843.31-1.294.322l-.168.002h-.07c-.53-.008-2.507-.198-2.507-2.63 0-2.075 1.431-2.507 2.174-2.59l-2.827-2.858a.603.603 0 01.006-.854.603.603 0 01.854.005l4.334 4.378c.025.026.053.05.078.079l.006.008.002.006c.359.39.62.969.62 1.837 0 .037-.003.068-.006.104l.008 10.286c0 1.963-1.357 2.732-2.576 2.807l-.135.005h-.143c-1.328-.017-2.79-.767-2.79-2.823v-3.872a1.54 1.54 0 00-1.54-1.535h-.482v6.855c0 .69-.583 1.302-1.278 1.371l-.131.007H3.434c-.75 0-1.409-.644-1.409-1.378V3.423c.003-.72.675-1.375 1.412-1.375h9.204c.737 0 1.41.658 1.41 1.378zm-1.409-.171H3.437c-.076 0-.193.112-.199.174v16.91c0 .062.1.17.199.17h9.204c.098 0 .2-.111.2-.173V3.426c-.006-.06-.124-.171-.2-.171zm-2.036 1.322c.555 0 1.04.54 1.04 1.16v3.09c0 .585-.416 1.088-.929 1.152l-.111.007h-5c-.563 0-1.042-.532-1.042-1.16v-3.09c0-.618.487-1.159 1.042-1.159h5zm8.398 2.515h-.045c-1.235.011-1.289.94-1.291 1.353V8.5c0 .383 0 1.406 1.313 1.423h.054l.154.002c1.126-.02 1.285-.756 1.31-1.207v-.143c0-.008.006-.017.006-.025v-.034c0-.23-.003-.694-.305-1.028l-.05-.05c-.197-.19-.502-.33-.981-.342l-.165-.003zm-8.569-1.31H5.78l-.01 2.997 4.659.003.005-3z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGiftFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.392 20.216v-5.963h7.93v7.596H4.843c-.784 0-1.45-.742-1.45-1.633zm9.183 1.633v-7.596h7.974v5.972c0 .882-.658 1.627-1.453 1.627h-6.521v-.003zM16.97 5.38c.078-.359-.031-.762-.32-1.196-.288-.435-.622-.695-.986-.77-.367-.08-.776.027-1.221.313-.709.451-1.431 2.006-1.782 2.994 1.062.082 2.821.07 3.521-.375.446-.283.712-.608.788-.966zm-9.42.966c.702.445 2.459.46 3.52.375-.35-.986-1.072-2.543-1.781-2.994-.35-.224-.684-.336-.986-.336-.081 0-.16.008-.235.025-.367.076-.698.336-.99.77-.288.435-.397.838-.319 1.196.079.356.345.681.79.964zm12.845.521c.76 0 1.451.779 1.451 1.63v2.953c0 .776-.512 1.445-1.17 1.6-.034-.006-.065-.02-.099-.02h-8.002V7.477h-1.253v5.549H3.275c-.63-.177-1.115-.827-1.115-1.58V8.494c0-.852.692-1.63 1.451-1.63h2.633c-.361-.365-.61-.78-.709-1.233-.145-.678.023-1.412.493-2.118.47-.709 1.084-1.157 1.78-1.302.694-.146 1.442.025 2.164.484.807.513 1.457 1.658 1.894 2.658.44-1.002 1.087-2.145 1.893-2.658.723-.46 1.474-.63 2.166-.484.692.142 1.308.593 1.778 1.302.471.709.642 1.44.493 2.118-.098.454-.347.865-.711 1.232h2.91v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGiftLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.992 11.505c0 .353-.252.62-.417.62h-8.202v-4.23h8.202c.14 0 .417.28.417.619v2.991zm-1.322 8.897c0 .353-.252.619-.418.619h-6.876v-8.067h7.294v7.448zm-15.392-.003v-7.356c0-.033-.012-.061-.02-.092h7.266v8.067H4.692c-.162 0-.417-.266-.414-.62zm-1.264-8.894V8.511c0-.339.278-.62.418-.62h8.092v4.23H3.43c-.163 0-.415-.266-.415-.616zm3.734-7.582c.34-.507.737-.81 1.185-.902.098-.02.196-.028.297-.028.364 0 .754.129 1.162.386.888.56 1.729 2.51 2.057 3.507-1.045.112-3.244.168-4.138-.395-.52-.327-.834-.717-.927-1.148-.095-.437.025-.913.364-1.42zm7.807-.547c.521-.33 1.011-.45 1.46-.355.448.092.845.395 1.184.902.68 1.017.488 1.902-.56 2.566-.894.565-3.09.51-4.137.394.325-.997 1.162-2.943 2.053-3.507zm6.022 3.69h-3.316c.61-.429 1.008-.961 1.137-1.555.14-.647-.028-1.353-.487-2.042-.46-.686-1.056-1.123-1.723-1.26-.664-.14-1.392.025-2.1.476-.934.588-1.679 2.084-2.118 3.19-.437-1.11-1.183-2.602-2.113-3.19-.708-.449-1.434-.617-2.1-.477-.667.138-1.264.575-1.723 1.26-.46.687-.628 1.393-.487 2.043.128.594.529 1.123 1.137 1.555H3.429c-.664 0-1.269.689-1.269 1.445v2.994c0 .77.594 1.449 1.269 1.449h.011c-.008.03-.02.058-.02.092v7.356c0 .77.594 1.448 1.272 1.448H19.25c.675 0 1.269-.675 1.269-1.445v-7.451h.056c.675 0 1.268-.676 1.268-1.446V8.511c.003-.756-.602-1.445-1.266-1.445z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGiftRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.56 11.515c0 .213-.14.373-.184.387h-7.79v-3.7l7.762-.003c.061.022.213.196.213.389v2.927zM19.085 20.6H12.59v-7.454h6.68v7.068c-.003.213-.143.372-.185.386zm-14.411-.386v-7.068h6.633V20.6H4.87c-.058-.017-.198-.173-.198-.386zM3.44 8.585c0-.193.149-.367.185-.386h7.683v3.7H3.636c-.059-.022-.193-.177-.193-.387V8.585H3.44zm3.614-4.367c.36-.54.784-.81 1.263-.81.31 0 .65.116 1.008.343.729.459 1.47 2.05 1.83 3.058-1.087.087-2.9.076-3.62-.38-.456-.29-.73-.622-.81-.987-.08-.37.032-.781.329-1.224zm7.563-.47c.913-.577 1.677-.42 2.271.468.297.445.41.854.328 1.22-.078.365-.353.698-.81.987-.722.456-2.535.468-3.621.38.361-1.005 1.103-2.593 1.832-3.055zm5.761 3.207H17.74c.372-.373.63-.796.73-1.258.152-.692-.024-1.437-.506-2.16-.983-1.47-2.532-1.79-4.045-.831-.826.524-1.493 1.694-1.947 2.717-.45-1.023-1.12-2.196-1.946-2.717-1.513-.958-3.062-.639-4.045.832-.482.722-.659 1.467-.507 2.16.1.461.358.884.728 1.257H3.625c-.768 0-1.465.779-1.465 1.633v2.927c0 .796.546 1.476 1.232 1.605v7.093c0 .885.673 1.633 1.465 1.633h14.227c.793 0 1.465-.748 1.465-1.633v-7.087c.717-.101 1.294-.793 1.294-1.614V8.585c0-.854-.697-1.63-1.465-1.63z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGroupFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.975 4.2c1.182 0 2.107.325 2.745.97.667.669 1.006 1.657 1.006 2.938 0 1.28-.34 2.268-1.006 2.932-.638.639-1.563.964-2.745.964-1.182 0-2.106-.325-2.742-.964-.661-.664-.997-1.652-.997-2.932 0-1.283.336-2.272.997-2.939.638-.644 1.56-.969 2.742-.969zm-5.77 4.86c.622 0 1.11.17 1.445.51.35.35.527.87.527 1.546 0 .675-.177 1.193-.53 1.543-.336.337-.823.507-1.445.507-.622 0-1.106-.17-1.443-.507-.35-.35-.526-.868-.526-1.543 0-.675.176-1.196.524-1.546.341-.34.826-.51 1.448-.51zm11.546.028c.613 0 1.095.17 1.429.504.344.347.518.863.518 1.53 0 .666-.174 1.182-.521 1.526-.33.334-.813.502-1.429.502-.616 0-1.098-.168-1.431-.502-.347-.347-.521-.86-.521-1.526 0-.667.176-1.183.52-1.53.337-.336.822-.504 1.435-.504zm-3.493 4.258c1.387 0 2.527.465 3.297 1.347.706.81 1.078 1.933 1.078 3.25v1.375c0 .26-.19.47-.425.47H5.757c-.236 0-.426-.21-.426-.47v-1.376c0-1.316.37-2.437 1.073-3.246.764-.883 1.902-1.348 3.291-1.348h4.563v-.002zm-8.46.742c-.005.006-.013.011-.019.02-.843.972-1.288 2.3-1.288 3.834v.748H3.02c-.473 0-.86-.4-.86-.896v-.703c0-.846.26-1.574.756-2.112.538-.583 1.311-.891 2.238-.891H5.8zm15.292.874c.496.538.756 1.269.756 2.112v.703c0 .496-.386.896-.86.896h-1.515v-.734c0-1.535-.448-2.86-1.297-3.834l-.034-.034h.712c.93 0 1.703.308 2.238.89z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGroupLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.71 5.743c-.522.51-.785 1.306-.785 2.365 0 1.056.263 1.851.784 2.358.501.493 1.266.742 2.269.742 1.003 0 1.767-.249 2.274-.742.524-.51.788-1.302.788-2.358s-.264-1.852-.788-2.365c-.507-.495-1.271-.745-2.271-.745-1.006 0-1.77.25-2.272.745zm2.268 6.26c-1.213 0-2.16-.324-2.812-.963-.678-.664-1.023-1.65-1.023-2.932 0-1.28.345-2.272 1.023-2.936.655-.644 1.602-.972 2.812-.972 1.21 0 2.16.328 2.818.97.683.666 1.03 1.655 1.03 2.938 0 1.282-.347 2.268-1.03 2.932-.658.642-1.605.964-2.818.964zm-6.709-1.316c-.21.205-.316.55-.316 1.02s.106.812.313 1.017c.202.199.533.3.978.3.448 0 .779-.101.983-.3.21-.205.317-.546.317-1.014 0-.47-.107-.813-.317-1.017-.204-.199-.535-.303-.983-.303-.443-.002-.77.099-.975.297zm.978 3.132c-.656 0-1.168-.176-1.524-.521-.367-.361-.555-.896-.555-1.591s.188-1.23.555-1.591c.356-.347.868-.527 1.524-.527.658 0 1.17.177 1.526.524.37.362.558.9.558 1.591 0 .695-.188 1.23-.558 1.591-.352.348-.868.524-1.526.524zm10.532-3.146c-.21.205-.316.55-.316 1.02 0 .468.106.81.316 1.014.205.199.535.3.983.3.448 0 .776-.101.98-.3.208-.204.314-.546.314-1.014 0-.47-.106-.812-.316-1.02-.202-.198-.532-.3-.978-.3-.448 0-.778.102-.983.3zm-.543 2.611c-.37-.361-.558-.896-.558-1.591s.188-1.23.558-1.591c.355-.35.868-.527 1.526-.527.659 0 1.171.177 1.527.524.367.362.555.9.555 1.594 0 .692-.185 1.227-.555 1.588-.356.348-.868.521-1.527.521-.658.003-1.17-.173-1.526-.518zm4.826 4.342v-.55c0-.565-.165-1.044-.487-1.38-.353-.376-.888-.566-1.547-.566h-1.207c.563.653.894 1.507.966 2.496h2.275zm-3.045 1.361v-.941c0-1.028-.305-1.896-.885-2.513-.636-.67-1.61-1.028-2.818-1.028H9.636c-1.207 0-2.173.359-2.81 1.028-.58.614-.884 1.482-.884 2.513v.941h12.075zM5.174 17.643c.07-.99.395-1.844.958-2.496H4.978c-.658 0-1.193.193-1.546.566-.314.333-.488.812-.488 1.378v.552h2.23zm15.966-2.496c.463.487.706 1.157.706 1.93v.708a.634.634 0 01-.627.64H18.8v.923c0 .244-.196.44-.44.44H5.598a.442.442 0 01-.44-.44v-.91H2.796a.638.638 0 01-.636-.641v-.706c0-.773.244-1.443.706-1.939.504-.523 1.232-.804 2.112-.804h2.095c.698-.423 1.569-.638 2.566-.638h4.678c.989 0 1.851.207 2.549.622h2.165c.877.002 1.605.28 2.11.815z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconGroupRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.107 6.11c-.41.412-.614 1.084-.614 1.998 0 .91.208 1.58.611 1.988.395.398 1.025.597 1.871.597.846 0 1.48-.202 1.877-.597.409-.409.616-1.078.616-1.988 0-.914-.207-1.583-.619-1.995-.398-.4-1.028-.602-1.874-.602-.843 0-1.47.202-1.868.6zm1.87 5.894c-1.184 0-2.106-.325-2.741-.964-.664-.664-.998-1.652-.998-2.932 0-1.283.337-2.27.998-2.939.638-.644 1.56-.969 2.745-.969 1.182 0 2.106.328 2.745.97.664.669 1.003 1.657 1.003 2.938 0 1.28-.337 2.266-1.003 2.932-.644.639-1.566.964-2.748.964zM5.67 10.29c-.151.15-.174.504-.174.7 0 .193.023.543.171.695.112.112.345.17.661.17.317 0 .552-.061.664-.173.151-.151.174-.502.174-.695 0-.196-.023-.546-.177-.7-.112-.112-.347-.174-.66-.174-.317.003-.55.065-.66.177zm.658 2.876c-.661 0-1.176-.179-1.532-.537-.37-.373-.558-.925-.558-1.64 0-.716.188-1.268.558-1.64.356-.36.871-.541 1.532-.541s1.177.182 1.535.54c.373.376.56.928.56 1.645 0 .714-.187 1.266-.56 1.641-.358.353-.877.532-1.535.532zm10.68-2.823c-.145.146-.165.482-.165.67 0 .184.023.52.166.663.103.104.336.165.638.165.3 0 .53-.058.633-.162.104-.104.163-.347.163-.667 0-.187-.022-.526-.165-.672-.104-.104-.33-.162-.63-.162-.309-.003-.533.056-.64.165zm-.873 2.28c-.367-.364-.552-.908-.552-1.61 0-.707.185-1.247.552-1.614.35-.353.857-.532 1.51-.532.647 0 1.156.179 1.507.532.36.367.546.91.546 1.613s-.185 1.247-.55 1.611c-.35.353-.856.53-1.506.53-.647 0-1.154-.18-1.507-.53zm4.454 4.74v-.286c0-.499-.14-.916-.407-1.208-.294-.319-.753-.487-1.327-.487l-.824-.003c.314.569.493 1.244.56 1.983h1.998zm-3.216 1.112v-.536c0-.983-.26-1.8-.75-2.366-.662-.76-1.65-.92-2.365-.92H9.692c-.714 0-1.7.16-2.358.917-.488.563-.745 1.38-.745 2.367v.535c0 .003 10.784.003 10.784.003zM5.37 17.379c.065-.74.241-1.414.552-1.986l-.768.003c-.577 0-1.036.168-1.327.487-.266.289-.41.706-.41 1.205v.288c0 .003 1.953.003 1.953.003zm15.72-2.417c.496.538.756 1.269.756 2.115v.703c0 .493-.386.893-.86.893h-2.355v.642c0 .26-.19.47-.426.47H5.757c-.236 0-.426-.21-.426-.47v-.625H3.02c-.473 0-.86-.403-.86-.896v-.703c0-.846.26-1.574.756-2.112.535-.583 1.308-.894 2.238-.894h1.933c.703-.484 1.586-.742 2.605-.742h4.563c1.011 0 1.883.252 2.583.725h2.014c.93.003 1.703.311 2.238.894z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHamburguerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.375 7.9c.09-.09.11-.267.11-.404 0-.135-.02-.317-.11-.404-.087-.09-.255-.106-.383-.106h-6.905c-.126 0-.294.017-.384.106-.087.087-.106.27-.106.404 0 .137.02.316.106.403.087.087.258.104.384.104h6.905c.103 0 .29-.014.383-.104zm.852-1.73c.224.222.487.634.487 1.326 0 .697-.263 1.106-.487 1.325a1.427 1.427 0 01-.325.238c-.028.546-.087 1.857-.238 5.07a1181.54 1181.54 0 00-.174 3.781c-.014 1.706-.308 3.348-2.154 3.757a.705.705 0 01-.168.02h-3.02c.743-.452.958-1.21 1.2-2.08l.027-.1c.362-.118.678-.3.936-.555.496-.495.75-1.196.75-2.084 0-.888-.252-1.588-.747-2.084a2.314 2.314 0 00-.622-.425c-.023-.135-.056-.253-.079-.379-.15-.784-.375-1.448-.68-1.994-.709-1.272-1.84-1.916-3.507-1.916h-.213c-.02-.479-.03-.801-.04-1.008a1.491 1.491 0 01-.324-.238c-.222-.222-.485-.628-.485-1.323 0-.691.263-1.1.482-1.322.213-.213.6-.465 1.238-.465h1.938V3.577c0-.866.681-1.571 1.513-1.571.835 0 1.513.703 1.513 1.571v2.137s1.666-.014 2.215.006l.124.008c.411.06.677.278.84.443zm-7.63 8.088h.907c-.185-.9-.498-1.493-.975-1.86-.327-.252-.74-.395-1.249-.446a4.169 4.169 0 00-.434-.025.846.846 0 00-.084.006c-.093 0-.18.003-.269.011l-3.857.003a5.057 5.057 0 00-.742-.003h-.076a.56.56 0 01-.073.014c-1.025.115-1.79.569-2.16 2.3h9.012zm.428 5.605c.056-.12.104-.27.16-.454H4.93c.288.83.557 1.017 1.566 1.017.131 0 .969-.009 1.103-.014l3.855-.003c.115.006.21.008.305.008.154.003.297.003.44-.008l.717-.014.232-.003c.513-.053.718-.165.877-.53zm-9.815-3.09c.487.504 1.014.76 1.569.76h.036c.54-.012 1.059-.27 1.532-.76.376-.39.603-.804.69-1.238h-4.52c.087.434.32.849.692 1.238zm11.291 2.51l-.025.092c-.103.376-.207.731-.356 1.05-.07.152-.156.29-.254.418a1.925 1.925 0 01-.395.384c-.135.1-.289.188-.474.258a2.47 2.47 0 01-.77.182c-.247.016-.98.02-.98.02h-.513l-.317-.004-3.776.003H6.493c-2.062 0-2.49-1.03-2.896-2.398a2.159 2.159 0 01-.88-.518c-.46-.46-.692-1.106-.692-1.927 0-.82.233-1.468.69-1.927a2.12 2.12 0 01.576-.398c.236-1.56.86-3.476 3.174-3.812a.553.553 0 01.204-.04h.177c.193-.016.549-.019.832.003l3.767-.002a6.63 6.63 0 01.311-.014c.028 0 .054-.003.084-.003.138 0 .258.02.387.028a4.921 4.921 0 011.24.246c.427.163.796.4 1.104.723.177.18.328.392.471.625.09.148.17.308.246.479.043.095.079.199.118.3.048.131.095.266.137.408.026.087.054.177.079.272.061.25.117.507.162.787.213.104.412.23.577.395.104.104.19.219.27.342.277.42.42.95.42 1.585 0 .821-.233 1.47-.692 1.927-.23.239-.521.407-.858.516z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHamburguerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.834 8.12c-.115.115-.294.18-.54.18h-7.06v-.012c-.246 0-.428-.056-.537-.168-.118-.118-.177-.308-.177-.574 0-.267.06-.457.177-.575.112-.114.291-.17.538-.17h7.053c.246 0 .426.056.54.17.118.118.177.308.177.575.003.266-.053.456-.17.574zm-.857 5.37a942.8 942.8 0 00-.216 4.675c-.02 2.227-.52 2.717-1.38 2.806-.015 0-.029.006-.043.009h-.042a3.262 3.262 0 01-.44 0h-2.294a2.557 2.557 0 01-.602-.02c.241-.364.376-.82.516-1.328l.061-.218c.356-.1.664-.26.908-.504.426-.423.641-1.034.641-1.81s-.215-1.384-.641-1.81c-.031-.03-.07-.053-.104-.08.132.033.263.055.398.058h.033c.519 0 1.012-.243 1.474-.722.47-.493.706-1.017.695-1.569-.012-.527-.244-1.034-.698-1.504-.454-.47-.941-.712-1.448-.72-.544.017-1.037.238-1.507.725a2.676 2.676 0 00-.49.695 2.943 2.943 0 00-1.373-.97c-.03-.867-.059-1.599-.075-2.044h6.829c-.04.804-.12 2.571-.202 4.33zm-5.768 7.086c-.162.196-.4.303-.773.359-.044.008-.08.017-.131.022l-.958.014c-.241.017-.476.02-.779 0H7.646a35.94 35.94 0 01-1.145.017c-1.28 0-1.546-.35-1.9-1.487h10.043c-.143.512-.244.851-.435 1.075zm1.208-7.549c-.006-.305.148-.621.454-.94.302-.315.602-.474.896-.474h.011c.286.005.583.162.877.468.297.308.45.613.454.913.005.308-.146.624-.451.944-.3.31-.603.468-.891.468h-.017c-.283-.006-.58-.163-.877-.471-.297-.308-.448-.61-.456-.908zM4.18 18.641c-.347-.042-.621-.157-.817-.353-.255-.255-.384-.656-.384-1.19 0-.536.131-.936.386-1.191.04-.04.087-.07.132-.104.115.359.32.706.636 1.037.49.507 1.014.764 1.56.764h.034c.532-.01 1.047-.266 1.526-.764.395-.41.625-.846.703-1.297h6.91c.432.02.771.14.998.367.258.255.39.655.39 1.19 0 .532-.132.933-.39 1.19-.193.197-.47.309-.82.354H4.18v-.003zm.177-3.098h2.75c-.072.227-.215.46-.44.689-.321.333-.643.507-.957.512-.3.017-.658-.165-.992-.512-.221-.23-.364-.46-.434-.684 0-.002 0-.002-.003-.005h.076zm8.26-3.644c.32.028.591.134.84.257.79.392 1.253 1.188 1.491 2.527H4.291c.319-1.82 1.045-2.709 2.445-2.796.233-.016.933-.014.933-.014h3.924c0-.002.77.006 1.025.026zm3.642-5.956v-2.42c0-.28.221-.507.515-.507.272 0 .49.227.49.507v2.429H16.26v-.009zm4.03 0c-.548-.005-2.195 0-2.195 0v-2.42a1.35 1.35 0 00-1.342-1.367c-.728 0-1.32.614-1.32 1.367v2.42h-2.196c-.467 0-.843.14-1.114.412-.283.286-.429.686-.429 1.193s.146.908.429 1.194c.112.112.246.193.392.26l.073 2.011H7.702s-.599.006-.798.014a7.959 7.959 0 00-.37.02c-1.804.182-2.759 1.443-3.103 3.826a1.997 1.997 0 00-.636.418c-.426.425-.639 1.036-.639 1.81 0 .775.216 1.383.642 1.809.246.246.557.406.918.507.429 1.468.78 2.423 2.79 2.423h8.85l.237-.003h2.238l.26.003c.04-.003.239-.003.239-.003h.104s.095.006.126.003c1.776-.104 2.022-1.916 2.036-3.659.003-.09.11-2.358.216-4.65.137-2.98.19-4.1.21-4.529a1.26 1.26 0 00.392-.26c.286-.286.431-.687.431-1.194 0-.507-.145-.91-.431-1.196a1.388 1.388 0 00-.709-.364c-.008 0-.31-.045-.414-.045z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHamburguerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.375 7.924c-.087.09-.257.107-.386.107v.011h-6.905v-.011c-.126 0-.294-.017-.38-.104-.09-.09-.107-.269-.107-.406 0-.134.02-.317.109-.403.087-.087.255-.104.38-.104h6.906c.128 0 .296.017.383.106.09.087.11.27.11.404-.003.134-.02.314-.11.4zm-.902 5.373c-.213 4.577-.213 4.585-.213 4.61-.02 2.227-.54 2.463-1.165 2.53-.017.003-.03.006-.047.006h-.026a2.64 2.64 0 01-.42-.003l-2.255.003a2.074 2.074 0 01-.19.008h-.037c.146-.317.25-.672.353-1.048l.028-.092c.337-.11.625-.277.866-.516.462-.459.695-1.106.695-1.927 0-.636-.146-1.165-.423-1.588.529-.028 1.033-.277 1.495-.759.505-.521.754-1.092.743-1.69-.011-.573-.26-1.12-.745-1.62s-1.012-.757-1.563-.766c-.589.003-1.124.25-1.625.773-.14.146-.258.295-.356.449a3.05 3.05 0 00-1.112-.72c-.025-.653-.047-1.222-.059-1.625h6.244c-.042.852-.115 2.415-.188 3.975zm-4.039-.417c-.003-.239.123-.496.381-.762.255-.266.499-.398.728-.398h.012c.22.003.462.134.708.392.252.26.378.51.384.742.006.238-.126.496-.384.765-.255.266-.487.378-.734.392-.224-.003-.462-.137-.714-.395-.25-.257-.378-.507-.38-.736zm-1.7 5.28h-9.35c-.353-.026-.636-.11-.813-.286-.207-.207-.31-.546-.31-1.006 0-.38.075-.672.218-.882.132.269.31.532.552.781.52.541 1.084.813 1.672.813h.036c.58-.011 1.132-.283 1.642-.813.367-.38.6-.784.709-1.204h6.532c.395.008.7.106.89.294.21.21.317.552.317 1.011 0 .46-.106.799-.316 1.006-.177.176-.46.26-.813.286h-.966zm.294 1.728c-.162.364-.367.473-.877.532l-.232.003-.717.011-.745-.003-3.855.003c-.134.009-.975.017-1.106.017-1.009 0-1.278-.19-1.563-1.014h9.255c-.06.182-.107.33-.16.45zm-7.28-4.325c-.065.1-.14.199-.238.303-.275.285-.544.434-.79.44-.3.008-.535-.144-.818-.44a1.87 1.87 0 01-.24-.303h2.086zm.143-3.591c.073-.008.431-.003.748.003l3.854-.003c.112.006.23.003.353.003.154 0 .294-.006.434.008.51.048.919.19 1.247.443.479.367.79.963.977 1.862H4.591c.367-1.728 1.134-2.187 2.16-2.3l.14-.016zm9.367-8.373c0-.162.126-.294.283-.294a.29.29 0 01.283.294v2.146h-.566V3.6zm1.8 18.11h.11c.062 0 .106 0 .17-.012 1.866-.268 2.135-2.058 2.152-3.764.003-.101.107-2.334.21-4.577l.2-4.272c.117-.067.229-.143.327-.238.221-.221.484-.63.484-1.325 0-.692-.263-1.104-.484-1.322-.221-.224-.504-.417-.84-.46-.031-.005-.093-.005-.127-.005h-2.21V3.597c0-.866-.677-1.572-1.512-1.572-.832 0-1.513.703-1.513 1.572v2.137h-1.941c-.515 0-.933.154-1.238.465-.219.218-.482.63-.482 1.322 0 .695.263 1.1.485 1.325.098.095.207.17.325.238l.058 1.622a5.731 5.731 0 00-.386-.014c-.151 0-.289.005-.398.003l-3.77.002c-.286 0-.628-.005-.832-.002a2.193 2.193 0 00-.378.04c-2.317.332-2.939 2.248-3.177 3.808a2.12 2.12 0 00-.577.398c-.456.46-.689 1.11-.689 1.93 0 .82.236 1.47.69 1.927.24.241.54.412.882.521.406 1.367.834 2.395 2.893 2.395.146 0 1.059.009 1.151 0l3.77-.003h6.648v-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandDownFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.758 2.16H6.974c-.984 0-1.824.308-2.364.866-.538.554-.81 1.33-.81 2.3v6.996c0 1.272.782 2.062 2.036 2.062.283 0 .541-.04.774-.118.238.858.94 1.367 1.946 1.367a2.4 2.4 0 00.776-.117c.244.848.941 1.353 1.944 1.353.247 0 .476-.031.684-.09v2.902c0 1.333.818 2.162 2.134 2.162 1.266 0 2.042-.773 2.129-2.117l.003-.045v-7.384c.339.577.641.98 1.008 1.272.359.286.787.431 1.207.431.404 0 .802-.131 1.132-.397.65-.521.81-1.41.409-2.26a430.285 430.285 0 00-2.745-5.648c-.574-1.165-1.07-2.17-1.21-2.476-.143-.317-.488-1.059-1.269-1.059"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandDownLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.727 2.16H6.962c-.98 0-1.817.308-2.355.866-.538.551-.807 1.324-.807 2.29v6.978c0 1.27.779 2.056 2.03 2.056.284 0 .541-.042.774-.117.238.854.938 1.361 1.941 1.361.283 0 .544-.042.776-.117.24.845.938 1.347 1.938 1.347.247 0 .477-.03.681-.09v2.894c0 1.33.815 2.157 2.129 2.157 1.263 0 2.036-.77 2.123-2.112l.003-.045v-7.362c.339.575.641.978 1.006 1.27.358.285.784.428 1.204.428.403 0 .801-.132 1.129-.395.647-.518.807-1.406.406-2.255a389.494 389.494 0 00-2.74-5.633c-.57-1.162-1.064-2.165-1.207-2.468-.143-.314-.484-1.053-1.266-1.053m0 .82c.188 0 .34.163.532.586.146.314.642 1.322 1.216 2.488a443.414 443.414 0 012.731 5.616c.235.501.168.986-.18 1.263a.98.98 0 01-.624.219 1.13 1.13 0 01-.703-.255c-.258-.208-.501-.519-.812-1.045a.812.812 0 00-.913-.373.82.82 0 00-.597.79v7.353c-.076 1.207-.787 1.348-1.314 1.348-.862 0-1.319-.463-1.319-1.337V16.74a.819.819 0 00-.32-.653.803.803 0 00-.708-.134 1.71 1.71 0 01-.462.056c-.628 0-1.017-.255-1.16-.757a.812.812 0 00-1.036-.552 1.642 1.642 0 01-.521.076c-.63 0-1.02-.257-1.16-.764a.815.815 0 00-1.036-.558 1.624 1.624 0 01-.519.076c-.81 0-1.218-.418-1.218-1.238V5.317c0-.748.193-1.328.577-1.723.384-.398 1.014-.616 1.776-.616l7.77.003"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandDownRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.76 2.16H6.975c-.984 0-1.824.308-2.364.866-.538.554-.81 1.33-.81 2.302v6.994c0 1.272.782 2.065 2.036 2.065.283 0 .541-.04.774-.118.238.857.94 1.367 1.95 1.367.282 0 .545-.039.775-.117.24.848.941 1.352 1.944 1.352.246 0 .476-.03.683-.09v2.903c0 1.333.818 2.162 2.135 2.162 1.266 0 2.042-.773 2.129-2.117.003-.014.003-.028.003-.045 0-.258.002-5.157 0-7.384.339.577.641.98 1.008 1.272a1.95 1.95 0 001.21.431c.403 0 .801-.132 1.132-.395.65-.52.806-1.409.409-2.263a415.425 415.425 0 00-2.748-5.647 208.864 208.864 0 01-1.21-2.476c-.143-.32-.488-1.062-1.27-1.062m-.033 1.232c.076.079.168.278.2.35.148.323.646 1.334 1.22 2.505a382.72 382.72 0 012.737 5.627c.073.157.216.547-.064.77a.584.584 0 01-.37.13.728.728 0 01-.451-.166c-.219-.173-.434-.454-.717-.935a1.217 1.217 0 00-1.373-.558c-.53.146-.896.633-.896 1.188v6.81l.003.537c-.054.804-.387.967-.91.967-.642 0-.914-.278-.914-.93v-2.905c0-.387-.18-.748-.482-.98a1.21 1.21 0 00-1.067-.208 1.356 1.356 0 01-.356.045c-.641 0-.73-.322-.77-.462a1.233 1.233 0 00-.602-.75 1.198 1.198 0 00-.953-.082 1.273 1.273 0 01-.392.056c-.644 0-.734-.328-.773-.468a1.223 1.223 0 00-1.557-.84 1.273 1.273 0 01-.392.056c-.58 0-.816-.241-.816-.832V5.322c0-.647.152-1.117.463-1.44.305-.313.846-.495 1.49-.495h7.742"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandLeftFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.62 18.164c0-.283.039-.54.117-.773-.857-.238-1.367-.942-1.367-1.95 0-.283.042-.543.118-.776-.849-.24-1.353-.941-1.353-1.944 0-.246.03-.476.09-.683H4.321c-1.333 0-2.162-.818-2.162-2.135 0-1.266.77-2.042 2.118-2.129h7.428c-.577-.339-.98-.644-1.272-1.008a1.927 1.927 0 01-.43-1.207c0-.404.13-.801.397-1.132.52-.65 1.409-.81 2.263-.409 1.448.68 3.776 1.826 5.647 2.748a213.96 213.96 0 002.476 1.21c.32.146 1.062.49 1.062 1.272v7.787c0 .983-.308 1.82-.866 2.361-.554.538-1.33.81-2.302.81h-6.997c-1.275-.006-2.065-.785-2.065-2.042z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandLeftLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.518 19.39c.748 0 1.33-.193 1.728-.58.398-.386.62-1.016.62-1.778V9.245c0-.19-.166-.342-.586-.535-.32-.148-1.378-.667-2.496-1.218-1.865-.92-4.187-2.062-5.636-2.74-.5-.235-.988-.168-1.266.18a.986.986 0 00-.218.624c0 .25.09.499.255.703.207.26.52.504 1.047.812a.81.81 0 01.373.916.823.823 0 01-.793.6H4.171c-1.21.078-1.347.787-1.347 1.316 0 .863.462 1.32 1.338 1.32h2.902c.451 0 .818.36.821.812a.823.823 0 01-.03.218 1.68 1.68 0 00-.06.465c0 .628.255 1.02.76 1.163a.819.819 0 01.554 1.04 1.642 1.642 0 00-.075.52c0 .63.257 1.022.767 1.165a.82.82 0 01.504.4.806.806 0 01.056.64 1.624 1.624 0 00-.075.518c0 .812.417 1.224 1.24 1.224l6.992.003zM9.46 18.168c0-.283.04-.544.118-.774-.857-.238-1.367-.94-1.367-1.946 0-.283.042-.544.118-.776-.849-.241-1.353-.941-1.353-1.944 0-.247.03-.476.09-.684H4.16C2.83 12.041 2 11.223 2 9.906c0-1.266.77-2.042 2.118-2.129h.042l7.386-.003c-.577-.339-.98-.644-1.271-1.008a1.934 1.934 0 01-.432-1.207c0-.404.132-.804.398-1.132.52-.65 1.409-.81 2.263-.409 1.448.68 3.776 1.826 5.647 2.745 1.166.574 2.171 1.07 2.476 1.21.317.146 1.062.49 1.062 1.272v7.787c0 .983-.308 1.82-.865 2.361-.555.538-1.331.81-2.3.81h-7c-1.275 0-2.065-.779-2.065-2.036z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandLeftRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.678 18.984c.647 0 1.12-.15 1.44-.462.314-.305.493-.846.493-1.49V9.28c-.076-.076-.277-.168-.347-.2-.308-.142-1.233-.596-2.505-1.22l-.056-.029c-1.848-.91-4.148-2.042-5.574-2.708-.157-.073-.546-.216-.77.064a.586.586 0 00-.129.373c0 .157.059.32.165.45.174.22.454.435.936.718a1.218 1.218 0 01.557 1.372 1.23 1.23 0 01-1.187.897H4.35c-.804.05-.964.383-.964.91 0 .642.277.916.93.916h2.902c.384 0 .75.18.983.485a1.218 1.218 0 01.202 1.067 1.356 1.356 0 00-.045.356c0 .638.325.73.462.77a1.228 1.228 0 01.89 1.174c0 .128-.019.257-.06.383a1.279 1.279 0 00-.057.395c0 .642.314.731.468.773a1.221 1.221 0 01.837 1.56c-.036.11-.056.242-.056.39 0 .58.241.818.83.818h7.005v-.009zm-9.059-.817c0-.283.04-.541.118-.774-.857-.238-1.367-.94-1.367-1.95 0-.282.04-.545.118-.775-.852-.24-1.353-.941-1.353-1.944 0-.247.03-.476.09-.683H4.321c-1.333 0-2.162-.818-2.162-2.135 0-1.266.77-2.042 2.118-2.129h.044c.258 0 5.16-.003 7.384 0-.577-.339-.98-.644-1.271-1.011a1.944 1.944 0 01-.432-1.207c0-.404.132-.801.398-1.132.52-.65 1.409-.81 2.263-.409 1.448.68 3.776 1.826 5.647 2.748 1.166.574 2.171 1.07 2.476 1.21.317.146 1.06.49 1.06 1.272v7.787c0 .983-.309 1.82-.866 2.361-.558.538-1.33.81-2.303.81H11.68c-1.272-.003-2.062-.785-2.062-2.04z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandRightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.39 18.164c0-.283-.04-.54-.118-.773.857-.238 1.367-.942 1.367-1.95 0-.283-.042-.543-.118-.776.85-.24 1.353-.941 1.353-1.944 0-.246-.03-.476-.09-.683h2.903c1.333 0 2.162-.818 2.162-2.135 0-1.266-.77-2.042-2.118-2.129h-7.428c.577-.339.98-.644 1.272-1.008a1.93 1.93 0 00.43-1.207c0-.404-.13-.801-.397-1.132-.52-.65-1.409-.81-2.263-.409-1.448.68-3.776 1.826-5.647 2.748a213.96 213.96 0 01-2.476 1.21c-.32.146-1.062.49-1.062 1.272v7.787c0 .983.308 1.82.866 2.361.554.538 1.33.81 2.302.81h6.997c1.275-.006 2.065-.785 2.065-2.042z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandRightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.168 19.392c-.748 0-1.33-.193-1.728-.58-.398-.386-.62-1.017-.62-1.779V9.246c0-.19.166-.341.586-.535.32-.148 1.378-.666 2.496-1.218 1.866-.919 4.188-2.062 5.636-2.74.501-.235.989-.168 1.266.18a.986.986 0 01.218.624c0 .25-.09.499-.254.703-.208.26-.522.504-1.048.813a.811.811 0 00-.373.916.824.824 0 00.793.599h7.375c1.21.078 1.348.787 1.348 1.317 0 .862-.462 1.319-1.34 1.319h-2.901a.818.818 0 00-.82.812c0 .073.01.149.03.219.04.137.059.294.059.465 0 .627-.255 1.02-.76 1.162a.819.819 0 00-.554 1.04c.05.15.076.327.076.52 0 .63-.258 1.023-.768 1.166a.82.82 0 00-.504.4.806.806 0 00-.056.639c.05.151.076.328.076.518 0 .812-.418 1.224-1.241 1.224l-6.992.003zm9.059-1.224c0-.283-.04-.544-.118-.773.857-.238 1.367-.941 1.367-1.947 0-.283-.042-.543-.117-.776.848-.24 1.352-.941 1.352-1.944 0-.246-.03-.476-.09-.683h2.903c1.333 0 2.162-.818 2.162-2.135 0-1.266-.77-2.042-2.117-2.129h-.042l-7.387-.005c.577-.34.98-.645 1.272-1.009a1.95 1.95 0 00.431-1.207c0-.403-.132-.804-.398-1.132-.52-.65-1.409-.812-2.26-.409-1.448.681-3.776 1.827-5.647 2.745a178.19 178.19 0 01-2.476 1.21C2.742 8.12 2 8.465 2 9.247v7.787c0 .984.308 1.821.866 2.362.554.538 1.33.81 2.3.81h6.996c1.275 0 2.065-.78 2.065-2.037z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandRightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.328 18.984c-.647 0-1.12-.15-1.44-.462-.313-.305-.493-.846-.493-1.49V9.28c.076-.076.278-.168.348-.2.308-.142 1.232-.596 2.504-1.22l.056-.029c1.849-.91 4.148-2.042 5.574-2.708.157-.073.546-.216.77.064a.586.586 0 01.13.373c0 .157-.06.32-.166.45-.174.22-.454.435-.936.718a1.218 1.218 0 00-.557 1.372c.148.53.633.897 1.188.897h7.35c.804.05.963.383.963.91 0 .642-.277.916-.93.916h-2.907c-.384 0-.75.18-.983.485a1.218 1.218 0 00-.202 1.067c.028.103.045.221.045.356 0 .638-.325.73-.462.77a1.228 1.228 0 00-.891 1.174c0 .128.02.257.061.383.037.112.056.244.056.395 0 .642-.313.731-.467.773a1.221 1.221 0 00-.838 1.56c.037.11.056.242.056.39 0 .58-.24.818-.829.818h-7v-.009zm9.059-.817c0-.283-.04-.541-.118-.774.857-.238 1.367-.94 1.367-1.95 0-.282-.039-.545-.117-.775.851-.24 1.352-.941 1.352-1.944 0-.247-.03-.476-.09-.683h2.903c1.333 0 2.162-.818 2.162-2.135 0-1.266-.77-2.042-2.117-2.129h-.045c-.258 0-5.16-.003-7.384 0 .577-.339.98-.644 1.272-1.011.285-.359.431-.787.431-1.207 0-.404-.132-.801-.398-1.132-.52-.65-1.409-.81-2.263-.409-1.448.68-3.776 1.826-5.647 2.748-1.165.574-2.17 1.07-2.476 1.21-.317.146-1.059.49-1.059 1.272v7.787c0 .983.308 1.82.866 2.361.557.538 1.33.81 2.302.81h6.997c1.272-.003 2.062-.785 2.062-2.04z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandUpFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.164 9.62c-.283 0-.54.039-.773.117-.238-.857-.942-1.367-1.95-1.367-.283 0-.543.042-.776.118-.24-.849-.941-1.353-1.944-1.353-.246 0-.476.03-.683.09V4.321c0-1.333-.818-2.162-2.135-2.162-1.266 0-2.042.77-2.129 2.118v7.428c-.339-.577-.644-.98-1.008-1.272a1.927 1.927 0 00-1.207-.43c-.404 0-.801.13-1.132.397-.65.52-.81 1.409-.409 2.263.68 1.448 1.826 3.776 2.748 5.647a213.96 213.96 0 011.21 2.476c.146.32.49 1.062 1.272 1.062h7.787c.983 0 1.82-.308 2.361-.866.538-.554.81-1.33.81-2.302v-6.997c-.006-1.275-.785-2.065-2.042-2.065z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandUpLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.388 18.678c0 .748-.193 1.33-.58 1.728-.387.398-1.017.62-1.779.62H9.242c-.19 0-.342-.166-.535-.586a184.64 184.64 0 00-1.218-2.496c-.92-1.865-2.062-4.187-2.74-5.636-.235-.5-.168-.988.18-1.266a.986.986 0 01.624-.218c.25 0 .499.09.703.255.26.207.504.52.813 1.047a.81.81 0 00.915.373.823.823 0 00.6-.793V4.331c.078-1.21.787-1.347 1.316-1.347.863 0 1.32.462 1.32 1.338v2.902c0 .451.361.818.812.821a.823.823 0 00.219-.03c.137-.04.294-.06.465-.06.627 0 1.02.255 1.162.76a.819.819 0 001.04.554c.15-.05.327-.075.52-.075.63 0 1.023.257 1.166.767a.82.82 0 00.4.504.806.806 0 00.639.056 1.66 1.66 0 01.518-.075c.812 0 1.224.417 1.224 1.24l.003 6.992zM18.164 9.62c-.283 0-.544.04-.773.118-.238-.857-.942-1.367-1.947-1.367-.283 0-.544.042-.776.118-.24-.849-.941-1.353-1.944-1.353-.247 0-.476.03-.683.09V4.32c0-1.334-.818-2.16-2.135-2.16-1.266 0-2.042.77-2.129 2.118v.042l-.003 7.386c-.339-.577-.644-.98-1.008-1.271a1.934 1.934 0 00-1.207-.432 1.79 1.79 0 00-1.132.398c-.65.52-.81 1.409-.409 2.263.68 1.448 1.826 3.776 2.745 5.647.574 1.166 1.07 2.171 1.21 2.476.146.317.49 1.062 1.272 1.062h7.787c.983 0 1.82-.308 2.361-.865.538-.555.81-1.331.81-2.3v-7c-.003-1.275-.782-2.065-2.04-2.065z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHandUpRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.984 18.678c0 .647-.15 1.118-.462 1.44-.305.314-.846.493-1.49.493H9.28c-.076-.076-.168-.277-.2-.347-.142-.308-.596-1.233-1.22-2.505l-.029-.056c-.91-1.848-2.042-4.148-2.708-5.574-.073-.157-.216-.546.064-.77a.586.586 0 01.373-.129c.157 0 .32.059.45.165.22.174.435.454.718.936a1.218 1.218 0 001.372.557 1.23 1.23 0 00.897-1.187V4.35c.05-.804.383-.964.91-.964.642 0 .916.277.916.93v2.902c0 .384.18.75.485.983a1.218 1.218 0 001.067.202c.103-.028.221-.045.356-.045.638 0 .73.325.77.462a1.228 1.228 0 001.174.89c.128 0 .257-.019.383-.06.112-.037.244-.057.395-.057.642 0 .731.314.773.468a1.221 1.221 0 001.56.837c.11-.036.242-.056.39-.056.58 0 .818.241.818.83v7.005h-.009zm-.817-9.059c-.283 0-.541.04-.774.118-.238-.857-.94-1.367-1.95-1.367-.282 0-.545.04-.775.118-.24-.852-.941-1.353-1.944-1.353-.247 0-.476.03-.683.09V4.321c0-1.333-.818-2.162-2.135-2.162-1.266 0-2.042.77-2.129 2.118v.044c0 .258-.003 5.16 0 7.384-.339-.577-.644-.98-1.011-1.271a1.944 1.944 0 00-1.207-.432c-.404 0-.801.132-1.132.398-.65.52-.81 1.409-.409 2.263.68 1.448 1.826 3.776 2.748 5.647.574 1.166 1.07 2.171 1.21 2.476.146.317.49 1.06 1.272 1.06h7.787c.983 0 1.82-.309 2.361-.866.538-.558.81-1.33.81-2.303V11.68c-.003-1.272-.785-2.062-2.04-2.062z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHardDiskFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.843 8.96c.927 0 .927-.389.927-.554 0-.165 0-.557-.927-.557s-.927.39-.927.557c0 .168 0 .555.927.555zm0-1.935c1.577 0 1.748.964 1.748 1.378 0 .415-.17 1.378-1.748 1.378-1.577 0-1.745-.963-1.745-1.378 0-.414.168-1.378 1.745-1.378zM5.91 4.605c-.484 0-.764-.176-.764-.552 0-.378.283-.554.764-.554.482 0 .765.176.765.554 0 .376-.28.552-.765.552zm11.48-1.106c.481 0 .764.176.764.554 0 .376-.283.552-.765.552-.484 0-.764-.176-.764-.552-.003-.378.28-.554.764-.554zm.873 9.593c0-.378.283-.554.765-.554.482 0 .765.176.765.554 0 .376-.283.552-.765.552-.485.003-.765-.176-.765-.552zm-6.42-1.504c4.639 0 4.639-2.395 4.639-3.182 0-.787 0-3.185-4.639-3.185S7.204 7.62 7.204 8.406c0 .434.065.832.19 1.174.004.003 0 .008.004.011.52-.207.991-.28 1.297-.078a.756.756 0 01.347.59c.022.267-.09.589-.275.925l.023.011c.759.364 1.787.55 3.053.55zm0-7.602c5.107 0 5.868 2.767 5.868 4.417s-.761 4.415-5.868 4.415c-1.45 0-2.658-.224-3.583-.67l-.15-.075c-.018-.009-.029-.025-.046-.037a15.868 15.868 0 01-1.442 1.527c-.353.325-.765.487-1.19.487-.348 0-.707-.109-1.048-.33-.518-.34-.656-.714-.675-.97-.02-.249.044-.627.473-1.019.02-.017 1.04-.913 2.143-1.591-.03-.045-.067-.084-.087-.14a4.628 4.628 0 01-.266-1.6c.003-1.647.765-4.414 5.871-4.414zm8.591 10.359c.095 0 .188.014.275.033l-1.387-11.02c-.056-.296-.274-.52-.527-.52L4.894 2.82a.434.434 0 00-.432.434L2.98 14.375c.09-.02.182-.033.275-.033h17.18v.003zm-2.126 4.988c.678 0 1.098-.42 1.098-1.1 0-.678-.42-1.101-1.098-1.101-.678 0-1.098.42-1.098 1.1 0 .678.42 1.101 1.098 1.101zm3.375-3.773c0 .014.003.025.003.04v4.829c0 .691-.56 1.257-1.252 1.257H3.252A1.255 1.255 0 012 20.43V15.6c0-.025.006-.044.006-.07 0-.016-.003-.03-.003-.047L3.64 3.202C3.64 2.566 4.2 2 4.891 2l13.902.017c.655 0 1.204.498 1.336 1.215l1.524 12.101c.01.045.014.093.016.138l.009.078c.005.003.005.008.005.011z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHardDiskLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.59 21.025a.432.432 0 00.432-.435v-4.803l-.009-.07a.428.428 0 00-.423-.39H3.408a.436.436 0 00-.434.434v4.83c0 .238.193.434.434.434H20.59zM4.616 3.414L3.134 14.537c.09-.02.18-.033.274-.033H20.59c.096 0 .188.014.275.033l-1.387-11.02c-.056-.296-.274-.52-.526-.52L5.05 2.983a.43.43 0 00-.434.431zM21.84 15.719c0 .014.003.025.003.04v4.831c0 .692-.56 1.255-1.253 1.255H3.408a1.254 1.254 0 01-1.252-1.255v-4.832c0-.025.006-.047.006-.07 0-.016-.006-.03-.003-.05l1.639-12.28c-.003-.639.557-1.202 1.249-1.202l13.902.014c.655 0 1.204.502 1.336 1.216l1.524 12.1c.011.046.011.093.017.138l.008.078c.006.009.003.014.006.017zM12 8.008c-.928 0-.928.39-.928.554 0 .166 0 .558.927.558.928 0 .928-.39.928-.558 0-.168 0-.554-.928-.554zm0 1.933c-1.578 0-1.746-.964-1.746-1.379 0-.414.171-1.378 1.745-1.378 1.577 0 1.748.964 1.748 1.378 0 .415-.17 1.379-1.748 1.379zm6.19 9.098c.52 0 .734-.213.734-.734s-.213-.734-.734-.734c-.527 0-.731.207-.731.734 0 .53.204.734.73.734zm0-2.289c.972 0 1.552.583 1.552 1.555 0 .974-.58 1.554-1.552 1.554-.972 0-1.552-.58-1.552-1.554 0-.975.58-1.555 1.552-1.555zM6.067 4.764c-.482 0-.765-.176-.765-.552 0-.378.283-.554.765-.554.484 0 .764.176.764.554 0 .373-.28.552-.764.552zm11.476 0c-.482 0-.765-.176-.765-.552 0-.378.283-.554.765-.554.484 0 .765.176.765.554.002.373-.28.552-.765.552zm1.641 9.04c-.482 0-.764-.177-.764-.553 0-.378.282-.554.764-.554.485 0 .765.176.765.554 0 .376-.283.552-.765.552zM4.893 12.5c-.14.129-.216.255-.21.344.008.101.12.227.305.348.308.201.776.35 1.238-.073 1.037-.95 2.233-2.429 2.154-2.798a.251.251 0 00-.05-.006c-.527.003-2.62 1.437-3.437 2.185zm2.465-2.692a.086.086 0 01.003.028c.6-.272 1.145-.39 1.487-.165a.756.756 0 01.347.59c.026.312-.134.701-.378 1.104l.045.023c.784.375 1.84.566 3.137.566 3.216 0 4.844-1.14 4.844-3.39s-1.63-3.39-4.844-3.39c-3.212 0-4.843 1.14-4.843 3.39 0 .46.067.877.202 1.244zm-2.815 4.076c-.521-.34-.656-.718-.675-.972-.02-.25.045-.628.473-1.02.02-.017 1.151-1.003 2.317-1.69a.42.42 0 01-.07-.111 4.424 4.424 0 01-.252-1.53c0-1.921.983-4.212 5.663-4.212 4.681 0 5.664 2.29 5.664 4.212 0 1.922-.983 4.21-5.664 4.21-1.42 0-2.596-.218-3.493-.647l-.145-.072c-.006-.003-.009-.009-.017-.014a15.666 15.666 0 01-1.563 1.686 1.745 1.745 0 01-1.19.487 1.894 1.894 0 01-1.048-.327z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHardDiskRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.269 20.442a.203.203 0 00.202-.204v-4.683l-.009-.056a.199.199 0 00-.196-.188H3.468a.203.203 0 00-.202.204v4.723c0 .112.093.204.202.204h16.8zM4.87 3.448L3.457 14.07c.005 0 .008-.003.014-.003h16.798c.005 0 .011.003.017.003L18.964 3.577c-.031-.168-.16-.317-.297-.317L5.076 3.246a.202.202 0 00-.205.202zm16.84 12.009c.002.022.005.039.005.061v4.723c0 .798-.647 1.448-1.445 1.448H3.47a1.45 1.45 0 01-1.446-1.448v-4.723c0-.03.009-.061.011-.092 0-.02-.005-.037-.002-.054L3.636 3.367C3.63 2.653 4.28 2 5.076 2l13.59.014c.748 0 1.376.563 1.524 1.37l1.49 11.826c.009.034.009.07.015.106l.014.12c.002.01 0 .012 0 .02zM11.87 7.95c-.893 0-.893.372-.893.532 0 .16 0 .53.893.53.894 0 .894-.37.894-.53 0-.16 0-.532-.894-.532zm0 1.89c-1.552 0-1.72-.95-1.72-1.358 0-.41.168-1.362 1.72-1.362 1.555 0 1.723.953 1.723 1.362-.003.409-.171 1.358-1.723 1.358zm6.053 8.869c.505 0 .703-.196.703-.706 0-.507-.198-.703-.703-.703-.504 0-.703.199-.703.703 0 .51.196.706.703.706zm0-2.238c.958 0 1.53.574 1.53 1.532 0 .96-.572 1.535-1.53 1.535-.958 0-1.53-.574-1.53-1.535-.002-.958.572-1.532 1.53-1.532zM6.07 4.765c-.473 0-.748-.174-.748-.54 0-.37.275-.542.748-.542.47 0 .748.174.748.541 0 .37-.275.54-.748.54zm11.221 0c-.473 0-.748-.174-.748-.54 0-.37.275-.542.748-.542.47 0 .748.174.748.541 0 .37-.277.54-.748.54zm1.602 8.84c-.473 0-.747-.174-.747-.54 0-.37.274-.541.747-.541.474 0 .748.17.748.54s-.274.541-.748.541zM5.09 12.065c-.135.123-.208.24-.202.324.008.093.118.216.291.33.297.194.748.34 1.196-.07 1.003-.918 2.168-2.355 2.101-2.722-.011-.003-.025-.003-.04-.003-.492 0-2.548 1.41-3.346 2.14zm2.266-3.583c0 .347.053.664.134.952.588-.266 1.129-.38 1.468-.16a.756.756 0 01.344.589c.026.327-.154.742-.425 1.168l.02.008c.736.353 1.739.532 2.971.532 4.516 0 4.516-2.327 4.516-3.09 0-.764 0-3.094-4.516-3.094-4.512.002-4.512 2.33-4.512 3.095zM4.73 13.417c-.513-.333-.644-.706-.667-.958-.02-.246.045-.619.468-1.008.017-.014.866-.756 1.846-1.395 0-.003-.003-.003-.003-.006a4.6 4.6 0 01-.26-1.571c0-1.622.748-4.339 5.753-4.339 5.011 0 5.76 2.717 5.76 4.339 0 1.619-.749 4.336-5.76 4.336-1.42 0-2.602-.218-3.51-.655l-.148-.073c-.034-.017-.053-.045-.081-.067a15.636 15.636 0 01-1.196 1.238c-.348.319-.754.482-1.174.482a1.855 1.855 0 01-1.028-.323z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeadphonesFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.723 11c-.093-5.804-2.91-9-7.984-9-5.098 0-7.924 3.238-7.974 9.126-1.146.7-1.762 2.003-1.762 3.868 0 2.745 1.328 4.322 3.736 4.432l.275.008h.106c1.942-.067 2.342-1.823 2.342-4.44 0-2.624-.4-4.378-2.305-4.448a1.799 1.799 0 00-.303 0c-.05 0-.1 0-.115.009a5.102 5.102 0 00-.711.084c.185-4.883 2.431-7.364 6.711-7.364s6.53 2.473 6.72 7.338c-.157-.016-.308-.053-.476-.061-.05-.009-.1-.009-.134-.009a1.522 1.522 0 00-.283 0c-1.947.068-2.342 1.824-2.342 4.449 0 1.714.176 3.05.846 3.792-.868.485-1.913.801-3.134.964-.152-.572-.603-.913-1.289-.93-.88-.025-1.42.468-1.448 1.39-.017.442.092.8.328 1.055.232.255.585.41 1.028.418h.067c.409 0 .742-.12.986-.35.075-.076.126-.18.176-.28 1.88-.197 3.446-.751 4.659-1.637.042.009.067.017.106.017h.126l.275-.008c2.406-.112 3.736-1.69 3.736-4.431 0-1.972-.703-3.337-1.963-3.992"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeadphonesLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.84 11.285c-.056-7.532-4.34-9.129-7.939-9.129-3.6 0-7.94 1.605-7.94 9.255-1.166.653-1.805 1.947-1.805 3.812 0 2.667 1.28 4.18 3.602 4.306h.376c1.566-.059 2.174-1.272 2.174-4.314S7.7 10.952 6.15 10.901h-.387c-.33.017-.658.07-.975.16.098-5.35 2.485-8.067 7.112-8.067 4.628 0 6.998 2.7 7.112 8.017a5.6 5.6 0 00-.745-.101h-.395c-1.565.059-2.182 1.271-2.182 4.322 0 2.148.311 3.344 1.042 3.93a9.11 9.11 0 01-3.798 1.196 1.08 1.08 0 00-1.14-.994 1.093 1.093 0 00-.908.285 1.147 1.147 0 00-.355.902c-.031.334.07.667.28.927.238.244.566.376.902.359a1.2 1.2 0 00.927-.3c.095-.1.17-.218.221-.35a9.513 9.513 0 004.815-1.672c.056.003.115.003.171 0h.4c2.323-.11 3.595-1.672 3.595-4.306 0-1.966-.706-3.313-2.003-3.924zm-14.025.46h.294c.582 0 1.378.05 1.378 3.487 0 3.437-.82 3.454-1.46 3.479h-.23c-1.893-.11-2.82-1.247-2.82-3.488 0-2.24.927-3.386 2.838-3.479zm12.394 6.95h-.59c-.524-.093-1.085-.586-1.085-3.446 0-3.434.821-3.46 1.46-3.488h.238c1.893.093 2.812 1.23 2.812 3.48.003 2.249-.941 3.36-2.835 3.453z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeadphonesRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.89 18.16h-.282c-.05 0-.101 0-.151-.009a.447.447 0 00-.149-.025c-.409-.118-.826-.63-.826-3.129 0-3.137.652-3.151 1.196-3.17h.11l.108.008c1.087.045 2.541.426 2.541 3.162-.006 2.726-1.46 3.11-2.546 3.163M5.787 11.835c.017 0 .101-.009.118-.009h.173c.477.017 1.13.034 1.13 3.171 0 3.13-.653 3.143-1.197 3.163h-.227c-1.084-.054-2.53-.437-2.53-3.163 0-2.736 1.446-3.12 2.533-3.162M19.72 11c-.09-5.804-2.905-9-7.98-9-5.101 0-7.928 3.24-7.975 9.126C2.619 11.826 2 13.132 2 14.997c0 2.745 1.328 4.322 3.737 4.432l.277.008h.11c1.94-.067 2.341-1.824 2.341-4.44 0-2.624-.4-4.38-2.308-4.448a1.785 1.785 0 00-.3 0c-.05 0-.1 0-.118.008a4.7 4.7 0 00-.711.087C5.213 5.76 7.462 3.28 11.742 3.28s6.527 2.47 6.72 7.339c-.16-.017-.308-.05-.476-.059-.05-.008-.098-.008-.134-.008a1.59 1.59 0 00-.283 0c-1.947.067-2.34 1.823-2.34 4.448 0 1.711.177 3.05.844 3.793-.869.484-1.913.8-3.135.963-.15-.571-.602-.913-1.288-.93-.877-.025-1.42.47-1.446 1.39-.016.442.093.8.325 1.056.236.255.586.409 1.028.417h.068c.409 0 .745-.118.986-.35.075-.076.126-.177.176-.28 1.88-.196 3.445-.748 4.656-1.636a.37.37 0 00.109.017h.126l.274-.009C20.36 19.32 21.69 17.745 21.69 15c-.003-1.98-.706-3.345-1.97-4"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartBubbleFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.423 9.416c-.193.787-.569 1.605-1.118 2.429a9.802 9.802 0 01-1.37 1.66l-.013.015c-.06.056-.258.254-.432.375a1.347 1.347 0 01-.63.232h-.006c-.014 0-.028.003-.044.003h-.015c-.014 0-.03 0-.044-.003h-.006a1.312 1.312 0 01-.633-.232c-.17-.12-.373-.32-.431-.375a9.827 9.827 0 01-1.384-1.675c-.546-.824-.922-1.642-1.118-2.429-.21-.857-.036-1.569.49-2.006.306-.255.72-.406 1.169-.428.039-.003.08-.003.12-.003.017 0 .036.006.053.006.196.005.39.028.583.078.022.006.042.014.061.02.205.058.41.134.603.238.154.084.313.173.49.271a.128.128 0 00.056.014c.02 0 .04-.005.056-.014.174-.1.336-.187.49-.274.193-.104.395-.18.6-.238l.064-.02c.193-.05.39-.073.583-.078.016 0 .036-.006.053-.006.04 0 .081 0 .12.003.448.022.866.174 1.171.429.521.44.692 1.15.482 2.008m3.126-6.574H5.137C3.41 2.842 2 4.197 2 5.864v8.96c0 1.348.846 2.488 2.098 2.88v1.863c0 .717.641 1.32 1.398 1.32.47 0 .86-.197 1.157-.575L8.64 17.85h9.91c1.73 0 3.138-1.356 3.138-3.025v-8.96c-.003-1.668-1.409-3.023-3.14-3.023"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartBubbleLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.022 14.952V5.994c0-1.23-1.04-2.233-2.317-2.233H5.294c-1.278 0-2.32 1.003-2.32 2.233v8.958c0 1.078.728 1.978 1.77 2.185a.4.4 0 01.328.39v2.167c0 .27.278.527.574.527.098 0 .3 0 .505-.263l2.117-2.622a.418.418 0 01.325-.152h10.11c1.28-.002 2.319-1.002 2.319-2.232zM18.705 2.969c1.729 0 3.138 1.355 3.138 3.025v8.958c0 1.667-1.41 3.025-3.138 3.025H8.798L6.806 20.44a1.396 1.396 0 01-1.157.575c-.756 0-1.395-.605-1.395-1.32v-1.863a2.985 2.985 0 01-2.098-2.88V5.995c0-1.67 1.41-3.025 3.138-3.025h13.411zm-3.924 6.39c.078-.32.154-.906-.221-1.22a1.183 1.183 0 00-.681-.237l-.076-.003c-.297 0-.61.084-.902.24-.148.079-.302.166-.467.261a.984.984 0 01-.474.126.945.945 0 01-.462-.117 31.762 31.762 0 00-.482-.27 1.935 1.935 0 00-.902-.24l-.078.003c-.264.014-.513.098-.678.238-.378.313-.303.899-.227 1.218.17.7.513 1.434 1.008 2.182.41.614.723.992 1.283 1.555.098.098.236.224.322.283a.506.506 0 00.174.078h.009l.033.006a.526.526 0 00.207-.081 2.67 2.67 0 00.303-.264l.003-.005.028-.028c.552-.555.86-.928 1.269-1.541.501-.75.84-1.485 1.01-2.185zm-.857-2.247c.448.022.865.173 1.17.425.527.437.698 1.149.488 2.003-.193.787-.571 1.605-1.118 2.429a9.623 9.623 0 01-1.383 1.678c-.06.058-.26.257-.435.375a1.28 1.28 0 01-.479.21.858.858 0 01-.15.02h-.006c-.014.002-.028.002-.045.002h-.017c-.017 0-.028 0-.045-.002h-.003a1.236 1.236 0 01-.15-.02 1.36 1.36 0 01-.483-.21 3.644 3.644 0 01-.431-.375 9.736 9.736 0 01-1.384-1.678c-.546-.821-.921-1.639-1.115-2.429-.213-.854-.036-1.568.488-2.003.305-.252.72-.406 1.17-.425.04-.003.082-.003.121-.003.434 0 .882.115 1.3.342.154.08.313.173.487.271a.13.13 0 00.059.014c.02 0 .036-.005.056-.014.174-.098.333-.187.49-.271a2.747 2.747 0 011.415-.34z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartBubbleRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.45 14.755V6.007c0-1.087-.918-1.972-2.05-1.972H5.287c-1.132 0-2.05.885-2.05 1.972v8.75c0 .956.64 1.749 1.557 1.93.288.057.496.3.496.586v2.118c0 .151.176.302.347.302.073 0 .185 0 .32-.173l2.072-2.566a.634.634 0 01.487-.23h9.888c1.13 0 2.048-.882 2.048-1.97zM18.4 2.842c1.81 0 3.286 1.42 3.286 3.165v8.75c0 1.746-1.473 3.163-3.285 3.163H8.815l-1.88 2.325a1.608 1.608 0 01-1.3.642c-.86 0-1.582-.687-1.582-1.5v-1.671A3.124 3.124 0 012 14.755V6.007c0-1.745 1.476-3.165 3.286-3.165H18.4zm-4.165 6.313c.048-.187.13-.644-.09-.826a.763.763 0 00-.434-.143l-.058-.003a1.5 1.5 0 00-.703.194 18.89 18.89 0 00-.46.255l-.017.01-.02.01a1.376 1.376 0 01-.65.159 1.37 1.37 0 01-.663-.171c-.188-.106-.336-.19-.482-.266a1.498 1.498 0 00-.706-.193l-.056.002a.763.763 0 00-.434.143c-.221.182-.137.642-.092.827.162.658.484 1.353.958 2.064.395.591.694.955 1.238 1.496.092.09.185.17.24.218.051-.039.127-.106.208-.185l.003-.005.042-.04a8.703 8.703 0 001.224-1.481c.468-.712.793-1.406.952-2.065zm-.46-2.162c.45.022.87.174 1.175.429.529.44.703 1.15.49 2.01-.196.79-.572 1.609-1.123 2.435a9.874 9.874 0 01-1.376 1.667l-.014.014c-.059.058-.26.257-.434.375a1.36 1.36 0 01-.482.21 1.236 1.236 0 01-.151.02h-.112a1.236 1.236 0 01-.151-.02 1.339 1.339 0 01-.482-.21c-.171-.12-.376-.32-.434-.375a9.703 9.703 0 01-1.39-1.684c-.549-.823-.927-1.644-1.12-2.434-.213-.86-.037-1.574.49-2.011.305-.255.723-.406 1.177-.429.042 0 .08-.003.12-.003.44 0 .885.115 1.305.34.157.083.317.173.49.271a.098.098 0 00.057.014.125.125 0 00.056-.014c.173-.1.333-.19.49-.274a2.77 2.77 0 011.305-.34.737.737 0 00.115.009z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.238 2.168c1.196.062 2.3.48 3.11 1.174 1.394 1.196 1.856 3.151 1.296 5.504-.515 2.162-1.512 4.403-2.969 6.664-1.151 1.79-2.076 2.947-3.639 4.563a.487.487 0 01-.036.042c-.154.16-.692.7-1.146 1.028a3.422 3.422 0 01-1.277.574c-.132.031-.266.05-.4.056h-.017l-.062.005h-.078c-.05 0-.096 0-.138-.002h-.017a2.42 2.42 0 01-.4-.056c-.46-.104-.896-.3-1.277-.574-.457-.33-.995-.874-1.149-1.031-1.588-1.639-2.515-2.801-3.678-4.605-1.453-2.258-2.453-4.502-2.969-6.667-.56-2.353-.098-4.305 1.297-5.504.81-.692 1.916-1.11 3.11-1.17 1.257-.065 2.562.254 3.772.926a54.2 54.2 0 011.297.745c.093.05.205.05.3 0 .462-.274.885-.518 1.3-.747 1.207-.67 2.512-.99 3.77-.925z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.01 21.792c-.04 0-.076 0-.11-.003h-.014a2.034 2.034 0 01-.367-.053 3.275 3.275 0 01-1.207-.546c-.359-.258-.824-.698-1.143-1.025-1.622-1.673-2.569-2.857-3.754-4.7-1.484-2.297-2.5-4.58-3.025-6.78-.549-2.31-.109-4.22 1.244-5.377.784-.675 1.86-1.079 3.028-1.14 1.24-.062 2.53.254 3.728.921.423.233.857.485 1.334.765a.628.628 0 00.605.003c.473-.283.91-.533 1.336-.768 1.196-.667 2.487-.983 3.728-.921 1.168.058 2.241.465 3.028 1.137 1.35 1.157 1.79 3.067 1.241 5.38-.524 2.197-1.54 4.477-3.022 6.78-1.18 1.831-2.124 3.013-3.726 4.669l-.025.03c-.317.328-.784.771-1.143 1.026a3.275 3.275 0 01-1.207.546 2.27 2.27 0 01-.367.053h-.014c-.04.003-.081.003-.13.003h-.019zM6.975 2.722c-.096 0-.19.003-.286.009-1.042.053-2 .409-2.692 1.002-.6.513-.991 1.196-1.168 2.028-.174.818-.137 1.76.11 2.796.51 2.137 1.5 4.358 2.946 6.605 1.177 1.83 2.073 2.95 3.684 4.613.3.311.739.726 1.067.961.3.219.638.373 1 .451l.008.003c.09.022.182.034.275.04h.008l.095.002h.003c.037 0 .067 0 .095-.003h.012c.092-.005.184-.017.274-.039l.008-.003a2.74 2.74 0 001-.45c.317-.23.74-.625 1.04-.934a.253.253 0 01.025-.028c1.613-1.663 2.507-2.784 3.686-4.613 1.448-2.25 2.44-4.47 2.95-6.605.246-1.037.283-1.978.109-2.796-.176-.832-.571-1.515-1.17-2.028-.693-.593-1.648-.95-2.693-1.002-1.137-.06-2.322.235-3.428.848-.42.233-.855.482-1.325.762l-.006.003a1.183 1.183 0 01-1.165-.003l-.003-.003c-.47-.28-.902-.526-1.32-.759-1.01-.563-2.092-.857-3.14-.857z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHeartRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.036 21.779h-.016c-.05 0-.096 0-.138-.003h-.017a2.42 2.42 0 01-.4-.056 3.466 3.466 0 01-1.277-.574c-.457-.33-.995-.874-1.149-1.031-1.588-1.639-2.515-2.801-3.678-4.605-1.453-2.258-2.453-4.502-2.969-6.667-.56-2.353-.098-4.305 1.297-5.504.81-.692 1.916-1.11 3.11-1.17 1.257-.065 2.562.254 3.772.926a54.2 54.2 0 011.297.745c.093.05.205.05.3 0 .46-.274.885-.518 1.3-.747 1.207-.67 2.512-.99 3.77-.925 1.196.062 2.3.48 3.11 1.174 1.394 1.196 1.856 3.151 1.296 5.504-.515 2.162-1.512 4.403-2.969 6.664-1.151 1.79-2.073 2.947-3.639 4.563a.487.487 0 01-.036.042c-.154.16-.69.7-1.146 1.028a3.422 3.422 0 01-1.277.574c-.132.031-.266.05-.4.056h-.017c-.042.006-.082.006-.124.006zm-.016-1.12h.086c.073-.003.143-.015.213-.031l.017-.003c.311-.07.605-.202.863-.392.288-.208.686-.583.958-.86a.488.488 0 01.033-.04c1.55-1.596 2.41-2.675 3.541-4.431 1.387-2.157 2.336-4.283 2.824-6.32.23-.963.266-1.834.106-2.585-.16-.745-.51-1.353-1.04-1.81-.624-.534-1.49-.854-2.436-.904-1.053-.05-2.151.221-3.177.793a47.74 47.74 0 00-1.277.734l-.011.005c-.44.247-.978.247-1.418-.005l-.005-.003c-.454-.27-.868-.51-1.272-.731-1.022-.572-2.12-.843-3.168-.79-.95.047-1.815.37-2.437.905-.532.456-.882 1.064-1.042 1.81-.16.75-.126 1.62.104 2.584.487 2.04 1.434 4.166 2.82 6.32 1.132 1.756 1.992 2.832 3.541 4.431.269.28.695.68.997.9.258.187.552.321.863.392l.017.002c.07.017.143.026.213.031h.087v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.263 10.555L13.006 2.44c-.597-.586-1.726-.586-2.325 0l-8.258 8.117a1.326 1.326 0 00-.311 1.502c.24.552.818.907 1.47.907h.611v7.283c0 .793.709 1.437 1.583 1.437h3.11a.417.417 0 00.425-.409v-4.045h5.112v4.045a.42.42 0 00.426.412h2.938c.874 0 1.583-.644 1.583-1.437v-7.283h.728c.653 0 1.232-.356 1.47-.907.23-.521.113-1.098-.305-1.507"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.433 21.018h2.513c.403 0 .73-.274.73-.613V12.71a.42.42 0 01.427-.412h1.154c.375 0 .6-.21.686-.406a.52.52 0 00-.132-.608l-8.257-8.112c-.28-.274-.83-.274-1.107 0l-8.26 8.115a.528.528 0 00-.132.608c.087.196.311.406.686.406h1.037a.42.42 0 01.426.412v7.695c0 .339.327.613.728.613h2.683v-4.048a.42.42 0 01.426-.411h5.964a.42.42 0 01.425.411l.003 4.045zm2.513.824h-2.939a.417.417 0 01-.425-.412v-4.042H9.47v4.045a.42.42 0 01-.426.412h-3.11c-.873 0-1.582-.645-1.582-1.437v-7.283h-.61c-.653 0-1.23-.356-1.474-.908a1.326 1.326 0 01.31-1.501l8.259-8.12c.596-.586 1.728-.586 2.325 0l8.26 8.114c.415.41.535.983.308 1.502-.24.551-.818.91-1.473.91h-.726v7.283c0 .793-.711 1.437-1.585 1.437z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.415 20.476h2.249c.28 0 .507-.18.507-.4v-7.538a.616.616 0 01.627-.605h1.13c.265 0 .422-.14.478-.275.04-.095.059-.232-.087-.378l-8.084-7.944c-.196-.193-.59-.193-.787 0l-8.081 7.95c-.146.143-.126.283-.084.378.056.132.213.272.479.272h1.017a.614.614 0 01.624.605v7.537c0 .222.227.401.505.401h2.417v-3.762a.616.616 0 01.627-.605h5.838a.614.614 0 01.625.605v3.76zm2.249 1.21h-2.877a.614.614 0 01-.625-.605v-3.759H9.577v3.76a.616.616 0 01-.625.604H5.908c-.97 0-1.76-.722-1.76-1.608v-6.932h-.386c-.723 0-1.367-.398-1.633-1.014-.255-.583-.123-1.233.347-1.69l8.081-7.952c.661-.652 1.91-.652 2.575 0l8.08 7.95c.469.46.603 1.106.348 1.689-.266.616-.91 1.014-1.633 1.014h-.504v6.933c0 .888-.79 1.61-1.76 1.61z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeWifiFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.583 11.888a.588.588 0 00.047-.852c-2.308-2.49-5.736-2.322-5.843-2.313-3.678.036-5.65 2.092-5.731 2.179a.588.588 0 00.042.851.644.644 0 00.885-.042c.017-.016 1.678-1.75 4.843-1.784.034-.003 2.975-.134 4.869 1.913a.634.634 0 00.467.202c.152 0 .3-.05.42-.154zm-1.264 1.83a.59.59 0 00.05-.855c-1.744-1.883-4.481-1.799-4.576-1.79-2.779.03-4.41 1.742-4.476 1.815a.585.585 0 00.025.83c.008.005.014.013.022.019a.64.64 0 00.882-.04c.014-.014 1.348-1.392 3.578-1.414.028 0 2.268-.065 3.61 1.386a.64.64 0 00.885.048zm-1.493 1.823c.25-.21.28-.583.07-.83-.005-.008-.014-.014-.02-.022-1.176-1.272-3.008-1.207-3.066-1.204-1.858.022-2.953 1.17-2.998 1.218a.59.59 0 00.028.835l.017.017a.63.63 0 00.423.156.632.632 0 00.462-.196c.034-.033.793-.81 2.104-.823.017 0 1.33-.031 2.1.804a.64.64 0 00.88.045zm-2.93 3.154c.703-.012 1.412-.454 1.412-1.412 0-.952-.709-1.395-1.462-1.415-.006-.002-.056-.002-.056-.002-.703.005-1.412.445-1.412 1.411 0 .97.712 1.406 1.415 1.418h.103zm9.317-8.255c.468.46.6 1.106.347 1.692-.269.616-.907 1.014-1.633 1.014h-.504v6.932c0 .888-.787 1.608-1.756 1.608H5.907c-.969 0-1.759-.722-1.759-1.61v-6.933H3.76c-.725 0-1.364-.398-1.633-1.014-.252-.583-.12-1.23.347-1.692l8.084-7.947c.661-.652 1.91-.652 2.575 0l8.08 7.95z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeWifiLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.087 11.894a.53.53 0 00-.134-.617l-8.388-8.245a.804.804 0 00-.56-.219.806.806 0 00-.564.22L3.05 11.276a.53.53 0 00-.134.617c.085.2.316.413.697.413h1.053c.239 0 .432.188.432.418v7.818c0 .344.333.623.74.623h12.204c.41 0 .743-.279.743-.623v-7.818c0-.23.193-.418.432-.418h1.173c.381 0 .612-.213.697-.413zm.484-1.203c.424.415.543 1.001.315 1.528-.244.56-.83.922-1.496.922h-.737v7.4c0 .804-.72 1.459-1.608 1.459H5.838c-.885 0-1.607-.655-1.607-1.46v-7.4h-.62c-.667 0-1.25-.36-1.497-.921-.228-.527-.109-1.11.315-1.526l8.389-8.247c.609-.595 1.755-.595 2.361 0l8.392 8.245zm-9.607 7.456c.561-.012.561-.367.561-.504 0-.122 0-.495-.495-.507h-.077c-.478.006-.478.368-.478.501.003.14.003.504.49.51zm.091-1.844c.663.014 1.338.435 1.338 1.34 0 .908-.672 1.326-1.338 1.338h-.096c-.672-.009-1.346-.427-1.346-1.344 0-.916.671-1.332 1.334-1.337h.006l.102.003zm-.108-7.331c.126-.012 3.577-.18 5.902 2.33a.407.407 0 01-.034.59.45.45 0 01-.615-.034c-2.049-2.209-5.187-2.05-5.224-2.053-3.372.037-5.162 1.902-5.179 1.919a.443.443 0 01-.612.028.408.408 0 01-.031-.589c.085-.088 2.069-2.154 5.793-2.191zm.003 2.441c.105-.005 2.843-.094 4.587 1.785.16.17.145.435-.034.589a.446.446 0 01-.612-.034c-1.468-1.583-3.892-1.517-3.918-1.506-2.427.026-3.85 1.52-3.864 1.534a.444.444 0 01-.612.031.406.406 0 01-.034-.589c.071-.07 1.699-1.781 4.487-1.81zm.017 2.496c.066-.003 1.867-.065 3.022 1.181a.407.407 0 01-.034.59.446.446 0 01-.612-.035c-.876-.942-2.347-.902-2.353-.902-1.454.017-2.325.914-2.333.922a.443.443 0 01-.612.028.408.408 0 01-.031-.589c.045-.045 1.12-1.175 2.953-1.195z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHomeWifiRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.403 11.661c.042-.092.06-.232-.086-.375l-8.082-7.953a.565.565 0 00-.392-.15.56.56 0 00-.392.15L3.37 11.286c-.146.143-.126.283-.087.375.059.132.213.275.479.275h1.014c.344 0 .627.271.627.605v7.535c0 .22.227.4.507.4h11.76c.277 0 .504-.18.504-.4V12.54c0-.334.28-.605.627-.605h1.129c.26 0 .417-.14.473-.275zm.81-1.221c.468.46.6 1.106.347 1.692-.269.616-.91 1.014-1.633 1.014h-.504v6.932c0 .888-.787 1.611-1.756 1.611H5.907c-.969 0-1.759-.723-1.759-1.61v-6.933H3.76c-.723 0-1.364-.398-1.633-1.014-.252-.583-.12-1.23.347-1.692l8.084-7.953c.661-.65 1.91-.65 2.575 0l8.08 7.953zm-9.403 7.207c.414-.006.414-.23.414-.364 0-.135 0-.359-.356-.367h-.067c-.31.003-.336.18-.336.364 0 .143 0 .364.345.367zm.036-1.779c.75.02 1.462.463 1.462 1.415 0 .958-.709 1.398-1.412 1.412h-.1c-.704-.009-1.415-.451-1.415-1.418 0-.966.709-1.406 1.412-1.411 0 .002.05.002.053.002zm-.059-7.148c.107-.011 3.538-.177 5.843 2.314a.59.59 0 01-.05.854.637.637 0 01-.418.154.634.634 0 01-.467-.202c-1.897-2.047-4.835-1.916-4.869-1.913-3.165.034-4.829 1.768-4.846 1.784a.647.647 0 01-.885.043.59.59 0 01-.045-.855c.087-.087 2.06-2.14 5.737-2.18zm.006 2.356c.095-.009 2.832-.096 4.577 1.79.23.249.207.63-.05.854a.644.644 0 01-.886-.048c-1.342-1.45-3.582-1.386-3.61-1.386-2.23.025-3.563 1.403-3.578 1.417a.633.633 0 01-.464.196c-.149 0-.3-.05-.42-.157a.588.588 0 01-.045-.851c.07-.076 1.697-1.787 4.476-1.815zm.017 2.406c.058 0 1.89-.067 3.07 1.204.23.25.207.63-.05.855a.644.644 0 01-.886-.048c-.77-.835-2.084-.801-2.1-.804-1.315.014-2.074.79-2.105.824a.643.643 0 01-.885.039.587.587 0 01-.044-.849c.047-.05 1.142-1.202 3-1.221z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHospitalFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.022 20.51h3.647v-5.944h-3.647v5.944zM6.258 3.406V20.51h2.566v-6.546a.6.6 0 01.599-.603h4.846a.6.6 0 01.6.603v6.546h2.565V3.406c0-.067-.087-.162-.132-.174H6.378c-.036.012-.12.107-.12.174zM20.91 4.978c.488 0 .776.467.776 1.254V20.46c0 .785-.291 1.255-.776 1.255H2.782c-.488 0-.78-.468-.78-1.255V6.232c0-.787.292-1.254.78-1.254h2.28V3.403c0-.72.627-1.378 1.319-1.378h10.935c.692 0 1.32.658 1.32 1.378v1.572l2.274.003zM8.824 9.198c-.325 0-.603-.243-.603-.534V7.182c0-.283.28-.532.603-.532h1.75V4.894c0-.325.25-.611.532-.611h1.474c.277 0 .532.291.532.61v1.751h1.75c.317 0 .609.255.609.535v1.485c0 .28-.289.535-.608.535h-1.751l.006 1.756c0 .328-.244.605-.533.605h-1.479c-.282 0-.532-.283-.532-.605V9.2h-1.75z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHospitalLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.027 20.767V6.243a1.33 1.33 0 00-.022-.255h-2.26c-.012.07-.02.157-.02.255v14.779h2.283c.008-.067.02-.154.02-.255zm-3.117.255V3.36c0-.185-.19-.381-.328-.381H6.417c-.135 0-.325.199-.325.38v17.665H9.12v-6.888c0-.227.182-.41.409-.41h4.947c.224 0 .409.186.409.41v6.888h3.025v-.003zm-7.975 0h4.132v-6.48H9.935v6.48zm-6.964-.255c0 .1.009.188.02.255h2.283v-1.02c0-.005-.003-.008-.003-.011V6.246c0-.098-.008-.185-.02-.255h-2.26c-.011.07-.022.157-.022.255v14.52h.002zM21.254 5.17c.547 0 .589.824.589 1.076V20.77c0 .325-.056 1.075-.589 1.075H2.744c-.532 0-.588-.75-.588-1.075V6.246c0-.252.042-1.076.588-1.076h2.533V3.358c0-.63.543-1.202 1.143-1.202h11.165c.6 0 1.143.572 1.143 1.202V5.17h2.526zm-6.173 3.588c.056 0 .106-.039.114-.058l-.002-1.474a.155.155 0 00-.11-.05h-1.89a.41.41 0 01-.41-.41V4.874a.156.156 0 00-.055-.115l-1.482.003c.003.006-.03.054-.03.11v1.896a.408.408 0 01-.41.409H8.918c-.059 0-.1.036-.106.05l.003 1.496c.005 0 .047.03.103.03h1.888c.224 0 .41.186.41.41v1.896c0 .059.035.101.05.107l1.492-.003c-.002-.003.034-.045.034-.104l-.005-1.896a.409.409 0 01.408-.412h1.886v.008zm0-2.403c.493 0 .924.4.924.852v1.518c0 .454-.431.851-.924.851H13.6l.003 1.485c0 .501-.389.924-.848.924h-1.51c-.46 0-.849-.423-.849-.924V9.574H8.918c-.498 0-.921-.39-.921-.852V7.21c0-.462.423-.851.921-.851h1.48V4.873c0-.504.386-.93.848-.93h1.504c.451 0 .849.435.849.93v1.482h1.482z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHospitalRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.487 20.46V6.181h-1.854v14.325h1.854v-.048zm-10.465.05h3.647v-5.944h-3.647v5.944zM6.255 3.406V20.51H8.82v-6.546a.6.6 0 01.6-.603h4.845a.6.6 0 01.6.603v6.546h2.565V3.409c0-.067-.086-.163-.131-.174H6.373c-.031.009-.118.104-.118.171zM3.199 20.46v.05h1.854v-.798c0-.005-.003-.008-.003-.01V6.184H3.196v14.274H3.2zM20.908 4.98c.487 0 .778.468.778 1.255V20.46c0 .785-.291 1.255-.778 1.255H2.778c-.487 0-.775-.468-.775-1.255V6.232c0-.784.291-1.254.776-1.254h2.28V3.403c0-.722.627-1.378 1.32-1.378h10.938c.691 0 1.319.656 1.319 1.378v1.575l2.272.002zM8.922 7.35v1.143h1.75a.6.6 0 01.6.602v1.76h1.143l-.006-1.757c0-.16.062-.314.176-.426a.593.593 0 01.426-.176h1.756V7.347h-1.756a.6.6 0 01-.6-.602V4.986h-1.14v1.765a.6.6 0 01-.599.602h-1.75V7.35zM8.824 9.7c-.608 0-1.101-.465-1.101-1.036V7.182c0-.56.504-1.036 1.1-1.036h1.25V4.89c0-.602.473-1.112 1.03-1.112h1.477c.56 0 1.03.51 1.03 1.112v1.25h1.253c.6 0 1.106.473 1.106 1.036v1.488c0 .56-.507 1.036-1.106 1.036h-1.25l.003 1.252c0 .603-.473 1.11-1.03 1.11h-1.482c-.56 0-1.031-.507-1.031-1.107V9.7h-1.25z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHotelFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.255 2.008c1.927.045 9.431.807 9.431 9.86 0 9.07-7.512 9.776-9.392 9.813-.269.002-.6.008-.902.002C9.415 21.655 2 20.941 2 11.813 2 2.694 9.347 2.02 11.322 2c.308 0 .647.003.933.008zm3.412 4.695h-2.16a.41.41 0 00-.409.409v3.451h-2.515V7.112a.41.41 0 00-.41-.409H8.015a.41.41 0 00-.409.409v9.468a.41.41 0 00.409.409h2.16a.41.41 0 00.409-.41v-3.576h2.515v3.577a.41.41 0 00.409.409h2.16a.41.41 0 00.409-.41V7.113a.408.408 0 00-.41-.409z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHotelLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.434 21.016c2.014-.036 8.588-.793 8.588-8.989 0-3.549-1.216-6.112-3.608-7.613-1.955-1.227-4.163-1.406-5.022-1.429a32.3 32.3 0 00-.737-.008h-.171c-.854.008-3.045.157-4.972 1.367-2.347 1.476-3.535 4.042-3.535 7.625 0 3.585 1.202 6.16 3.571 7.655 1.944 1.224 4.154 1.384 5.014 1.398.098.003.196.003.295.003l.577-.009zM12.41 2.167c1.927.045 9.432.807 9.432 9.86 0 9.073-7.513 9.776-9.393 9.813a36.18 36.18 0 01-.593.005c-.104 0-.208 0-.309-.002-1.977-.031-9.392-.746-9.392-9.874 0-9.115 7.348-9.796 9.322-9.813h.177c.258 0 .524.003.756.011zm3.902 15.163V6.669H13.88v4.347h-3.76V6.67H7.687v10.66h2.434v-4.486h3.759v4.49l2.434-.003zm0-11.48a.82.82 0 01.82.822v10.66a.82.82 0 01-.82.821H13.88a.82.82 0 01-.82-.82v-3.67h-2.12v3.67a.82.82 0 01-.821.82H7.688a.82.82 0 01-.82-.82V6.669a.82.82 0 01.82-.82h2.435a.82.82 0 01.82.82v3.526h2.118V6.67a.82.82 0 01.82-.82c-.002.002 2.432.002 2.432.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconHotelRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.518 2c.252 0 .513.003.737.011 1.927.045 9.431.807 9.431 9.86 0 9.073-7.515 9.776-9.392 9.812-.196.003-.395.006-.59.006-.105 0-.208 0-.31-.003C9.418 21.656 2 20.941 2 11.812 2 2.697 9.347 2.017 11.322 2h.196zm0 1.23h-.185c-2.437.022-8.1.902-8.1 8.582 0 7.695 5.72 8.608 8.179 8.642a35.346 35.346 0 00.863-.003c2.459-.045 8.182-.972 8.182-8.583-.003-7.61-5.757-8.568-8.233-8.63-.235-.006-.47-.008-.706-.008zm4.154 2.815c.588 0 1.067.476 1.067 1.067v9.465c0 .588-.476 1.067-1.067 1.067h-2.16a1.067 1.067 0 01-1.067-1.067v-2.922h-1.204v2.92c0 .587-.48 1.066-1.067 1.064h-2.16a1.067 1.067 0 01-1.067-1.068V7.112c0-.588.476-1.067 1.067-1.067h2.16c.588 0 1.067.476 1.067 1.064v2.799h1.202V7.112c0-.588.476-1.067 1.067-1.067h2.162zm0 1.067h-2.16v3.86h-3.338v-3.86h-2.16v9.465h2.16v-3.986h3.339v3.986h2.16V7.112z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIdCardFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.255 19.29H3.43c-.789 0-1.43-.67-1.43-1.49V6.013c0-.821.641-1.488 1.431-1.488h16.827c.79 0 1.431.667 1.431 1.488V17.8c-.003.82-.644 1.49-1.434 1.49zm-9.392-4.986c.333 0 .602-.28.602-.628a.616.616 0 00-.602-.627H4.622a.614.614 0 00-.602.627c0 .348.271.628.602.628h6.24zm-2.006-3.35c.333 0 .605-.28.605-.628a.617.617 0 00-.605-.627H4.622a.617.617 0 00-.605.627c0 .348.272.628.605.628h4.235zm7.258-2.871c-.569 0-1.014.156-1.32.465-.319.319-.478.795-.478 1.411 0 .617.16 1.09.479 1.41.305.307.75.462 1.319.462.571 0 1.014-.157 1.322-.463.32-.319.482-.795.482-1.411 0-.617-.163-1.09-.482-1.412-.308-.308-.75-.462-1.322-.462zm1.1 4.568h-2.198c-.667 0-1.216.213-1.583.61-.339.368-.515.878-.515 1.474v.625a.21.21 0 00.204.213h5.992a.21.21 0 00.204-.213v-.625c0-.596-.179-1.106-.518-1.473-.372-.398-.919-.61-1.585-.61z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIdCardLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.022 18.045V5.91a.444.444 0 00-.434-.454H3.41a.443.443 0 00-.434.454v12.135c0 .252.196.454.434.454h17.177a.446.446 0 00.434-.454zm-.434-13.451c.691 0 1.255.59 1.255 1.316v12.135c0 .725-.564 1.316-1.255 1.316H3.414c-.695 0-1.258-.59-1.258-1.316V5.91c0-.725.563-1.316 1.255-1.316h17.177zm-9.591 8.776a.42.42 0 01.409.431.42.42 0 01-.41.431H4.334a.422.422 0 01-.412-.431.42.42 0 01.409-.431h6.667zm-6.664-2.586a.42.42 0 01-.41-.431c0-.238.186-.432.41-.432h4.52a.42.42 0 01.41.432.42.42 0 01-.41.431h-4.52zm11.543-1.426c-.157.163-.19.465-.19.692 0 .224.033.527.19.687.154.154.434.187.644.187.21 0 .493-.033.647-.187.127-.13.194-.359.194-.687 0-.327-.065-.56-.194-.689-.156-.16-.437-.193-.647-.193-.21 0-.49.034-.644.19zm.642 2.426c-.524 0-.933-.145-1.213-.431-.294-.294-.443-.734-.443-1.305 0-.572.149-1.014.443-1.311.28-.286.692-.432 1.213-.432.523 0 .932.146 1.215.432.294.297.446.74.446 1.31 0 .572-.149 1.012-.446 1.306-.283.288-.692.431-1.215.431zm-2.118 2.61h4.24c-.01-.218-.064-.487-.246-.683-.23-.249-.596-.3-.865-.3h-2.023c-.269 0-.638.054-.862.3-.177.194-.233.465-.244.684zm3.129-1.848c.613 0 1.117.196 1.456.566.314.342.48.812.48 1.367v.577a.194.194 0 01-.188.199h-5.513a.194.194 0 01-.188-.2v-.576c0-.555.166-1.025.477-1.367.339-.373.843-.566 1.456-.566h2.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIdCardRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.431 5.78a.228.228 0 00-.224.233V17.8a.228.228 0 00.224.232h16.827a.228.228 0 00.224-.232V6.013a.228.228 0 00-.224-.233H3.43zm16.824 13.51H3.43c-.789 0-1.43-.67-1.43-1.49V6.013c0-.821.641-1.488 1.431-1.488h16.827c.79 0 1.431.667 1.431 1.488V17.8c-.003.82-.644 1.49-1.434 1.49zm-9.392-4.986H4.622a.614.614 0 01-.602-.628c0-.347.271-.627.602-.627h6.24c.334 0 .603.28.603.627a.616.616 0 01-.602.628zm-2.006-3.35H4.622a.617.617 0 01-.605-.628c0-.347.272-.627.605-.627h4.235c.333 0 .605.28.605.627a.62.62 0 01-.605.628zm7.258-2.871c.568 0 1.014.156 1.322.465.32.319.482.795.482 1.411 0 .617-.163 1.09-.482 1.412-.308.308-.754.462-1.322.462-.569 0-1.014-.157-1.32-.462-.319-.32-.478-.793-.478-1.412 0-.616.16-1.09.479-1.409.308-.313.753-.467 1.319-.467zm0 1.086c-.163 0-.454.02-.591.16-.14.14-.163.457-.163.63 0 .174.023.488.16.625.104.104.314.16.594.16.283 0 .496-.056.6-.16.14-.14.159-.45.159-.625 0-.173-.02-.487-.163-.627-.14-.14-.43-.163-.596-.163zm1.1 3.482c.667 0 1.216.213 1.586.61.34.368.518.878.518 1.474v.625a.21.21 0 01-.204.213h-5.992a.205.205 0 01-.204-.21v-.628c0-.596.179-1.106.515-1.473.367-.398.916-.61 1.583-.61h2.199zm0 1.09h-2.198c-.263 0-.62.048-.83.277a.908.908 0 00-.207.468h4.27a.878.878 0 00-.208-.468c-.207-.23-.566-.277-.826-.277z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconImageFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.839 13.408a.626.626 0 00-.115-.872l-3.246-2.507a.61.61 0 00-.757.009l-3.711 2.977-.896-.854a.61.61 0 00-.816-.025l-5.277 4.44a.627.627 0 00-.078.876.608.608 0 00.865.082l4.86-4.087 3.378 3.213a.61.61 0 00.869-.026.628.628 0 00-.026-.88l-1.969-1.873 3.196-2.566 2.866 2.213a.61.61 0 00.857-.12zM7.046 6.606c-1.243 0-2.255 1.023-2.255 2.278a2.267 2.267 0 002.255 2.277c1.244 0 2.255-1.022 2.255-2.277 0-1.255-1.011-2.278-2.255-2.278zm13.367-2.084c.743 0 1.42.583 1.42 1.224v12.317c0 .641-.677 1.224-1.42 1.224H3.567c-.756 0-1.417-.574-1.417-1.224l.003-12.317c0-.652.664-1.224 1.417-1.224h16.843zM7.046 9.92a1.031 1.031 0 01-1.025-1.033c0-.572.46-1.034 1.025-1.034a1.035 1.035 0 010 2.067z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconImageLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.016 18.04V5.728c0-.135-.272-.395-.6-.395H3.57c-.33 0-.596.238-.596.395L2.97 18.043c0 .157.269.395.6.395h16.848c.325-.002.597-.263.597-.397zm-.6-13.54c.745 0 1.42.583 1.42 1.224v12.317c0 .638-.678 1.224-1.42 1.224H3.567c-.753.003-1.417-.572-1.417-1.224l.003-12.317c0-.653.664-1.224 1.42-1.224h16.843zM7.05 7.62c-.678 0-1.23.558-1.23 1.241 0 .687.552 1.241 1.23 1.241.678 0 1.23-.557 1.23-1.24 0-.684-.552-1.242-1.23-1.242zm0 3.314c-1.131 0-2.05-.93-2.05-2.07 0-1.14.919-2.07 2.05-2.07 1.132 0 2.05.93 2.05 2.07 0 1.14-.918 2.07-2.05 2.07zm9.308-.765l3.247 2.507a.42.42 0 01.078.583.407.407 0 01-.571.079l-.003-.003-2.994-2.311-3.507 2.818 2.142 2.039c.166.157.174.42.017.585a.407.407 0 01-.574.023l-.006-.006-3.507-3.336-5 4.202a.405.405 0 01-.574-.05l-.003-.003a.416.416 0 01.054-.583l5.277-4.44a.407.407 0 01.543.017l1.026.975 3.851-3.09a.408.408 0 01.504-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconImageRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.245 18.08c.193 0 .367-.146.39-.207l-.003-11.956a.555.555 0 00-.384-.182H3.741c-.21 0-.364.132-.387.19v11.973c.014.045.171.182.387.182h16.504zm0-13.558c.832 0 1.591.664 1.591 1.393v11.98c0 .728-.759 1.392-1.59 1.392H3.74c-.863 0-1.591-.639-1.591-1.392V5.915c0-.754.728-1.393 1.591-1.393h16.504zM7.15 7.962a1.006 1.006 0 000 2.011 1.006 1.006 0 000-2.01zm0 3.221a2.216 2.216 0 010-4.43c1.218 0 2.207.993 2.207 2.215a2.213 2.213 0 01-2.207 2.215zm9.24-1.103l3.18 2.44a.609.609 0 01.112.848.603.603 0 01-.846.112l-2.806-2.154-3.132 2.496 1.933 1.824c.24.227.255.61.025.854a.597.597 0 01-.852.025l-3.308-3.123-4.759 3.975a.598.598 0 01-.849-.078.607.607 0 01.079-.852l5.168-4.317a.6.6 0 01.798.025l.88.83 3.636-2.9a.605.605 0 01.742-.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconImportarRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.335 9.564a.842.842 0 01-.597-1.44l5.717-5.728a.847.847 0 011.194 0l5.65 5.655a.845.845 0 01-1.171 1.216c-.009-.006-.014-.014-.023-.022l-4.21-4.213v11.05a.845.845 0 01-1.689 0V5.032L6.929 9.315a.835.835 0 01-.594.249zm14.658 6.498c.465 0 .843.379.843.844v4.086a.844.844 0 01-.843.844h-18a.844.844 0 01-.843-.844v-4.086a.845.845 0 011.69 0v3.243h16.313v-3.243a.84.84 0 01.84-.844z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconImportLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.648 2.322a.746.746 0 01.185-.126c.14-.061.3-.061.44 0a.9.9 0 01.195.126l5.791 5.79a.583.583 0 01-.823.825L12.63 4.129v12.08a.581.581 0 01-1.16 0V4.13L6.574 9.04a.583.583 0 01-.824-.823l5.898-5.895zm9.612 14.153c.32 0 .58.26.58.58v4.205c0 .32-.26.58-.58.58H2.73a.58.58 0 01-.58-.58v-4.205a.581.581 0 011.16 0v3.625h17.373v-3.625c0-.322.258-.58.577-.58z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInfinityLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.97 15.122h-.018c-1.627-.006-4.397-2.146-5.501-3.188 1.106-1.042 3.885-3.188 5.513-3.188h.005c.93.003 1.653.28 2.143.827.493.546.74 1.342.737 2.37-.003 2.05-1.028 3.179-2.88 3.179m-12.25 0h-.016c-.924 0-1.641-.275-2.132-.812-.495-.541-.747-1.337-.75-2.365-.003-1.025.243-1.823.736-2.37C4.05 9.03 4.77 8.753 5.7 8.75h.006c1.627 0 4.406 2.143 5.513 3.188-1.101 1.036-3.869 3.18-5.5 3.185M20.703 8.93c-.644-.715-1.585-1.093-2.728-1.096h-.009c-2.103 0-5.128 2.544-6.126 3.488-1-.944-4.022-3.488-6.126-3.488h-.008c-1.143.003-2.087.384-2.728 1.096-.642.714-.98 1.756-.978 3.016.003 1.26.347 2.303.994 3.012.645.705 1.583 1.078 2.718 1.078h.016c2.107-.008 5.118-2.546 6.115-3.487.997.94 4.011 3.479 6.112 3.487h.02c2.316 0 3.703-1.527 3.711-4.09-.002-1.257-.341-2.302-.983-3.016"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInfinityRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.849 14.735h-.014c-1.462-.005-3.919-1.792-5.073-2.8 1.157-1.012 3.619-2.805 5.084-2.805h.006c.854.003 1.512.244 1.955.72.442.476.664 1.18.664 2.09-.009 1.832-.914 2.795-2.622 2.795m-11.997 0h-.014c-1.71 0-2.614-.966-2.62-2.792-.002-.914.222-1.617.664-2.09.443-.476 1.098-.717 1.956-.72h.005c1.468 0 3.93 1.793 5.084 2.804-1.154 1.006-3.61 2.793-5.075 2.798m14.817-5.798C20 8.22 19.025 7.839 17.852 7.833h-.009c-2.033 0-4.89 2.252-6 3.238-1.11-.986-3.963-3.238-6.003-3.238h-.008c-1.174.003-2.148.387-2.818 1.104-.667.717-1.017 1.756-1.014 3.008.008 2.56 1.443 4.09 3.838 4.09h.016c2.034-.006 4.88-2.252 5.99-3.238 1.108.983 3.954 3.232 5.988 3.238h.017c2.398 0 3.832-1.527 3.837-4.09.003-1.252-.347-2.291-1.017-3.008"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInfomationRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 6.166a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zm0 4.168c-.69 0-1.25.597-1.25 1.332v4c0 .738.56 1.334 1.25 1.334s1.25-.598 1.25-1.334v-4c0-.735-.56-1.332-1.25-1.332zM12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18.334A8.342 8.342 0 013.666 12 8.343 8.343 0 0112 3.666 8.342 8.342 0 0120.334 12 8.342 8.342 0 0112 20.334z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInformationUserFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.854 8.583a.656.656 0 11.002-1.313.656.656 0 01-.002 1.313zm.608 7.829a.616.616 0 01-1.232 0v-6.4a.616.616 0 011.232 0v6.4zm-.168-14.41C12.194 2 12.09 2 11.986 2c-.207 0-.415.003-.594.006C9.515 2.039 2 2.746 2 11.818c0 9.05 7.504 9.812 9.431 9.86.227.005.49.011.745.011h.188c1.975-.017 9.322-.695 9.322-9.81 0-9.134-7.417-9.848-9.392-9.876z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInformationUserLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.484 19.654c2.347-1.476 3.538-4.042 3.538-7.622 0-3.585-1.202-6.162-3.572-7.655-1.944-1.225-4.154-1.387-5.014-1.398a30.299 30.299 0 00-.874.003c-2.014.036-8.585.795-8.585 8.991 0 3.55 1.213 6.112 3.608 7.61 1.955 1.228 4.165 1.407 5.022 1.43.222.005.476.008.723.008h.182c.854-.009 3.048-.157 4.972-1.367zM12.448 2.158c1.977.028 9.395.742 9.395 9.874 0 9.115-7.348 9.793-9.323 9.81h-.187c-.252 0-.516-.003-.743-.009-1.93-.047-9.434-.81-9.434-9.86 0-9.073 7.513-9.778 9.392-9.812.3-.006.6-.006.9-.003zm-.443 7.6a.41.41 0 01.409.408v6.398a.41.41 0 01-.818 0V10.17a.408.408 0 01.409-.411zm-.006-2.325A.638.638 0 1112 8.709a.638.638 0 010-1.276z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInformationUserRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.353 20.457c2.437-.023 8.104-.902 8.104-8.583 0-7.695-5.72-8.608-8.183-8.642a29.336 29.336 0 00-.86.003c-2.462.045-8.184.972-8.184 8.58 0 7.61 5.756 8.572 8.232 8.63.219.006.47.009.714.009 0 .003.177.003.177.003zM12.294 2c1.978.028 9.392.745 9.392 9.874 0 9.118-7.347 9.795-9.322 9.812h-.188c-.252 0-.515-.003-.742-.011C9.504 21.63 2 20.868 2 11.815c0-9.07 7.513-9.776 9.392-9.81.3-.005.602-.005.902-.005zm-.445 7.395c.339 0 .616.274.616.616v6.398a.616.616 0 01-1.233 0V10.01c0-.339.278-.616.617-.616zm.005-2.123a.653.653 0 01.678.633.653.653 0 01-.633.678h-.047a.658.658 0 01-.634-.678.662.662 0 01.636-.633z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.854 16.316v.003h4.177c-.437 1.182-1.079 2.18-1.913 2.986-1.583 1.524-3.846 2.34-6.734 2.423v-.056c.585-.112 1.148-.375 1.686-.781.678-.516 1.286-1.247 1.798-2.168.404-.72.731-1.533.986-2.407zm-10.277 0c.255.877.585 1.687.986 2.407.515.921 1.12 1.652 1.798 2.168.603.456 1.241.73 1.902.815v.017c-2.837-.101-5.067-.914-6.63-2.42-.837-.804-1.473-1.804-1.91-2.987zm4.686 0v4.244c-1.008-.19-1.96-1.025-2.72-2.392a10.098 10.098 0 01-.792-1.852h3.512zm4.423.003a10.38 10.38 0 01-.792 1.852c-.71 1.269-1.58 2.075-2.51 2.342v-4.194zm-4.423-7.148v5.95H7.431a15.43 15.43 0 01-.336-3.247c0-.908.076-1.81.23-2.703h3.938zm-5.075-.003a17.129 17.129 0 00-.213 2.703c-.003 1.09.1 2.177.31 3.247H2.362c-.232-.98-.347-2.062-.347-3.244.003-.972.081-1.871.235-2.706zm9.921.003c.154.89.233 1.795.23 2.7a15.41 15.41 0 01-.336 3.247h-3.62V9.17zm5.395-.003c.157.835.235 1.737.235 2.706 0 1.182-.114 2.263-.347 3.244h-4.24a17.132 17.132 0 00.095-5.95zm-10.24-5.986V8.05H7.568c.238-.91.565-1.747.972-2.476.762-1.367 1.714-2.199 2.722-2.392zm1.12.05c.93.264 1.8 1.073 2.51 2.342.406.729.733 1.566.972 2.476h-3.482zM11.266 2.02v.02c-.661.086-1.3.358-1.902.814-.678.516-1.283 1.247-1.798 2.168-.496.888-.883 1.914-1.151 3.028h-3.9c.432-1.456 1.138-2.663 2.118-3.607C6.196 2.936 8.426 2.12 11.266 2.02zm1.115-.003c2.888.087 5.154.899 6.737 2.426.977.946 1.686 2.15 2.117 3.607H17.02c-.27-1.114-.656-2.14-1.152-3.028-.512-.924-1.117-1.652-1.798-2.168-.535-.409-1.1-.67-1.686-.781h-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.994 2.156c3.14 0 5.574.813 7.24 2.418 1.726 1.663 2.603 4.162 2.603 7.425 0 1.523-.19 2.875-.567 4.053a.137.137 0 01.004.037.28.28 0 01-.08.196c-1.268 3.647-4.385 5.55-9.2 5.55-6.434 0-9.838-3.401-9.838-9.838 0-6.437 3.4-9.84 9.838-9.84zm8.58 14.213h-3.727a11.47 11.47 0 01-1.004 2.448c-.608 1.08-1.335 1.881-2.133 2.368 3.499-.383 5.793-1.995 6.864-4.816zm-8.926 0l-4.247.001c.239.791.543 1.524.91 2.176.91 1.618 2.089 2.544 3.338 2.627v-4.805zm4.614 0h-4.025v4.78c1.167-.172 2.261-1.082 3.115-2.603.367-.653.671-1.385.91-2.176zm-9.446 0H3.417c1.028 2.71 3.187 4.305 6.456 4.765-.767-.49-1.466-1.273-2.053-2.317-.41-.73-.747-1.555-1.004-2.447zm-.283-7.62H3.07c-.235.968-.354 2.05-.354 3.248 0 1.436.17 2.707.51 3.813h3.442a16.28 16.28 0 01-.445-3.833c0-1.116.106-2.204.31-3.228zm5.115 0H7.107a16.007 16.007 0 00-.32 3.228c0 1.345.158 2.645.459 3.833l4.402-.002V8.75zm4.908 0h-4.319v7.06h4.18c.3-1.186.46-2.486.46-3.832 0-1.12-.11-2.21-.321-3.228zm4.366 0h-3.793a16.58 16.58 0 01.31 3.228c0 1.34-.152 2.637-.443 3.833l3.77-.001c.338-1.105.508-2.376.508-3.812 0-1.198-.117-2.28-.352-3.248zM9.799 2.867l-.217.034c-3.322.548-5.45 2.318-6.358 5.288h3.432c.27-1.125.662-2.16 1.164-3.052.568-1.01 1.241-1.777 1.979-2.27zm2.44-.062l-.002 5.384h4.191c-.256-1.024-.618-1.965-1.076-2.78-.854-1.525-1.946-2.433-3.114-2.604zm1.543.009l.142.094c.715.495 1.366 1.247 1.919 2.229.5.893.893 1.927 1.163 3.052h3.762c-.963-3.153-3.3-4.953-6.986-5.375zm-2.134-.033l.183-.006c-1.316 0-2.568.936-3.52 2.633-.459.816-.82 1.757-1.077 2.782h4.414V2.78z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetPendriveFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.75 6.56c-5.75 0-8.548 2.855-8.548 8.731a.607.607 0 01-.6.614A.607.607 0 012 15.29c0-6.515 3.373-9.958 9.75-9.958a.607.607 0 01.603.614.607.607 0 01-.602.613zm.583 2.703a.607.607 0 01-.6.614c-3.59 0-5.335 1.784-5.335 5.45a.605.605 0 01-.6.614h-.002a.607.607 0 01-.603-.613v-.003c0-4.37 2.26-6.678 6.54-6.678a.615.615 0 01.6.616zm8.152 7.544v-2.941a.158.158 0 00-.126-.149h-.748v3.241h.736c.076 0 .138-.067.138-.151zm-.149-4.317c.728 0 1.333.61 1.35 1.364v2.953c0 .759-.602 1.378-1.339 1.378h-.804a1.542 1.542 0 01-1.462 1.092H12.23c-2.3-.084-3.62-1.518-3.62-3.93 0-2.417 1.32-3.846 3.623-3.921h5.84c.672 0 1.244.445 1.454 1.064h.81zm-8.675 2.14c-.448 0-.74.238-.74.75 0 .247.068.43.188.553.13.134.32.199.552.199.233 0 .423-.065.552-.2.12-.123.188-.305.188-.551 0-.513-.292-.75-.74-.75z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetPendriveLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.705 14.462c.41 0 .673.219.673.69 0 .226-.062.394-.171.51-.118.122-.292.181-.505.181-.212 0-.386-.059-.504-.182-.109-.115-.17-.283-.17-.51.002-.47.268-.689.677-.689zm.608-9.039c0 .232-.182.42-.409.42-6.011 0-8.93 3.011-8.93 9.205a.416.416 0 01-.409.423.414.414 0 01-.409-.423C2.156 8.38 5.436 5 11.904 5c.227.003.41.19.41.423zm-.017 3.42c0 .233-.182.42-.409.42-3.804 0-5.652 1.908-5.652 5.827 0 .232-.182.42-.41.42a.414.414 0 01-.408-.42c0-4.365 2.238-6.67 6.47-6.67.224 0 .41.188.41.423zm8.729 7.77v-3.028a.369.369 0 00-.323-.36h-.98v3.755h.96c.189-.002.343-.168.343-.367zm-2.659 1.49c.3 0 .547-.257.547-.57v-.135h-.009v-4.703a.56.56 0 00-.546-.572h-5.941c-1.785.06-2.695 1.065-2.695 2.986 0 1.922.91 2.927 2.709 2.995h5.935zm2.306-5.728c.633 0 1.157.538 1.17 1.2v3.038c0 .664-.52 1.208-1.162 1.208h-.98c-.13.641-.678 1.126-1.336 1.126h-5.967c-2.255-.084-3.498-1.448-3.498-3.838 0-2.395 1.243-3.756 3.498-3.829h5.955c.647 0 1.19.47 1.33 1.098h.323v-.003h.667z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetPendriveRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.69 14.63c.447 0 .739.238.739.75 0 .247-.068.43-.188.553-.129.134-.32.199-.552.199-.232 0-.423-.065-.552-.2-.12-.122-.187-.305-.187-.551 0-.513.29-.75.74-.75zm.089-8.07c-5.754 0-8.55 2.857-8.55 8.731a.607.607 0 01-.602.614.607.607 0 01-.602-.614c0-6.515 3.373-9.958 9.75-9.958a.61.61 0 01.603.614.605.605 0 01-.6.613zm.582 2.703a.607.607 0 01-.602.614c-3.59 0-5.336 1.784-5.336 5.45a.607.607 0 01-.602.614.61.61 0 01-.603-.613c0-4.37 2.261-6.678 6.541-6.678.333 0 .602.274.602.613zm8.152 7.544v-2.941a.161.161 0 00-.126-.149h-.748v3.241h.74c.072 0 .134-.067.134-.151zm-2.404 1.243a.35.35 0 00.336-.35v-.129h-.008v-4.565c0-.19-.154-.35-.336-.35h-5.82c-1.637.053-2.44.932-2.44 2.694 0 1.756.803 2.642 2.459 2.703h5.81v-.003zm2.258-5.56c.728 0 1.333.61 1.347 1.364v2.953c0 .759-.602 1.378-1.339 1.378h-.804a1.542 1.542 0 01-1.462 1.092h-5.851c-2.303-.084-3.62-1.518-3.62-3.93 0-2.417 1.32-3.846 3.622-3.921h5.84c.673 0 1.247.445 1.455 1.064h.812z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInternetRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.874 2.008c3.132 0 5.569.818 7.244 2.432 1.74 1.675 2.619 4.176 2.619 7.431s-.883 5.756-2.62 7.429c-1.672 1.616-4.109 2.434-7.243 2.434-3.132 0-5.569-.818-7.244-2.432-1.736-1.675-2.616-4.173-2.616-7.428s.882-5.756 2.619-7.431c1.675-1.614 4.11-2.435 7.24-2.435zm-.611 14.268l-3.51.002c.214.66.478 1.274.788 1.826.76 1.355 1.714 2.182 2.722 2.374v-4.202zm4.418.002l-3.298-.002v4.152c.93-.26 1.801-1.063 2.51-2.324.31-.552.574-1.166.788-1.826zm4.163 0H16.85a11.418 11.418 0 01-.983 2.375 7.486 7.486 0 01-1.282 1.707c2.573-.534 4.33-1.898 5.258-4.082zm-13.26 0H3.908c.876 2.065 2.494 3.398 4.843 3.987a7.475 7.475 0 01-1.186-1.612c-.4-.712-.729-1.512-.983-2.375zM6.188 9.17H3.387c-.168.819-.253 1.72-.253 2.704 0 1.221.131 2.316.391 3.283h2.78a16.361 16.361 0 01-.33-3.303c0-.92.073-1.821.214-2.684zm5.074 0H7.324a15.49 15.49 0 00-.229 2.684c0 1.153.121 2.27.353 3.304l3.815-.002V9.17zm4.847 0h-3.727v5.986l3.603.002a15.17 15.17 0 00.353-3.304c0-.926-.078-1.828-.23-2.684zm4.256 0h-3.121c.141.863.214 1.764.214 2.684 0 1.143-.113 2.257-.329 3.303h3.098c.26-.967.391-2.062.391-3.283 0-.984-.085-1.885-.253-2.704zM8.709 3.49l-.168.044c-2.446.673-4.068 2.183-4.854 4.518h2.73c.269-1.103.656-2.118 1.149-2.995A7.668 7.668 0 018.709 3.49zm3.675-.208l-.001 4.77h3.48a10.542 10.542 0 00-.97-2.446c-.709-1.262-1.58-2.064-2.51-2.324zm2.247.112l.094.094a7.53 7.53 0 011.143 1.569c.493.879.88 1.893 1.149 2.994l3.049.001c-.847-2.514-2.664-4.072-5.435-4.658zm-6.09 2.212a10.536 10.536 0 00-.97 2.445h3.692V3.23c-1.007.192-1.96 1.017-2.722 2.375z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIntranetFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.866 17.092h4.156v4.594c-1.705-.412-3.23-2.173-4.156-4.594zM5.86 15.703H2.535C2.185 14.571 2 13.291 2 11.846c0-1.188.123-2.266.359-3.235H5.71a16.768 16.768 0 00.148 7.092zm.395 1.39c.597 1.722 1.462 3.19 2.52 4.243-2.713-.658-4.62-2.073-5.708-4.244h3.188zM7.627 7.22c.894-2.74 2.538-4.778 4.395-5.221V7.22H7.627zm11.6 10.936c-.639 0-1.157.456-1.157 1.017 0 .565.515 1.025 1.157 1.025.63 0 1.146-.457 1.146-1.025 0-.56-.516-1.02-1.146-1.017zm0-14.132c-.639 0-1.157.457-1.157 1.023 0 .56.515 1.016 1.157 1.016.63 0 1.146-.456 1.146-1.016 0-.566-.516-1.023-1.146-1.023zm0 7.093c-.639 0-1.157.459-1.157 1.016 0 .566.515 1.023 1.157 1.023.63 0 1.146-.457 1.146-1.023 0-.557-.516-1.016-1.146-1.016zm-7.205 1.6v1.007h3.149c.358 0 .647.255.655.575l.045 4.291h.98c.3-.924 1.236-1.6 2.373-1.6 1.356 0 2.46.978 2.46 2.183 0 1.201-1.104 2.187-2.46 2.187-1.137 0-2.076-.683-2.372-1.605h-1.628c-.358 0-.655-.257-.655-.574l-.045-4.291H12.02v.815H7.409a15.368 15.368 0 01-.499-3.88c0-1.117.12-2.196.35-3.213h4.762v.723h2.505l.044-4.291c0-.32.297-.577.656-.577h1.627c.3-.922 1.236-1.605 2.373-1.605 1.356 0 2.46.977 2.46 2.187 0 1.205-1.104 2.182-2.46 2.182-1.137 0-2.076-.683-2.373-1.599h-.98l-.045 4.286c-.008.325-.297.582-.655.582h-3.152v1.05h4.832c.297-.915 1.233-1.599 2.373-1.599 1.356 0 2.46.978 2.46 2.182 0 1.21-1.104 2.188-2.46 2.188-1.137 0-2.076-.683-2.373-1.605h-4.832zM6.053 7.22H2.796C3.812 4.7 5.81 3.069 8.767 2.35 7.585 3.534 6.63 5.23 6.053 7.22z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIntranetLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.688 18.263c.723 0 1.311.574 1.311 1.28 0 .711-.588 1.286-1.31 1.286-.732 0-1.32-.575-1.32-1.286.003-.709.591-1.28 1.32-1.28zM8.09 16.476a21.162 21.162 0 013.748-.524v5.028c-1.602-.26-2.989-2.006-3.748-4.504zM4.61 17.91c.79-.532 1.714-.925 2.664-1.213.538 1.787 1.395 3.221 2.44 4.112-2.289-.392-3.986-1.359-5.104-2.9zm-.445-.695c-.706-1.26-1.093-2.835-1.152-4.72h3.605a16.74 16.74 0 00.437 3.41c-1.008.302-2.025.727-2.89 1.31zM4.148 6.81c.89.588 1.899 1.017 2.899 1.32a16.771 16.771 0 00-.429 3.545H3.013c.034-1.95.412-3.568 1.135-4.865zm5.574-3.62c-1.05.9-1.91 2.343-2.454 4.147-.932-.286-1.865-.681-2.672-1.222 1.115-1.55 2.82-2.525 5.126-2.925zm2.118-.173V8.07a21.12 21.12 0 01-3.757-.515c.765-2.515 2.143-4.266 3.757-4.538zm-4.381 8.661c.025-1.179.168-2.302.412-3.327 1.705.417 3.268.515 3.966.54v2.784H7.459v.003zm4.38.818v2.639c-.688.025-2.26.129-3.966.549a15.75 15.75 0 01-.411-3.188h4.378zm7.85-9.151c.722 0 1.31.58 1.31 1.286 0 .706-.588 1.277-1.31 1.277-.732 0-1.32-.571-1.32-1.277.003-.703.591-1.286 1.32-1.286zm0 7.487c.722 0 1.31.575 1.31 1.278 0 .711-.588 1.285-1.31 1.285-.732 0-1.32-.574-1.32-1.285.003-.703.591-1.278 1.32-1.278zm-6.908 1.69h4.79a2.151 2.151 0 002.117 1.697c1.185 0 2.155-.944 2.155-2.107 0-1.154-.967-2.095-2.155-2.095a2.15 2.15 0 00-2.117 1.686h-4.79c-.034 0-.067.017-.1.026v-1.55h3.117c.227 0 .42-.181.42-.408l.05-4.729h1.26c.018 0 .026-.008.043-.008.193.966 1.067 1.695 2.117 1.695 1.185 0 2.155-.941 2.155-2.098 0-1.163-.967-2.104-2.155-2.104-1.05 0-1.924.737-2.117 1.703-.017 0-.025-.008-.042-.008h-1.68a.42.42 0 00-.421.403l-.05 4.734H12.68V2.565a.416.416 0 00-.42-.409c-6.605 0-10.104 3.41-10.104 9.846 0 .017 0 .042.009.065-.009.008-.009.008-.009.016 0 0 .009.009.009.017.008 2.359.495 4.308 1.437 5.824a.542.542 0 00.075.157c.017.025.05.033.067.05 1.63 2.44 4.488 3.712 8.516 3.712.235 0 .42-.183.42-.41v-6.618h2.698l.05 4.733a.422.422 0 00.42.404h1.68c.018 0 .026 0 .043-.009.193.967 1.067 1.703 2.117 1.703 1.185 0 2.155-.944 2.155-2.106 0-1.157-.967-2.098-2.155-2.098-1.05 0-1.924.731-2.117 1.695-.017 0-.025-.009-.042-.009h-1.26l-.051-4.728a.415.415 0 00-.42-.409H12.68v-1.49a.33.33 0 00.1.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconIntranetRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.367 18.17c.6 0 1.087.474 1.087 1.06 0 .577-.485 1.05-1.087 1.05-.594 0-1.079-.473-1.079-1.05a1.07 1.07 0 011.079-1.06zM8.263 16.376a20.98 20.98 0 013.21-.45v4.462c-1.35-.353-2.518-1.869-3.21-4.012zM4.9 17.672c.658-.417 1.415-.73 2.18-.98.462 1.403 1.111 2.585 1.901 3.45-1.77-.422-3.128-1.248-4.08-2.47zm-1.638-5.151h3.12c.042 1.059.174 2.07.386 3.008-.87.272-1.745.636-2.518 1.118-.585-1.123-.924-2.504-.988-4.126zm.969-5.465c.79.49 1.664.852 2.526 1.123-.213.98-.353 2.031-.386 3.138H3.252c.056-1.678.387-3.099.978-4.261zM8.99 3.541c-.799.865-1.448 2.053-1.91 3.476-.765-.25-1.522-.563-2.197-.989.953-1.235 2.32-2.062 4.107-2.487zm2.484-.25V7.78a20.8 20.8 0 01-3.21-.44c.692-2.16 1.852-3.686 3.21-4.048zm-3.868 8.026a16.2 16.2 0 01.336-2.818c1.474.344 2.807.45 3.53.481v2.337H7.605zm3.868 1.204v2.199c-.725.042-2.058.16-3.52.49a14.229 14.229 0 01-.337-2.689h3.857zm7.894-8.958c.6 0 1.087.473 1.087 1.05 0 .586-.485 1.06-1.087 1.06a1.07 1.07 0 01-1.079-1.06c0-.574.485-1.05 1.079-1.05zm0 7.33c.6 0 1.087.474 1.087 1.06 0 .585-.485 1.058-1.087 1.058a1.07 1.07 0 01-1.079-1.059 1.07 1.07 0 011.079-1.058zm-2.224 1.662a2.303 2.303 0 002.221 1.66c1.283 0 2.32-1.019 2.32-2.263 0-1.243-1.037-2.263-2.32-2.263-1.062 0-1.95.706-2.221 1.661h-4.437v-1.1h2.857a.614.614 0 00.616-.595l.042-4.44h.922a2.303 2.303 0 002.221 1.662c1.283 0 2.32-1.011 2.32-2.264 0-1.243-1.037-2.254-2.32-2.254-1.062 0-1.95.705-2.221 1.652h-1.53a.61.61 0 00-.616.602l-.047 4.432H12.71V2.602A.604.604 0 0012.095 2c-6.6 0-10.09 3.403-10.09 9.838v.098c.017 2.4.519 4.366 1.482 5.89.017.031.026.073.05.096.018.016.034.016.043.03 1.622 2.457 4.484 3.731 8.518 3.731a.606.606 0 00.616-.602v-6.28h2.238L15 19.238c0 .328.28.594.616.594h1.532a2.296 2.296 0 002.222 1.653c1.283 0 2.319-1.012 2.319-2.255 0-1.244-1.036-2.264-2.32-2.264-1.06 0-1.949.706-2.22 1.661h-.922l-.042-4.437a.614.614 0 00-.616-.593H12.71v-1.042h4.432z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoiceDigitalFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.098 17.62a.561.561 0 010 1.12H2.594a.562.562 0 01-.56-.56c0-.307.252-.56.56-.56h18.504zM18.401 4.508c1.1 0 1.94.328 2.504.972.52.6.787 1.468.787 2.583v4.941c0 1.115-.263 1.983-.787 2.583-.563.641-1.406.969-2.504.969H5.29c-1.1 0-1.94-.328-2.504-.972-.52-.6-.787-1.468-.787-2.583V8.063c0-1.115.266-1.983.787-2.583.563-.644 1.406-.972 2.504-.972zm-5.986 2.045H9.613c-.386 0-.647.258-.647.644v6.648c0 .389.26.65.647.65h4.474a.612.612 0 00.638-.64V8.87a.426.426 0 00-.123-.3l-1.89-1.894a.42.42 0 00-.297-.123zm-.376.843v.675c0 .723.387 1.171 1.006 1.171h.84v4.415H9.807v-6.26h2.232zm1.135 4.751h-2.65a.28.28 0 00-.28.28c0 .154.126.28.28.28h2.647a.283.283 0 00.283-.28.28.28 0 00-.28-.28zm0-1.134h-2.65a.28.28 0 00-.28.28c0 .154.126.28.28.28h2.647a.283.283 0 00.283-.28.28.28 0 00-.28-.28zm0-1.135h-2.65a.28.28 0 00-.28.28c0 .154.126.28.28.28h2.647a.28.28 0 00.28-.28.279.279 0 00-.277-.28zm-.575-2.12l.925.924h-.48c-.293 0-.445-.207-.445-.61v-.314z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoiceDigitalLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.554 18.268a.28.28 0 01.28.28.28.28 0 01-.28.28H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h19.118zM18.831 5.125c1.014 0 1.785.294 2.292.874.476.546.72 1.353.72 2.398v4.938c0 1.045-.241 1.852-.72 2.398-.507.582-1.278.877-2.292.877H5.176c-1.014 0-1.784-.295-2.291-.874-.48-.55-.72-1.356-.72-2.4v-4.94c0-1.044.24-1.85.72-2.397.507-.58 1.277-.874 2.29-.874h13.656zm0 .56H5.176c-1.672 0-2.451.863-2.451 2.715v4.938c0 1.851.779 2.714 2.45 2.714h13.656c1.673 0 2.451-.863 2.451-2.714V8.397c0-1.852-.778-2.712-2.45-2.712zm-6.26 1.496a.29.29 0 01.199.081l1.89 1.894c.057.056.084.13.082.203v4.693c0 .297-.2.499-.499.499H9.77c-.308 0-.507-.202-.507-.51V7.685c0-.305.199-.504.507-.504h2.8zm-.28.56H9.822v6.25h4.358V9.634h-.887c-.62 0-1.003-.447-1.003-1.17V7.74zm1.039 4.737a.28.28 0 01.28.28c0 .154-.129.28-.283.28H10.68a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm0-1.135a.28.28 0 01.28.28c0 .155-.129.28-.283.28H10.68a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm0-1.134a.28.28 0 01.28.28c0 .154-.129.28-.283.28H10.68a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm-.48-2.07v.325c0 .403.15.61.444.61h.49l-.933-.935z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoiceDigitalRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.098 17.62a.561.561 0 010 1.12H2.594a.562.562 0 01-.56-.56c0-.307.252-.56.56-.56h18.504zM18.401 4.508c1.098 0 1.94.328 2.504.972.524.6.787 1.468.787 2.583v4.938c0 1.115-.266 1.984-.787 2.583-.563.644-1.406.972-2.504.972H5.29c-1.098 0-1.94-.328-2.504-.97-.52-.601-.787-1.47-.787-2.585V8.063c0-1.115.266-1.983.787-2.583.563-.644 1.403-.972 2.504-.972H18.4zm0 1.12l-13.11.004c-.773 0-1.313.193-1.658.588-.339.386-.513 1.008-.513 1.843v4.938c0 .835.174 1.457.513 1.846.345.395.888.589 1.658.589h13.11c.77 0 1.313-.194 1.658-.589.339-.389.512-1.01.512-1.846V8.063c0-.835-.173-1.457-.512-1.846-.345-.395-.888-.588-1.658-.588zm-5.986.928a.42.42 0 01.296.123l1.891 1.894a.42.42 0 01.123.297v4.989a.612.612 0 01-.638.638H9.613c-.386 0-.647-.26-.647-.65V7.2c0-.386.26-.644.647-.644h2.802zm-.374.84H9.807v6.26h4.078V9.242l-.84.001c-.62 0-1.003-.448-1.003-1.17l-.001-.677zm1.133 4.751a.28.28 0 01.28.28c0 .154-.13.28-.283.28h-2.647a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm0-1.134a.28.28 0 01.28.28c0 .154-.13.28-.283.28h-2.647a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm0-1.138a.28.28 0 01.28.28c0 .155-.13.28-.283.28h-2.647a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.65zm-.572-2.116v.312c0 .404.149.611.443.611h.478l-.921-.923z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoicePlanFileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.845 7.336l-5.463-5.182A.56.56 0 0013 2H5.618c-.569 0-1.107.538-1.107 1.106v17.48c0 .588.518 1.106 1.107 1.106h12.297c.588 0 1.106-.518 1.106-1.107V7.742a.56.56 0 00-.176-.406zM15.31 18.681H8.209a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56h7.1a.56.56 0 010 1.12zm0-3.006H8.209a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1a.561.561 0 010 1.12zm0-3.003H8.209a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1a.561.561 0 010 1.12zm.14-4.944c-.653 0-1.2-.204-1.583-.588-.384-.384-.588-.933-.588-1.583V3.6l4.353 4.13H15.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoicePlanFileLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.364 2.156c.024 0 .046.003.068.009l-.068-.009a.279.279 0 01.184.07.09.09 0 01.015.011L19.025 7.7a.24.24 0 01.052.072l.008.019c.006.013.01.027.014.04a.312.312 0 01.007.068v13.109c0 .44-.386.826-.826.826H5.717c-.431 0-.826-.395-.826-.826V2.983c0-.418.409-.827.826-.827h7.647zm-.28.56H5.717c-.106 0-.266.16-.266.267v18.025c0 .12.146.266.266.266H18.28c.129 0 .266-.137.266-.266V8.178h-2.45c-.88 0-1.634-.288-2.18-.831-.546-.544-.832-1.297-.832-2.18v-2.45zm3.011 15.28a.28.28 0 01.28.28.28.28 0 01-.28.28H7.902a.28.28 0 01-.28-.28.28.28 0 01.28-.28h8.193zm0-3.002a.28.28 0 01.28.28.28.28 0 01-.28.28H7.902a.28.28 0 01-.28-.28.28.28 0 01.28-.28h8.193zm0-3.006a.28.28 0 01.28.28.28.28 0 01-.28.28H7.902a.28.28 0 01-.28-.28.28.28 0 01.28-.28h8.193zm2.056-4.37l-4.507-4.507v2.056c0 1.488.964 2.451 2.451 2.451h2.056z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconInvoicePlanFileRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.999 2c.142 0 .282.056.386.154l5.462 5.182a.557.557 0 01.174.406v12.843c0 .589-.518 1.107-1.106 1.107H5.618c-.589 0-1.107-.518-1.107-1.107V3.106C4.511 2.538 5.05 2 5.618 2h7.38zm-.84 1.12H5.653a.085.085 0 00-.022.023V20.56a.033.033 0 00.014.011h12.249l.006-.005V8.848h-2.45c-.956 0-1.78-.316-2.376-.915-.596-.6-.916-1.42-.916-2.376V3.12zm3.15 14.44a.561.561 0 010 1.12h-7.1a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1zm0-3.003a.561.561 0 010 1.12h-7.1a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1zm0-3.005a.561.561 0 010 1.12h-7.1a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1zm-2.03-7.954v1.96c0 .652.204 1.198.588 1.582.384.384.933.588 1.583.588h2.181l-4.353-4.13z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconJusticeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.796 7.667l2.333 5.666h-4.042l1.709-5.666zM7.599 13.333H3.557l2.334-5.666 1.708 5.666zm14.087.645c0-.028-.01-.054-.017-.084-.008-.06-.01-.115-.033-.169l-2.953-7.168c.135.056.258.126.353.219a.596.596 0 00.872-.02.67.67 0 00-.017-.913c-.437-.437-1.031-.678-1.768-.714-.059-.003-3.333-.006-5.232-.006.073-.05.143-.1.207-.165.283-.286.426-.709.426-1.255 0-.552-.143-.975-.426-1.26-.272-.278-.667-.418-1.17-.418-.006 0-.012 0-.015.003v-.003h-.145c-.507 0-.9.14-1.171.418-.283.285-.429.708-.429 1.26 0 .546.143.97.429 1.255.061.062.131.115.207.165-1.902 0-5.177 0-5.235.006-.734.036-1.33.277-1.768.714a.667.667 0 00-.02.913.601.601 0 00.874.02c.093-.093.219-.163.35-.219l-2.952 7.168a.582.582 0 00-.033.169c-.003.028-.017.056-.017.084v.002c0 .92.258 1.642.762 2.149.428.431 1.005.675 1.717.725a64.966 64.966 0 002.011.006c.75-.036 1.359-.28 1.807-.728.493-.496.745-1.2.759-2.082 0-.005 0-.01.003-.016l.002-.054c0-.036-.014-.067-.02-.1-.005-.031 0-.062-.01-.096L6.812 6.417c.913 0 2.182 0 3.255-.002V18.35H8.622c-.793 0-1.423.235-1.88.698-.473.479-.714 1.16-.714 2.02 0 .355.277.643.62.643.016 0 .035-.008.052-.01.02.002.034.01.054.01h10.19c.017 0 .036-.008.053-.01.02.002.034.01.056.01a.632.632 0 00.62-.644c0-.863-.242-1.54-.718-2.02-.456-.462-1.09-.697-1.882-.697h-1.446V6.415c1.073 0 2.342 0 3.258.002l-2.224 7.367c-.008.034-.003.065-.008.096-.006.033-.02.064-.02.1 0 .017.003.034.003.054 0 .005 0 .01.003.016.014.883.266 1.586.759 2.082.448.448 1.053.692 1.804.728a64.969 64.969 0 002.011-.006c.711-.05 1.288-.294 1.717-.725.501-.51.756-1.233.756-2.151z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconJusticeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.554 15.557c-.258.26-.633.409-1.112.442a56.51 56.51 0 01-1.003.006c-.059 0-.868 0-.947-.003-.507-.025-.902-.173-1.17-.445-.236-.233-.381-.569-.44-.992l5.106.003c-.056.423-.201.756-.434.989zM18.033 6.99l2.77 6.717-4.798-.003 2.028-6.714zM15.26 19.716c.535 0 .938.135 1.204.407.202.207.33.493.387.862H7.139c.056-.367.185-.655.387-.862.266-.27.672-.407 1.204-.407h6.53zm-4-13.577h1.47v12.72h-1.47V6.14zm.165-1.817c-.126-.13-.154-.384-.154-.578 0-.19.028-.45.154-.58.12-.12.345-.148.518-.15h.079c.18 0 .417.025.543.15.126.13.154.39.154.58 0 .194-.028.449-.154.578-.126.126-.364.154-.543.154h-.09c-.174-.006-.39-.037-.507-.154zm-3.437 9.386l-4.798.003 2.77-6.717 2.028 6.714zm-.316 1.849c-.27.272-.667.42-1.174.445-.078.003-.888.003-.944.003-.081 0-.913 0-1.003-.006-.479-.033-.854-.182-1.112-.442-.235-.233-.378-.566-.437-.989l5.107-.003c-.056.423-.202.76-.437.992zm14.168-1.42c0-.02-.009-.037-.011-.056-.006-.04-.009-.079-.023-.112L18.6 6.189c.364.057.678.172.893.385a.4.4 0 00.583-.012.44.44 0 00-.014-.607c-.409-.41-.972-.636-1.672-.67-.053-.003-4.14-.006-5.916-.006a1.29 1.29 0 00.664-.341c.271-.272.406-.673.406-1.194 0-.52-.137-.924-.406-1.193-.258-.263-.633-.395-1.115-.395h-.084c-.465.006-.83.138-1.084.395-.27.272-.406.672-.406 1.193 0 .524.137.922.406 1.194.17.17.395.283.666.341-1.776 0-5.86.003-5.916.006-.7.034-1.263.258-1.672.67a.446.446 0 00-.014.607.399.399 0 00.583.011c.213-.212.526-.327.893-.383L2.19 13.969c-.017.033-.017.072-.023.112-.002.02-.01.036-.01.056v.002c0 .874.24 1.56.714 2.04.4.4.946.63 1.63.678.078.005.969.008 1.056.008.059 0 .919 0 .977-.003.717-.033 1.295-.266 1.71-.683.467-.47.705-1.14.713-1.998v-.01c0-.015.003-.023.003-.034 0-.026-.008-.045-.011-.068-.003-.022 0-.042-.006-.061L6.568 6.142l3.874-.003v12.72H8.733c-.753 0-1.35.219-1.776.647-.442.446-.67 1.087-.67 1.905a.42.42 0 00.413.429h10.6a.42.42 0 00.41-.429c0-.818-.223-1.46-.666-1.905-.426-.428-1.025-.647-1.779-.647h-1.708V6.14l3.874.003-2.373 7.866c-.005.02-.003.039-.005.061-.003.023-.014.042-.014.068l.002.033v.011c.009.855.247 1.527.715 1.998.417.417.991.65 1.708.683a106.931 106.931 0 002.037-.005c.68-.048 1.23-.278 1.627-.678.47-.48.712-1.166.712-2.042z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconJusticeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.067 15.17c-.213.214-.53.34-.944.368a58.263 58.263 0 01-1.877.003c-.436-.02-.773-.146-1-.37a1.261 1.261 0 01-.31-.574h4.44a1.233 1.233 0 01-.309.574zm-2.271-7.53l2.333 5.666h-4.042l1.709-5.666zm-2.729 11.974c.46 0 .801.112 1.023.334.112.115.196.263.255.448h-9c.056-.185.142-.333.252-.448.218-.222.563-.334 1.022-.334h6.448zM11.3 6.387h.17c.009 0 .017.005.026.005.008 0 .215-.003.392-.003v.003h.308c.008 0 .017-.005.025-.005h.168v11.935H11.3V6.387zm-3.7 6.918H3.556L5.891 7.64l1.708 5.666zm-.16 1.866c-.224.224-.563.347-.997.37a58.263 58.263 0 01-1.877-.003c-.415-.028-.731-.151-.947-.367a1.233 1.233 0 01-.308-.574h4.44a1.261 1.261 0 01-.311.574zm14.246-1.221c0-.028-.014-.054-.017-.084a.56.56 0 00-.033-.169L18.683 6.53c.135.06.258.126.353.219a.596.596 0 00.874-.02.668.668 0 00-.02-.913c-.436-.437-1.03-.678-1.767-.714-.059-.003-3.333-.006-5.232-.006.075-.05.145-.1.207-.162.283-.286.429-.709.429-1.255 0-.552-.143-.975-.429-1.26-.272-.278-.667-.418-1.17-.418-.004 0-.01 0-.012.003V2h-.146c-.504 0-.899.14-1.17.417-.283.286-.43.71-.43 1.26 0 .547.144.97.43 1.256.058.061.131.115.207.162-1.902 0-5.177 0-5.233.006-.736.036-1.33.277-1.767.714a.665.665 0 00-.02.913.593.593 0 00.871.02c.093-.093.219-.163.35-.219l-2.952 7.168c-.022.054-.025.113-.034.169-.002.028-.016.056-.016.084v.002c0 .92.257 1.642.759 2.149.428.431 1.005.675 1.717.725a65.314 65.314 0 002.014.006c.75-.036 1.358-.28 1.804-.728.496-.496.745-1.2.759-2.082 0-.005 0-.01.003-.016l.002-.054c0-.036-.014-.067-.02-.1-.005-.031 0-.062-.008-.096L6.812 6.39c.913 0 2.182 0 3.255-.002v11.935H8.625c-.793 0-1.423.235-1.883.698-.476.479-.717 1.16-.717 2.02 0 .355.278.643.62.643.019 0 .036-.008.055-.01.017.002.034.01.054.01h10.19c.02 0 .036-.008.056-.01.017.002.034.01.053.01a.632.632 0 00.62-.644c0-.863-.242-1.54-.718-2.02-.46-.462-1.09-.697-1.88-.697H13.63V6.387c1.073 0 2.345 0 3.258.002l-2.221 7.367c-.012.034-.006.065-.012.096-.005.033-.02.064-.02.1 0 .017.004.034.004.054 0 .005 0 .01.002.016.014.883.267 1.586.76 2.082.448.448 1.056.692 1.806.728a64.966 64.966 0 002.008-.006c.71-.05 1.29-.294 1.718-.725.496-.51.753-1.233.753-2.151z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconKebabMenuLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.914 14.439c-1.277 0-2.314-1.1-2.314-2.459 0-1.36 1.035-2.459 2.314-2.459 1.277 0 2.312 1.1 2.312 2.459 0 1.36-1.035 2.459-2.312 2.459zm0-7.374c-1.277 0-2.314-1.1-2.314-2.459 0-1.36 1.037-2.456 2.314-2.456 1.277 0 2.312 1.1 2.312 2.459 0 1.36-1.035 2.456-2.312 2.456zm0 14.745c-1.277 0-2.314-1.1-2.314-2.456 0-1.357 1.035-2.459 2.314-2.459 1.277 0 2.312 1.1 2.312 2.459 0 1.36-1.035 2.456-2.312 2.456z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconKeyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.715 11.66a.413.413 0 01.131.302.428.428 0 01-.129.308l-1.94 1.86a.414.414 0 01-.583-.009l-1.25-1.255-.73 1.18a.41.41 0 01-.334.196.372.372 0 01-.35-.163l-.902-1.173-.801 1.156a.416.416 0 01-.342.18h-4.65l-.062.137c-.563 1.126-1.784 1.723-3.532 1.723-2.633 0-4.081-1.457-4.081-4.101S3.608 7.9 6.241 7.9c2.104 0 3.101.922 3.572 1.79h9.638a.42.42 0 01.286.112l1.978 1.857zM5.74 12.703c-.502 0-.698-.196-.698-.7 0-.505.194-.7.698-.7s.697.195.697.7c0 .504-.196.7-.697.7zm0-2.238c-.958 0-1.532.577-1.532 1.538 0 .963.574 1.537 1.532 1.537.958 0 1.532-.574 1.532-1.537 0-.964-.571-1.538-1.532-1.538z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconKeyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.74 12.701c.501 0 .697-.196.697-.7s-.196-.7-.697-.7c-.502 0-.698.196-.698.7s.196.7.698.7zm0-2.24c.958 0 1.532.576 1.532 1.54 0 .963-.571 1.538-1.532 1.538-.958 0-1.532-.577-1.532-1.538 0-.964.574-1.538 1.532-1.54zm13.753 2.772l1.325-1.269-1.532-1.437H9.555a.417.417 0 01-.381-.249c-.46-1.036-1.42-1.54-2.933-1.54-2.185 0-3.246 1.067-3.246 3.26 0 2.196 1.061 3.263 3.246 3.263 1.429 0 2.367-.425 2.787-1.263.042-.081.14-.333.14-.333a.417.417 0 01.39-.266h4.708l1-1.446a.415.415 0 01.334-.18c.137-.021.26.057.342.163l.882 1.149.692-1.115a.415.415 0 01.647-.076c-.003.003 1.33 1.34 1.33 1.34zm2.219-1.577c.17.157.18.423.02.594l-.017.017-1.942 1.86a.417.417 0 01-.582-.009l-1.25-1.252-.73 1.18a.417.417 0 01-.334.196.377.377 0 01-.35-.163l-.902-1.173-.801 1.156a.416.416 0 01-.342.18H9.835l-.062.137c-.563 1.126-1.784 1.723-3.532 1.723-2.633 0-4.081-1.457-4.081-4.101S3.608 7.9 6.241 7.9c2.104 0 3.101.922 3.572 1.79h9.638a.43.43 0 01.286.112l1.975 1.854z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconKeyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.998 12.586c.459 0 .602-.137.602-.585 0-.451-.14-.588-.602-.588-.463 0-.603.137-.603.588 0 .445.143.585.603.585zm0-2.372c1.142 0 1.826.666 1.826 1.784 0 1.1-.7 1.784-1.826 1.784-1.13 0-1.83-.683-1.83-1.784.003-1.118.687-1.784 1.83-1.784zm13.347 2.678l.997-.928-1.283-1.168H9.61a.616.616 0 01-.561-.355c-.412-.908-1.291-1.348-2.684-1.348-2.028 0-2.974.922-2.974 2.905 0 1.98.946 2.905 2.974 2.905 1.317 0 2.174-.367 2.547-1.093.039-.075.129-.3.129-.302a.611.611 0 01.568-.378h4.504l.92-1.292a.622.622 0 01.988-.025l.683.866.521-.818a.623.623 0 01.952-.106l1.169 1.137zm2.308-1.37a.6.6 0 01.196.434c0 .165-.07.322-.19.437l-1.902 1.768a.625.625 0 01-.858-.012l-1.039-1.014-.58.908a.62.62 0 01-.49.283.589.589 0 01-.515-.233l-.712-.899-.624.877a.615.615 0 01-.504.258h-4.42c-.003.008-.01.014-.012.022-.412.798-1.375 1.75-3.641 1.75-2.709 0-4.202-1.456-4.202-4.1C2.16 9.357 3.653 7.9 6.362 7.9c2.075 0 3.106.86 3.616 1.703h9.32a.63.63 0 01.417.16l1.938 1.759z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLaptopChargingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.763 12.17l.98-.128-.002 1.697c0 .11.09.2.199.197h.006a.204.204 0 00.187-.118l1.305-2.89a.185.185 0 00-.025-.197.213.213 0 00-.19-.076l-1.079.143.02-1.67a.2.2 0 00-.165-.195.207.207 0 00-.23.117l-1.224 2.85a.186.186 0 00.028.192c.045.062.115.084.19.079zm-5.442 4.883c-1.04 0-1.84-.272-2.375-.807-.519-.515-.782-1.26-.782-2.22v-6.02c0-.958.263-1.7.782-2.21.535-.524 1.336-.79 2.375-.79L18.663 5c1.042 0 1.84.266 2.375.793.518.51.781 1.252.781 2.21v6.017c0 .958-.263 1.705-.778 2.22-.538.536-1.34.808-2.378.808 0-.003-13.342.005-13.342.005zm4.512-7.899c0-.31.073-.53.222-.675.151-.146.38-.219.708-.219h2.463c.33 0 .563.07.711.213.149.14.219.362.219.678v4.729c0 .319-.073.543-.219.683-.148.14-.38.207-.709.207h-2.462c-.33 0-.563-.067-.708-.207-.149-.14-.222-.364-.222-.683-.003 0-.003-4.726-.003-4.726zm1.535-1.784c.028-.028.11-.031.143-.031h.961c.073 0 .126.011.146.03.017.015.03.057.03.138v.168h-1.31v-.168c0-.042.002-.112.03-.137zm-.607 7.989h2.462c.501 0 .874-.124 1.14-.379.272-.257.403-.619.403-1.103V9.154c0-.479-.131-.837-.398-1.095-.26-.252-.627-.378-1.109-.384v-.17c0-.233-.07-.421-.21-.555-.14-.135-.336-.202-.58-.202h-.96c-.244 0-.44.067-.583.204a.752.752 0 00-.207.552v.171c-.48.006-.844.132-1.107.39-.266.26-.398.616-.398 1.09v4.725c0 .484.132.845.401 1.103.272.252.647.376 1.146.376zm10.462 2.406a.6.6 0 01.613.59.601.601 0 01-.613.589H2.766a.602.602 0 01-.616-.588c0-.325.275-.591.613-.591h18.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLaptopChargingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.834 9.242v4.774c0 .322.073.548.219.69.149.14.379.21.71.21h2.464c.331 0 .561-.07.71-.21.149-.142.219-.368.219-.69V9.242c0-.318-.07-.545-.219-.688-.149-.142-.379-.212-.71-.212h-2.464c-.328 0-.559.07-.707.218-.152.145-.222.37-.222.682zm1.538-1.806c-.02.02-.03.07-.03.14v.17h1.313v-.17c0-.07-.012-.123-.034-.14-.017-.017-.07-.028-.143-.028h-.963c-.034-.003-.115 0-.143.028zm-.609 8.079c-.5 0-.873-.126-1.142-.383-.27-.26-.402-.624-.402-1.113V9.242c0-.48.132-.841.399-1.101.264-.26.626-.386 1.108-.392v-.176c0-.235.07-.422.211-.557.14-.137.337-.207.58-.207h.964c.244 0 .44.067.58.205.14.137.21.327.21.562v.176c.484.005.848.131 1.11.386.269.263.398.623.398 1.107v4.777c0 .489-.132.855-.401 1.113-.267.257-.64.383-1.14.383-.011-.003-2.475-.003-2.475-.003zm.982-5.266l-.682 1.603.862-.115.028-.003c.05 0 .095.017.135.05.045.037.07.093.07.151l-.003.985.766-1.717-.954.128a.213.213 0 01-.163-.047.198.198 0 01-.07-.151l.011-.884zm-.98 2.044a.21.21 0 01-.19-.075.191.191 0 01-.028-.196l1.223-2.88a.213.213 0 01.23-.118.2.2 0 01.166.196l-.02 1.686 1.081-.145a.216.216 0 01.19.075.196.196 0 01.026.199l-1.305 2.922a.206.206 0 01-.23.115.196.196 0 01-.163-.196l.003-1.717c-.003.003-.982.134-.982.134zm-7.787-4.25v6.082c0 .758.185 1.326.55 1.695.379.38.98.573 1.788.573l13.356-.005c.808 0 1.411-.193 1.787-.574.365-.369.553-.937.553-1.694V8.034c0-.752-.185-1.317-.55-1.678-.376-.372-.977-.562-1.79-.562l-13.354.009c-.813 0-1.417.187-1.79.562-.365.358-.55.923-.55 1.678zm2.34 9.142c-1.04 0-1.84-.275-2.38-.817-.519-.52-.78-1.275-.78-2.246v-6.08c0-.967.264-1.72.783-2.234.536-.531 1.336-.8 2.38-.8L18.674 5c1.042 0 1.841.268 2.377.803.52.514.783 1.264.783 2.231v6.083c0 .967-.263 1.725-.78 2.245-.539.543-1.338.817-2.38.817l-13.356.006zm16.112.92c.228 0 .41.176.41.397a.404.404 0 01-.41.397H2.56a.403.403 0 01-.41-.395v-.002c0-.218.182-.397.41-.397h18.87z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLayersFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.773 19.066l-7.952-4.087 1.02-.527 6.103 3.135c.26.131.546.201.832.201.28 0 .56-.064.818-.196l6.23-3.145 1.044.532-8.095 4.087zm0-14.404l8.092 4.12-8.092 4.085-7.952-4.084 7.952-4.12zm-7.952 7.219l1.02-.527 6.103 3.138a1.814 1.814 0 001.65.005l6.23-3.146 1.044.533-8.092 4.087-7.955-4.09zm17.865.003c0-.642-.344-1.224-.888-1.552a1.808 1.808 0 00-.106-3.171l-8.093-4.12a1.812 1.812 0 00-1.66.005l-7.953 4.12a1.824 1.824 0 00-.983 1.622 1.81 1.81 0 00.885 1.544 1.81 1.81 0 00-.885 1.552 1.82 1.82 0 00.885 1.546 1.812 1.812 0 00.104 3.17l7.952 4.085a1.814 1.814 0 001.65.005l8.092-4.086c.614-.309 1-.936 1-1.622a1.82 1.82 0 00-.888-1.555c.54-.325.888-.902.888-1.543z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLayersLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.924 16.585l-8.765-4.543 2.216-1.16 6.09 3.157a.985.985 0 00.91.003l6.207-3.162 2.258 1.162-8.916 4.543zm8.916-1.098l-8.916 4.544-8.765-4.544 2.216-1.16 6.09 3.16a1.012 1.012 0 00.909.006l6.208-3.165 2.258 1.16zM11.924 4.014l8.916 4.583-8.916 4.546-8.765-4.546 8.765-4.583zm9.919 8.03c0-.38-.213-.733-.55-.904l-1.602-.823 1.6-.816a1.019 1.019 0 00.003-1.81L12.378 3.11a1.003 1.003 0 00-.916.006L2.7 7.697A1.015 1.015 0 002.702 9.5l1.577.818-1.58.826a1.017 1.017 0 00.003 1.801l1.577.818-1.58.826a1.019 1.019 0 00.003 1.801l8.762 4.544a.983.983 0 00.91.003l8.917-4.544a1.02 1.02 0 00.003-1.81l-1.603-.823 1.6-.815c.339-.17.552-.518.552-.9z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLayersRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.798 16.186L3.46 11.884l1.589-.83 6.098 3.15a1.413 1.413 0 001.297.005l6.218-3.154 1.622.832-8.485 4.3zm8.485-1.042l-8.485 4.303-8.339-4.303 1.589-.826 6.098 3.146a1.413 1.413 0 001.297.005l6.218-3.154 1.622.83zM11.798 4.282l8.485 4.338-8.485 4.306L3.46 8.62l8.34-4.338zm9.916 7.605a1.44 1.44 0 00-.784-1.286l-.686-.35.68-.345a1.442 1.442 0 00.003-2.569L12.443 3a1.434 1.434 0 00-.65-.157c-.227 0-.451.053-.659.162l-8.338 4.34A1.44 1.44 0 002.8 9.9l.678.35-.683.355c-.477.247-.774.74-.774 1.28 0 .541.3 1.031.78 1.278l.677.35-.683.356a1.44 1.44 0 00.005 2.557l8.34 4.303c.204.106.428.157.652.157.221 0 .442-.05.644-.155l8.485-4.302a1.442 1.442 0 00.003-2.569l-.687-.35.68-.347a1.42 1.42 0 00.796-1.277z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLearnDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.569 4.138c0-.009 0-.009-.008-.017.19-.546.896-1.028 2.05-1.387 1.227-.367 2.854-.574 4.571-.574 1.726 0 3.342.207 4.563.574 1.219.373 1.908.855 2.056 1.426 0 0-.008.008-.008.017-.207.53-.905.989-2.042 1.328-1.227.375-2.838.574-4.563.574-1.717 0-3.336-.2-4.563-.574-1.16-.348-1.866-.821-2.056-1.367zm.316 10.593l5.468-2.44-.165-.075h-.008l-2.872-1.272-2.44-1.07-.008.009-5.46 2.431 5.11 2.25.375.167zm3.659 1.577l.042-1.868-2.871 1.277-.34.152a1.17 1.17 0 01-.498.109c-.174 0-.339-.034-.504-.11L5.26 14.483v1.77c.25.06.524.124.804.208.39.109.804.249 1.218.423a7.24 7.24 0 011.23.664c.042.033.081.047.132.084.042.025.084.05.123.084.1.075.232.075.325 0a4.9 4.9 0 01.714-.457c.199-.11.406-.216.622-.308a9.756 9.756 0 011.633-.54c.025-.01.042-.01.067-.01l.216-.05c.064-.016.132-.033.199-.042zm7.21-5.529c-1.219.373-2.838.566-4.563.566h-.076c.275.216.44.532.457.888 1.666-.025 3.235-.233 4.437-.597.74-.216 1.361-.524 1.843-.888v3.986c-.224.415-.888.972-2.098 1.345-1.219.367-2.838.574-4.563.574a18.8 18.8 0 01-1.404-.059c-.106.373-.372.68-.73.838.688.067 1.394.117 2.131.117 1.807 0 3.527-.215 4.818-.613a5.712 5.712 0 001.843-.896v3.546c0 .697-.714 1.271-2.106 1.694-1.23.365-2.855.575-4.563.575-1.71 0-3.337-.208-4.572-.575-1.395-.423-2.098-.997-2.098-1.694v-.639a1.417 1.417 0 01-.515-.258c-.863-.672-2.05-.994-2.905-1.145a1.316 1.316 0 01-1.078-1.286v-2.325l-1.12-.499a1.216 1.216 0 01-.732-1.12c0-.499.283-.93.731-1.129l5.485-2.442c.042-.017.08-.034.131-.042V5.479c.449.356 1.062.664 1.857.897 1.311.389 3.02.605 4.821.605 1.801 0 3.518-.216 4.818-.605.782-.233 1.395-.524 1.843-.88V9.44c-.218.417-.882.972-2.092 1.339z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLearnDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.104 20.499c-1.123.339-2.605.524-4.168.524-1.56 0-3.042-.188-4.163-.524-1.277-.387-1.924-.908-1.924-1.555v-.117a1.24 1.24 0 00.569-.241c.88-.698 2.09-1.028 2.95-1.182.271-.05.512-.205.672-.429a19.07 19.07 0 001.907.098c1.65 0 3.21-.199 4.4-.56.673-.205 1.242-.49 1.679-.826v3.255c.002.65-.645 1.17-1.922 1.557zm-14.078-3.9a.267.267 0 01-.222-.263V14.27l3.356 1.504c.26.115.557.115.818 0l3.468-1.551v2.117c0 .13-.093.241-.222.264-.952.17-2.296.54-3.31 1.344a.467.467 0 01-.58 0C7.32 17.14 5.972 16.771 5.026 16.6zm-2.048-4.17a.18.18 0 01.112-.171l5.403-2.423a.185.185 0 01.154 0l5.401 2.42c.07.034.112.095.112.174a.18.18 0 01-.112.17l-5.403 2.42a.185.185 0 01-.154 0L3.09 12.6a.18.18 0 01-.112-.17zm7.793-8.922c1.117-.336 2.596-.523 4.165-.523s3.048.187 4.168.523c1.104.334 1.737.77 1.888 1.3-.003.011-.011.014-.017.022-.185.485-.829.908-1.863 1.222-1.114.336-2.596.524-4.165.524-1.568 0-3.047-.188-4.165-.524-1.059-.322-1.709-.757-1.874-1.258-.003-.008-.008-.014-.011-.02.165-.507.81-.94 1.874-1.266zM8.849 6.014c.412.328.975.605 1.698.824 1.19.361 2.753.56 4.4.56 1.65 0 3.21-.199 4.4-.56.712-.216 1.27-.488 1.681-.807v3.614c-.207.389-.804.902-1.913 1.238-1.115.336-2.596.523-4.165.523-.283 0-.563-.008-.84-.02L8.978 9.09c-.042-.017-.087-.014-.129-.028V6.014zm4.415 7.84l1.12-.5c.367-.166.597-.519.597-.925a.999.999 0 00-.028-.205c1.65 0 3.21-.198 4.4-.557.675-.204 1.244-.487 1.678-.824V14.5c-.207.386-.81.9-1.913 1.235-1.115.336-2.597.524-4.165.524-.577 0-1.14-.03-1.69-.081v-2.322zM19.339 2.72c-1.193-.361-2.756-.56-4.403-.56-1.644 0-3.207.199-4.4.56-1.387.42-2.205 1.045-2.438 1.855h-.002a1.744 1.744 0 00-.065.484v4.084l-5.274 2.362c-.364.162-.6.523-.597.924 0 .406.23.759.597.924l1.227.55v2.43c0 .53.375.981.893 1.073.86.155 2.067.485 2.947 1.183.064.05.134.075.204.112v.246c0 1.05.84 1.838 2.505 2.342 1.198.358 2.762.557 4.4.557 1.642 0 3.205-.199 4.406-.56 1.661-.504 2.505-1.291 2.505-2.339V5.06c.002-1.047-.84-1.835-2.505-2.339z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLearnDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.594 9.636c-.19.328-.74.762-1.706 1.053-1.056.32-2.445.493-3.918.502-.026-.017-.06-.034-.09-.05l-5.5-2.469a1.243 1.243 0 00-.224-.076V6.589a5.86 5.86 0 001.364.585c1.188.359 2.737.552 4.367.552 1.622 0 3.168-.193 4.359-.552a5.71 5.71 0 001.347-.577v3.04zm0 4.734c-.182.32-.73.762-1.706 1.056-1.073.328-2.496.502-4 .502-.341 0-.692-.009-1.025-.034v-2.042l1.017-.451c.398-.177.667-.544.714-.972 1.364-.042 2.647-.235 3.653-.544a5.502 5.502 0 001.347-.593v3.078zm0 4.42c0 .645-.93 1.062-1.714 1.297-1.081.328-2.504.504-4.011.504-1.499 0-2.922-.176-4-.504-.684-.21-1.482-.552-1.673-1.07.241-.05.474-.151.681-.31.857-.687 2.056-1.015 2.905-1.163.291-.05.549-.202.73-.41.45.034.909.051 1.373.051 1.622 0 3.177-.193 4.359-.552.507-.16.964-.361 1.347-.593v2.75h.003zM8.771 17.72c-1.065-.846-2.47-1.23-3.513-1.473v-1.782l3.12 1.398c.157.076.334.11.5.11.176 0 .34-.034.5-.11l3.222-1.44-.034 1.883c-1 .185-2.395.568-3.462 1.414a.273.273 0 01-.333 0zM3.39 12.29l5.49-2.47 5.493 2.434-5.485 2.46-5.498-2.426zm7.479-8.37c1.073-.328 2.495-.504 4-.504 1.515 0 2.938.176 4.01.504.668.21 1.44.544 1.656 1.028a.689.689 0 01-.16.235c-.257.303-.78.577-1.498.788-1.064.327-2.487.5-3.994.5-1.516 0-2.939-.176-4.003-.5a4.623 4.623 0 01-1.04-.435c-.324-.176-.532-.383-.624-.593.17-.395.754-.757 1.653-1.023zm8.37-1.199c-1.183-.358-2.737-.56-4.368-.56-1.63 0-3.176.202-4.358.56-1.431.429-2.28 1.09-2.53 1.958-.05.177-.075.362-.075.544v3.66l-5.025 2.253c-.448.21-.723.636-.723 1.137 0 .485.283.93.723 1.132l1.131.501v2.342c0 .636.449 1.188 1.082 1.297.815.143 1.963.45 2.812 1.095v.151c0 1.13.874 1.975 2.605 2.502 1.19.353 2.737.551 4.358.551 1.622 0 3.18-.201 4.367-.551 1.732-.527 2.605-1.373 2.605-2.502V5.222c0-1.135-.873-1.98-2.605-2.502z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLifeguardFloatFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.913 20.115l-.57-2.773c1.195-.41 2.523-1.275 3.156-3.087l2.756.569c-.882 3.37-3.255 4.753-5.342 5.29zm-2.666-3.636c-.098.003-.213.003-.328.003h-.168a5.681 5.681 0 01-1.882-.359c-1.687-.655-2.505-2.061-2.505-4.297 0-3.988 2.718-4.608 4.34-4.622h.097c.143 0 .292.003.418.006 3.991.095 4.423 3.283 4.423 4.65 0 1.367-.426 4.549-4.395 4.619zm-3.154 3.647c-2.081-.535-4.446-1.919-5.334-5.302l2.76-.57c.59 1.698 1.778 2.578 2.907 3.015.081.034.16.05.241.078l-.574 2.779zM9.059 3.541l.577 2.784C8.415 6.734 7.065 7.63 6.46 9.552l-2.751-.569c.843-3.518 3.25-4.916 5.35-5.442zm5.874.064c2.1.566 4.476 1.98 5.339 5.384l-2.745.566c-.616-1.86-1.952-2.757-3.165-3.185l.571-2.765zm-2.518-1.594c-.227-.008-.49-.011-.745-.011h-.185c-1.978.017-9.325.695-9.325 9.812 0 9.13 7.417 9.843 9.392 9.874.3.003.602.003.902-.003 1.88-.036 9.392-.739 9.392-9.812 0-9.053-7.501-9.815-9.431-9.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLifeguardFloatLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.79 20.705l-.65-3.143c1.282-.395 2.778-1.302 3.411-3.35l3.154.65c-.921 3.854-3.708 5.305-5.916 5.843m-2.353.314a30.3 30.3 0 01-.874.003 11.058 11.058 0 01-1.549-.143l.645-3.118c.417.073.837.11 1.26.11.123 0 .247-.003.353-.003.361-.009.72-.048 1.076-.112l.644 3.12a11.55 11.55 0 01-1.555.143m-9.134-6.157l3.134-.647c.563 1.835 1.81 2.756 2.984 3.21.148.056.29.098.437.14l-.65 3.149c-.84-.205-1.776-.533-2.659-1.09-1.672-1.053-2.747-2.655-3.246-4.762m-.185-4.798l3.115.644c-.059.395-.101.81-.101 1.272 0 .53.056.994.132 1.434l-3.115.644a13.094 13.094 0 01-.031-3.994m3.398-5.72c.885-.557 1.82-.882 2.664-1.079l.652 3.149c-1.308.395-2.829 1.328-3.428 3.493l-3.149-.65c.474-2.19 1.558-3.84 3.26-4.913m4.973-1.367h.168c.25 0 .51.003.734.008.35.009.93.05 1.616.171l-.641 3.107a7.533 7.533 0 00-1.57-.132h-.108c-.356.006-.712.04-1.065.098l-.644-3.126a10.79 10.79 0 011.51-.126m.764 14.067c-.1.003-.218.003-.336.003h-.17a6.029 6.029 0 01-2.026-.387c-1.834-.711-2.767-2.285-2.767-4.68 0-4.502 3.32-5.02 4.748-5.031h.103c.146 0 .297.003.426.003 1.451.036 4.824.6 4.824 5.061-.006 4.463-3.359 5.006-4.802 5.031m8.468-7.781l-3.14.647c-.61-2.098-2.117-3.037-3.42-3.448l.647-3.13c.826.21 1.737.541 2.605 1.085 1.72 1.073 2.818 2.703 3.308 4.846m-2.96 1.448l3.109-.644c.092.619.154 1.263.154 1.958 0 .745-.07 1.406-.171 2.033l-3.11-.641a7.844 7.844 0 00.017-2.706m-5.347-8.544a31.898 31.898 0 00-.756-.01h-.177c-1.974.016-9.322.694-9.322 9.812 0 9.128 7.415 9.846 9.392 9.874.3.002.6.002.902-.003 1.88-.034 9.395-.74 9.395-9.813-.002-9.053-7.507-9.815-9.434-9.86"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLifeguardFloatRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.913 20.115l-.574-2.773c1.196-.41 2.527-1.275 3.157-3.087l2.756.569c-.88 3.37-3.254 4.75-5.339 5.29m-2.481.337c-.174.003-.37.006-.572.006-.098 0-.196 0-.291-.003a11.369 11.369 0 01-1.272-.095l.563-2.72c.359.05.667.07.871.072.06.003.124.003.185.003.124 0 .247-.003.353-.003.2-.002.504-.022.871-.075l.56 2.717c-.47.059-.907.09-1.268.098m-8.673-5.627l2.76-.57c.588 1.698 1.778 2.578 2.907 3.015.081.03.16.05.241.078l-.574 2.779c-2.081-.538-4.448-1.919-5.334-5.302m-.37-3.012c0-.58.043-1.109.104-1.616l2.709.56a8.496 8.496 0 00-.067 1.07c0 .446.033.855.087 1.236l-2.7.557a13.314 13.314 0 01-.132-1.807m5.67-8.274l.573 2.784C8.413 6.734 7.065 7.63 6.46 9.55l-2.751-.57c.84-3.515 3.25-4.913 5.35-5.442m2.434-.306l.177-.002c.243 0 .496.005.714.01.381.012.843.046 1.345.119l-.56 2.708a7.099 7.099 0 00-.92-.087 22.202 22.202 0 00-.445-.005h-.109a6.869 6.869 0 00-.86.067l-.563-2.725c.454-.06.871-.082 1.221-.085m.754 13.247c-.098.003-.213.003-.328.003l-.168-.003a5.654 5.654 0 01-1.882-.359c-1.687-.652-2.505-2.058-2.505-4.3 0-3.985 2.718-4.604 4.34-4.618h.097c.143 0 .289.002.418.005 3.991.096 4.423 3.283 4.423 4.65 0 1.367-.429 4.552-4.395 4.622m8.025-7.49l-2.748.566c-.613-1.86-1.95-2.76-3.165-3.185l.571-2.765c2.104.566 4.48 1.98 5.342 5.384m.345 2.88c0 .632-.05 1.204-.126 1.747l-2.71-.557a7.955 7.955 0 00.018-2.303l2.703-.557c.067.52.115 1.067.115 1.67M12.415 2.01A30.93 30.93 0 0011.67 2c-.065 0-.126 0-.188.003-1.975.017-9.322.694-9.322 9.81 0 9.128 7.417 9.842 9.392 9.87a38.646 38.646 0 00.902-.003c1.88-.033 9.392-.739 9.392-9.812 0-9.05-7.504-9.812-9.431-9.857"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightbulbFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.384 18.753c.344 0 .624.278.624.617 0 .339-.28.616-.624.616h-5.292a.622.622 0 01-.624-.616c0-.34.28-.617.624-.617h5.292zm-.715 1.7c.345 0 .625.278.625.617 0 .339-.28.616-.625.616h-4.025a.622.622 0 01-.624-.616c0-.339.28-.616.624-.616h4.025zM12.62 4.668a.622.622 0 01-.625-.617V2.616c0-.339.28-.616.625-.616s.625.277.625.616V4.05a.625.625 0 01-.625.617zm5.104 1.65a.619.619 0 01-.44-.18.61.61 0 010-.87l1.028-1.015a.629.629 0 01.882 0 .61.61 0 010 .871l-1.028 1.014a.63.63 0 01-.442.18zm-9.846-.003a.623.623 0 01-.44.179.642.642 0 01-.443-.18L5.966 5.3a.61.61 0 010-.871.629.629 0 01.883 0l1.028 1.014a.61.61 0 010 .87zM5.75 9.952c.344 0 .624.278.624.617 0 .339-.28.616-.624.616H4.297a.622.622 0 01-.625-.616c0-.34.28-.617.625-.617H5.75zm15.347-.072c.344 0 .625.277.625.616 0 .339-.28.616-.625.616h-1.451a.622.622 0 01-.625-.616c0-.34.28-.616.625-.616h1.451zm-5.24 1.868a.618.618 0 00.59-.647c-.151-2.866-2.255-3.93-4.162-3.972-.118-.006-.255-.006-.378-.006a.622.622 0 00-.625.616c0 .34.28.617.625.617.114.008.226 0 .341.005.846.017 2.824.328 2.953 2.804a.619.619 0 00.655.583zM12.895 5.26c1.104.026 5.415.46 5.415 5.594 0 2.583-1.087 3.972-2.305 4.717l.008 1.12c0 .513-.146.911-.443 1.174-.283.258-.717.387-1.913.387H11.66c-1.168 0-1.605-.132-1.89-.387-.303-.263-.455-.66-.455-1.173l-.008-1.112c-1.218-.74-2.305-2.14-2.305-4.754 0-5.176 4.218-5.563 5.353-5.568.176-.003.37-.003.54.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightbulbLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.935 15.106c1.303-.796 1.964-2.18 1.964-4.118 0-1.123-.34-4.795-4.726-4.89-.162-.006-.339-.006-.501-.006h-.028c-1.398.008-4.647.498-4.647 4.865 0 1.967.66 3.365 1.96 4.152l.401.243v1.975c0 .193.03.451.18.58.103.092.414.188 1.38.188h2.045c.796 0 1.263-.06 1.395-.18.149-.131.18-.392.18-.588V15.35l.397-.244zM12.193 5.27c1.131.025 5.546.47 5.546 5.717 0 2.639-1.112 4.059-2.361 4.82v1.52c0 .523-.149.932-.451 1.2-.292.261-.737.396-1.961.396H10.92c-1.196 0-1.644-.135-1.935-.395-.311-.27-.465-.678-.465-1.202v-1.512c-1.25-.754-2.362-2.188-2.362-4.858 0-5.29 4.322-5.686 5.485-5.692.18 0 .375 0 .549.006zm-.27 1.938c.642.014 3.866.27 4.057 3.855a.414.414 0 01-.398.434h-.022a.42.42 0 01-.42-.392c-.149-2.784-2.519-3.053-3.241-3.07-.112-.003-.238-.003-.353-.003a.417.417 0 01-.42-.415c0-.23.187-.414.42-.414.123.003.257.003.378.005zm2.819 12.286c.232 0 .42.185.42.415 0 .23-.188.414-.42.414h-5.42a.417.417 0 01-.42-.414c0-.23.187-.415.42-.415h5.42zm-.731 1.521c.232 0 .42.185.42.415 0 .23-.188.414-.42.414H9.888a.417.417 0 01-.42-.414c0-.23.187-.415.42-.415h4.123zM11.91 4.45a.417.417 0 01-.42-.414V2.57c0-.23.187-.415.42-.415.232 0 .42.185.42.415v1.465c0 .23-.19.414-.42.414zm5.983-.058a.423.423 0 01.594 0 .413.413 0 010 .585l-1.053 1.036a.415.415 0 01-.297.12.413.413 0 01-.297-.706l1.053-1.035zM6.305 6.195L5.252 5.16a.413.413 0 010-.585.423.423 0 01.594 0L6.899 5.61a.413.413 0 01-.297.706.42.42 0 01-.297-.12zm-1.429 4.09c.233 0 .42.185.42.415 0 .23-.187.414-.42.414H3.39a.417.417 0 01-.42-.414c0-.23.187-.415.42-.415h1.487zm15.717-.078c.233 0 .42.185.42.414 0 .23-.187.415-.42.415h-1.487a.417.417 0 01-.42-.415c0-.23.188-.414.42-.414h1.487z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightbulbRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.514 14.527c1.154-.706 1.714-1.908 1.714-3.67 0-1.283-.409-4.28-4.193-4.361-.157-.006-.32-.006-.468-.006h-.036c-1.535.009-4.11.583-4.11 4.34 0 1.767.575 3.013 1.712 3.702l.591.356.006.683.008 1.112c0 .152.023.227.034.255.08.026.339.084 1.061.084h1.998c.72 0 .988-.053 1.078-.08a.936.936 0 00.03-.25l-.008-1.112-.002-.692c-.009 0 .585-.361.585-.361zm-2.451-9.264c1.106.023 5.415.457 5.415 5.594 0 2.583-1.087 3.972-2.306 4.717l.009 1.12c0 .513-.146.911-.44 1.174-.286.258-.72.39-1.916.39h-1.997c-1.168 0-1.605-.132-1.891-.39-.3-.263-.451-.66-.451-1.173l-.008-1.115c-1.219-.74-2.306-2.14-2.306-4.754 0-5.176 4.219-5.563 5.353-5.571.174 0 .367 0 .538.008zm-.61 1.869c1.907.042 4.01 1.106 4.162 3.972a.62.62 0 01-.591.647h-.034a.619.619 0 01-.622-.583c-.129-2.476-2.109-2.787-2.952-2.804-.112-.003-.227.003-.342-.003a.622.622 0 01-.624-.616.62.62 0 01.624-.616c.123 0 .26 0 .378.003zm3.097 11.622c.345 0 .625.277.625.616a.62.62 0 01-.625.616H9.256a.622.622 0 01-.624-.616.62.62 0 01.624-.616h5.294zm-.714 1.7c.345 0 .625.277.625.616a.62.62 0 01-.625.616H9.811a.622.622 0 01-.625-.616.62.62 0 01.625-.616h4.025zm-2.05-15.787a.622.622 0 01-.625-.617V2.616A.62.62 0 0111.786 2a.62.62 0 01.624.616v1.437a.621.621 0 01-.624.614zm5.103 1.65a.628.628 0 01-.44-.18.61.61 0 01-.008-.862l.009-.009 1.025-1.017a.629.629 0 01.882 0 .612.612 0 01.006.866l-.006.005-1.028 1.014a.614.614 0 01-.44.183zm-9.846-.003a.629.629 0 01-.882 0L5.136 5.3a.614.614 0 01-.009-.866l.009-.008a.629.629 0 01.882 0l1.025 1.017a.61.61 0 01.006.865l-.006.006zM4.917 9.952c.345 0 .625.278.625.617a.62.62 0 01-.625.616h-1.45a.622.622 0 01-.625-.616.62.62 0 01.624-.617h1.451zm15.345-.072a.62.62 0 01.625.616.62.62 0 01-.625.616H18.81a.622.622 0 01-.625-.616.62.62 0 01.625-.616h1.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightningFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.121 11.45a.6.6 0 00-.434-.428l-4.504-1.11 2.722-6.904a.625.625 0 00-.23-.745.582.582 0 00-.753.092l-8.916 9.569a.628.628 0 00-.143.597.6.6 0 00.432.422l4.112 1.017-2.698 7.05a.622.622 0 00.23.737.58.58 0 00.748-.08l9.286-9.617a.627.627 0 00.148-.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightningLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.248 19.7l2.316-5.984a.422.422 0 00-.017-.345.413.413 0 00-.266-.212l-4.238-1.037 7.235-7.678-2.274 5.709a.419.419 0 00.286.563l4.635 1.129-7.677 7.854zm8.874-8.205a.41.41 0 00-.3-.292l-4.883-1.19 2.9-7.275a.423.423 0 00-.157-.507.405.405 0 00-.518.062l-9.21 9.77a.43.43 0 00-.099.406.412.412 0 00.297.289l4.477 1.095-2.874 7.418a.421.421 0 00.156.501.405.405 0 00.515-.056l9.592-9.815a.409.409 0 00.104-.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLightningRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.875 18.698l1.893-4.944a.639.639 0 00-.025-.507.6.6 0 00-.39-.314l-3.767-.932 6.05-6.496-1.815 4.605a.633.633 0 00.023.51c.078.16.221.274.39.316l4.145 1.023-6.504 6.739zm8.246-7.246a.605.605 0 00-.434-.429l-4.501-1.11 2.72-6.904a.624.624 0 00-.23-.745.582.582 0 00-.754.09l-8.916 9.57a.626.626 0 00-.143.598.6.6 0 00.432.423l4.112 1.016-2.7 7.05a.618.618 0 00.23.737.584.584 0 00.747-.078l9.286-9.619a.627.627 0 00.151-.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLikeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.255 12.905c.241.221.362.538.362.938 0 .432-.225.804-.664 1.104a.616.616 0 00-.118.908c.168.196.255.507.255.902 0 .563-.496.888-.91 1.061a.604.604 0 00-.342.362.609.609 0 00.04.498c.083.151.164.395.08.941-.249.664-.462.998-3.902.998-2.08 0-2.907-.244-3.638-.457l-.216-.062c-.409-.117-.734-.21-1.062-.21l-2.476-.033v-7.521c0-.017-.003-.031-.005-.048v-.008c.759-.393 2.367-1.432 2.54-3.25.118-1.21.101-2.694.076-3.851 0-.023-.003-.045-.006-.067-.005-.098-.014-.18-.022-.264l-.017-.19c-.028-.41.053-.72.244-.925.26-.277.703-.336 1.028-.336.89 0 1.269.39 1.269 1.364l-.006.12v.035c0 1.823-.008 4.22-.008 4.22 0 .334.263.609.596.617l2.687.081h3.395c.358.02 1.19.168 1.19 1.118 0 .476-.123.84-.359 1.05a.607.607 0 00-.201.454.584.584 0 00.19.451M4.888 14.477c-.448 0-.762-.314-.762-.762 0-.449.314-.762.762-.762s.76.31.76.762c0 .448-.312.762-.76.762m16.577-2.026c.213-.344.381-.832.381-1.504 0-1.53-1.179-2.28-2.383-2.347H16.05l-2.07-.062c.003-.826.005-2.353.005-3.613l.006-.132.003-.098c0-1.585-.933-2.535-2.499-2.535-.818 0-1.484.252-1.927.728-.294.32-.636.9-.569 1.849l.02.23c.008.081.017.157.02.257l.002.042c.026 1.112.04 2.516-.07 3.64-.117 1.232-1.336 1.99-1.885 2.274a1.444 1.444 0 00-.885-.309H3.617c-.804 0-1.457.653-1.457 1.46v7.594c0 .804.653 1.456 1.457 1.456h2.59c.354 0 .676-.131.928-.341.064.014.123.039.19.039l2.807.036c.162 0 .415.07.731.165l.21.06c.77.223 1.728.506 3.983.506 3.611 0 4.513-.33 5.076-1.857a.797.797 0 00.03-.11c.076-.456.082-.848.012-1.195.737-.462 1.148-1.143 1.148-1.93 0-.49-.095-.874-.22-1.168.487-.485.747-1.09.747-1.748-.003-.6-.17-1.053-.384-1.387"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLikeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.729 12.98c.45 0 .767.314.767.768s-.314.768-.767.768c-.451 0-.768-.317-.768-.768 0-.45.314-.767.768-.767zm15.862-.218a.411.411 0 01-.022-.58l.022-.022c.286-.26.437-.69.437-1.238 0-1.193-1.09-1.345-1.425-1.364H16.12l-2.74-.081a.407.407 0 01-.395-.41s.009-2.453.009-4.316v-.022L13 4.605c0-1.134-.481-1.63-1.518-1.63-.54 0-.96.143-1.213.415-.238.255-.341.627-.305 1.112l.017.204c.01.087.017.168.022.27.003.016.003.033.006.05.025 1.173.042 2.68-.073 3.91-.18 1.86-1.927 2.88-2.6 3.207v.123c0 .017.006.031.006.048v7.81c0 .016-.003.03-.006.047v.076l2.754.036c.302 0 .622.09 1.02.205l.224.064c.762.224 1.624.476 3.787.476 3.767 0 3.919-.406 4.218-1.218.067-.446.037-.804-.117-1.09a.41.41 0 01.168-.554l.033-.017c.488-.205 1.068-.591 1.068-1.292 0-.456-.107-.826-.314-1.064a.405.405 0 01.042-.574c.011-.011.025-.02.036-.028.353-.241.773-.667.773-1.314.003-.47-.143-.846-.437-1.115zM6.098 20.555c.227 0 .415-.18.426-.409v-7.854a.427.427 0 00-.426-.407H3.404a.43.43 0 00-.429.432v7.81c0 .237.193.43.429.43l2.694-.002zm15.314-8.095c.233.316.434.778.434 1.42 0 .658-.285 1.266-.812 1.737.151.288.274.691.274 1.24 0 .782-.425 1.435-1.204 1.866.104.364.11.779.022 1.291-.523 1.432-1.238 1.827-5.002 1.827-2.283 0-3.244-.283-4.017-.51l-.21-.062c-.359-.1-.614-.173-.81-.173l-2.865-.037a.685.685 0 01-.25-.053 1.234 1.234 0 01-.874.361H3.404c-.687 0-1.244-.56-1.244-1.246v-7.807c0-.686.557-1.246 1.244-1.246h2.694c.337 0 .639.134.863.35.521-.252 2.025-1.101 2.165-2.56.112-1.169.098-2.614.073-3.757a2.907 2.907 0 00-.025-.31l-.02-.233c-.05-.706.132-1.303.524-1.723.412-.443 1.037-.675 1.81-.675 1.482 0 2.333.866 2.333 2.37l-.003.095-.005.134c0 1.407-.006 3.143-.006 3.914l2.33.07h3.494c1.036.056 2.218.66 2.218 2.179-.003.72-.204 1.213-.437 1.538z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLikeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.888 12.95c.448 0 .762.314.762.762s-.314.762-.762.762-.762-.314-.762-.762c0-.451.311-.762.762-.762zm15.367-.048a.62.62 0 01-.03-.874l.033-.033c.233-.213.359-.577.359-1.05 0-.95-.832-1.099-1.19-1.118h-3.393l-2.684-.079a.613.613 0 01-.596-.619s.008-2.398.008-4.221v-.034l.006-.12c.003-.975-.378-1.364-1.27-1.364-.327 0-.77.056-1.027.336-.19.204-.272.515-.244.927l.017.19c.008.085.017.166.022.264a.505.505 0 01.006.067c.025 1.157.042 2.641-.073 3.852-.173 1.82-1.781 2.86-2.54 3.249v.008c0 .017.005.031.005.048v7.52l2.476.034c.328 0 .653.093 1.062.21l.216.062c.73.213 1.557.457 3.638.457 3.44 0 3.656-.334 3.902-.997.084-.547.003-.79-.08-.942a.617.617 0 01.302-.862c.414-.171.91-.499.91-1.062 0-.395-.09-.706-.255-.902a.62.62 0 01-.143-.479.628.628 0 01.26-.428c.443-.297.667-.67.667-1.101 0-.4-.123-.715-.364-.939zm-14.05 7.25c.12 0 .218-.096.224-.216v-7.62a.225.225 0 00-.224-.215H3.614a.228.228 0 00-.227.23v7.594c0 .126.104.227.227.227h2.59zm15.26-7.703c.213.333.381.787.381 1.392 0 .655-.263 1.263-.748 1.748.126.294.222.677.222 1.168 0 .787-.412 1.467-1.149 1.93.07.347.065.74-.011 1.196a.487.487 0 01-.03.109c-.564 1.527-1.463 1.857-5.076 1.857-2.258 0-3.216-.28-3.986-.507l-.208-.059c-.316-.092-.571-.165-.73-.165l-2.805-.036c-.067 0-.129-.026-.193-.04-.26.219-.588.34-.927.342H3.614a1.455 1.455 0 01-1.454-1.456V12.33c0-.804.653-1.457 1.454-1.457h2.59c.334 0 .64.118.886.308.549-.28 1.767-1.042 1.885-2.274.11-1.123.095-2.527.07-3.639l-.003-.042a2.339 2.339 0 00-.02-.26l-.019-.23c-.067-.95.275-1.53.569-1.849.442-.476 1.109-.728 1.927-.728 1.563 0 2.499.947 2.499 2.535l-.003.098-.006.132c0 1.257-.003 2.787-.005 3.613l2.07.062h3.411c1.205.064 2.384.818 2.384 2.347-.003.67-.174 1.154-.384 1.502z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLinkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.178 16.598a.806.806 0 011.14-.04.813.813 0 01.04 1.146 26.58 26.58 0 01-.804.84c-1.967 1.976-3.757 3.303-5.544 3.303-1.08 0-2.156-.484-3.271-1.602-1.367-1.372-1.838-2.784-1.446-4.314.336-1.3 1.303-2.703 3.138-4.546 3.154-3.168 5.857-4.672 8.812-1.7.737.74 1.202 1.473 1.426 2.238a.81.81 0 01-1.552.457c-.146-.5-.48-1.006-1.02-1.55-1.602-1.613-3.053-1.792-6.53 1.7-3.475 3.494-3.296 4.953-1.691 6.567 1.605 1.613 3.056 1.792 6.532-1.7.235-.228.51-.516.77-.799zm8.096-12.852c1.364 1.373 1.837 2.785 1.445 4.314-.336 1.3-1.302 2.703-3.137 4.546-1.832 1.844-3.23 2.816-4.521 3.152-.345.09-.684.134-1.017.134-1.14 0-2.219-.524-3.275-1.585-.669-.673-1.112-1.336-1.358-2.028a.808.808 0 111.521-.543c.162.459.482.924.978 1.425 1.218 1.224 2.106 1.193 2.745 1.028.986-.255 2.187-1.123 3.784-2.728 1.597-1.605 2.46-2.815 2.714-3.807.165-.641.2-1.532-1.022-2.76-1.219-1.226-2.107-1.195-2.745-1.027-.986.258-2.188 1.123-3.787 2.728-.303.306-.583.6-.844.885a.801.801 0 01-1.14.054.813.813 0 01-.053-1.146c.275-.303.574-.616.897-.941 1.834-1.843 3.23-2.815 4.523-3.151 1.521-.398 2.925.078 4.292 1.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLinkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.986 16.118a.612.612 0 01.871-.064.626.626 0 01.065.877 35.259 35.259 0 01-1.502 1.619c-1.846 1.854-3.24 2.832-4.523 3.165a3.866 3.866 0 01-.98.129c-1.113 0-2.166-.516-3.205-1.56-2.897-2.914-1.404-5.608 1.728-8.76 3.132-3.148 5.812-4.65 8.706-1.736.944.952 1.448 1.899 1.535 2.899a.622.622 0 01-.56.675.63.63 0 01-.67-.566c-.061-.697-.445-1.395-1.176-2.129-1.028-1.036-1.953-1.375-3-1.106-1.045.272-2.303 1.174-3.961 2.843-1.658 1.67-2.555 2.933-2.824 3.983-.271 1.053.068 1.983 1.098 3.02 1.031 1.036 1.956 1.375 3 1.103 1.045-.271 2.303-1.173 3.961-2.843a35.454 35.454 0 001.437-1.549zm7.311-12.397c1.34 1.347 1.804 2.722 1.42 4.21-.333 1.291-1.302 2.694-3.148 4.551-1.96 1.972-3.745 3.3-5.516 3.3-1.056 0-2.109-.473-3.193-1.563-.907-.91-1.403-1.818-1.524-2.776a.617.617 0 01.538-.692.626.626 0 01.69.541c.08.67.464 1.342 1.167 2.05 1.984 1.992 3.673 1.57 6.961-1.736 3.289-3.308 3.709-5.009 1.728-7.003-1.977-1.992-3.672-1.571-6.958 1.737a22.303 22.303 0 00-1.431 1.568.618.618 0 01-.871.084.622.622 0 01-.084-.874 23.23 23.23 0 011.512-1.655c3.132-3.154 5.813-4.656 8.71-1.742z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconListDocumentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.575 12.632h-5.566a.606.606 0 01-.605-.602c0-.331.272-.603.605-.603h5.566c.333 0 .605.27.605.603 0 .33-.272.602-.605.602m0 4.011h-5.566a.606.606 0 01-.605-.602c0-.334.272-.603.605-.603h5.566c.333 0 .605.27.605.603 0 .33-.272.6-.605.602M10.93 7.399h5.563a.604.604 0 110 1.204H10.93a.606.606 0 01-.606-.601c0-.334.272-.603.606-.603m-2.726 5.434a.803.803 0 11-.001-1.603.803.803 0 01.001 1.603m0 4.009a.803.803 0 01-.804-.801.803.803 0 011.608 0 .802.802 0 01-.804.8m-.008-9.7c.442 0 .804.36.806.802a.802.802 0 01-.806.8.803.803 0 01-.804-.8c0-.443.361-.801.804-.801m9.778-4.992H5.992c-.728 0-1.392.756-1.392 1.588v16.507c0 .86.639 1.591 1.392 1.591l11.98.003c.754 0 1.393-.728 1.393-1.591V3.741c.002-.832-.661-1.591-1.39-1.591"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconListDocumentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.569 20.425V3.576c0-.327-.263-.599-.398-.599H5.841c-.135 0-.398.272-.398.6v16.845c0 .342.24.6.398.6l12.33.003c.157-.003.398-.258.398-.6zm-.403-18.269c.638 0 1.224.678 1.224 1.42v16.85c0 .755-.572 1.417-1.224 1.417L5.849 21.84c-.653 0-1.224-.661-1.224-1.418V3.576c-.003-.742.583-1.42 1.221-1.42h12.32zM7.746 8.72a.82.82 0 11-.002-1.64.82.82 0 01.001 1.64zm0 2.46a.82.82 0 110 1.64.82.82 0 010-1.64zm2.876-2.46a.412.412 0 01-.414-.409.41.41 0 01.414-.409h5.731c.23 0 .415.185.415.41a.412.412 0 01-.415.408h-5.73zM16.353 12c.23 0 .415.185.415.41a.412.412 0 01-.415.408h-5.73a.412.412 0 01-.415-.409.41.41 0 01.414-.409h5.731zm-8.608 3.283a.82.82 0 11.002 1.64.82.82 0 01-.002-1.64zm8.608.818c.23 0 .415.185.415.41a.41.41 0 01-.415.408h-5.73a.412.412 0 01-.415-.409.41.41 0 01.414-.409h5.731z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconListDocumentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.217 8.76a.802.802 0 110-1.603.802.802 0 110 1.602zm.005 2.478a.802.802 0 110 1.603.802.802 0 110-1.603zm2.726-2.627a.604.604 0 01-.605-.602c0-.334.271-.603.605-.603h5.563a.604.604 0 110 1.204l-5.563.001zm5.644 2.826a.604.604 0 110 1.204h-5.563a.604.604 0 01-.605-.601c0-.334.272-.603.605-.603h5.563zm-8.37 3.813a.802.802 0 110 1.602.802.802 0 110-1.602zm8.37.199c.333 0 .605.268.605.602a.604.604 0 01-.605.602h-5.563a.604.604 0 01-.605-.602c0-.334.272-.602.605-.602h5.563zm1.583 4.806V3.751c0-.193-.146-.367-.208-.39l-11.955.003a.545.545 0 00-.185.387v16.504c0 .205.132.364.19.387h11.976c.044-.014.182-.168.182-.387zM17.993 2.16c.728 0 1.392.76 1.392 1.591v16.504c0 .863-.639 1.591-1.392 1.591H6.013c-.757 0-1.393-.728-1.393-1.59V3.75c0-.832.664-1.591 1.392-1.591h11.98z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconListLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.541 7.336a.57.57 0 01-.58-.56.581.581 0 01.58-.56h15.725c.32 0 .58.249.58.56 0 .308-.26.56-.58.56H5.541zm-2.431.38a.944.944 0 01-.95-.938c0-.518.426-.938.95-.938.523 0 .95.42.95.938a.946.946 0 01-.95.939zm18.156 3.712c.32 0 .58.25.58.56a.57.57 0 01-.58.56H5.541a.57.57 0 01-.58-.56c0-.31.26-.56.58-.56h15.725zM3.11 12.927a.944.944 0 01-.95-.939c0-.518.426-.938.95-.938.523 0 .95.42.95.938a.944.944 0 01-.95.939zm18.156 3.714c.155 0 .3.059.41.163.109.103.17.246.17.395 0 .308-.26.56-.58.56H5.541a.581.581 0 01-.58-.56c0-.309.26-.56.58-.56h15.725v.002zM3.11 18.14a.944.944 0 01-.95-.939c0-.518.426-.938.95-.938.523 0 .95.42.95.938a.944.944 0 01-.95.939z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconListRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.244 7.689c-.44 0-.798-.33-.798-.74 0-.409.355-.74.798-.74h14.804c.44 0 .798.331.798.74 0 .41-.355.74-.798.74H6.244zM3.314 5.84c.636 0 1.151.499 1.151 1.112 0 .613-.515 1.112-1.15 1.112-.64-.003-1.155-.499-1.155-1.112 0-.613.515-1.112 1.154-1.112zm17.734 5.412c.44 0 .798.33.798.74 0 .408-.355.739-.798.739H6.244c-.44 0-.798-.33-.798-.74 0-.409.355-.74.798-.74h14.804zm-17.734-.373c.636 0 1.151.499 1.151 1.112 0 .614-.515 1.112-1.15 1.112-.64 0-1.155-.498-1.155-1.112 0-.613.515-1.112 1.154-1.112zm17.734 5.415c.44 0 .798.33.798.74 0 .405-.355.739-.798.739H6.244c-.44 0-.798-.334-.798-.74 0-.406.355-.74.798-.74h14.804zM3.314 15.92c.636 0 1.151.499 1.151 1.112 0 .61-.515 1.112-1.15 1.112-.64-.002-1.155-.501-1.155-1.112 0-.616.515-1.112 1.154-1.112z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLocationFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.328 2c4.367.014 6.963 2.644 6.952 7.042-.014 4.28-5.347 11.154-6.711 12.527a.407.407 0 01-.577 0C10.633 20.202 5.322 13.322 5.333 9c.006-2.17.647-3.958 1.855-5.165C8.387 2.633 10.15 2 12.294 2h.034zm2.52 6.597c0-1.566-.935-2.499-2.498-2.499-1.563 0-2.498.936-2.498 2.499 0 1.565.935 2.498 2.498 2.498 1.566 0 2.499-.933 2.499-2.498z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLocationLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.974 22.598c1.862-2.098 7.405-9.456 7.418-13.967.014-4.796-2.601-7.445-7.365-7.459h-.036c-4.743 0-7.362 2.632-7.375 7.419-.014 4.551 5.502 11.912 7.358 14.007zm.053-22.41c5.24.016 8.36 3.173 8.343 8.447-.016 5.132-6.416 13.384-8.05 15.028a.484.484 0 01-.686.007l-.007-.007c-1.633-1.637-8.006-9.892-7.99-15.079.017-5.26 3.14-8.396 8.354-8.396h.036zm-.023 9.929c1.308 0 2-.696 2-2.014 0-1.317-.692-2.013-2-2.013s-2.003.696-2.003 2.013c0 1.318.692 2.014 2.003 2.014zm0-5.012c1.865 0 2.978 1.123 2.978 2.998 0 1.876-1.113 2.999-2.978 2.999-1.866 0-2.978-1.123-2.978-2.999 0-1.875 1.112-2.998 2.978-2.998z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLocationMapFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.365 18.873l-.664-3.869 1.863-.93 1.742 6.093-2.941-1.294zm-4.762 1.47l.014-2.028c.476-.532 1.493-1.773 2.521-3.305l.364.118.647 3.792-3.546 1.423zM12.03 9.111c-.89 0-1.305-.415-1.305-1.306 0-.89.414-1.305 1.305-1.305.89 0 1.305.415 1.305 1.305.003.888-.412 1.306-1.305 1.306zm-.633 11.249l-3.544-1.454.437-3.829.516-.151c1.02 1.557 2.05 2.843 2.605 3.44l-.014 1.994zm-4.754-1.47l-2.918 1.268 1.907-6.056 1.468.83-.457 3.957zm15.174 2.179l-2.294-8.025a.601.601 0 00-.849-.376l-2.695 1.345-.168-.053c1.166-1.902 2.174-4.06 2.18-5.816.01-3.742-2.216-5.983-5.958-5.994h-.028c-3.726 0-5.956 2.227-5.97 5.96-.005 1.687.964 3.83 2.107 5.749l-.322.092-2.244-1.269a.599.599 0 00-.871.342l-2.527 8.025a.605.605 0 00.815.737l4.23-1.838 4.429 1.815a.477.477 0 00.09.028l.111.026c.12.03.247.02.365-.026l4.605-1.843 4.168 1.838a.613.613 0 00.641-.098.598.598 0 00.185-.62z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLocationMapLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.295 19.159l3.498 1.543-1.966-6.878-2.255 1.127.017.092.706 4.116zM5.38 13.84l-2.157 6.853 3.499-1.518.496-4.295-1.838-1.04zm6.225 4.575c-.558-.585-1.684-1.98-2.78-3.67l-.798.23-.016.14-.465 4.068 4.04 1.656.019-2.424zM8.265 4.274c-.876.87-1.324 2.134-1.327 3.76-.011 3.092 3.72 8.077 5.053 9.592 1.34-1.518 5.09-6.505 5.1-9.562.01-3.278-1.788-5.085-5.063-5.093h-.025c-1.611 0-2.869.437-3.737 1.303zm7.489 10.76l-.639-.201c-1.056 1.605-2.129 2.936-2.692 3.536l-.017 2.454 4.06-1.625-.712-4.163zm3.728-1.91l2.342 8.192a.41.41 0 01-.56.487l-4.334-1.91-4.782 1.916a.435.435 0 01-.246.02l-.115-.028-4.664-1.905-4.399 1.91a.41.41 0 01-.555-.501l2.58-8.192a.408.408 0 01.595-.233l2.364 1.337.664-.194c-1.21-1.986-2.258-4.239-2.255-5.992.006-1.824.549-3.323 1.569-4.337 1.017-1.012 2.51-1.544 4.32-1.544h.027c3.69.011 5.889 2.224 5.878 5.917-.006 1.76-1.096 4.046-2.337 6.049l.505.162 2.824-1.409a.418.418 0 01.347-.008c.115.05.196.145.232.263zM10.69 7.697c0 .88.445 1.325 1.325 1.325.88 0 1.325-.445 1.325-1.325 0-.88-.445-1.325-1.325-1.325-.877 0-1.325.446-1.325 1.325zm3.47 0c0 1.323-.823 2.146-2.145 2.146S9.87 9.023 9.87 7.697c0-1.325.82-2.146 2.143-2.146 1.322 0 2.146.824 2.146 2.146z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLocationMapRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.362 18.861l2.939 1.295-1.743-6.093-1.862.93.666 3.868zm-11.73-4.77l-1.908 6.056 2.918-1.269.457-3.958-1.468-.829zm5.778 4.263c-.555-.593-1.586-1.88-2.605-3.436l-.516.15-.437 3.83 3.544 1.454.014-1.998zM12 3.35c-3.06 0-4.75 1.689-4.761 4.759-.008 2.714 3.227 7.328 4.748 9.092 1.4-1.635 4.787-6.224 4.795-9.064.009-3.078-1.68-4.779-4.756-4.787h-.025zm.614 14.958l-.014 2.028 3.55-1.42-.65-3.793-.365-.115c-1.025 1.527-2.045 2.77-2.52 3.3zm9.2 2.756a.606.606 0 01-.183.62.605.605 0 01-.641.097l-4.168-1.837-4.605 1.846a.58.58 0 01-.365.025l-.112-.025c-.03-.009-.061-.017-.09-.028l-4.428-1.815-4.23 1.837a.61.61 0 01-.644-.104.61.61 0 01-.17-.63l2.526-8.025a.6.6 0 01.871-.342l2.244 1.27.322-.093c-1.143-1.92-2.112-4.062-2.107-5.748.012-3.734 2.241-5.961 5.97-5.961h.028c3.742.011 5.969 2.252 5.958 5.997-.006 1.757-1.014 3.913-2.18 5.813l.168.053 2.695-1.345a.607.607 0 01.513-.011.594.594 0 01.336.387l2.291 8.02zM10.913 7.78c0 .748.347 1.095 1.095 1.095s1.098-.347 1.098-1.095-.35-1.098-1.098-1.098c-.745 0-1.095.348-1.095 1.098zm3.4 0c0 1.42-.882 2.303-2.302 2.303S9.71 9.2 9.71 7.78s.882-2.302 2.302-2.302 2.303.882 2.303 2.302z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockDeDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.342 16.563c.921-.017.921-.627.921-.922 0-.294 0-.91-.935-.932h-.163c-.896.008-.896.6-.896.921 0 .322 0 .922.913.933h.16zm.014-2.98c.417.008 2.047.168 2.047 2.058 0 1.897-1.63 2.042-2.039 2.05h-.196c-.429-.005-2.036-.153-2.036-2.06 0-1.906 1.593-2.046 2.022-2.051h.045c.053 0 .11.003.157.003zm2.4-8.238c-1.24-.35-1.997-.827-2.196-1.373 0-.008 0-.008-.008-.017.199-.546.955-1.033 2.187-1.38C11.048 2.204 12.776 2 14.611 2c1.834 0 3.563.204 4.86.574 1.3.37 2.033.852 2.196 1.426 0 0-.009.008-.009.017-.218.53-.963.986-2.176 1.328-1.308.37-3.028.574-4.86.574-1.838.003-3.558-.205-4.866-.574zm.087 5.537v-.585c0-2.146-1.633-2.417-2.336-2.434H7.49l-.255-.003c-.854.008-2.291.333-2.291 2.417v.608l4.9-.003zm-6.367 8.171c.171.18.454.27.846.27l6.137-.004c.18.011.6-.022.843-.252.16-.151.239-.38.239-.703-.003-1.753 0-5.32 0-5.32.002-.047.022-.428-.216-.677-.174-.182-.462-.272-.866-.272l-2.966.003-3.157.003h-.02c-.027 0-.056-.003-.098-.003-.168 0-.518.042-.728.238-.162.149-.238.381-.238.706v5.333c-.003.042-.017.426.224.678zm11.143-7.868c-1.277 0-2.487-.101-3.552-.283v.042c.476.092.869.291 1.165.61.13.138.222.286.295.43a24.04 24.04 0 002.092.097c1.927 0 3.753-.215 5.137-.61.785-.216 1.451-.521 1.958-.888v3.983c-.238.423-.947.977-2.235 1.347-1.3.367-3.028.574-4.863.574-.644 0-1.26-.036-1.857-.087v.902c.602.048 1.219.082 1.857.082 1.927 0 3.754-.216 5.137-.611.785-.216 1.451-.53 1.958-.896v3.54c0 .7-.753 1.275-2.246 1.695-1.308.367-3.036.574-4.86.574-1.826 0-3.555-.207-4.871-.574-.602-.17-1.076-.367-1.437-.583l-3.98.003c-.748 0-1.337-.221-1.746-.66-.593-.634-.549-1.45-.543-1.542l-.003-5.29c0-.844.348-1.337.639-1.603a2.18 2.18 0 011.059-.507v-.653c0-2.652 1.888-3.613 3.501-3.627l.266.003V5.305c.476.359 1.137.664 1.986.897 1.395.395 3.219.61 5.137.61 1.92 0 3.745-.215 5.138-.61.829-.233 1.479-.521 1.958-.88V9.27c-.238.423-.947.977-2.236 1.344-1.294.373-3.022.572-4.854.572z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockDeDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.486 16.919c1.028-.017 1.028-.826 1.028-1.09 0-.266 0-1.075-1.042-1.1l-.123-.003h-.03c-1.012.008-1.012.795-1.012 1.09 0 .268 0 1.089 1.028 1.103h.151zm.006-3.011c.378.008 1.849.157 1.849 1.921 0 1.768-1.474 1.908-1.843 1.913-.043 0-.082.003-.124.003l-.053-.003c-.39-.005-1.843-.145-1.843-1.927 0-1.778 1.44-1.907 1.829-1.91l.042-.003c.05 0 .1.003.143.006zm11.59 6.549c1.287-.398 1.94-.927 1.931-1.572l-.03-3.255c-.438.342-1.012.63-1.693.84-1.204.373-2.781.586-4.445.603h-.193c-.611 0-1.205-.034-1.782-.087v1.706c.003.636-.196 1.14-.585 1.501-.314.292-.698.426-1.014.488 1.042.227 2.283.353 3.596.339 1.586-.014 3.081-.216 4.216-.563zm-15.806-.894c.222.233.572.35 1.042.35l6.381-.002c.031 0 .647.033 1.025-.32.216-.202.32-.493.32-.893-.003-1.83 0-5.547 0-5.547.003-.036.03-.523-.283-.857-.221-.235-.58-.355-1.062-.355-1.846 0-6.143.005-6.364.005h-.022c-.012 0-.023 0-.034-.003-.003 0-.025-.002-.062-.002-.162 0-.613.028-.913.305-.213.196-.32.498-.32.899v5.563c-.002.034-.027.524.292.857zM7.35 7.527c-.781.008-2.602.285-2.602 2.742v.852c1.07-.003 3.885-.006 5.532-.006v-.83c0-2.433-1.849-2.736-2.644-2.755-.084-.003-.188 0-.286-.003zM8.568 6.07l.01.77c1.051.264 2.533 1.054 2.533 3.449v.764c1.062.241 2.336.367 3.68.348 1.589-.014 3.085-.216 4.208-.563 1.12-.348 1.72-.866 1.927-1.255l-.034-3.61c-.414.324-.974.599-1.694.823-1.202.372-2.782.585-4.446.6h-.198c-1.594 0-3.101-.18-4.261-.516-.731-.216-1.305-.485-1.725-.81zm1.921-2.526c-1.076.333-1.725.775-1.885 1.282.003.006.008.012.011.02.171.501.835.93 1.91 1.241 1.132.328 2.614.504 4.219.485 1.588-.017 3.081-.216 4.21-.563 1.042-.323 1.692-.751 1.874-1.239a.072.072 0 01.017-.022c-.16-.527-.801-.955-1.922-1.28-1.131-.328-2.627-.51-4.221-.485-1.591.014-3.087.21-4.213.56zm2.384 9.641c.003 0 0 1.448 0 2.978a18.34 18.34 0 001.966.09c1.586-.018 3.081-.216 4.21-.564 1.118-.344 1.72-.865 1.925-1.252l-.034-3.655c-.437.341-1.008.63-1.692.84-1.201.373-2.781.585-4.445.6h-.196c-.678 0-1.336-.031-1.961-.096.163.329.24.693.227 1.059zm8.837-8.193l.132 13.885c.011 1.05-.835 1.846-2.513 2.364-1.21.373-2.79.585-4.45.602h-.188c-1.594 0-3.104-.185-4.272-.518a6.306 6.306 0 01-1.266-.501.344.344 0 01-.11-.093l-4.725.003c-.714 0-1.271-.207-1.652-.616-.56-.6-.51-1.406-.507-1.44v-5.532c0-.642.198-1.149.59-1.507.373-.34.84-.46 1.174-.502v-.868c0-2.605 1.768-3.546 3.42-3.563.135-.003.272 0 .407.008l-.02-1.588c0-.162.02-.325.064-.484v-.003c.227-.813 1.05-1.446 2.449-1.88 1.201-.372 2.781-.585 4.448-.602 1.664-.014 3.255.168 4.462.515 1.686.49 2.546 1.27 2.557 2.32z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockDeDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.291 16.639c.92-.017.92-.625.92-.92 0-.293 0-.907-.93-.93l-.13-.002h-.033c-.894.008-.894.6-.894.919 0 .32 0 .919.91.933h.157zm.014-2.975c.418.008 2.037.168 2.037 2.056 0 1.893-1.625 2.039-2.031 2.047h-.193c-.426-.005-2.031-.154-2.031-2.058 0-1.902 1.588-2.042 2.014-2.045h.045c.058-.003.112 0 .16 0zm11.418 6.269c.8-.25 1.753-.684 1.748-1.345l-.026-2.804c-.395.25-.862.468-1.397.63-1.197.37-2.765.583-4.415.597h-.188c-.605 0-1.19-.036-1.759-.087v1.51c0 .832-.342 1.325-.627 1.588a2.1 2.1 0 01-.317.236c.874.145 1.86.227 2.91.215 1.533-.01 2.975-.204 4.07-.54zM3.44 19.126c.17.18.454.266.843.266l6.112-.003c.18.009.597-.02.837-.249.16-.151.239-.381.239-.7-.003-1.751 0-5.314 0-5.314.002-.048.022-.429-.216-.678-.171-.18-.46-.272-.86-.272l-6.098.006h-.02c-.028 0-.056-.003-.095-.003-.168 0-.515.042-.728.238-.16.149-.238.381-.238.706v5.328c0 .04-.014.426.224.675zM7.188 7.952c-.852.009-2.283.33-2.283 2.415v.608l4.86-.006c.005-.011.014-.022.016-.033v-.552c0-2.143-1.627-2.415-2.324-2.432h-.27zm3.238-4.199c-.916.286-1.502.656-1.684 1.05.166.407.765.782 1.715 1.054 1.09.317 2.54.499 4.072.465 1.538-.014 2.98-.207 4.065-.543.921-.286 1.512-.661 1.686-1.06-.218-.506-1.022-.845-1.714-1.044-1.093-.314-2.544-.476-4.076-.465-1.535.017-2.98.207-4.064.543zm2.26 9.423c.003 0 .003 1.196.003 2.538.622.062 1.266.098 1.936.093 1.532-.014 2.977-.208 4.064-.544.997-.308 1.546-.762 1.742-1.087l-.028-3.142a5.85 5.85 0 01-1.397.63c-1.197.37-2.762.582-4.415.6h-.193c-.656 0-1.286-.04-1.894-.099.213.488.188.944.182 1.011zM8.695 6.958C9.922 7.367 11 8.406 11 10.387v.319c1.022.235 2.269.361 3.577.35 1.535-.014 2.98-.207 4.064-.543.998-.309 1.547-.76 1.743-1.087l-.028-3.098a5.992 5.992 0 01-1.398.608c-1.196.37-2.762.582-4.415.599h-.193c-1.58 0-3.076-.182-4.23-.515a5.814 5.814 0 01-1.428-.6l.003.538zm12.862-1.98l.13 13.599c.01 1.126-.866 1.972-2.603 2.51-1.205.37-2.773.582-4.417.596h-.182c-1.58 0-3.079-.182-4.241-.515a6.007 6.007 0 01-1.373-.571l-4.582.002c-.746 0-1.331-.22-1.74-.658-.591-.63-.549-1.448-.543-1.538l-.003-5.283c0-.84.344-1.333.636-1.599a2.143 2.143 0 011.053-.504v-.653c0-2.65 1.88-3.608 3.487-3.622l.297.003L7.46 5.11c0-.182.023-.358.07-.526V4.58c.244-.866 1.096-1.532 2.535-1.978 1.196-.37 2.765-.582 4.418-.596 1.666-.034 3.224.168 4.425.512 1.748.504 2.64 1.334 2.65 2.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockOpenFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.284 11.095c.003 0 0 5.163.003 7.709 0 .896-.272 1.608-.812 2.117-.894.846-2.185.762-2.238.76l-8.717.005c-.986 0-1.757-.294-2.289-.874-.779-.848-.706-1.989-.703-2.036l-.003-7.74c0-.904.278-1.621.82-2.128.508-.474 1.141-.645 1.6-.704v-1.19c0-3.664 2.44-4.992 4.723-5.014.146 0 .3.003.434.003 1.838.045 4.014.997 4.602 3.538a.603.603 0 01-.442.725.599.599 0 01-.717-.448c-.546-2.359-2.796-2.594-3.474-2.61-.12-.004-.263-.004-.395-.004-1.064.009-3.543.401-3.543 3.807v1.165c1.625-.002 6.04-.008 8.14-.008 1.006 0 1.787.297 2.322.885.776.855.692 1.989.69 2.042zm-7.417 5.168h-.207c-1.356-.02-1.356-1.087-1.356-1.487 0-.398 0-1.457 1.33-1.47h.042l.168.002c1.376.034 1.376 1.126 1.376 1.485.003.395.003 1.448-1.353 1.47zm.008-4.16c-.059-.002-.129-.002-.196-.002h-.053c-.532.005-2.51.19-2.51 2.675 0 2.493 1.997 2.686 2.53 2.695h.243c.505-.009 2.53-.202 2.53-2.678-.006-2.468-2.025-2.675-2.544-2.69z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockOpenLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.574 11.184c.003-.039.05-.804-.442-1.341-.347-.379-.896-.566-1.63-.566-2.605 0-8.664.008-8.978.008H7.46c-.003 0-.037-.003-.098-.003-.252 0-.939.042-1.41.482-.335.314-.506.79-.506 1.412v7.947c-.003.036-.042.806.456 1.341.345.37.885.558 1.6.558l9-.006c.036-.003.972.056 1.565-.504.337-.32.507-.793.507-1.409-.002-2.61 0-7.919 0-7.919zm.816.034s-.003 5.283 0 7.885c0 .854-.258 1.535-.77 2.014-.855.804-2.099.726-2.146.72l-8.972.006c-.956 0-1.698-.28-2.205-.827-.74-.8-.672-1.88-.67-1.924v-7.913c0-.866.261-1.547.78-2.023.557-.515 1.266-.65 1.708-.683V7.069c.003-4.635 3.88-4.904 4.656-4.913.145.003.302 0 .44.003.879.022 3.803.333 4.534 3.457a.41.41 0 01-.302.493.403.403 0 01-.488-.297c0-.003 0-.006-.002-.009-.597-2.549-3.031-2.806-3.762-2.823a9.919 9.919 0 00-.41-.003c-.904.008-3.848.328-3.848 4.09v1.395c1.473-.003 6.317-.009 8.571-.009.975 0 1.726.283 2.236.838.734.81.652 1.88.65 1.927zm-7.412 5.706c.818-.014 1.795-.359 1.795-1.91 0-1.558-.986-1.905-1.812-1.928l-.185-.003h-.047c-.807.009-1.774.345-1.774 1.91 0 1.575.975 1.92 1.796 1.93h.227zm0-4.659c.532.014 2.608.227 2.608 2.746 0 2.526-2.079 2.722-2.597 2.73-.05.003-.104.003-.16.003h-.09c-.545-.008-2.599-.207-2.599-2.75 0-2.538 2.034-2.729 2.58-2.731h.053c.073 0 .143 0 .205.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLockOpenRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.097 11.045c.002-.053.042-.723-.381-1.18-.3-.324-.785-.487-1.437-.487-2.535 0-8.432.009-8.737.009h-.028c-.014 0-.03 0-.045-.003-.003 0-.033-.003-.081-.003-.219 0-.83.036-1.238.42-.286.269-.432.686-.432 1.238v7.785c-.002.044-.033.72.395 1.179.297.32.77.482 1.41.482l8.759-.006c.047 0 .88.048 1.389-.44.288-.277.428-.68.428-1.232-.005-2.56-.002-7.762-.002-7.762zm1.187.05c.003 0 0 5.163.003 7.709 0 .896-.272 1.608-.812 2.118-.894.846-2.185.761-2.238.759l-8.717.005c-.986 0-1.757-.294-2.289-.874-.779-.848-.706-1.988-.703-2.036l-.003-7.74c0-.904.278-1.621.82-2.128.508-.474 1.141-.645 1.6-.704v-1.19c0-3.664 2.44-4.992 4.723-5.014.146 0 .3.003.434.003 1.838.045 4.014.997 4.602 3.538a.603.603 0 01-.442.725.599.599 0 01-.717-.448c-.546-2.359-2.796-2.594-3.474-2.61-.12-.004-.263-.004-.395-.004-1.064.009-3.543.401-3.543 3.807v1.165c1.625-.002 6.04-.008 8.14-.008 1.006 0 1.787.297 2.322.885.776.855.692 1.989.69 2.042zm-7.417 5.168c1.356-.025 1.356-1.075 1.356-1.47 0-.359 0-1.451-1.376-1.485l-.168-.003h-.042c-1.33.014-1.33 1.073-1.33 1.47 0 .401 0 1.471 1.355 1.488h.205zm.008-4.16c.519.015 2.538.222 2.538 2.69 0 2.476-2.022 2.666-2.53 2.678h-.243c-.532-.009-2.53-.202-2.53-2.695 0-2.485 1.978-2.672 2.51-2.675h.054c.07 0 .14 0 .201.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLogoutRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.823 2a3.674 3.674 0 013.67 3.67v12.16a3.674 3.674 0 01-3.67 3.67h-8.16a3.674 3.674 0 01-3.67-3.67.75.75 0 011.5 0c0 1.196.974 2.17 2.17 2.17h8.16c1.197 0 2.17-.974 2.17-2.17V5.67c0-1.196-.973-2.17-2.17-2.17h-8.16c-1.196 0-2.17.974-2.17 2.17a.75.75 0 01-1.5 0A3.674 3.674 0 018.663 2h8.16zM6.265 8.218a.75.75 0 010 1.06L4.543 11h7.2a.75.75 0 010 1.5H4.592l1.698 1.683a.749.749 0 11-1.054 1.066l-3.013-2.983a.745.745 0 01-.003-1.064l2.984-2.984a.75.75 0 011.061 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLongDistanceCallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.68 16.108c-.471-.333-1.087-.504-1.835-.504-.163 0-.328.009-.49.028-.043-.033-.225-.224-.348-1.028-.12-.773-.134-1.778-.134-2.465v-.09c0-.688.014-1.691.134-2.464.126-.804.305-.995.347-1.028.163.02.325.028.49.028.746 0 1.365-.171 1.835-.505.471-.333.79-.829.939-1.459.081-.322.12-.655.117-.989 0-1.834-.988-2.826-2.857-2.868-.33-.008-.714.056-.84.076l-.014.002-.025.003c-1.087.196-2.065 1.19-2.757 2.799-.714 1.655-1.092 3.87-1.092 6.403v.09c0 2.532.375 4.745 1.09 6.406.692 1.607 1.67 2.602 2.756 2.8l.025.006.014.003c.12.02.468.076.784.076h.056c1.872-.042 2.858-1.037 2.858-2.869a3.93 3.93 0 00-.118-.988c-.146-.636-.462-1.126-.936-1.463zm12.338-7.86a9.797 9.797 0 00-9.036-5.988h-.022a.53.53 0 00-.63.52v18.6a.532.532 0 00.733.493c5.42-.045 9.776-4.476 9.731-9.893a9.884 9.884 0 00-.776-3.731zm-1.767 8.684a11.21 11.21 0 00-2.474-1.03 17.97 17.97 0 00.395-3.284h3.535a8.65 8.65 0 01-1.456 4.314zm-6.86-7.83a17.8 17.8 0 003.4-.391c.185.938.292 1.888.317 2.843h-3.717V9.103zm0-1.064V3.37c.361.081.717.266 1.064.557.502.42.955 1.034 1.35 1.821.306.616.552 1.263.737 1.927a16.568 16.568 0 01-3.151.364zm1.064 12.169c-.347.29-.703.476-1.064.557v-4.44a16.6 16.6 0 013.09.35 10.76 10.76 0 01-.676 1.715c-.395.787-.848 1.397-1.35 1.818zm-1.064-4.947v-2.64h3.717a16.62 16.62 0 01-.361 3.023 17.552 17.552 0 00-3.356-.384zm4.784-3.706a17.793 17.793 0 00-.35-3.107c.947-.28 1.804-.641 2.535-1.08a8.675 8.675 0 011.353 4.187h-3.538zm.989-5.67c.199.2.387.404.563.62-.613.355-1.345.663-2.154.907a11.983 11.983 0 00-.815-2.14 7.935 7.935 0 00-.95-1.482 8.718 8.718 0 013.356 2.095zm-3.359 14.463c.345-.415.664-.91.95-1.482.308-.622.56-1.27.756-1.933.776.23 1.485.518 2.084.852a8.45 8.45 0 01-.434.465 8.63 8.63 0 01-3.356 2.098z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLongDistanceCallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.044 2.25c5.397.003 9.767 4.381 9.764 9.779a9.771 9.771 0 01-5.963 8.991 9.71 9.71 0 01-3.787.765.238.238 0 01-.104.022.28.28 0 01-.28-.28V2.536a.28.28 0 01.28-.28l.022.002a.278.278 0 01.068-.008zm-5.345.524c1.756.039 2.65.933 2.65 2.652.003.317-.034.636-.112.944-.193.821-.793 1.796-2.563 1.796-.174 0-.35-.008-.521-.03-.334.036-.507.702-.58 1.103-.154.832-.174 1.969-.174 2.753v.093c0 .784.017 1.924.174 2.756.076.4.25 1.07.58 1.104.173-.023.347-.031.52-.031 1.771 0 2.373.975 2.564 1.795.078.309.115.625.112.942 0 1.72-.89 2.613-2.65 2.652l-.053.003c-.3 0-.642-.056-.757-.073l-.02-.003-.016-.002c-1.014-.188-1.941-1.146-2.61-2.7-.715-1.662-1.093-3.891-1.093-6.44v-.096c0-2.549.378-4.778 1.092-6.44.67-1.554 1.597-2.515 2.611-2.7l.017-.003.02-.002c.123-.02.495-.082.809-.073zm5.536 13.328l-.001 5.114c.511-.045 1.01-.271 1.487-.672.538-.45 1.026-1.106 1.449-1.944.312-.621.575-1.317.784-2.066l.274.063a16.976 16.976 0 00-3.993-.495zm4.265.567l-.012.042a11.969 11.969 0 01-.817 2.141c-.47.932-1.02 1.658-1.625 2.154a9.21 9.21 0 005.166-3.21l.193.118c-.78-.509-1.78-.935-2.905-1.245zM6.685 3.303a4.313 4.313 0 00-.711.067l-.031.006c-1.622.3-3.264 3.356-3.264 8.616v.096c0 3.131.572 5.117 1.05 6.23.586 1.363 1.393 2.235 2.214 2.389l.03.005c.297.048.538.07.712.067.756-.016 1.291-.201 1.639-.56.333-.344.495-.857.495-1.566a3.139 3.139 0 00-.095-.81l-.003-.008c-.218-.938-.888-1.392-2.05-1.392a3.49 3.49 0 00-.485.031c-.014.003-.028.003-.042.003-.815-.034-1.025-1.165-1.095-1.538-.162-.874-.182-2.045-.182-2.851v-.096c0-.806.02-1.977.182-2.851.07-.373.28-1.504 1.095-1.535.014 0 .028 0 .042.003.16.022.323.03.485.03 1.162 0 1.835-.456 2.05-1.392l.003-.008a3.17 3.17 0 00.095-.81c0-.708-.162-1.221-.495-1.566-.348-.36-.883-.543-1.639-.56zm14.561 9l-.02.003h-4.13l-.002.165a17.702 17.702 0 01-.455 3.656c1.102.299 2.093.71 2.913 1.217a9.148 9.148 0 001.694-5.04zm-4.712.004l-4.3-.001v3.237l.22.003c1.278.026 2.51.178 3.64.441.27-1.138.42-2.386.44-3.68zm3.133-5.453l.046-.03c-.839.545-1.868.986-3.023 1.305.25 1.13.39 2.353.408 3.616h4.128l.02.003V11.7a9.2 9.2 0 00-1.58-4.846zm-3.523 1.413l-.191.046a18.02 18.02 0 01-3.718.412l-.001 3.02h4.299l-.001-.165a17.305 17.305 0 00-.388-3.313zm-3.91-5.448v5.344l.359-.005a17.04 17.04 0 003.418-.435c-.217-.836-.5-1.606-.841-2.288-.42-.838-.908-1.49-1.449-1.944-.48-.404-.977-.628-1.487-.672zm1.81.208l.056.046c.583.495 1.116 1.205 1.571 2.11.361.716.659 1.525.887 2.399l-.33.088c1.202-.302 2.275-.743 3.108-1.272a9.141 9.141 0 00-.783-.89 9.158 9.158 0 00-4.509-2.481z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLongDistanceCallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.859 2.25c.031 0 .062.003.092.008l.03-.002.176.005.1.001c5.29.149 9.534 4.489 9.529 9.814a9.809 9.809 0 01-5.986 9.028 9.769 9.769 0 01-3.741.77.532.532 0 01-.733-.493V2.783c0-.294.239-.532.533-.532zm-4.984.507c1.872.042 2.858 1.036 2.858 2.868a3.93 3.93 0 01-.118.99c-.148.632-.465 1.122-.938 1.459-.474.336-1.087.504-1.835.504-.163 0-.328-.009-.49-.028-.042.033-.224.224-.348 1.028-.12.773-.134 1.778-.134 2.465v.09c0 .688.014 1.691.134 2.464.126.804.306.995.348 1.028a3.99 3.99 0 01.49-.028c.745 0 1.364.168 1.835.505.47.336.79.829.938 1.459.081.322.12.655.118.989 0 1.834-.99 2.826-2.858 2.868l-.056.006a5.17 5.17 0 01-.784-.076l-.014-.003-.025-.005c-1.087-.2-2.064-1.194-2.756-2.802-.712-1.658-1.09-3.87-1.09-6.403v-.09c0-2.532.375-4.745 1.09-6.406.692-1.607 1.67-2.602 2.756-2.8l.025-.004.014-.002c.126-.02.51-.084.84-.076zm5.516 13.562v4.446c.361-.08.718-.269 1.064-.56.502-.42.955-1.033 1.35-1.82.263-.522.488-1.097.675-1.714-.98-.21-2.015-.328-3.089-.352zm-5.538-12.5a3.787 3.787 0 00-.644.061l-.031.006c-.711.137-1.423.927-1.96 2.174-.457 1.064-1.004 2.966-1.004 5.98v.095c0 3.014.547 4.916 1.003 5.98.535 1.247 1.25 2.037 1.958 2.174l.006.003.03.006c.275.044.49.064.645.061.653-.014 1.129-.17 1.412-.465.274-.285.406-.722.406-1.339a2.864 2.864 0 00-.084-.722c-.003-.006-.003-.012-.003-.017-.115-.493-.42-1.149-1.737-1.149-.148 0-.294.009-.442.028a.422.422 0 01-.084.003c-.275-.011-.664-.129-.961-.627-.163-.27-.283-.63-.37-1.098-.126-.678-.182-1.552-.182-2.838v-.09c0-1.285.056-2.162.182-2.837.087-.468.207-.83.37-1.098.297-.499.686-.616.96-.628.029 0 .057 0 .085.003.145.02.294.028.442.028 1.32 0 1.625-.655 1.737-1.148 0-.006.003-.011.003-.017a2.85 2.85 0 00.084-.723c0-.619-.135-1.056-.406-1.339-.286-.294-.762-.45-1.415-.467zm9.66 13.112l-.054.181a11.642 11.642 0 01-.701 1.751 7.85 7.85 0 01-.95 1.48 8.757 8.757 0 003.788-2.558 10.35 10.35 0 00-2.083-.854zm4.194-4.314h-3.534a17.694 17.694 0 01-.393 3.282 11.14 11.14 0 012.47 1.029 8.692 8.692 0 001.457-4.311zm-4.599 0l-3.718-.001v2.638a17.81 17.81 0 013.358.383c.206-.945.328-1.964.36-3.02zm-.315-3.908l-.288.062c-.983.195-2.033.309-3.115.332v2.449h3.72a16.778 16.778 0 00-.317-2.843zm3.563-1.34l-.264.15c-.67.37-1.434.681-2.267.927.202.98.32 2.027.349 3.107h3.535a8.745 8.745 0 00-1.353-4.185zM12.39 3.364l-.001 4.672.12-.002c1.054-.03 2.07-.15 3.032-.36a10.725 10.725 0 00-.737-1.93c-.395-.786-.851-1.4-1.35-1.82-.346-.291-.703-.479-1.064-.56zm2.418.422l.114.142c.3.384.58.831.835 1.338.325.646.598 1.365.815 2.138a9.971 9.971 0 002.151-.903 8.692 8.692 0 00-3.915-2.715z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLossTheftDevicesFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.463 2.16c1.11 0 1.919.269 2.473.826.552.555.818 1.362.818 2.463v13.109c0 1.115-.269 1.927-.826 2.479-.552.546-1.359.812-2.465.812h-6.555c-1.106 0-1.913-.266-2.465-.812-.554-.552-.826-1.364-.826-2.48v-3.562c-1.289-.09-2.314-.493-3.05-1.202-.874-.843-1.317-2.09-1.317-3.709 0-1.619.443-2.865 1.317-3.708.736-.712 1.764-1.112 3.056-1.202.042-.947.31-1.658.817-2.17.564-.567 1.37-.844 2.468-.844zM14.19 17.289c-.697 0-1.112.417-1.112 1.115 0 .339.093.61.289.81.196.198.479.305.82.305.342 0 .625-.107.821-.306.19-.199.289-.47.294-.81 0-.697-.414-1.114-1.112-1.114zM8.18 6.278c-1.255 0-2.21.305-2.835.907-.647.622-.975 1.6-.975 2.902 0 1.303.328 2.28.975 2.902.625.602 1.58.908 2.835.908s2.21-.306 2.835-.908c.647-.622.974-1.6.974-2.902s-.327-2.28-.974-2.902c-.625-.602-1.58-.907-2.835-.907zm-.28 6.039a.46.46 0 11-.46.46.46.46 0 01.46-.46zM7.9 7c.655 0 1.216.233 1.574.656.311.367.437.843.361 1.344-.109.673-.577 1.084-.775 1.26-.079.07-.163.138-.244.205-.14.115-.507.412-.51.519v.51a.403.403 0 01-.807 0v-.513c0-.485.429-.832.804-1.14.076-.062.154-.126.222-.185.148-.13.45-.398.515-.785a.828.828 0 00-.177-.694c-.204-.241-.546-.373-.96-.373-.348 0-.639.11-.838.322-.19.202-.294.488-.294.81v.11a.403.403 0 01-.807 0v-.11c0-.527.182-1.011.513-1.361C6.833 7.199 7.326 7 7.9 7z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLossTheftDevicesLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.732 2.156c1.03 0 1.773.244 2.272.745.498.502.739 1.241.739 2.266v13.656c0 1.036-.244 1.781-.745 2.28-.496.493-1.238.731-2.266.731H10.63c-1.028 0-1.77-.238-2.266-.731-.502-.496-.745-1.244-.745-2.28l-.001-4.096-.011.001c-1.341-.048-2.39-.43-3.126-1.138-.817-.787-1.232-1.966-1.232-3.507 0-1.54.415-2.72 1.232-3.507.737-.71 1.791-1.091 3.134-1.138v-.27c0-1.009.245-1.746.743-2.25.51-.512 1.252-.762 2.272-.762h7.1zm0 .56H10.63c-.863 0-1.473.194-1.871.594-.392.395-.583 1.003-.583 1.857v.271h.014c1.34.048 2.392.43 3.126 1.138.818.788 1.233 1.967 1.233 3.507 0 1.541-.415 2.72-1.233 3.507-.737.711-1.792 1.093-3.138 1.139l.001 4.094c0 1.742.711 2.45 2.451 2.45h7.1c1.743 0 2.452-.708 2.452-2.45V5.167c0-.87-.188-1.484-.574-1.87-.387-.387-1.003-.58-1.877-.58zm-3.546 15.11c.504 0 .832.266.832.834 0 .275-.076.477-.21.614-.146.148-.362.221-.622.221s-.477-.073-.622-.221c-.135-.137-.21-.339-.21-.614 0-.568.327-.834.832-.834zM7.9 5.994c-1.33 0-2.35.33-3.031.986-.703.678-1.062 1.722-1.062 3.103 0 1.381.356 2.426 1.06 3.104.677.656 1.697.986 3.03.986 1.333 0 2.35-.33 3.028-.986.703-.678 1.059-1.723 1.059-3.104 0-1.38-.356-2.425-1.059-3.103-.675-.656-1.695-.986-3.025-.986zm0 6.479a.342.342 0 110 .683.342.342 0 010-.683zm.003-5.4c.655 0 1.213.229 1.565.646.306.359.43.827.348 1.317-.11.664-.58 1.078-.782 1.258-.08.072-.17.142-.257.215-.252.205-.597.488-.597.667v.546a.28.28 0 01-.28.28.28.28 0 01-.28-.28v-.546c0-.448.426-.796.804-1.104a9.47 9.47 0 00.24-.199c.171-.148.524-.462.6-.927.053-.33-.022-.627-.221-.863-.247-.29-.653-.45-1.14-.45-.415 0-.762.134-1.003.392-.23.24-.356.585-.356.966v.118a.28.28 0 01-.28.28.28.28 0 01-.28-.28V8.99c0-.524.18-1.006.507-1.35.35-.373.837-.569 1.412-.569z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLossTheftDevicesRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.463 2.16c1.11 0 1.916.269 2.47.826.555.558.821 1.362.821 2.465v13.11c0 1.114-.272 1.927-.826 2.479-.552.546-1.359.812-2.465.812h-6.555c-1.106 0-1.913-.266-2.465-.812-.557-.552-.826-1.365-.826-2.48l-.001-3.562c-1.29-.09-2.313-.493-3.05-1.202-.873-.843-1.316-2.09-1.316-3.709 0-1.619.443-2.865 1.317-3.709.737-.71 1.763-1.114 3.056-1.202.043-.948.31-1.658.817-2.173.564-.566 1.37-.843 2.468-.843h6.555zm0 1.12h-6.555c-1.445 0-2.09.555-2.163 1.897 1.29.089 2.313.493 3.048 1.201.874.844 1.317 2.09 1.317 3.71 0 1.618-.443 2.865-1.317 3.708-.737.71-1.763 1.114-3.055 1.203v3.562c0 1.582.588 2.17 2.17 2.17h6.555c1.583 0 2.17-.588 2.17-2.17V5.45c0-.792-.162-1.341-.492-1.675-.33-.333-.883-.496-1.678-.496zm-3.275 14.01c.698 0 1.112.417 1.112 1.115 0 .341-.098.613-.288.81-.19.195-.482.305-.826.305-.342 0-.628-.107-.821-.306-.193-.199-.289-.47-.289-.81 0-.697.415-1.114 1.112-1.114zM8.18 6.278c-1.258 0-2.21.305-2.835.907-.647.622-.975 1.6-.975 2.902 0 1.303.328 2.28.975 2.902.625.602 1.58.908 2.835.908s2.21-.306 2.835-.908c.647-.622.974-1.6.974-2.902s-.327-2.28-.974-2.902c-.625-.602-1.577-.907-2.835-.907zm-.28 6.039c.255 0 .46.204.46.46a.46.46 0 11-.46-.46zm-.003-5.32c.656 0 1.213.233 1.574.656.311.367.44.846.359 1.345-.11.672-.577 1.084-.776 1.26-.079.07-.163.137-.244.205-.137.112-.504.408-.507.515v.513a.405.405 0 01-.403.403c-.221 0-.4-.18-.404-.403v-.513c0-.487.43-.835.804-1.14.079-.065.154-.126.222-.185.145-.129.45-.398.515-.784a.828.828 0 00-.176-.695c-.205-.24-.547-.373-.961-.373-.347 0-.639.113-.838.323-.19.198-.294.487-.294.81v.108a.403.403 0 01-.807 0v-.109c0-.527.183-1.011.513-1.361.356-.376.849-.574 1.423-.574z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLoudspeakerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.58 5.614c.251.182.4.477.4.787v11.185a.973.973 0 01-.4.787.94.94 0 01-.807.135l-5.462-1.642-.194.62a.801.801 0 01-.403.481.782.782 0 01-.625.056l-2.269-.711a.822.822 0 01-.538-1.028l.18-.574-3.18-.956a.53.53 0 01-.546.516c-.302 0-.546-.23-.546-.516v-5.51c0-.282.244-.515.546-.515.299 0 .54.224.546.504l12.49-3.753a.92.92 0 01.807.134zm2.932 9.815l1.507 1.508a.548.548 0 01-.773.773l-1.507-1.507a.548.548 0 01.773-.774zm-12.033.7l-.07.225 1.747.549.07-.224-1.747-.55zm13.868-4.943a.545.545 0 110 1.092h-2.185a.545.545 0 110-1.092h2.185zm-.32-5.496a.548.548 0 010 .773L19.482 8.01a.545.545 0 01-.773 0 .548.548 0 010-.773l1.546-1.546a.548.548 0 01.774 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLoudspeakerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.65 5.57a.744.744 0 01.294.596v11.659a.754.754 0 01-.294.6.667.667 0 01-.589.106l-6.04-1.826a.54.54 0 01-.018.075l-.241.765a.55.55 0 01-.275.327.539.539 0 01-.428.042l-2.325-.728a.561.561 0 01-.367-.703l.24-.765.018-.041-3.884-1.175.001.502a.276.276 0 01-.277.277.276.276 0 01-.277-.277V8.996a.277.277 0 11.554 0v.498l13.32-4.028a.662.662 0 01.588.104zm-.398.423c-.011 0-.02.003-.03.005L2.884 10.032c-.062.02-.106.09-.106.17v3.595c0 .08.044.151.106.17l13.336 4.034c.034.011.065.003.095-.02a.186.186 0 00.07-.15V6.168a.183.183 0 00-.07-.151.104.104 0 00-.064-.025zm2.784 9.308L21 17.264a.279.279 0 11-.395.395l-1.964-1.963a.279.279 0 11.395-.395zm-11.893.583l-.241.764 2.325.729.24-.765-2.324-.728zm14.392-4.435a.28.28 0 01.28.28.28.28 0 01-.28.28h-2.779a.28.28 0 01-.28-.28.28.28 0 01.28-.28h2.779zm-.527-5.706c.11.11.11.286 0 .395l-1.963 1.964a.28.28 0 01-.395 0 .279.279 0 010-.395l1.963-1.964a.28.28 0 01.395 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLoudspeakerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.563 5.622a.98.98 0 01.392.79v11.202a.98.98 0 01-.39.787.904.904 0 01-.804.143L10.304 16.9l-.198.632a.801.801 0 01-.403.482.782.782 0 01-.625.056l-2.269-.711a.822.822 0 01-.538-1.028l.185-.59-3.21-.966a.535.535 0 01-1.056-.123V9.37a.535.535 0 011.056-.122L15.76 5.479a.894.894 0 01.802.143zm2.938 9.854l1.507 1.507a.548.548 0 01-.773.773l-1.507-1.507a.548.548 0 01.773-.773zM15.885 6.56L3.294 10.35v3.322l12.59 3.793V6.56zm-8.418 9.617l-.07.224 1.748.549.07-.224-1.748-.55zm13.869-4.944a.545.545 0 110 1.092H19.15a.545.545 0 110-1.092h2.185zm-.32-5.496a.548.548 0 010 .773L19.47 8.056a.545.545 0 01-.773 0 .548.548 0 010-.773l1.546-1.546a.548.548 0 01.773 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLungsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.75 11.448l-1.176.594c0-.285 0-.563-.006-.832l.768-.386a.55.55 0 00.297-.488v-5.88h.74v5.894c0 .208.114.395.296.488l.762.386c-.003.27-.005.547-.005.832l-1.202-.608a.522.522 0 00-.473 0m9.834 3.415c-.588-3.47-3.092-6.392-3.437-6.779-.498-.756-1.193-1.123-2.12-1.123-1.454 0-1.989.832-2.182 1.367-.087.17-.165.378-.241.644-.062.219-.107.591-.132 1.06l-.033-.018V4.317a.94.94 0 00-.93-.947h-1.014a.94.94 0 00-.93.947V10l-.034.017c-.028-.482-.07-.865-.134-1.09v-.002a3.503 3.503 0 00-.241-.642c-.19-.535-.726-1.367-2.18-1.367-.927 0-1.621.367-2.12 1.123-.345.39-2.849 3.309-3.437 6.782-.465 2.75-.31 4.347.499 5.18a1.962 1.962 0 001.406.551c1.039 0 1.68-.549 2.033-.849l.079-.067c.3-.25.38-.316.717-.316.409.002 1.485-.09 1.647-.135 1.064-.28 1.65-1.123 1.65-2.361.03-.695.087-2.107.112-3.56l1.428-.72 1.454.734c.025 1.462.081 2.882.112 3.577 0 1.252.586 2.095 1.645 2.372.17.048 1.254.137 1.644.137h.005c.34 0 .42.068.717.317l.079.067c.353.3.994.849 2.034.849.042 0 .086-.003.131-.003a1.96 1.96 0 001.277-.552c.81-.834.961-2.431.496-5.179"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLungsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.543 19.499a.963.963 0 01-.605.246c-.74.028-1.154-.325-1.493-.613l-.09-.076c-.364-.302-.678-.566-1.4-.566-.407-.03-1.322-.09-1.418-.103-.386-.101-.899-.356-.899-1.426-.148-3.297-.199-6.958.011-7.697a2.78 2.78 0 01.213-.558c.059-.18.238-.723 1.252-.723.608 0 1 .21 1.359.762.028.031 2.703 3 3.28 6.404.4 2.333.328 3.795-.21 4.35zm-8.423-7.894a.415.415 0 00-.373 0l-1.406.709c.003-.39 0-.768-.005-1.123l.924-.465a.425.425 0 00.232-.381l-.014-6.118 1.023-.014v6.149c0 .162.09.308.232.38l.944.477c-.005.372-.005.77-.002 1.176l-1.555-.79zm-2.745 5.348c0 1.033-.513 1.288-.877 1.383-.118.02-1.036.093-1.44.11-.72 0-1.033.26-1.397.565l-.09.076c-.34.286-.74.642-1.493.614a.963.963 0 01-.605-.247c-.538-.555-.61-2.017-.219-4.345.577-3.403 3.255-6.375 3.325-6.462.317-.493.709-.703 1.317-.703.907 0 1.148.412 1.283.793.061.115.12.269.182.487.213.737.16 4.395.014 7.729zm12.21-1.944c-.62-3.659-3.375-6.712-3.448-6.782-.47-.734-1.132-1.092-2.02-1.092-1.042 0-1.77.462-2.017 1.23-.095.17-.173.375-.255.66-.07.244-.114.695-.14 1.25l-.367-.185V4.208a.832.832 0 00-.823-.838h-1.037a.832.832 0 00-.823.838v5.868l-.347.176c-.028-.565-.07-1.025-.143-1.271-.082-.283-.16-.493-.224-.591-.278-.84-1.006-1.303-2.048-1.303-.89 0-1.549.359-1.975 1.034-.117.129-2.87 3.182-3.493 6.84-.462 2.726-.325 4.297.448 5.087a1.778 1.778 0 001.295.504c.98 0 1.577-.507 1.938-.815l.084-.07c.316-.263.454-.353.874-.373.437 0 1.49-.095 1.619-.131.983-.26 1.527-1.045 1.527-2.21.03-.717.09-2.188.117-3.687l1.602-.806 1.754.885c.028 1.487.087 2.938.118 3.65 0 1.168.543 1.955 1.52 2.213.132.036 1.185.131 1.625.131h.009c.42 0 .551.11.865.373l.084.07c.362.308.958.815 1.939.815.042 0 .086 0 .128-.003a1.803 1.803 0 001.166-.499c.773-.79.91-2.36.448-5.086z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconLungsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.218 19.154c-.008.006-.179.174-.459.185-.63.034-1-.28-1.322-.554l-.09-.076c-.353-.297-.72-.602-1.501-.602h-.009a17.72 17.72 0 01-1.327-.096c-.359-.095-.726-.305-.729-1.204-.137-3.115-.193-6.787.006-7.487a2.36 2.36 0 01.16-.435c.016-.033.033-.067.044-.103.056-.171.188-.566 1.031-.566.524 0 .846.174 1.118.597.02.028.042.058.064.084.026.028 2.608 2.902 3.163 6.179.47 2.759.176 3.745-.149 4.078m-8.467-7.706l-1.177.594c0-.285 0-.563-.006-.832l.768-.386a.55.55 0 00.297-.488v-5.88h.74v5.894c0 .208.114.395.296.488l.762.386c-.003.27-.005.547-.005.832l-1.202-.608a.522.522 0 00-.473 0m-2.533 5.359c0 .854-.367 1.067-.686 1.151-.12.02-.986.104-1.367.104h-.008c-.779 0-1.146.305-1.499.602l-.09.076c-.319.274-.683.588-1.322.554-.28-.01-.45-.179-.453-.179-.328-.339-.622-1.322-.157-4.084.554-3.277 3.134-6.151 3.162-6.182a.664.664 0 00.065-.084c.269-.423.593-.597 1.117-.597.846 0 .975.398 1.031.566a.616.616 0 00.048.11c.05.092.1.23.16.43.195.704.14 4.376 0 7.533m12.366-1.944c-.588-3.47-3.092-6.392-3.437-6.779-.498-.756-1.193-1.123-2.12-1.123-1.454 0-1.989.832-2.182 1.367-.087.17-.165.378-.241.644-.062.219-.107.591-.132 1.06l-.033-.018V4.317a.94.94 0 00-.93-.947h-1.014a.94.94 0 00-.93.947V10l-.034.017c-.028-.482-.07-.865-.134-1.09v-.002a3.503 3.503 0 00-.241-.642c-.19-.535-.726-1.367-2.18-1.367-.927 0-1.621.367-2.12 1.123-.345.39-2.849 3.309-3.437 6.782-.465 2.75-.31 4.347.499 5.18a1.962 1.962 0 001.406.551c1.039 0 1.68-.549 2.033-.849l.079-.067c.3-.25.38-.316.717-.316.409.002 1.485-.09 1.647-.135 1.064-.28 1.65-1.123 1.65-2.361.03-.695.087-2.107.112-3.56l1.428-.72 1.454.734c.025 1.462.081 2.882.112 3.577 0 1.252.586 2.095 1.645 2.372.17.048 1.254.137 1.644.137h.005c.34 0 .42.068.717.317l.079.067c.353.3.994.849 2.034.849.042 0 .086-.003.131-.003a1.96 1.96 0 001.277-.552c.81-.834.961-2.431.496-5.179"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMapFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.589 19.743l-3.222-.53V3.53l3.222.53v15.683zm-9.216.613l-3.289-1.067V3.653l3.289 1.067v15.636zM21.32 2.908l-4.477-.737c-.014-.003-.03.003-.044.003-.02-.003-.037-.011-.06-.011-.041 0-.078.014-.117.022-.022.006-.047-.003-.07.006l-4.546 1.414L7.65 2.191c-.022-.006-.047 0-.073-.006-.039-.008-.078-.025-.12-.025-.02 0-.037.008-.053.008-.014.003-.028-.005-.045-.002l-4.67.736a.627.627 0 00-.529.622v16.958a.627.627 0 00.725.62l4.521-.715 4.404 1.431a.633.633 0 00.38 0l4.597-1.431 4.328.714a.634.634 0 00.734-.619V3.527a.634.634 0 00-.53-.62z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMapLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.026 20.2l-3.762-.62V3.054l3.762.619v16.526zM2.98 3.674l3.958-.624v16.526l-3.958.625V3.675zm9.431.706l4.03-1.255v16.499l-4.03 1.252V4.381zM7.76 3.135l3.835 1.243v16.493L7.76 19.628V3.135zm13.743-.216l-4.583-.753c-.011-.003-.02.002-.028.002-.014 0-.022-.008-.036-.008-.028 0-.05.011-.076.014-.014.003-.03-.003-.045.003l-4.728 1.47L7.474 2.18c-.014-.006-.031 0-.045-.003-.028-.006-.053-.017-.081-.017-.012 0-.023.006-.037.008l-.028-.002-4.776.753a.41.41 0 00-.347.406v17.356a.41.41 0 00.409.409c.022 0 .042-.003.064-.006l4.681-.736 4.56 1.476a.39.39 0 00.247.003l4.759-1.48 4.487.74a.409.409 0 00.477-.403V3.325a.407.407 0 00-.342-.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMapRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.591 19.74l-3.218-.53V3.53l3.218.53v15.68zM3.421 4.062l3.411-.538v15.684l-3.411.54V4.062zm9.212.664l3.482-1.084v15.641l-3.482 1.084V4.726zM8.087 3.653l3.291 1.067v15.633l-3.29-1.067V3.653zm13.235-.748l-4.476-.737c-.014-.002-.03.003-.045.003-.02-.003-.036-.011-.056-.011-.042 0-.078.014-.117.022-.023.006-.048-.002-.07.006l-4.55 1.415L7.654 2.19c-.025-.009-.048 0-.073-.006-.042-.008-.078-.025-.123-.025-.02 0-.036.008-.053.011-.014.003-.028-.005-.045-.003l-4.67.737a.63.63 0 00-.529.622v16.952a.628.628 0 00.728.619l4.521-.714 4.404 1.429a.648.648 0 00.38.002l4.597-1.43 4.328.713a.646.646 0 00.51-.14.63.63 0 00.221-.479V3.524a.629.629 0 00-.527-.619z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMedicalHistoryFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.772 4.18c-.079-.25-.317-1.004-1.866-1.004-1.672 0-1.924.838-1.958 1.57l-.005.386c.01.266.022.652 1.963.652s1.955-.386 1.96-.613V4.81a2.401 2.401 0 00-.094-.63zm3.916-.749c.854 0 1.602.611 1.602 1.306V20.38c0 .709-.734 1.305-1.602 1.305H6.128c-.869 0-1.603-.6-1.603-1.305V4.734c0-.695.748-1.305 1.6-1.305H9.08C9.55 2.515 10.522 2 11.906 2c1.686 0 2.468.709 2.83 1.431h2.952zm-.731 10.112h-1.563l-.757-2.14a.555.555 0 00-1.053.028l-.625 2.115h-.53a.55.55 0 00-.503.325l-.35.776-.958-4.773a.552.552 0 00-.516-.44.537.537 0 00-.557.387l-1.143 3.672h-1.55a.553.553 0 00-.554.549c0 .303.247.549.555.549h1.955a.557.557 0 00.53-.387l.619-1.988.874 4.336a.555.555 0 001.047.117l.91-2.022h.586c.244 0 .46-.16.53-.395l.257-.868.317.896a.554.554 0 00.52.367h1.956a.55.55 0 00.552-.549.555.555 0 00-.55-.555zM11.21 5.134a.553.553 0 01-.554-.549c0-.302.246-.549.554-.549h1.393a.55.55 0 01.551.55.55.55 0 01-.551.548H11.21z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMedicalHistoryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.452 20.555V4.59c0-.081-.26-.33-.63-.33h-2.944c.014.098.025.193.031.294l.008.19-.002.093c-.045 1.305-1.244 1.574-3.028 1.574-1.785 0-2.984-.272-3.031-1.591v-.194l.005-.092c.003-.098.023-.185.034-.274h-2.95c-.37 0-.63.252-.63.33v15.964c0 .112.275.33.63.33h11.877c.356 0 .63-.221.63-.33zM11.881 2.8c-1.457 0-2.157.569-2.216 1.79l-.005.154c.014.392.03.866 2.218.866s2.207-.474 2.219-.818V4.66a2.623 2.623 0 00-.11-.692c-.246-.787-.935-1.168-2.106-1.168zm5.938.658c.757 0 1.443.541 1.443 1.132v15.964c0 .616-.661 1.131-1.443 1.131H5.943c-.782 0-1.443-.518-1.443-1.131V4.59c0-.594.69-1.134 1.443-1.134h3.154C9.517 2.513 10.472 2 11.884 2c1.717 0 2.462.742 2.781 1.46h3.154zm-6.84 1.474a.405.405 0 01-.406-.4c0-.222.182-.401.406-.401h1.801c.224 0 .406.179.406.4 0 .222-.182.4-.406.4h-1.8zm6.63 8.67c.224 0 .406.179.406.4 0 .221-.182.4-.406.4h-2.863a.41.41 0 01-.383-.266l-.493-1.386-.406 1.367a.403.403 0 01-.39.285h-.666l-.653 2.112a.407.407 0 01-.39.283h-.02a.403.403 0 01-.377-.322l-1.023-5.042-.826 2.633a.407.407 0 01-.39.283H6.154a.403.403 0 01-.407-.4c0-.222.18-.401.407-.401H8.43l1.21-3.857a.391.391 0 01.409-.28c.185.008.342.14.378.322l1.02 5.028.269-.874a.41.41 0 01.389-.283h.664l.675-2.272a.402.402 0 01.378-.285c.177-.006.336.1.395.266l.815 2.291 2.577-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMedicalHistoryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.688 20.507c.232 0 .4-.123.423-.17l-.009-15.6c-.02 0-.201-.13-.414-.13H15.04c.002.032.008.057.008.085l.008.193-.002.107C15 6.502 13.51 6.714 11.909 6.714c-1.602 0-3.092-.213-3.149-1.75l-.002-.079.002-.126.009-.1c0-.018.005-.037.005-.054h-2.65c-.215 0-.397.132-.428.185l.011 15.588c.017.003.185.129.418.129h11.563zM11.906 3.179c-1.672 0-1.924.838-1.958 1.569l-.005.14c.01.269.022.653 1.963.653s1.955-.387 1.96-.614V4.81a2.384 2.384 0 00-.097-.628c-.076-.25-.314-1.003-1.863-1.003zm5.782.252c.854 0 1.602.611 1.602 1.306V20.38c0 .709-.734 1.305-1.602 1.305H6.128c-.869 0-1.603-.6-1.603-1.305V4.734c0-.695.748-1.305 1.6-1.305H9.08C9.55 2.515 10.522 2 11.906 2c1.686 0 2.468.709 2.83 1.431h2.952zm-6.477 1.7a.553.553 0 01-.554-.548c0-.303.246-.55.554-.55h1.393a.55.55 0 01.551.55.55.55 0 01-.551.549H11.21zm5.746 8.415a.55.55 0 01.551.55.55.55 0 01-.551.548H15a.55.55 0 01-.52-.367l-.317-.896-.258.868a.552.552 0 01-.53.395h-.585l-.91 2.023a.554.554 0 01-1.048-.118l-.874-4.336-.619 1.989a.554.554 0 01-.53.386H6.857a.553.553 0 01-.555-.549c0-.302.247-.549.555-.549h1.549l1.143-3.67a.544.544 0 01.557-.386.549.549 0 01.513.44l.96 4.77.35-.776a.55.55 0 01.505-.325h.53l.624-2.114a.555.555 0 011.053-.028l.756 2.14c-.002.005 1.56.005 1.56.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMenuLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.74 5.737a.575.575 0 01-.58-.568c0-.314.26-.569.58-.569h18.53c.319 0 .58.255.58.569a.575.575 0 01-.58.568H2.74zm18.526 5.678c.32 0 .58.255.58.569 0 .313-.26.568-.58.568H2.74a.575.575 0 01-.58-.568c0-.314.26-.569.58-.569h18.526zm0 6.815c.32 0 .58.255.58.569 0 .314-.26.569-.58.569H2.74a.575.575 0 01-.58-.57c0-.313.26-.568.58-.568h18.526z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMenuRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.003 6.241a.834.834 0 01-.843-.82c0-.451.378-.821.843-.821H21c.465 0 .843.367.843.82a.834.834 0 01-.843.821H3.003zm18 4.922c.465 0 .843.367.843.82a.832.832 0 01-.843.821h-18a.832.832 0 01-.843-.82c0-.454.378-.821.843-.821h18zm0 6.563c.465 0 .843.367.843.82a.832.832 0 01-.843.822h-18a.832.832 0 01-.843-.821c0-.454.378-.82.843-.82h18z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrochipFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.236 12.614a.605.605 0 000-1.21h-2.77v-1.21h2.77a.606.606 0 000-1.213h-2.77V6.614c0-.555-.527-1.059-1.107-1.059h-2.325v-2.79a.607.607 0 00-1.213 0v2.784h-1.21V2.768a.604.604 0 10-1.21 0v2.784h-1.21V2.768a.606.606 0 00-1.21 0v2.784H6.653c-.58 0-1.106.504-1.106 1.059v2.367H2.765a.606.606 0 000 1.213h2.779v1.21H2.765a.605.605 0 000 1.21h2.779v1.21H2.765a.606.606 0 000 1.213h2.779v2.392c0 .558.515 1.05 1.106 1.05h2.328v2.762a.605.605 0 001.21 0v-2.761h1.21v2.761a.606.606 0 001.213 0v-2.761h1.21v2.761a.605.605 0 001.21 0v-2.761h2.325c.591 0 1.107-.49 1.107-1.05v-2.393h2.77a.606.606 0 000-1.213h-2.77v-1.21l2.773.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrochipLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.779 17.541c0 .106-.151.246-.305.246H6.54c-.163 0-.305-.137-.305-.246V6.499c0-.1.162-.255.305-.255h10.933c.143 0 .305.154.305.255V17.54zm3.653-5.123a.412.412 0 000-.824h-2.827v-1.65h2.83a.412.412 0 000-.823h-2.83V6.499c0-.566-.537-1.081-1.131-1.081H14.89V2.572a.408.408 0 00-.409-.412.412.412 0 00-.412.412v2.843h-1.65V2.572a.412.412 0 00-.823 0v2.843h-1.65V2.572a.413.413 0 00-.826 0v2.843H6.538c-.59 0-1.132.515-1.132 1.081v2.622H2.572a.413.413 0 000 .826h2.837v1.65H2.572a.412.412 0 000 .824h2.837v1.65H2.572a.412.412 0 000 .823h2.837v2.647c0 .572.53 1.073 1.132 1.073h2.583v2.82a.414.414 0 00.826 0v-2.82h1.65v2.82a.412.412 0 00.823 0v-2.82h1.65v2.82a.412.412 0 00.824 0v-2.82h2.582c.603 0 1.132-.501 1.132-1.073v-2.647h2.83a.414.414 0 000-.826h-2.836v-1.65l2.827.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrochipRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.359 17.468H6.647c-.044 0-.09-.04-.095-.042v-5.409c0-.003.003-.005.003-.011 0-.003-.003-.006-.003-.008L6.55 9.6c0-.006.003-.009.003-.014 0-.006-.003-.009-.003-.014v-2.93c.012-.031.07-.076.101-.076h10.712a.17.17 0 01.098.07V12l-.003.009c0 .003.003.005.003.008v2.406c0 .003-.003.006-.003.012l.003.01v2.964c-.011.02-.062.06-.101.06zm3.88-4.857a.606.606 0 000-1.21h-2.57v-1.213h2.57a.606.606 0 000-1.21h-2.57V6.61c0-.672-.61-1.26-1.307-1.26h-2.328V2.764a.606.606 0 00-1.21 0V5.35H12.61V2.765a.606.606 0 00-1.21 0V5.35h-1.213V2.765a.606.606 0 00-1.21 0V5.35H6.65c-.697 0-1.308.589-1.308 1.261v2.367H2.765a.606.606 0 000 1.21h2.577v1.213H2.765a.606.606 0 000 1.21h2.577v1.213H2.765a.606.606 0 000 1.21h2.577v2.392c0 .68.6 1.252 1.308 1.252h2.328v2.56a.606.606 0 001.21 0v-2.56h1.213v2.56a.606.606 0 001.21 0v-2.56h1.213v2.56a.606.606 0 001.21 0v-2.56h2.328c.697 0 1.308-.585 1.308-1.252v-2.392h2.568a.606.606 0 000-1.21H18.67V12.61h2.568z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrophoneFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.993 2.16c2.79 0 4.325 1.555 4.325 4.375v6.79c0 2.821-1.535 4.376-4.328 4.376-2.79 0-4.325-1.555-4.325-4.376v-6.79c0-2.82 1.538-4.375 4.328-4.375zm.022 17.754a.96.96 0 01.955.966.962.962 0 01-.955.966.962.962 0 01-.955-.966.96.96 0 01.955-.966zm3.328-.967a.96.96 0 01.955.967.962.962 0 01-.955.966.96.96 0 01-.955-.966.96.96 0 01.955-.967zm2.672-2.302a.96.96 0 01.955.966.962.962 0 01-.955.966.962.962 0 01-.955-.966.96.96 0 01.955-.966zm.955-3.289a.82.82 0 01.815.824.82.82 0 01-.815.826.82.82 0 01-.815-.826.818.818 0 01.815-.824zM8.643 18.947a.96.96 0 01.955.967.962.962 0 01-.955.966.96.96 0 01-.956-.966.957.957 0 01.956-.967zM5.97 16.645a.96.96 0 01.956.966.962.962 0 01-.956.966.962.962 0 01-.955-.966.96.96 0 01.955-.966zm-.14-2.465a.82.82 0 01-.815.826.82.82 0 01-.815-.826.818.818 0 01.815-.824c.454.003.818.37.815.824z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrophoneLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.503 13.322V6.535c0-2.355-1.183-3.549-3.51-3.549-2.328 0-3.51 1.194-3.51 3.55v6.79c0 2.352 1.182 3.548 3.51 3.548 2.327 0 3.51-1.196 3.51-3.552zM11.993 2.16c2.79 0 4.325 1.555 4.325 4.375v6.79c0 2.821-1.535 4.376-4.328 4.376-2.79 0-4.325-1.555-4.325-4.376v-6.79c0-2.82 1.538-4.375 4.328-4.375zm.022 17.754a.96.96 0 01.955.966.962.962 0 01-.955.966.962.962 0 01-.955-.966.96.96 0 01.955-.966zm3.328-.967a.96.96 0 01.955.967.962.962 0 01-.955.966.96.96 0 01-.955-.966.96.96 0 01.955-.967zm2.672-2.302a.96.96 0 01.955.966.962.962 0 01-.955.966.962.962 0 01-.955-.966.96.96 0 01.955-.966zm.955-3.289a.82.82 0 01.815.824.82.82 0 01-.815.826.82.82 0 01-.815-.826.818.818 0 01.815-.824zM8.64 18.947a.96.96 0 01.955.967.962.962 0 01-.955.966.96.96 0 01-.955-.966.96.96 0 01.955-.967zm-2.67-2.302a.96.96 0 01.956.966.962.962 0 01-.956.966.962.962 0 01-.955-.966c0-.532.429-.966.955-.966zm-.14-2.465a.82.82 0 01-.815.826.82.82 0 01-.815-.826.818.818 0 01.815-.824c.454.003.818.37.815.824z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMicrophoneRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.3 13.412v-6.72c0-2.227-1.08-3.31-3.307-3.31s-3.308 1.08-3.308 3.31v6.72c0 2.227 1.08 3.311 3.308 3.311 2.227 0 3.308-1.084 3.308-3.31zM11.994 2.16c2.921 0 4.53 1.61 4.53 4.532v6.72c0 2.922-1.609 4.532-4.53 4.532-2.922 0-4.53-1.61-4.53-4.532v-6.72c0-2.921 1.608-4.532 4.53-4.532zm.022 17.773a.957.957 0 010 1.913.956.956 0 010-1.913zm3.328-.955a.956.956 0 11-.003 1.913.956.956 0 01.003-1.913zm2.672-2.28a.956.956 0 010 1.91.956.956 0 010-1.91zm.955-3.255a.814.814 0 110 1.63.814.814 0 110-1.63zM8.643 18.978a.956.956 0 11-.003 1.913.956.956 0 01.003-1.913zm-2.673-2.28a.956.956 0 010 1.91.956.956 0 010-1.91zm-.14-2.437a.814.814 0 11-1.63 0 .814.814 0 111.63 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMillenialsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.97 10.747c.896 0 1.597.233 2.084.692.504.474.762 1.18.762 2.09 0 .913-.255 1.616-.762 2.09-.485.453-1.185.686-2.084.686-.896 0-1.597-.233-2.081-.686-.502-.474-.76-1.177-.76-2.09 0-.91.256-1.616.76-2.09.484-.46 1.182-.692 2.081-.692zm1.731 6.776c1.053 0 1.919.311 2.502.905.532.543.817 1.297.817 2.182v.924a.32.32 0 01-.322.317H7.253a.32.32 0 01-.322-.317v-.924c0-.882.28-1.639.815-2.182.58-.594 1.442-.905 2.499-.905H13.7zm5.079-12.6a.636.636 0 01-.054.911.669.669 0 01-.93-.053c-2.277-2.49-5.806-2.333-5.843-2.328-3.787.042-5.784 2.152-5.804 2.171a.673.673 0 01-.932.045.633.633 0 01-.045-.91c.098-.104 2.411-2.55 6.736-2.594.135-.006 4.16-.208 6.872 2.759zM11.914 5c.112-.01 3.32-.114 5.367 2.124a.63.63 0 01-.053.907.667.667 0 01-.93-.047c-1.622-1.773-4.322-1.698-4.35-1.695C9.264 6.319 7.659 8 7.645 8.02a.677.677 0 01-.933.045.639.639 0 01-.05-.91c.084-.09 1.991-2.118 5.252-2.155zm3.543 5.227a.673.673 0 01-.932-.053c-.944-1.033-2.533-.991-2.558-.991-1.59.016-2.515.974-2.554 1.016a.668.668 0 01-.488.208.664.664 0 01-.442-.166.635.635 0 01-.045-.907c.053-.059 1.328-1.418 3.496-1.44.07 0 2.207-.076 3.577 1.423a.636.636 0 01-.054.91z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMillenialsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.491 14.914c.336-.308.507-.809.507-1.484 0-.678-.174-1.177-.51-1.49-.325-.303-.837-.454-1.52-.454-.684 0-1.191.151-1.519.454-.336.31-.504.812-.504 1.49 0 .678.168 1.176.504 1.484.325.3.835.452 1.518.452.687.002 1.2-.152 1.524-.452zm-1.524-4.296c.928 0 1.653.232 2.152.697.523.482.787 1.193.787 2.115 0 .921-.266 1.633-.79 2.112-.499.46-1.224.695-2.151.695-.925 0-1.65-.236-2.149-.695-.518-.479-.781-1.188-.781-2.112 0-.924.263-1.636.781-2.115.504-.465 1.227-.697 2.151-.697zm4.308 10.353v-.384c0-.664-.204-1.219-.59-1.605-.426-.423-1.093-.647-1.928-.647H10.18c-.832 0-1.496.224-1.921.647-.384.383-.586.938-.586 1.605v.384h8.602zm-2.518-3.505c1.087 0 1.978.317 2.58.916.555.55.846 1.311.846 2.205v.935c0 .177-.148.32-.333.32H7.096a.326.326 0 01-.333-.32v-.935c0-.897.291-1.659.837-2.205.6-.6 1.493-.916 2.577-.916h3.58zM18.83 4.872a.42.42 0 01-.036.614.477.477 0 01-.641-.034c-2.43-2.6-6.177-2.423-6.214-2.423-3.977.045-6.129 2.247-6.15 2.27a.468.468 0 01-.64.03.42.42 0 01-.03-.613c.095-.101 2.42-2.505 6.79-2.552.15-.014 4.196-.21 6.921 2.708zm-6.916.149c.129-.008 3.33-.11 5.37 2.076a.42.42 0 01-.037.613.468.468 0 01-.638-.034c-1.748-1.874-4.642-1.792-4.67-1.787-2.87.031-4.582 1.801-4.602 1.818a.471.471 0 01-.641.031.422.422 0 01-.034-.613c.081-.082 1.983-2.068 5.252-2.104zm3.504 4.905a.465.465 0 01-.638-.037c-1.054-1.126-2.804-1.073-2.821-1.073-1.762.017-2.784 1.084-2.793 1.096a.447.447 0 01-.339.143.467.467 0 01-.302-.11.42.42 0 01-.034-.613c.053-.056 1.305-1.361 3.443-1.384.075.003 2.179-.076 3.524 1.364a.423.423 0 01-.04.614z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMillenialsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.14 14.686c.236-.221.357-.61.357-1.16 0-.546-.118-.938-.359-1.162-.232-.222-.625-.33-1.168-.33-.543 0-.936.108-1.165.327-.238.224-.356.616-.356 1.165 0 .55.12.939.356 1.163.285.269.79.325 1.165.325s.882-.056 1.17-.328zm-1.17-3.938c.896 0 1.597.232 2.084.689.504.473.762 1.179.762 2.09 0 .912-.258 1.615-.762 2.089-.485.454-1.185.686-2.081.686-.9 0-1.597-.232-2.081-.686-.505-.474-.76-1.177-.76-2.09 0-.91.255-1.616.76-2.09.481-.459 1.179-.688 2.078-.688zm-3.723 9.809h7.454c-.006-.375-.092-.877-.448-1.238-.415-.423-1.073-.51-1.552-.51H10.24c-.476 0-1.135.087-1.544.507-.355.361-.442.866-.448 1.241zm5.454-3.036c1.053 0 1.919.31 2.502.904.535.544.817 1.297.817 2.182v.925a.319.319 0 01-.322.314H7.253a.317.317 0 01-.322-.314v-.925c0-.885.28-1.641.815-2.182.58-.593 1.442-.904 2.496-.904h3.46zm5.076-12.603a.64.64 0 01-.053.914.669.669 0 01-.93-.054c-2.275-2.49-5.804-2.333-5.84-2.325-3.788.042-5.788 2.152-5.805 2.171a.676.676 0 01-.932.045.633.633 0 01-.045-.91c.095-.104 2.411-2.547 6.74-2.594.13-.006 4.156-.21 6.865 2.753zm-6.863.079c.118-.006 3.32-.115 5.367 2.123a.636.636 0 01-.053.91.67.67 0 01-.933-.05c-1.62-1.776-4.32-1.695-4.347-1.695-2.684.028-4.289 1.712-4.303 1.729a.673.673 0 01-.933.045.633.633 0 01-.047-.908c.08-.087 1.988-2.12 5.249-2.154zm3.546 5.224a.67.67 0 01-.933-.05c-.94-1.029-2.54-.992-2.56-.992-1.59.02-2.512.977-2.552 1.017a.679.679 0 01-.93.042.635.635 0 01-.044-.908c.053-.059 1.327-1.417 3.493-1.44.067.003 2.207-.078 3.577 1.42a.636.636 0 01-.05.91z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileDeviceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.695 2.832C17.15 2.272 16.35 2 15.24 2H8.602c-2.157 0-3.25 1.106-3.25 3.291v13.104c0 2.216 1.063 3.291 3.25 3.291h6.639c2.188 0 3.25-1.075 3.25-3.291V5.291c0-1.106-.261-1.91-.796-2.46zm-4.947 16.221c-.196.2-.48.306-.82.306-.343 0-.628-.107-.822-.306-.193-.199-.288-.47-.288-.81 0-.697.414-1.114 1.112-1.114.697 0 1.11.417 1.11 1.115-.004.339-.102.61-.292.81z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileDeviceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.55 2.156c1.03 0 1.773.244 2.271.745.499.502.74 1.241.74 2.266v13.656c0 1.036-.244 1.781-.745 2.28-.496.493-1.238.731-2.266.731H8.449c-1.028 0-1.77-.238-2.266-.731-.502-.496-.745-1.244-.745-2.28V5.167c0-1.008.243-1.745.742-2.249.507-.512 1.25-.762 2.269-.762h7.1zm0 .56H8.449c-.863 0-1.474.194-1.871.594-.393.395-.583 1.003-.583 1.857v13.656c0 1.742.711 2.45 2.45 2.45h7.102c1.742 0 2.45-.708 2.45-2.45V5.167c0-.87-.187-1.484-.574-1.87-.386-.387-1-.58-1.873-.58zm-3.544 15.11c.504 0 .83.266.83.834 0 .275-.074.477-.208.614-.146.148-.359.221-.622.221s-.476-.073-.622-.221c-.134-.137-.21-.339-.21-.614 0-.568.328-.834.832-.834z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileDeviceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.238 2c2.182 0 3.47 1.243 3.47 3.472v13.376c0 2.23-1.288 3.473-3.47 3.473H8.47c-2.181 0-3.47-1.244-3.47-3.473V5.472C5 3.242 6.289 2 8.47 2zm0 1.5H8.47c-1.365 0-1.97.584-1.97 1.972v13.376c0 1.389.606 1.973 1.97 1.973h6.768c1.365 0 1.97-.584 1.97-1.973V5.472c0-1.388-.604-1.972-1.97-1.972zm-3.384 12.66c.61 0 1.007.317 1.007 1 0 .328-.092.572-.254.735-.177.18-.436.265-.753.265s-.576-.085-.753-.265c-.162-.163-.254-.407-.254-.735 0-.683.397-1 1.007-1z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePauseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.087 16.801c3.213 0 4.709-1.481 4.709-4.663 0-3.182-1.496-4.667-4.709-4.667-3.21 0-4.706 1.482-4.706 4.667 0 3.182 1.496 4.663 4.706 4.663zM20.894 3.115c.641.639.955 1.535.955 2.737v12.305c0 1.216-.314 2.115-.964 2.754-.644.63-1.549.938-2.764.938h-6.21c-1.219 0-2.12-.308-2.762-.938-.577-.566-.888-1.34-.953-2.359v-.549c-.036 0-.072.003-.112.003-3.742 0-5.924-1.871-5.924-5.868 0-4 2.182-5.872 5.924-5.872.034 0 .068.003.101.003v-.417c0-1.185.314-2.076.955-2.72.653-.653 1.558-.972 2.77-.972h6.21c1.222.003 2.13.314 2.774.955zm-5.877 13.846c-.658 0-1.053.392-1.053 1.048 0 .32.092.577.274.759.185.188.454.286.78.286.324 0 .593-.098.778-.286.182-.185.274-.44.274-.76 0-.655-.392-1.047-1.053-1.047zm-8.75-7.655c.336 0 .607.269.607.602v4.711a.607.607 0 01-.608.605.605.605 0 01-.607-.605V9.911c0-.334.274-.605.607-.605zm3.45-.014c.337 0 .608.271.608.602v4.711a.607.607 0 01-.608.605.605.605 0 01-.607-.605V9.894c0-.333.271-.602.607-.602z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePauseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.026 18.283V5.723c0-.944-.213-1.625-.664-2.07-.443-.451-1.124-.672-2.076-.672h-6.274c-.936 0-1.617.221-2.068.689-.45.45-.672 1.126-.672 2.053v.485c3.092.353 4.866 2.274 4.866 5.935 0 3.653-1.774 5.574-4.858 5.927v.583c.048.756.27 1.322.664 1.717.443.443 1.124.658 2.068.658h6.274c.952 0 1.625-.213 2.076-.658.45-.454.664-1.134.664-2.087zm-12.877-.969c3.476 0 5.168-1.692 5.168-5.17 0-3.48-1.692-5.183-5.168-5.183-3.48 0-5.168 1.7-5.168 5.182s1.689 5.171 5.168 5.171zM20.944 3.07c.608.617.902 1.48.902 2.653v12.56c0 1.182-.294 2.062-.91 2.667-.608.608-1.476.896-2.65.896h-6.274c-1.174 0-2.034-.288-2.65-.896-.54-.54-.838-1.289-.894-2.275l-.008-.549c-.107.009-.205.009-.311.009-3.782 0-5.989-1.913-5.989-5.992 0-4.09 2.207-6.003 5.989-6.003.098 0 .204 0 .302.009v-.426c0-1.148.294-2.011.91-2.636.617-.624 1.485-.927 2.65-.927h6.275c1.182 0 2.05.294 2.658.91zm-5.792 13.998c.663 0 1.058.395 1.058 1.067 0 .32-.09.582-.271.773-.188.196-.46.294-.787.294-.328 0-.6-.098-.788-.294-.179-.188-.28-.451-.28-.773.003-.672.404-1.067 1.068-1.067zM6.336 9.406a.41.41 0 01.41.41v4.812a.41.41 0 01-.818 0v-4.81c0-.227.184-.412.408-.412zm3.488-.016a.41.41 0 01.409.411v4.81a.41.41 0 01-.818 0v-4.81c0-.226.182-.409.409-.411z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePauseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.628 18.154V5.852c0-.868-.196-1.488-.6-1.888-.406-.403-1.03-.597-1.91-.597h-6.207c-.869 0-1.493.2-1.905.61-.406.41-.605 1.02-.605 1.875v.501c2.933.41 4.61 2.283 4.61 5.785 0 3.501-1.672 5.37-4.602 5.781v.594c.045.675.238 1.19.594 1.538.4.395 1.025.588 1.905.588h6.21c.88 0 1.501-.193 1.905-.588.409-.398.605-1.02.605-1.897zM8.084 16.8c3.213 0 4.71-1.482 4.71-4.664 0-3.182-1.497-4.667-4.71-4.667-3.21 0-4.706 1.482-4.706 4.667 0 3.182 1.496 4.664 4.706 4.664zM20.891 3.112c.642.639.955 1.535.955 2.737v12.305c0 1.216-.313 2.118-.963 2.754-.645.63-1.55.938-2.765.938h-6.207c-1.219 0-2.12-.308-2.762-.938-.577-.566-.888-1.339-.953-2.359V18c-.036 0-.072.003-.112.003-3.742.003-5.924-1.868-5.924-5.865 0-4 2.182-5.872 5.924-5.872.034 0 .068.003.101.003v-.417c0-1.185.314-2.076.955-2.72.653-.655 1.558-.972 2.77-.972h6.21c1.22 0 2.127.31 2.771.952zm-5.877 13.846c.659 0 1.05.392 1.05 1.048 0 .32-.092.577-.274.759-.185.188-.454.286-.778.286-.325 0-.594-.098-.78-.286-.181-.185-.274-.44-.274-.76.006-.655.398-1.047 1.056-1.047zm-8.75-7.655c.336 0 .607.269.607.602v4.712a.607.607 0 01-1.215 0v-4.71a.61.61 0 01.608-.604zm3.45-.017c.337 0 .608.272.608.602V14.6a.607.607 0 01-1.215 0V9.89c0-.333.271-.605.608-.605z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePlayFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.958 13.785v-3.297l2.88 1.647-2.88 1.65zm4.4-2.171L6.654 8.922a.605.605 0 00-.608 0 .604.604 0 00-.305.52v5.385c0 .215.115.414.305.52a.594.594 0 00.305.082c.107 0 .21-.025.306-.081l4.706-2.692a.605.605 0 00.305-.524.61.61 0 00-.308-.518zm-3.276 5.19c3.215 0 4.717-1.487 4.717-4.664 0-3.184-1.502-4.672-4.717-4.672-3.208 0-4.7 1.488-4.7 4.672 0 3.177 1.492 4.664 4.7 4.664zM20.899 3.11c.642.644.95 1.535.95 2.742v12.302c0 1.213-.316 2.115-.966 2.751-.642.636-1.544.941-2.762.941h-6.21c-1.219 0-2.118-.305-2.768-.932-.574-.572-.885-1.342-.95-2.365v-.546c-.039 0-.072.009-.114.009-3.743 0-5.919-1.874-5.919-5.872 0-4.005 2.176-5.88 5.919-5.88.039 0 .073.01.106.01v-.418c0-1.19.308-2.076.958-2.726.65-.652 1.552-.966 2.768-.966h6.21c1.218 0 2.129.314 2.778.95zm-6.66 15.658c.184.188.453.286.778.286s.594-.098.779-.286c.182-.185.274-.44.274-.76 0-.655-.395-1.047-1.053-1.047-.658 0-1.053.392-1.053 1.048 0 .316.092.574.274.759z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePlayLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.026 18.292V5.734c0-.944-.213-1.624-.664-2.075-.451-.451-1.124-.673-2.076-.673h-6.274c-.936 0-1.617.23-2.068.69-.45.459-.672 1.131-.672 2.058v.485c3.092.361 4.866 2.274 4.866 5.924 0 3.65-1.774 5.563-4.858 5.925v.582c.048.754.261 1.33.664 1.714.443.451 1.124.667 2.068.667h6.274c.952 0 1.625-.213 2.076-.667.45-.442.664-1.123.664-2.072zm-12.877-.978c3.476 0 5.168-1.692 5.168-5.17 0-3.48-1.692-5.172-5.168-5.172-3.48 0-5.168 1.692-5.168 5.171 0 3.48 1.689 5.171 5.168 5.171zm12.795-14.23c.608.608.902 1.477.902 2.65v12.558c0 1.182-.294 2.05-.91 2.658-.608.608-1.476.905-2.65.905h-6.274c-1.174 0-2.034-.297-2.65-.902-.54-.532-.838-1.28-.902-2.266v-.558c-.107 0-.205.009-.311.009-3.782-.003-5.989-1.908-5.989-5.995 0-4.078 2.207-5.991 5.989-5.991.106 0 .204.008.302.008v-.429c0-1.156.294-2.02.91-2.635.617-.622 1.485-.936 2.65-.936h6.275c1.182.006 2.05.308 2.658.924zM6.801 14.182l3.524-2.036-3.524-2.036v4.072zm4.552-2.392a.409.409 0 010 .709l-4.756 2.748a.41.41 0 01-.613-.356v-5.49a.41.41 0 01.613-.353c0-.003 4.756 2.742 4.756 2.742zm3.011 7.12c-.184-.187-.277-.447-.277-.775 0-.67.398-1.067 1.065-1.067.666 0 1.064.4 1.064 1.067 0 .328-.092.588-.277.776-.188.19-.46.291-.787.291-.328.003-.6-.098-.788-.291z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobilePlayRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.956 13.785l2.88-1.647-2.88-1.65v3.297zm4.4-2.171a.607.607 0 01.305.524.608.608 0 01-.305.523L6.65 15.353a.605.605 0 01-.608 0 .606.606 0 01-.305-.52v-5.39a.61.61 0 01.913-.521l4.706 2.692zm9.272 6.54V5.852c0-.868-.193-1.488-.6-1.888-.406-.4-1.03-.597-1.907-.597h-6.21c-.869 0-1.496.202-1.908.61-.406.41-.6 1.023-.6 1.875v.498c2.93.41 4.611 2.283 4.611 5.79 0 3.499-1.672 5.365-4.602 5.782v.597c.042.666.235 1.182.591 1.535.406.395 1.03.588 1.908.588h6.21c.877 0 1.501-.193 1.907-.588.407-.404.6-1.02.6-1.9zm-12.55-1.35c3.216 0 4.718-1.487 4.718-4.664 0-3.184-1.502-4.672-4.717-4.672-3.208 0-4.7 1.49-4.7 4.672 0 3.177 1.492 4.664 4.7 4.664zM20.898 3.11c.641.644.95 1.535.95 2.742v12.302c0 1.213-.317 2.115-.967 2.751-.642.636-1.544.941-2.762.941h-6.207c-1.219 0-2.12-.305-2.77-.932-.575-.572-.886-1.342-.95-2.365v-.546c-.042 0-.073.009-.112.009-3.745 0-5.919-1.874-5.919-5.872 0-4.005 2.176-5.88 5.919-5.88.042 0 .073.01.106.01v-.42c0-1.191.308-2.077.958-2.726.647-.65 1.55-.964 2.768-.964h6.21c1.218 0 2.126.314 2.776.95zm-6.661 15.658c-.182-.185-.275-.44-.275-.76 0-.655.395-1.047 1.053-1.047.659 0 1.054.392 1.054 1.048 0 .32-.093.574-.275.759-.185.185-.454.286-.779.286s-.593-.098-.778-.286z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileQuestionFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.625 14.76c.406 0 .683.277.683.658 0 .42-.274.689-.666.689-.412 0-.684-.266-.684-.65v-.036a.643.643 0 01.667-.662zm1.658-5.835c.457.33.67.787.67 1.434 0 .77-.33 1.24-1.028 2.062-.779.893-.779.893-.779 1.675 0 .22-.182.4-.406.4h-.26a.403.403 0 01-.398-.325 2.046 2.046 0 01-.037-.403c0-.68.247-1.095.768-1.714l.098-.115c.832-.978.944-1.205.944-1.591 0-.275-.07-.437-.252-.58-.104-.084-.297-.18-.852-.18-.316 0-.6.037-.938.124a.42.42 0 01-.317-.05.402.402 0 01-.182-.264l-.04-.199a.403.403 0 01.228-.44c.28-.128.868-.23 1.367-.23.588-.002 1.064.132 1.414.396zm-1.196 7.88c3.213 0 4.714-1.48 4.714-4.662s-1.5-4.66-4.714-4.66c-3.204 0-4.706 1.478-4.706 4.66 0 3.182 1.502 4.661 4.706 4.661zM20.891 3.123c.65.635.958 1.535.958 2.73v12.3c0 1.222-.316 2.124-.966 2.757-.642.627-1.544.94-2.76.94h-6.207c-1.218 0-2.117-.313-2.767-.94-.577-.572-.885-1.342-.95-2.356v-.546h-.115c-3.74 0-5.924-1.874-5.924-5.869 0-3.994 2.185-5.868 5.924-5.868h.107v-.42c0-1.182.308-2.073.958-2.717.647-.65 1.549-.975 2.767-.975h6.208c1.218.006 2.126.32 2.767.964zm-5.874 13.84c-.658 0-1.047.386-1.047 1.045 0 .32.09.577.268.753.188.194.454.289.78.289.324 0 .59-.095.778-.289.185-.176.274-.434.274-.753 0-.659-.389-1.045-1.053-1.045z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileQuestionLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.675 14.956c.33 0 .55.218.55.529 0 .347-.213.557-.53.557-.336 0-.549-.21-.549-.52v-.037c0-.311.218-.53.53-.53zM9.266 8.97c.423.31.62.739.62 1.35 0 .742-.309 1.182-1.006 2.01-.793.917-.82.95-.82 1.802a.264.264 0 01-.267.266H7.53a.264.264 0 01-.26-.216 1.763 1.763 0 01-.034-.383c0-.656.23-1.04.742-1.659l.098-.117c.832-.986.989-1.258.989-1.717 0-.322-.093-.533-.308-.706-.124-.101-.345-.213-.953-.213-.333 0-.627.04-.983.129a.27.27 0 01-.325-.196l-.003-.012-.039-.204a.269.269 0 01.149-.291c.23-.11.787-.222 1.319-.222.563.003 1.017.13 1.344.379zm11.76 9.316V5.72c0-.944-.213-1.616-.664-2.067-.451-.451-1.124-.672-2.076-.672h-6.274c-.936 0-1.617.23-2.068.689-.45.46-.672 1.123-.672 2.05v.493c3.092.362 4.866 2.275 4.866 5.925S12.364 17.7 9.28 18.062v.583c.05.753.264 1.322.664 1.714.443.442 1.124.667 2.068.667h6.274c.944 0 1.625-.225 2.076-.667.45-.443.664-1.123.664-2.073zm-12.877-.978c3.479 0 5.168-1.691 5.168-5.17 0-3.48-1.69-5.171-5.168-5.171-3.48 0-5.168 1.692-5.168 5.17 0 3.48 1.689 5.171 5.168 5.171zm12.795-14.23c.608.609.902 1.477.902 2.642v12.566c0 1.182-.294 2.05-.91 2.658-.608.608-1.476.905-2.65.905h-6.274c-1.174 0-2.037-.297-2.65-.902-.54-.54-.835-1.28-.902-2.272v-.549c-.107 0-.205.009-.311.009-3.785-.006-5.989-1.91-5.989-5.997 0-4.079 2.204-5.992 5.989-5.992.106 0 .204.008.302.008V5.72c0-1.148.294-2.011.91-2.627.614-.63 1.485-.933 2.65-.933h6.275c1.182 0 2.05.303 2.658.919zm-6.58 15.827c-.184-.188-.277-.448-.277-.776 0-.67.398-1.067 1.065-1.067.666 0 1.064.4 1.064 1.067 0 .328-.092.588-.277.776-.188.193-.46.294-.787.294-.328 0-.6-.103-.788-.294z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMobileQuestionRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.622 14.754c.404 0 .684.277.684.658 0 .42-.275.69-.667.69-.409 0-.683-.267-.683-.65v-.037c0-.384.28-.661.666-.661zM9.28 8.919c.457.33.67.787.67 1.434 0 .77-.328 1.241-1.028 2.062-.779.893-.779.893-.779 1.675 0 .221-.182.4-.406.4h-.26a.405.405 0 01-.398-.324 1.92 1.92 0 01-.037-.401c0-.68.247-1.095.768-1.714l.098-.115c.835-.978.944-1.205.944-1.591 0-.275-.07-.437-.252-.583-.104-.084-.294-.179-.855-.179-.316 0-.599.036-.938.123a.412.412 0 01-.496-.302l-.003-.012-.039-.198a.403.403 0 01.227-.44c.28-.132.868-.23 1.367-.23.591-.003 1.067.132 1.417.395zm11.348 9.23v-12.3c0-.868-.193-1.487-.6-1.88-.406-.408-1.03-.605-1.907-.605h-6.207c-.869 0-1.493.202-1.908.611-.406.41-.6 1.023-.6 1.874v.507c2.93.4 4.608 2.275 4.608 5.779 0 3.496-1.672 5.37-4.602 5.779v.593c.042.675.235 1.19.591 1.535.406.4 1.03.597 1.908.597h6.207c.877 0 1.501-.193 1.908-.597.409-.392.602-1.008.602-1.893zm-12.544-1.35c3.213 0 4.715-1.48 4.715-4.661 0-3.182-1.502-4.661-4.715-4.661-3.204 0-4.706 1.479-4.706 4.66 0 3.183 1.5 4.662 4.706 4.662zM20.888 3.118c.65.636.958 1.535.958 2.731v12.3c0 1.221-.316 2.123-.966 2.756-.642.628-1.544.941-2.76.941h-6.206c-1.219 0-2.118-.313-2.768-.94-.577-.572-.885-1.343-.95-2.354v-.546h-.114c-3.737-.003-5.922-1.874-5.922-5.871 0-3.995 2.185-5.866 5.924-5.866h.107v-.42c0-1.182.308-2.073.955-2.717.65-.65 1.552-.972 2.768-.972h6.207c1.218 0 2.126.314 2.767.958zm-5.874 13.84c.664 0 1.056.387 1.056 1.045 0 .32-.09.577-.277.754-.188.193-.457.288-.779.288-.325 0-.59-.095-.778-.288-.18-.177-.266-.435-.266-.754-.003-.658.386-1.045 1.044-1.045z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyDropFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.765 7.266c0-.347.277-.627.616-.627h.375c-.01-.146-.03-.28-.03-.435 0-.042.008-.075.008-.117H3.38a.62.62 0 01-.616-.628c0-.347.277-.627.616-.627h.515C4.333 3.022 5.681 2.03 7.83 2.03c.801 0 1.502.14 2.084.412a.633.633 0 01.303.832.61.61 0 01-.818.308c-.418-.196-.947-.297-1.566-.297-1.429 0-2.297.501-2.661 1.546h2.04a.62.62 0 01.615.627.622.622 0 01-.616.628H4.972c0 .042-.008.075-.008.117 0 .157.016.295.025.435h2.218a.62.62 0 01.617.627.622.622 0 01-.617.628H5.308c.426.826 1.25 1.226 2.524 1.226.63 0 1.162-.1 1.58-.302a.613.613 0 01.82.3.63.63 0 01-.294.834c-.585.28-1.294.423-2.109.423-2.022 0-3.342-.874-3.857-2.484h-.591a.618.618 0 01-.616-.625zM19.87 20.2c.53-.163.608-.325.608-.325v-.852c-.081.034-.16.07-.25.098-.599.185-1.383.286-2.204.286-.82 0-1.605-.1-2.207-.286-.093-.028-.17-.064-.255-.098v.858c.008.02.1.17.605.324.992.295 2.717.295 3.703-.005zm-6.143 0c.32-.098.51-.227.603-.317v-.904c-.082.03-.157.07-.247.095-.6.185-1.384.286-2.204.286-.821 0-1.605-.101-2.205-.286-.095-.028-.174-.067-.26-.101v.916c.078.076.26.199.613.308.983.303 2.717.303 3.7.003zm-6.151 0c.339-.104.521-.238.602-.32v-.887c-.084.03-.157.067-.249.095-.602.185-1.384.286-2.205.286-.82 0-1.605-.101-2.204-.286-.095-.028-.17-.067-.258-.101v.905c.079.075.26.199.617.308.98.3 2.711.3 3.697 0zM3.87 17.494c-.23.07-.364.137-.454.196.093.059.238.129.46.196.977.303 2.72.3 3.7 0 .23-.07.364-.137.454-.196a1.784 1.784 0 00-.46-.199c-.983-.297-2.72-.297-3.7.003zm6.151-2.325a1.83 1.83 0 00-.453.196c.09.059.224.126.459.199.98.3 2.717.3 3.697 0 .219-.067.362-.134.457-.193a1.69 1.69 0 00-.46-.2c-.977-.302-2.72-.302-3.7-.002zm6.149-2.283c-.227.07-.361.137-.454.193.09.06.224.126.46.2.977.299 2.72.299 3.697 0a2.11 2.11 0 00.457-.194 1.733 1.733 0 00-.46-.199c-.98-.3-2.717-.302-3.7 0zm-.605 3.81v.916c.078.075.263.199.61.305.978.3 2.72.3 3.698 0 .322-.1.515-.23.605-.32v-.901c-.081.033-.16.07-.25.098-.604.185-1.386.285-2.204.285-.818 0-1.602-.1-2.204-.285-.093-.028-.171-.065-.255-.098zm.255-2.216c-.096-.028-.171-.067-.258-.1v.901c.078.076.26.199.616.311.978.3 2.717.3 3.698 0 .341-.104.524-.238.605-.32v-.887c-.084.03-.157.067-.25.095-.599.185-1.383.286-2.204.286-.824 0-1.605-.101-2.207-.286zm-6.406 3.087c.078.075.26.199.616.308.977.3 2.72.3 3.697 0 .34-.104.518-.235.603-.317v-.89c-.082.03-.157.067-.247.095-.602.185-1.387.286-2.204.286-.818 0-1.603-.101-2.205-.286-.095-.03-.174-.067-.26-.1v.904zm10.812-5.885c1.23.375 1.487 1.042 1.487 1.535v6.652c0 .493-.257 1.157-1.487 1.535-.608.185-1.39.286-2.207.286-.816 0-1.597-.1-2.205-.286a2.87 2.87 0 01-.871-.417c-.238.174-.53.317-.863.417-.605.185-1.386.286-2.204.286-.818 0-1.602-.1-2.205-.286a3.004 3.004 0 01-.882-.417 2.859 2.859 0 01-.86.417c-.605.185-1.387.286-2.205.286-.817 0-1.602-.1-2.204-.286-.577-.176-1-.442-1.258-.776a.626.626 0 01-.238-.481v-2.32c0-.117.017-.238.048-.35v-.003c.154-.535.638-.932 1.437-1.179 1.207-.37 3.204-.367 4.412 0 .092.028.17.062.252.093V15.5c0-.12.016-.238.047-.35v-.003c.154-.537.636-.935 1.44-1.179 1.205-.37 3.21-.37 4.412 0 .092.028.168.059.25.093v-.844c0-.117.016-.235.047-.347v-.005c.154-.535.636-.936 1.44-1.18 1.218-.372 3.212-.37 4.417-.005zm-3.04-2.104l-3.05-3.14c-.23-.28-.266-.613-.137-.888a.758.758 0 01.69-.445l1.145-.009-.003-1.983c0-.613.49-1.112 1.092-1.112h1.717c.603 0 1.093.499 1.093 1.11l.003 1.982 1.154.012c.291 0 .557.17.683.445a.813.813 0 01-.098.843L18.331 9.62c-.082.11-.264.213-.465.235a.747.747 0 01-.563-.165.866.866 0 01-.115-.112z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyDropLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.907 7.232c0-.235.188-.426.42-.426h.6c-.014-.174-.037-.339-.037-.527 0-.075.014-.142.014-.218h-.577a.423.423 0 01-.42-.426c0-.235.188-.426.42-.426h.664c.35-1.918 1.692-2.969 3.877-2.969.787 0 1.473.135 2.039.4.21.102.302.354.204.567a.419.419 0 01-.557.207c-.454-.213-1.022-.322-1.686-.322-1.72 0-2.706.703-3.02 2.117H7.23c.233 0 .42.19.42.426a.423.423 0 01-.42.426H4.742c-.003.076-.014.14-.014.218 0 .188.016.356.033.527H7.23c.233 0 .42.19.42.426a.423.423 0 01-.42.426H4.92c.38 1.21 1.355 1.806 2.949 1.806.672 0 1.246-.112 1.703-.33a.416.416 0 01.557.204.428.428 0 01-.201.566c-.57.272-1.264.412-2.062.412-2.064 0-3.364-.941-3.801-2.658h-.74a.422.422 0 01-.417-.426zm17.322 13.51c.23-.07.77-.266.77-.54v-1.189c-.16.084-.333.16-.523.219-.597.182-1.373.283-2.19.283-.816 0-1.595-.101-2.191-.283a3.378 3.378 0 01-.535-.216v1.182c0 .275.537.47.77.54 1.045.32 2.851.32 3.9.004zm-6.28 0c.415-.126.67-.314.767-.46v-1.31c-.16.08-.333.159-.523.218-.597.182-1.376.283-2.19.283-.816 0-1.595-.101-2.191-.283a3.273 3.273 0 01-.535-.216v1.317c.087.134.341.316.778.448 1.034.32 2.86.32 3.894.003zm-6.283 0c.415-.126.67-.311.768-.46v-1.291a3.325 3.325 0 01-.527.21c-.597.182-1.373.283-2.19.283-.816 0-1.594-.1-2.191-.283a3.325 3.325 0 01-.535-.213v1.306c.081.128.32.308.776.448 1.04.316 2.865.316 3.9 0zm-3.902-3.163c-.468.143-.65.297-.723.398.062.098.23.258.729.409 1.042.316 2.86.316 3.896 0 .482-.149.656-.303.72-.398-.132-.207-.532-.353-.726-.412-1.039-.313-2.854-.313-3.896.003zm6.283-2.367c-.37.112-.622.258-.717.404.064.1.24.255.723.403 1.042.317 2.854.317 3.896 0 .479-.148.653-.303.72-.4-.132-.205-.532-.35-.726-.41-1.033-.313-2.86-.313-3.896.003zm6.283-2.325c-.468.143-.65.297-.723.398.062.098.23.258.729.412 1.039.316 2.857.316 3.896 0 .479-.146.653-.303.72-.4-.132-.205-.532-.35-.726-.41-1.039-.316-2.854-.316-3.896 0zm-.77 3.762v1.32c.086.137.341.316.776.448 1.042.316 2.86.316 3.896 0 .412-.126.67-.314.767-.46v-1.31c-.16.083-.333.16-.523.218-.597.182-1.376.283-2.19.283-.816 0-1.595-.101-2.191-.283a3.041 3.041 0 01-.535-.216zm.535-2.137a3.325 3.325 0 01-.535-.213v1.305c.08.13.319.306.776.449 1.042.316 2.857.316 3.899 0 .411-.126.666-.311.764-.46v-1.291a3.325 3.325 0 01-.526.21c-.597.182-1.376.283-2.19.283-.816 0-1.595-.1-2.188-.283zm-6.818 2.11v1.307c.084.13.322.306.778.446 1.04.316 2.858.316 3.897 0 .412-.126.67-.314.767-.46v-1.288a3.047 3.047 0 01-.524.207c-.599.182-1.375.283-2.19.283s-1.591-.1-2.19-.283a2.908 2.908 0 01-.538-.213zm11.193-4.55c1.132.348 1.37.93 1.37 1.359v6.77c0 .429-.238 1.011-1.37 1.356-.602.182-1.378.283-2.19.283-.813 0-1.592-.101-2.191-.28-.445-.138-.75-.311-.958-.496-.24.204-.555.378-.938.496-.597.182-1.373.283-2.19.283-.819 0-1.597-.101-2.191-.283a2.702 2.702 0 01-.964-.496c-.24.204-.554.378-.938.496-.594.182-1.373.283-2.19.283-.819 0-1.597-.101-2.191-.283-.555-.168-.953-.42-1.185-.729a.415.415 0 01-.188-.347v-2.359c0-.1.014-.201.04-.296v-.003c.134-.474.582-.83 1.327-1.06 1.196-.363 3.188-.363 4.381 0 .21.065.381.138.532.217v-1.225c0-.1.014-.201.04-.296v-.003c.134-.474.58-.832 1.327-1.056 1.188-.364 3.194-.364 4.384 0 .21.064.378.137.53.215v-1.184c0-.101.013-.202.039-.3.134-.474.582-.83 1.327-1.059 1.2-.367 3.19-.367 4.387-.003zm-3.975-5.921l-1.045.008 2.535 2.605 2.547-2.605-1.031-.008a.584.584 0 01-.569-.603l-.003-2.476a.066.066 0 00-.064-.067h-1.75a.066.066 0 00-.065.067l.003 2.488a.582.582 0 01-.558.59zm1.048 3.37l-3.126-3.21c-.171-.21-.2-.46-.101-.665a.565.565 0 01.515-.33l1.381-.011-.003-2.23c0-.507.407-.919.905-.919h1.75c.5 0 .906.412.906.919l.002 2.23 1.384.01a.57.57 0 01.513.334.61.61 0 01-.076.633l-3.196 3.272a.507.507 0 01-.403.185.58.58 0 01-.359-.123 2.835 2.835 0 01-.092-.096z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyDropRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.765 7.266c0-.347.277-.627.616-.627h.375c-.01-.146-.03-.28-.03-.435 0-.042.008-.075.008-.117H3.38a.62.62 0 01-.616-.628c0-.347.277-.627.616-.627h.515C4.333 3.022 5.681 2.03 7.83 2.03c.801 0 1.502.14 2.084.412a.633.633 0 01.303.832.61.61 0 01-.818.308c-.418-.196-.947-.297-1.566-.297-1.429 0-2.297.501-2.661 1.546h2.04a.62.62 0 01.615.627.622.622 0 01-.616.628H4.972c0 .042-.008.075-.008.117 0 .157.016.295.025.435h2.218a.62.62 0 01.617.627.622.622 0 01-.617.628H5.308c.426.826 1.25 1.226 2.524 1.226.63 0 1.162-.1 1.58-.302a.613.613 0 01.82.3.63.63 0 01-.294.834c-.585.28-1.294.423-2.109.423-2.022 0-3.342-.874-3.857-2.484h-.591a.618.618 0 01-.616-.625zM19.87 20.2c.53-.163.608-.325.608-.325v-.852c-.081.034-.16.07-.25.098-.599.185-1.383.286-2.204.286-.82 0-1.605-.1-2.207-.286-.093-.028-.17-.064-.255-.098v.858c.008.02.1.17.605.324.992.295 2.717.295 3.703-.005zm-6.143 0c.32-.098.51-.227.603-.317v-.904c-.082.03-.157.07-.247.095-.6.185-1.384.286-2.204.286-.821 0-1.605-.101-2.205-.286-.095-.028-.174-.067-.26-.101v.916c.078.076.26.199.613.308.983.303 2.717.303 3.7.003zm-6.151 0c.339-.104.521-.238.602-.32v-.887c-.084.03-.157.067-.249.095-.602.185-1.384.286-2.205.286-.82 0-1.605-.101-2.204-.286-.095-.028-.17-.067-.258-.101v.905c.079.075.26.199.617.308.98.3 2.711.3 3.697 0zM3.87 17.494c-.23.07-.364.137-.454.196.093.059.238.129.46.196.977.303 2.72.3 3.7 0 .23-.07.364-.137.454-.196a1.784 1.784 0 00-.46-.199c-.983-.297-2.72-.297-3.7.003zm6.151-2.325a1.83 1.83 0 00-.453.196c.09.059.224.126.459.199.98.3 2.717.3 3.697 0 .219-.067.362-.134.457-.193a1.69 1.69 0 00-.46-.2c-.977-.302-2.72-.302-3.7-.002zm6.149-2.283c-.227.07-.361.137-.454.193.09.06.224.126.46.2.977.299 2.72.299 3.697 0a2.11 2.11 0 00.457-.194 1.733 1.733 0 00-.46-.199c-.98-.3-2.717-.302-3.7 0zm-.605 3.81v.916c.078.075.263.199.61.305.978.3 2.72.3 3.698 0 .322-.1.515-.23.605-.32v-.901c-.081.033-.16.07-.25.098-.604.185-1.386.285-2.204.285-.818 0-1.602-.1-2.204-.285-.093-.028-.171-.065-.255-.098zm.255-2.216c-.096-.028-.171-.067-.258-.1v.901c.078.076.26.199.616.311.978.3 2.717.3 3.698 0 .341-.104.524-.238.605-.32v-.887c-.084.03-.157.067-.25.095-.599.185-1.383.286-2.204.286-.824 0-1.605-.101-2.207-.286zm-6.406 3.087c.078.075.26.199.616.308.977.3 2.72.3 3.697 0 .34-.104.518-.235.603-.317v-.89c-.082.03-.157.067-.247.095-.602.185-1.387.286-2.204.286-.818 0-1.603-.101-2.205-.286-.095-.03-.174-.067-.26-.1v.904zm10.812-5.885c1.23.375 1.487 1.042 1.487 1.535v6.652c0 .493-.257 1.157-1.487 1.535-.608.185-1.39.286-2.207.286-.816 0-1.597-.1-2.205-.286a2.87 2.87 0 01-.871-.417c-.238.174-.53.317-.863.417-.605.185-1.386.286-2.204.286-.818 0-1.602-.1-2.205-.286a3.004 3.004 0 01-.882-.417 2.859 2.859 0 01-.86.417c-.605.185-1.387.286-2.205.286-.817 0-1.602-.1-2.204-.286-.577-.176-1-.442-1.258-.776a.626.626 0 01-.238-.481v-2.32c0-.117.017-.238.048-.35v-.003c.154-.535.638-.932 1.437-1.179 1.207-.37 3.204-.367 4.412 0 .092.028.17.062.252.093V15.5c0-.12.016-.238.047-.35v-.003c.154-.537.636-.935 1.44-1.179 1.205-.37 3.21-.37 4.412 0 .092.028.168.059.25.093v-.844c0-.117.016-.235.047-.347v-.005c.154-.535.636-.936 1.44-1.18 1.218-.372 3.212-.37 4.417-.005zm-3.905-5.336l-.538.005 1.998 2.056 2.002-2.056-.52-.005a.752.752 0 01-.55-.247.777.777 0 01-.21-.56L18.5 3.256h-1.43l.003 2.3a.77.77 0 01-.207.54.76.76 0 01-.544.25zm.866 3.232l-3.05-3.14c-.23-.28-.267-.613-.138-.888a.758.758 0 01.69-.445l1.145-.009-.003-1.983c0-.613.49-1.112 1.092-1.112h1.717c.603 0 1.093.499 1.093 1.11l.003 1.982 1.154.012c.291 0 .557.17.683.445a.813.813 0 01-.098.843L18.331 9.62c-.082.11-.264.213-.465.235a.747.747 0 01-.563-.165.866.866 0 01-.115-.112z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 21.692c-3.123 0-5.557-.818-7.23-2.429C2.88 17.588 2 15.093 2 11.846s.88-5.742 2.616-7.417C6.29 2.818 8.723 2 11.846 2s5.557.818 7.23 2.429c1.736 1.672 2.616 4.168 2.616 7.417 0 3.25-.88 5.742-2.616 7.417-1.673 1.61-4.107 2.429-7.23 2.429zm2.801-9.625c-.507-.476-1.263-.784-2.24-.916V7.958c.459.073.907.232 1.372.487l.008.006a.936.936 0 00.41.115.663.663 0 00.663-.664c0-.252-.143-.476-.403-.639-.57-.353-1.283-.577-2.054-.655v-.754a.562.562 0 00-.56-.56.562.562 0 00-.56.56v.754c-1.709.19-2.784 1.316-2.784 2.972 0 1.084.49 2.431 2.784 2.81v3.355c-.628-.095-1.255-.35-1.88-.767a.824.824 0 00-.453-.146.69.69 0 00-.695.68c0 .255.11.457.333.614.779.546 1.74.888 2.695.972v.745c0 .308.252.56.56.56.308 0 .56-.252.56-.56v-.762c.843-.095 1.55-.375 2.062-.82.63-.547.964-1.317.964-2.23.002-.815-.261-1.476-.782-1.964zm-4.356-1.549c-.285-.246-.417-.566-.417-1.008 0-.47.165-.866.476-1.143.238-.213.555-.353.936-.417v3.022c-.434-.106-.768-.258-.995-.454zm2.115 2.031c1.446.283 1.653.93 1.653 1.535 0 .894-.62 1.499-1.653 1.658V12.55z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.994 2.156c3.14 0 5.574.813 7.238 2.418 1.725 1.663 2.602 4.162 2.602 7.423 0 6.437-3.403 9.837-9.84 9.837-6.434 0-9.838-3.4-9.838-9.835 0-6.434 3.404-9.843 9.838-9.843zm0 .56c-2.989 0-5.294.762-6.849 2.261-1.61 1.555-2.429 3.916-2.429 7.02 0 3.103.818 5.467 2.429 7.02 1.555 1.498 3.86 2.257 6.849 2.257 2.989 0 5.294-.76 6.851-2.258C20.46 17.462 21.277 15.1 21.277 12s-.818-5.465-2.432-7.02c-1.557-1.5-3.862-2.263-6.851-2.263zm0 3.009a.28.28 0 01.28.28v1.01c.893.049 1.651.302 2.188.634.184.115.271.258.271.4 0 .21-.168.385-.38.385h-.003a.642.642 0 01-.286-.087c-.561-.305-1.142-.507-1.79-.558v3.75l.196.026c1.924.241 2.838 1.154 2.838 2.608 0 1.541-1.034 2.666-3.03 2.795l-.001 1.023a.28.28 0 01-.28.28.28.28 0 01-.28-.28v-1.016l-.105-.002a5.303 5.303 0 01-2.708-.929c-.143-.1-.213-.213-.213-.384a.412.412 0 01.412-.397c.106.005.21.039.3.1.586.39 1.387.779 2.314.843l-.002-3.909h-.004c-1.896-.242-2.779-1.155-2.779-2.567 0-1.601 1.086-2.623 2.781-2.715v-1.01a.28.28 0 01.28-.28zm.283 6.642v3.838c1.38-.095 2.213-.865 2.213-1.97 0-.95-.519-1.624-2.213-1.868zm-2.53-2.71c0 .933.536 1.554 1.967 1.805l-.001-3.68c-1.266.08-1.966.838-1.966 1.876z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 2c3.123 0 5.557.818 7.23 2.429 1.736 1.672 2.616 4.168 2.616 7.417 0 3.25-.88 5.742-2.616 7.417-1.673 1.61-4.107 2.429-7.23 2.429s-5.558-.818-7.23-2.429C2.88 17.588 2 15.093 2 11.846s.88-5.742 2.616-7.417C6.288 2.818 8.723 2 11.846 2zm0 1.12c-2.824 0-4.994.712-6.451 2.115-1.51 1.454-2.275 3.678-2.275 6.61 0 2.934.765 5.155 2.275 6.612 1.457 1.403 3.627 2.114 6.45 2.114 2.824 0 4.995-.711 6.452-2.114 1.51-1.454 2.274-3.678 2.274-6.611s-.764-5.154-2.274-6.61C16.84 3.831 14.669 3.12 11.846 3.12zm-.003 2.174c.308 0 .56.252.56.56v.755c.77.077 1.483.303 2.05.654.261.16.404.387.404.639a.663.663 0 01-.664.664.925.925 0 01-.409-.115l-.008-.006a4.232 4.232 0 00-1.371-.486l-.001 3.189.215.031c.875.145 1.557.442 2.028.885.518.488.784 1.149.784 1.964 0 .913-.333 1.683-.963 2.23-.513.445-1.217.725-2.06.82l-.002.762a.56.56 0 11-1.12 0v-.745a5.632 5.632 0 01-2.695-.972c-.224-.157-.333-.358-.333-.613 0-.376.31-.68.694-.68a.86.86 0 01.454.145c.623.414 1.253.672 1.878.768V12.39c-2.296-.378-2.788-1.725-2.788-2.808 0-1.658 1.077-2.784 2.786-2.974v-.755c0-.308.253-.56.561-.56zm.563 7.256v3.192c1.033-.16 1.65-.766 1.65-1.658 0-.606-.207-1.251-1.65-1.534zm-2.059-4.183c-.31.277-.476.672-.476 1.143 0 .442.132.762.417 1.008.227.195.56.347.994.453v-3.02c-.38.063-.699.204-.935.416z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyRiseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.887 7.455c0-.344.277-.624.616-.624h.375c-.008-.146-.03-.28-.03-.435 0-.042.008-.078.008-.12H3.5a.62.62 0 01-.616-.625c0-.344.277-.624.616-.624h.516C4.453 3.223 5.8 2.234 7.948 2.234c.804 0 1.505.137 2.084.412a.632.632 0 01.3.832.614.614 0 01-.818.305c-.417-.196-.944-.297-1.566-.297-1.428 0-2.294.499-2.66 1.54h2.036a.62.62 0 01.616.625.622.622 0 01-.616.625H5.088c0 .042-.008.078-.008.12 0 .155.017.292.025.435h2.219a.62.62 0 01.616.624.622.622 0 01-.616.625h-1.9c.423.823 1.247 1.227 2.524 1.227.63 0 1.16-.101 1.58-.303a.614.614 0 01.82.3.631.631 0 01-.293.835c-.586.28-1.294.423-2.107.423-2.022 0-3.344-.871-3.857-2.476h-.59a.628.628 0 01-.614-.63zm11.921-.56a.757.757 0 01-.686-.445.807.807 0 01.1-.843l3.144-3.216c.08-.11.263-.213.465-.235a.736.736 0 01.56.165c.033.028.087.081.115.115l3.05 3.131c.227.278.266.608.137.883a.758.758 0 01-.689.445l-1.145.008.002 1.978c0 .613-.49 1.11-1.092 1.11h-1.717a1.1 1.1 0 01-1.093-1.107l-.002-1.978-1.149-.011zm5.188 13.457c.53-.16.608-.325.608-.325v-.852c-.081.034-.16.07-.25.098-.605.185-1.386.286-2.204.286-.818 0-1.6-.101-2.205-.286-.092-.028-.17-.064-.254-.098v.854c.01.023.103.171.605.325.977.297 2.714.297 3.7-.002zm-6.149.002c.32-.098.513-.226.603-.313v-.9c-.082.031-.157.068-.247.096-.602.185-1.386.285-2.204.285-.818 0-1.6-.1-2.205-.285-.095-.028-.173-.067-.26-.101v.913c.078.073.26.199.613.308.983.294 2.726.294 3.7-.003zm-6.15 0c.34-.103.52-.238.604-.319v-.885c-.084.03-.157.067-.25.095-.601.185-1.386.286-2.204.286-.817 0-1.602-.101-2.204-.286-.095-.028-.174-.067-.26-.1v.898c.075.076.257.2.616.309.98.302 2.722.3 3.697.002zm-3.704-2.7c-.23.07-.364.137-.456.196.092.059.238.129.462.196.98.297 2.717.3 3.697 0 .216-.067.362-.134.457-.193a1.943 1.943 0 00-.46-.199c-.98-.3-2.72-.3-3.7 0zm6.151-2.32a2.013 2.013 0 00-.453.194c.09.059.224.129.459.199.98.297 2.723.297 3.697 0 .219-.067.362-.135.457-.193a1.69 1.69 0 00-.46-.2c-.977-.296-2.72-.296-3.7 0zm6.149-2.274a1.84 1.84 0 00-.454.194c.09.058.227.128.462.198.978.297 2.717.3 3.698 0a1.96 1.96 0 00.456-.193 1.832 1.832 0 00-.46-.199c-.982-.3-2.719-.302-3.702 0zm-.605 3.799v.913c.078.075.263.199.61.302.984.3 2.718.3 3.7 0 .326-.1.519-.232.606-.319v-.896c-.084.033-.16.07-.25.098-.599.182-1.383.285-2.204.285-.82 0-1.602-.1-2.205-.285-.095-.028-.173-.068-.257-.098zm.255-2.208c-.096-.028-.174-.067-.26-.1v.899c.078.075.257.199.615.308.98.3 2.72.3 3.698 0 .342-.104.524-.238.605-.32v-.885c-.084.034-.157.068-.25.096-.604.184-1.386.285-2.204.285-.818 0-1.6-.1-2.204-.283zm-6.41 3.076c.08.076.261.199.617.308.983.297 2.717.3 3.697 0 .34-.104.519-.232.6-.316v-.888c-.081.03-.157.067-.247.095-.599.185-1.383.286-2.204.286-.82 0-1.602-.101-2.205-.286-.095-.031-.173-.067-.26-.101v.902h.003zM20.35 11.86c1.23.376 1.487 1.04 1.487 1.53v6.63c0 .49-.257 1.154-1.487 1.53-.605.184-1.39.285-2.207.285-.818 0-1.6-.1-2.205-.286a2.87 2.87 0 01-.871-.417 3 3 0 01-.863.417c-.6.185-1.384.286-2.204.286-.821 0-1.603-.1-2.205-.286a3.004 3.004 0 01-.882-.417 2.98 2.98 0 01-.86.417c-.6.185-1.384.286-2.205.286-.82 0-1.605-.1-2.204-.286-.577-.176-1-.442-1.255-.773a.613.613 0 01-.238-.481v-2.311c0-.118.017-.238.048-.35v-.003c.154-.535.638-.93 1.44-1.174 1.204-.367 3.207-.367 4.411 0 .093.028.171.062.252.092v-.882c0-.123.017-.24.05-.353.152-.535.637-.93 1.438-1.173 1.204-.37 3.21-.37 4.411 0 .093.028.168.058.25.092v-.84c0-.12.017-.241.05-.353.154-.535.636-.93 1.437-1.174 1.207-.375 3.207-.375 4.412-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyRiseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.904 7.228c0-.235.187-.425.42-.425h.6c-.015-.174-.037-.34-.037-.524 0-.079.014-.143.017-.219h-.58a.426.426 0 010-.852h.664c.35-1.921 1.69-2.97 3.877-2.97.788 0 1.474.135 2.04.401.21.101.303.353.204.566a.416.416 0 01-.551.21l-.006-.002C9.098 3.2 8.529 3.09 7.865 3.09c-1.72 0-2.706.704-3.02 2.118h2.382c.232 0 .42.191.42.426a.423.423 0 01-.42.426H4.742c-.003.073-.014.14-.014.219 0 .187.016.355.033.526H7.23c.233 0 .42.19.42.426a.423.423 0 01-.42.426H4.915C5.3 8.87 6.274 9.464 7.865 9.464c.673 0 1.247-.112 1.704-.33a.42.42 0 01.557.204.426.426 0 01-.201.566c-.57.275-1.264.412-2.062.412-2.065 0-3.365-.942-3.802-2.659h-.737a.427.427 0 01-.42-.429zm15.103-4.107l-2.544 2.606 1.029.008a.585.585 0 01.568.6v.003l.003 2.476c0 .037.028.067.065.067h1.753a.063.063 0 00.065-.064l-.003-2.49a.58.58 0 01.558-.592l1.042-.008c.003 0-2.536-2.606-2.536-2.606zm-3.171 3.452a.57.57 0 01-.513-.334.61.61 0 01.076-.633l3.2-3.272a.518.518 0 01.344-.18.549.549 0 01.507.21l3.127 3.211c.17.21.196.46.1.664a.57.57 0 01-.512.334l-1.381.011.002 2.23a.913.913 0 01-.905.92h-1.75a.913.913 0 01-.906-.92l-.002-2.23-1.387-.011zm5.393 14.17c.23-.07.77-.266.77-.54v-1.188c-.168.09-.344.162-.523.219-.594.182-1.373.282-2.191.282-.821 0-1.597-.1-2.191-.282a3.287 3.287 0 01-.535-.216v1.185c0 .274.54.47.77.543 1.045.314 2.85.314 3.9-.002zm-6.278 0c.414-.125.67-.313.767-.459v-1.311a3.15 3.15 0 01-.524.218c-.594.183-1.373.283-2.19.283-.819 0-1.598-.098-2.191-.283a3.287 3.287 0 01-.536-.215v1.32c.087.137.342.316.78.448 1.036.316 2.851.316 3.894 0zm-6.285 0c.412-.125.667-.31.768-.459v-1.291a3.325 3.325 0 01-.527.21c-.594.182-1.372.283-2.19.283-.819 0-1.597-.101-2.191-.283a3.287 3.287 0 01-.536-.216v1.308c.082.126.32.306.78.449 1.039.319 2.854.319 3.896 0zm-3.905-3.165c-.364.112-.614.257-.714.4.095.146.347.295.72.41 1.036.316 2.863.316 3.897 0 .482-.15.655-.303.72-.398-.132-.208-.533-.35-.726-.41-1.04-.316-2.855-.316-3.897-.002zm6.284-2.365c-.37.112-.622.26-.717.406.064.098.24.255.725.404 1.04.316 2.855.316 3.898 0 .479-.146.652-.303.722-.4-.131-.205-.532-.351-.725-.41-1.045-.32-2.864-.32-3.903 0zm6.284-2.328c-.462.143-.644.294-.717.395.09.148.347.3.723.415 1.036.316 2.86.316 3.9 0 .479-.149.652-.303.72-.401-.132-.205-.533-.35-.726-.409-1.042-.317-2.858-.317-3.9 0zm-.77 3.765v1.32c.087.137.342.317.779.448 1.036.317 2.86.317 3.897 0 .414-.126.67-.314.767-.46v-1.31c-.168.09-.344.162-.524.218-.596.182-1.375.28-2.19.28-.816 0-1.595-.098-2.191-.28a3.218 3.218 0 01-.538-.216zm.532-2.14a3.258 3.258 0 01-.532-.216v1.309c.08.126.316.308.776.448 1.042.316 2.855.316 3.9 0 .411-.126.666-.311.765-.457v-1.291a3.399 3.399 0 01-.524.21c-.594.182-1.373.283-2.191.283-.821-.003-1.597-.104-2.194-.286zm-6.816 2.112v1.306c.08.129.319.308.778.448 1.037.317 2.86.317 3.898 0 .462-.14.686-.336.767-.456v-1.292a3.44 3.44 0 01-.527.21c-.596.182-1.375.283-2.19.283-.816 0-1.592-.098-2.191-.283a3.287 3.287 0 01-.535-.216zM20.47 12.07c1.132.347 1.37.927 1.37 1.356V20.2c0 .429-.238 1.011-1.37 1.359-.602.182-1.378.283-2.19.283-.813 0-1.592-.101-2.192-.28-.445-.138-.75-.311-.958-.496a2.632 2.632 0 01-.939.496c-.6.182-1.375.283-2.19.283-.816 0-1.592-.101-2.191-.283a2.702 2.702 0 01-.964-.496 2.59 2.59 0 01-.939.496c-.596.182-1.375.283-2.19.283-.816 0-1.595-.101-2.191-.283-.558-.171-.956-.423-1.188-.729a.416.416 0 01-.188-.347V18.12c0-.1.014-.201.04-.297l.002-.005c.137-.471.583-.827 1.328-1.057 1.196-.364 3.188-.364 4.382 0 .21.065.378.138.532.216v-1.224c0-.104.014-.202.042-.3.135-.476.58-.83 1.328-1.059 1.19-.364 3.188-.364 4.385 0 .182.056.361.129.53.216v-1.185c0-.104.013-.202.038-.3.135-.474.583-.83 1.328-1.06 1.197-.36 3.189-.36 4.385.004z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoneyRiseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.887 7.455c0-.344.277-.624.616-.624h.375c-.008-.146-.03-.28-.03-.435 0-.042.008-.078.008-.12H3.5a.62.62 0 01-.616-.625c0-.344.277-.624.616-.624h.516C4.453 3.223 5.8 2.234 7.948 2.234c.804 0 1.505.137 2.084.412a.632.632 0 01.3.832.614.614 0 01-.818.305c-.417-.196-.944-.297-1.566-.297-1.428 0-2.294.499-2.66 1.54h2.036a.62.62 0 01.616.625.622.622 0 01-.616.625H5.088c0 .042-.008.078-.008.12 0 .155.017.292.025.435h2.219a.62.62 0 01.616.624.622.622 0 01-.616.625h-1.9c.423.823 1.247 1.227 2.524 1.227.63 0 1.16-.101 1.58-.303a.614.614 0 01.82.3.631.631 0 01-.293.835c-.586.28-1.294.423-2.107.423-2.022 0-3.344-.871-3.857-2.476h-.59a.628.628 0 01-.614-.63zm15.028-3.851l-2.003 2.05.52.006a.774.774 0 01.762.81l.004 2.271h1.431l-.003-2.294a.763.763 0 01.21-.54.756.756 0 01.538-.247l.538-.006-1.997-2.05zm-3.107 3.291a.757.757 0 01-.686-.445.807.807 0 01.1-.843l3.144-3.216c.08-.11.263-.213.465-.235a.736.736 0 01.56.165c.033.028.087.081.115.115l3.05 3.131c.227.278.266.608.137.883a.758.758 0 01-.689.445l-1.145.008.002 1.978c0 .613-.49 1.11-1.092 1.11h-1.717a1.1 1.1 0 01-1.092-1.107l-.003-1.978-1.149-.011zm5.188 13.457c.53-.16.608-.325.608-.325v-.852c-.081.034-.16.07-.25.098-.605.185-1.386.286-2.204.286-.818 0-1.6-.101-2.205-.286-.092-.028-.17-.064-.254-.098v.854c.01.023.103.171.605.325.977.297 2.714.297 3.7-.002zm-6.149.002c.32-.098.513-.226.603-.313v-.9c-.082.031-.157.068-.247.096-.602.185-1.386.285-2.204.285-.818 0-1.6-.1-2.205-.285-.095-.028-.173-.067-.26-.101v.913c.078.073.26.199.613.308.983.294 2.726.294 3.7-.003zm-6.15 0c.34-.103.52-.238.604-.319v-.885c-.084.03-.157.067-.249.095-.602.185-1.387.286-2.205.286-.817 0-1.602-.101-2.204-.286-.095-.028-.174-.067-.26-.1v.898c.075.076.257.2.616.309.98.302 2.722.3 3.697.002zm-3.704-2.7c-.23.07-.364.137-.456.196.092.059.238.13.462.196.98.297 2.717.3 3.697 0 .216-.067.362-.134.457-.193a1.943 1.943 0 00-.46-.199c-.98-.3-2.72-.3-3.7 0zm6.151-2.32a2.013 2.013 0 00-.453.194c.09.059.224.129.459.199.98.297 2.723.297 3.697 0 .219-.067.362-.134.457-.193a1.69 1.69 0 00-.46-.2c-.977-.296-2.72-.296-3.7 0zm6.149-2.274a1.84 1.84 0 00-.454.194c.09.058.227.128.462.198.978.297 2.717.3 3.698 0a1.96 1.96 0 00.456-.193 1.832 1.832 0 00-.46-.199c-.982-.3-2.719-.302-3.702 0zm-.605 3.799v.913c.078.075.263.199.61.302.984.3 2.718.3 3.7 0 .326-.1.519-.232.606-.319v-.896c-.084.033-.16.07-.25.098-.599.182-1.383.285-2.204.285-.82 0-1.602-.1-2.205-.285-.095-.028-.173-.068-.257-.098zm.255-2.208c-.096-.028-.174-.067-.26-.1v.899c.078.075.257.199.615.308.98.3 2.72.3 3.698 0 .342-.104.524-.238.605-.32v-.885c-.084.034-.157.068-.25.096-.604.184-1.386.285-2.204.285-.818 0-1.6-.1-2.204-.283zm-6.41 3.076c.08.076.261.199.617.308.983.297 2.717.3 3.697 0 .34-.104.519-.232.6-.316v-.888c-.081.03-.157.067-.247.095-.599.185-1.383.286-2.204.286-.82 0-1.602-.101-2.205-.286-.095-.031-.173-.067-.26-.101v.902h.003zm10.816-5.866c1.23.376 1.487 1.04 1.487 1.53v6.63c0 .49-.257 1.154-1.487 1.53-.605.184-1.39.285-2.207.285-.818 0-1.6-.1-2.205-.286a2.87 2.87 0 01-.871-.417 3 3 0 01-.863.417c-.6.185-1.384.286-2.204.286-.821 0-1.603-.1-2.205-.286a3.004 3.004 0 01-.882-.417 2.98 2.98 0 01-.86.417c-.6.185-1.384.286-2.205.286-.82 0-1.605-.1-2.204-.286-.577-.176-1-.442-1.255-.773a.613.613 0 01-.238-.481v-2.311c0-.118.017-.238.048-.35v-.003c.154-.535.638-.93 1.44-1.174 1.204-.367 3.207-.367 4.411 0 .093.028.171.062.252.092v-.882c0-.123.017-.24.05-.353.152-.535.637-.93 1.438-1.173 1.204-.37 3.21-.37 4.411 0 .093.028.168.058.25.092v-.84c0-.12.017-.241.05-.353.154-.535.636-.93 1.437-1.174 1.207-.375 3.207-.375 4.412-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoonFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.281 16.23a.423.423 0 00-.493-.056c-1.431.812-2.972.96-3.77.98-.2.008-.448.008-.673.008-1.605-.022-6.837-.616-6.837-7.17 0-4.835 2.793-6.446 5.134-6.947a.42.42 0 00-.01-.824 11.651 11.651 0 00-1.796-.187l-.897-.009c-2.201.031-9.389.82-9.389 9.818 0 1.622.457 9.723 9.457 9.871.296 0 .616 0 .874-.008 1.462-.023 6.394-.457 8.495-4.992a.415.415 0 00-.095-.484"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoonLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.853 20.985c-.255.009-.566.009-.846.009-2.023-.034-8.617-.785-8.617-9.028 0-8.227 6.544-8.947 8.544-8.972l.63.005c-1.913.933-3.905 2.914-3.905 7.115 0 7.502 6.381 7.983 7.667 8.003.24 0 .499 0 .703-.008a9.577 9.577 0 002.944-.538c-2.118 3.073-5.908 3.392-7.12 3.414m8.411-4.635a.423.423 0 00-.493-.056c-1.428.809-2.966.96-3.764.98-.202.008-.449.008-.673.008-1.602-.025-6.832-.619-6.832-7.168 0-4.832 2.79-6.442 5.132-6.94a.42.42 0 00.333-.416.422.422 0 00-.344-.406 11.382 11.382 0 00-1.796-.187l-.896-.009c-2.202.028-9.381.815-9.381 9.807 0 1.619.454 9.711 9.448 9.863.297 0 .616 0 .874-.009 1.462-.025 6.39-.456 8.49-4.988a.408.408 0 00-.098-.48"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMoonRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.771 3.235c-2.087.065-7.983.936-7.983 8.583 0 7.888 6.3 8.608 8.233 8.639.268 0 .568 0 .82-.009 1.09-.02 4.353-.288 6.42-2.745a9.609 9.609 0 01-2.322.339c-.196.008-.453.008-.692.008-3.733-.058-7.711-2.201-7.711-8.047-.003-3.717 1.549-5.706 3.235-6.768m.236 18.451c-4.577-.078-9.457-2.708-9.457-9.868 0-7.151 4.849-9.76 9.387-9.818l.88.008c.332.006.988.04 1.795.188a.616.616 0 01.02 1.207c-2.22.474-4.864 2.003-4.864 6.603 0 6.232 4.967 6.792 6.485 6.818.213 0 .451 0 .647-.006.765-.017 2.233-.163 3.594-.936a.617.617 0 01.866.793c-2.107 4.552-7.034 4.983-8.493 5.008-.253.003-.566.003-.86.003"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMouseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.489 2.16a.55.55 0 01.549.549c0 .888 1.064 1.204 2.062 1.204h1.918c.869 0 1.544.39 1.9 1.096.254.501.26.989.26 1.045l.001.37c1.502.09 2.693.545 3.545 1.352.995.95 1.502 2.356 1.502 4.185v4.311c0 1.896-.44 3.263-1.345 4.174-.924.93-2.322 1.38-4.277 1.38-1.776 0-3.163-.459-4.12-1.37-.998-.946-1.502-2.355-1.502-4.184v-4.31c0-1.83.504-3.239 1.501-4.186.86-.816 2.07-1.272 3.598-1.356l.002-.364c0-.02-.011-.308-.157-.577-.174-.322-.462-.47-.91-.47h-1.92c-.895 0-1.663-.2-2.218-.574-.605-.412-.938-1.026-.938-1.726a.55.55 0 01.549-.549zm1.504 10.482c-.277-.031-.532.115-.571.322-.04.207.154.4.431.428 1.58.163 3.165.244 4.754.241 1.588 0 3.173-.078 4.753-.24.277-.029.47-.222.432-.43-.04-.206-.295-.35-.572-.321a44.516 44.516 0 01-4.613.232 44.516 44.516 0 01-4.614-.232zm4.61-4.34a.55.55 0 00-.548.55v2.877a.552.552 0 00.549.549.55.55 0 00.549-.55V8.853a.552.552 0 00-.55-.55z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMouseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.22 2.156c.157 0 .283.126.283.283 0 .446.202.81.597 1.079.429.29 1.053.445 1.807.445h1.974c1 0 1.48.53 1.706.975.216.426.236.85.238.933v.665c3.401.107 5.197 1.979 5.197 5.433v4.437c0 1.873-.426 3.215-1.303 4.098-.9.902-2.272 1.339-4.204 1.339-3.603 0-5.507-1.88-5.507-5.437l-.001-3.355a.276.276 0 010-.074v-1.008c0-3.473 1.816-5.347 5.253-5.434v-.65a1.79 1.79 0 00-.185-.71c-.224-.43-.628-.649-1.194-.649H8.907c-1.804 0-2.97-.818-2.97-2.087 0-.157.127-.283.283-.283zm11.24 11.177l.313-.04a37.988 37.988 0 01-5.204.356h-.112c-1.629 0-3.27-.106-4.885-.313v3.072c0 3.233 1.663 4.871 4.944 4.871 1.775 0 3.02-.383 3.803-1.173.768-.773 1.14-1.983 1.14-3.7v-3.073zm-4.944-6.236c-3.28 0-4.944 1.64-4.944 4.872v.798l.488.063c1.475.172 2.969.256 4.45.256h.056a37.89 37.89 0 004.894-.318v-.8c-.003-3.232-1.667-4.87-4.944-4.87zm0 1.387c.156 0 .282.126.282.283v2.96a.286.286 0 01-.282.284.282.282 0 01-.283-.283V8.767c0-.157.126-.283.283-.283z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMouseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.489 2.16a.55.55 0 01.549.549c0 .888 1.064 1.204 2.062 1.204h1.918c.869 0 1.544.39 1.9 1.096.254.501.26.989.26 1.045l.001.367c1.504.09 2.693.546 3.542 1.352.998.947 1.502 2.356 1.502 4.185v4.311c0 1.897-.44 3.264-1.347 4.174-.922.933-2.32 1.386-4.275 1.386-1.779 0-3.165-.462-4.12-1.37-.998-.946-1.502-2.355-1.502-4.184V11.96c0-1.829.504-3.238 1.502-4.185.862-.82 2.072-1.276 3.6-1.359l.002-.36c0-.02-.011-.309-.157-.578-.174-.322-.462-.47-.91-.47h-1.92c-.895 0-1.663-.2-2.218-.574-.605-.412-.938-1.026-.938-1.726a.55.55 0 01.549-.549zm10.638 11.439l.623-.078c-1.681.23-3.398.348-5.096.348h-.106c-1.489 0-2.99-.09-4.473-.268v2.674c0 3 1.481 4.46 4.526 4.46 1.647 0 2.793-.348 3.499-1.06.692-.697 1.028-1.81 1.028-3.403l-.001-2.673zm-4.526-6.097c-3.048 0-4.527 1.46-4.527 4.462v.532l.346.044c1.37.156 2.756.233 4.13.233h.101a36.59 36.59 0 004.477-.274v-.538c.002-3.003-1.48-4.46-4.527-4.46zm0 .8a.55.55 0 01.55.55v2.877a.55.55 0 01-1.099 0V8.852a.55.55 0 01.55-.55z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMultideviceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.086 18.282a.28.28 0 01.28.28.28.28 0 01-.28.28H7.624a.28.28 0 01-.28-.28.28.28 0 01.28-.28h5.462zm2.451-13.126c1.014 0 1.785.294 2.292.874.476.546.72 1.353.72 2.398v.285h1.47c.613 0 1.059.15 1.364.454.303.306.451.751.451 1.362v6.49c0 1.224-.594 1.818-1.815 1.818h-2.938c-1.222 0-1.816-.594-1.816-1.815v-.382H5.167c-1.014 0-1.784-.293-2.29-.873-.477-.546-.72-1.353-.72-2.398V8.428c0-1.045.24-1.852.72-2.398.506-.58 1.276-.874 2.29-.874h10.37zm4.482 4.12h-2.938c-.891 0-1.255.365-1.255 1.256v6.49c0 .905.353 1.255 1.255 1.255h2.938c.905 0 1.255-.353 1.255-1.255v-6.49c0-.905-.353-1.255-1.255-1.255zm-1.468 7.186c.283 0 .465.148.468.47 0 .154-.042.266-.118.345-.084.084-.201.123-.35.123-.148 0-.269-.04-.35-.123-.076-.076-.118-.19-.118-.345 0-.322.185-.47.468-.47zM15.537 5.714H5.167c-1.672 0-2.45.862-2.45 2.714v4.938c0 1.852.778 2.715 2.45 2.715h10.098v-5.55c0-.602.149-1.041.454-1.352.308-.311.754-.465 1.362-.465h.906l.001-.286c0-1.852-.779-2.714-2.45-2.714z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMultideviceoFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.818 18.283a.561.561 0 010 1.12H7.902a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56zM15.544 5.16c1.1 0 1.94.325 2.504.97.521.599.787 1.467.787 2.582v.005h.916c1.37 0 2.095.726 2.095 2.096V17.3c0 1.37-.725 2.095-2.095 2.095h-2.938c-1.37 0-2.096-.725-2.096-2.095v-.1H5.451c-1.1 0-1.94-.326-2.504-.97-.524-.6-.787-1.468-.787-2.583V8.71c0-1.115.263-1.983.787-2.58.563-.641 1.406-.969 2.504-.969zm4.207 4.678H16.81c-.728 0-.975.246-.975.975v6.49c0 .378.07.639.207.773.138.137.395.204.77.204h2.936c.376 0 .633-.07.77-.204.138-.137.208-.398.208-.773v-6.49c0-.748-.227-.975-.975-.975zm-1.47 6.26c.453 0 .747.294.747.751 0 .28-.109.448-.199.54-.092.096-.263.208-.549.208-.285 0-.456-.112-.549-.207-.092-.093-.198-.26-.198-.54 0-.458.294-.752.747-.752z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMultideviceoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.818 18.283a.56.56 0 110 1.12H7.902a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h4.916zM15.541 5.16c1.098 0 1.941.328 2.504.97.524.599.787 1.467.787 2.582v.008h.922c1.37 0 2.095.726 2.095 2.095v6.49c-.003 1.37-.725 2.096-2.098 2.096h-2.936c-1.37 0-2.095-.726-2.095-2.095v-.104H5.451c-1.098 0-1.94-.328-2.504-.97-.524-.599-.787-1.467-.787-2.582V8.712c0-1.115.266-1.983.787-2.583.563-.644 1.403-.969 2.504-.969h10.09zm1.274 4.678c-.728 0-.974.246-.974.975v6.49c0 .375.07.636.207.773.137.134.395.204.77.204h2.939c.375 0 .633-.067.77-.204.137-.134.207-.395.207-.773v-6.488c0-.747-.227-.974-.975-.974h-2.944v-.003zm1.468 6.263c.454 0 .748.294.748.75 0 .281-.106.45-.199.541a.746.746 0 01-.549.208c-.285 0-.456-.112-.549-.208a.746.746 0 01-.199-.54c0-.457.294-.75.748-.75zm-2.742-9.823H5.451c-.77 0-1.313.193-1.658.588-.339.39-.513 1.011-.513 1.846v4.938c0 .835.171 1.457.513 1.846.345.395.888.588 1.658.588h9.269v-5.269c0-1.35.745-2.095 2.095-2.095h.896v-.008c0-.835-.17-1.457-.512-1.846-.344-.395-.888-.588-1.658-.588z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMuseumFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.653 2.27a.616.616 0 01.7 0l9.23 6.43a.627.627 0 01.235.692.61.61 0 01-.586.432V9.82h-1.798v7.852h1.745c.34 0 .614.277.614.616v2.938a.616.616 0 01-.614.616H2.823a.616.616 0 01-.613-.616V18.29c0-.34.274-.616.613-.616h1.78V9.82h-1.83a.613.613 0 01-.585-.431.618.618 0 01.235-.69zm-1.446 7.554H8.232v7.851h1.975V9.824zm5.6 0h-1.975v7.851h1.975V9.824z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMuseumLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.767 2.236a.412.412 0 01.476 0l9.426 6.568a.424.424 0 01.16.47.414.414 0 01-.398.295h-2.045v8.44h1.991c.23 0 .418.187.418.42v3.003c0 .232-.185.42-.418.42H2.632a.419.419 0 01-.417-.42v-3.003c0-.233.185-.42.417-.42h2.025v-8.44H2.58a.418.418 0 01-.4-.294.421.421 0 01.162-.47zm9.19 16.613H3.05v2.163h17.907v-2.163zM7.108 9.57H5.492v8.44h1.616V9.57zm8.992 0h-2.434v8.44H16.1V9.57zm-3.269 0h-1.616v8.44h1.616V9.57zm-2.454 0H7.943v8.44h2.434V9.57zm8.174 0h-1.616v8.44h1.616V9.57zm-6.546-6.476L3.912 8.729h1.154l.009-.003c.003 0 .005.003.008.003h2.434l.009-.003c.003 0 .005.003.008.003h3.252l.009-.003c.002 0 .005.003.008.003h2.434l.009-.003c.002 0 .005.003.008.003h3.252l.009-.003c.002 0 .005.003.008.003h2.434l.009-.003c.002 0 .005.003.008.003h1.12l-8.09-5.636z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMuseumRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.654 2.27a.616.616 0 01.7 0l9.23 6.43a.627.627 0 01.235.692.61.61 0 01-.585.432V9.82h-1.799v7.852h1.745c.34 0 .614.277.614.616v2.938a.616.616 0 01-.614.616H2.825a.616.616 0 01-.614-.616V18.29c0-.34.275-.616.614-.616h1.778V9.82H2.774a.614.614 0 01-.35-1.12zm8.916 16.638H3.44v1.706h17.13v-1.706zm-2.362-9.084h-1.17v7.851h1.17V9.824zm-11.204 0H5.833v7.851h1.17V9.824zm5.6 0h-1.172v7.851h1.171V9.824zm-2.396 0H8.234v7.851h1.974V9.824zm5.6 0h-1.975v7.851h1.975V9.824zm-3.804-6.297L4.734 8.59h.474c.006 0 .006-.002.009-.002l.008.002H7.61l.008-.002.009.002h3.185l.008-.002.008.002h2.384l.009-.002.008.002h3.185l.008-.002.009.002h2.383l.009-.002.008.002h.443l-7.27-5.064z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMusicFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.624 5.702a1.06 1.06 0 00-.966-1.048l-9.286-2.482-.165-.022c-.443 0-.821.266-.983.644a1.046 1.046 0 00-.085.41v8.254c-.621-.46-1.383-.678-2.098-.695-.09-.002-.196-.002-.296-.002-1.544.014-3.345.924-3.345 3.448 0 2.52 1.812 3.442 3.361 3.465h.115c.062 0 .12 0 .171-.003 1.485-.025 3.188-.885 3.333-3.148h.028V5.94l8.953 2.445v7.233c-.622-.46-1.39-.678-2.104-.695l-.291-.003c-1.544.014-3.345.925-3.345 3.448 0 2.521 1.813 3.443 3.362 3.465h.114c.062 0 .12 0 .171-.002 1.55-.028 3.362-.947 3.362-3.449 0-.05-.012-.09-.014-.137h.014V5.702h-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMusicLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.156 4.685l.003-1.67 9.47 2.524.127.026v1.677l-9.6-2.557zm-3.26 12.048c-.076 0-.168.002-.255 0-.714-.009-2.381-.272-2.381-2.477 0-2.198 1.65-2.453 2.358-2.459.087 0 .183 0 .267.003.72.017 2.395.291 2.395 2.473s-1.667 2.446-2.384 2.46zm10.476 4.249l-.255.003c-.714-.009-2.38-.272-2.38-2.476 0-2.2 1.649-2.451 2.358-2.457l.266.003c.72.017 2.398.291 2.398 2.473-.003 2.177-1.67 2.443-2.387 2.454zm3.25-15.415a.87.87 0 00-.813-.86l-9.538-2.54-.112-.017a.872.872 0 00-.877.863v8.893c-.63-.644-1.515-.935-2.372-.955-.09-.003-.196 0-.294-.003-1.558.012-3.216.888-3.216 3.308s1.672 3.306 3.232 3.328c.096.003.191.003.286 0 .521-.008 3.042-.21 3.216-3.005h.017l.01-9.012 9.6 2.56v8.034c-.63-.644-1.515-.938-2.378-.958l-.291-.003c-1.555.014-3.216.888-3.216 3.309 0 2.42 1.672 3.305 3.235 3.327l.28-.003c.541-.008 3.233-.215 3.233-3.308 0-.05-.011-.09-.014-.14h.014V5.567h-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconMusicRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.232 20.567l-.238.003c-.787-.011-2.104-.31-2.104-2.204 0-1.885 1.3-2.18 2.076-2.188l.255.003c.792.02 2.123.33 2.123 2.199-.003 1.87-1.322 2.173-2.112 2.187zM10.414 4.962V3.495l8.927 2.386V7.35l-8.927-2.387zM7.03 16.42a3.45 3.45 0 01-.24 0c-.788-.011-2.104-.314-2.104-2.205 0-1.888 1.305-2.182 2.08-2.187l.25.003c.779.016 2.073.327 2.115 2.12v.162c-.042 1.79-1.325 2.09-2.1 2.107zM20.627 5.707c0-.549-.429-1.002-.972-1.056l-9.28-2.479-.168-.022A1.07 1.07 0 009.13 3.212v8.232a3.727 3.727 0 00-2.087-.68c-.09-.003-.199-.003-.291-.003-1.546.01-3.353.924-3.353 3.453 0 2.527 1.815 3.449 3.367 3.471h.286c1.49-.028 3.199-.89 3.341-3.162h.02v-.21c0-.029.008-.054.008-.082 0-.028-.008-.05-.008-.078V6.276l8.927 2.387V15.6a3.737 3.737 0 00-2.092-.686l-.292-.003c-1.546.011-3.353.924-3.353 3.454 0 2.526 1.816 3.45 3.373 3.473h.078l.202-.003c1.555-.028 3.367-.95 3.367-3.454 0-.05-.011-.09-.014-.137h.014V5.707h.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNeuralNetworkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.789 20.16a.193.193 0 01-.012-.07c.003-.317.006-.894 0-1.034v-1.302a.21.21 0 01.21-.21h1.46c.07 0 .134.033.173.092a1.2 1.2 0 001.003.515c.653 0 1.182-.482 1.182-1.073 0-.59-.53-1.07-1.182-1.07-.409 0-.784.194-1.003.516a.207.207 0 01-.173.092h-1.46a.21.21 0 01-.21-.21V9.535a.21.21 0 01.21-.21h1.034a.21.21 0 01.21.21v2.176c0 .07-.034.135-.092.174-.308.207-.488.521-.488.86 0 .591.53 1.073 1.182 1.073.41 0 .785-.19 1.003-.513a.214.214 0 01.174-.092l2.652-.006a.21.21 0 01.21.21v1.393a.206.206 0 01-.106.182c-.35.198-.557.537-.557.904 0 .591.53 1.073 1.182 1.073.65 0 1.179-.482 1.179-1.073 0-.364-.207-.703-.552-.902a.208.208 0 01-.103-.182v-2.067a.428.428 0 00-.146-.32.546.546 0 00-.37-.142h-.003l-3.378.006a.207.207 0 01-.173-.093 1.114 1.114 0 00-.451-.386.21.21 0 01-.12-.188V9.535a.21.21 0 01.21-.21h2.582c.286 0 .52-.207.52-.462V7.22c0-.075.04-.145.107-.182.35-.199.558-.535.558-.902 0-.59-.53-1.07-1.182-1.07-.65 0-1.18.48-1.18 1.07 0 .367.208.703.552.902a.21.21 0 01.107.182v.97a.21.21 0 01-.21.21h-4.35a.21.21 0 01-.21-.21V4.64c0-.201.005-.938.008-1.204 0-.028.005-.059.02-.084.142-.314.694-1.336 1.837-1.336.969 0 1.672.336 2.087.997a.201.201 0 01.022.174.204.204 0 01-.12.129 2.72 2.72 0 00-1.493 1.532l-.073.204a.41.41 0 00.028.325.51.51 0 00.314.247.59.59 0 00.156.022c.227 0 .435-.137.499-.33l.059-.169c0-.002 0-.002.003-.005.103-.266.515-1.132 1.504-1.104h.014c.854.003 1.59.185 2.19.544a3.4 3.4 0 011.227 1.283c.53.95.608 2.008.608 2.557 0 .325-.042 1.47-.585 2.507a.212.212 0 01-.132.104.215.215 0 01-.165-.026 4.608 4.608 0 00-1.983-.655c-.283-.034-.547.154-.575.409a.425.425 0 00.093.316.536.536 0 00.364.19c.826.085 1.49.37 1.98.855l.017.017c.916 1.126.986 2.678.986 3.126 0 .54-.078 1.586-.61 2.53a3.448 3.448 0 01-1.225 1.28c-.602.364-1.344.554-2.204.568h-.023c-.282 0-.593-.098-.904-.285a2.317 2.317 0 01-.194-.13.567.567 0 00-.747.076.426.426 0 00.042.602c.01.012.025.02.039.031.081.06.168.118.274.185.152.09.314.168.513.25a.207.207 0 01.098.305c-.41.658-1.112.994-2.084.994-1.247 0-1.734-1.157-1.854-1.512zm-4.986.557a.2.2 0 01-.023-.182.208.208 0 01.129-.132c.221-.078.42-.17.605-.283a.464.464 0 00.221-.302.418.418 0 00-.073-.328c-.156-.221-.487-.283-.73-.137-.331.199-.625.291-.922.288h-.023c-.02.003-.044.009-.075.009h-.02l-.014-.003c-.857-.003-1.594-.185-2.196-.543a3.4 3.4 0 01-1.227-1.283c-.53-.95-.608-2.009-.608-2.558 0-.313.04-1.423.552-2.448a.21.21 0 01.227-.112c.092.02.163.098.168.19.037.552.431 1.017 1.053 1.241l.126.042c.05.017.104.026.157.026a.497.497 0 00.457-.32v-.002a.385.385 0 00-.014-.3.585.585 0 00-.328-.3.65.65 0 01-.322-.224.207.207 0 01-.022-.216.217.217 0 01.179-.12c.465-.02.86-.118 1.174-.294a.452.452 0 00.23-.294.412.412 0 00-.062-.33.555.555 0 00-.726-.158c-.24.138-.56.19-.972.16-.375-.028-.68-.126-.902-.291-.017-.012-.028-.026-.042-.04-.868-1.126-.935-2.621-.935-3.056 0-.549.08-1.607.621-2.557a3.429 3.429 0 011.255-1.283c.617-.361 1.376-.543 2.258-.543h.008c.317.01.547.064.745.17a.57.57 0 00.272.07c.185 0 .359-.09.454-.232a.42.42 0 00.056-.33.458.458 0 00-.235-.292 2.739 2.739 0 00-.359-.16.21.21 0 01-.104-.314c.418-.618 1.107-.935 2.054-.935 1.246 0 1.734 1.157 1.854 1.513a.204.204 0 01.011.07c-.005.344-.005.695 0 1.04v.856a.21.21 0 01-.21.21h-1.322a.21.21 0 01-.17-.09 1.202 1.202 0 00-1.006-.518c-.653 0-1.185.48-1.185 1.07 0 .592.53 1.07 1.182 1.07.412 0 .787-.193 1.005-.515a.207.207 0 01.174-.092h1.322a.21.21 0 01.21.21v1.347a.21.21 0 01-.21.21H6.511a.21.21 0 01-.17-.09 1.21 1.21 0 00-.992-.518h-.011c-.653 0-1.185.48-1.185 1.07 0 .591.53 1.07 1.182 1.07.411 0 .787-.193 1.005-.515a.207.207 0 01.174-.092h5.017a.21.21 0 01.21.21v1.134a.21.21 0 01-.21.21H9.057c-.285 0-.52.207-.52.462v2.068c0 .075-.04.145-.107.182-.347.199-.555.537-.555.904 0 .591.53 1.07 1.182 1.07.653 0 1.182-.479 1.182-1.07 0-.367-.207-.705-.554-.904a.21.21 0 01-.107-.182v-1.395a.21.21 0 01.21-.21h1.746a.21.21 0 01.21.21v5.372a.21.21 0 01-.21.21h-5.35a.211.211 0 01-.21-.207l-.003-.146a.207.207 0 01.106-.215c.356-.196.569-.538.569-.91 0-.592-.53-1.074-1.182-1.074-.653 0-1.182.482-1.182 1.073 0 .367.207.703.551.902.07.04.11.115.104.193 0 .02-.006.037-.008.05l.01.802c.004.252.239.457.522.457h6.061a.21.21 0 01.21.21v.325c0 .168-.005.691-.008 1.039l-.003.162a.177.177 0 01-.02.084c-.134.314-.688 1.34-1.831 1.34-.958 0-1.653-.323-2.067-.956z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNeuralNetworkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.02 7.12a.357.357 0 01-.365-.353c0-.193.162-.353.361-.353.2 0 .362.16.362.353a.353.353 0 01-.359.353m1.149 8.24c.199 0 .361.158.361.354a.36.36 0 01-.364.353.359.359 0 01-.362-.353.36.36 0 01.365-.353m-3.947-2.885c.199 0 .361.16.361.353a.357.357 0 01-.361.352.353.353 0 110-.706m.325 4.328c0-.193.165-.353.364-.353.199 0 .361.16.361.353a.359.359 0 01-.361.353.36.36 0 01-.364-.353m5.627-1.666c0 .935-.255 3.969-3.52 4.025h-.006c-.25.025-.53-.081-.83-.272a1.8 1.8 0 01-.168-.118.433.433 0 00-.59.068.401.401 0 00.058.566c.003.002.009.005.011.008a2.823 2.823 0 00.877.47c-.339.754-.991 1.138-1.95 1.138-1.153 0-1.568-1.18-1.644-1.432a27.1 27.1 0 000-.988v-1.39h1.37a1.2 1.2 0 001.126.762c.664 0 1.205-.526 1.205-1.173 0-.648-.541-1.174-1.205-1.174-.515 0-.952.32-1.126.762H12.41V9.677h1.316v2.081a1.179 1.179 0 00-.709 1.07c0 .648.541 1.174 1.205 1.174.515 0 .955-.32 1.126-.765h2.403v1.381a1.174 1.174 0 00-.787 1.096c0 .647.54 1.173 1.205 1.173.663 0 1.204-.523 1.204-1.173a1.169 1.169 0 00-.781-1.093v-1.795a.414.414 0 00-.423-.41h-2.824a1.19 1.19 0 00-.776-.705V9.677h2.448a.413.413 0 00.42-.409V7.865c.457-.165.788-.594.788-1.098 0-.647-.541-1.174-1.205-1.174s-1.204.524-1.204 1.174c0 .501.327.927.781 1.095v.995h-4.185v-3.46c0-.19.006-.91.009-1.14.103-.25.588-1.28 1.638-1.28.956 0 1.608.384 1.947 1.134-.776.239-1.26.858-1.482 1.471l-.064.188a.41.41 0 00.274.515.427.427 0 00.53-.269l.053-.16c.112-.313.501-1.025 1.336-1.025 3.266.006 3.521 3.084 3.521 4.028 0 .37-.05 1.535-.616 2.516a3.431 3.431 0 00-.398-.255c.516-.653.286-1.328-.115-1.74l-.078-.075c-.165-.154-.409-.126-.569.036-.16.165-.129.448.04.605.375.387.064.686-.042.784-.014.014-.023.034-.034.05a4.306 4.306 0 00-.706-.136.417.417 0 00-.465.361.416.416 0 00.37.454h.003c.733.078 1.319.35 1.747.804.799 1.033.863 2.462.863 2.874M6.11 16.263a.36.36 0 01-.364-.353.36.36 0 01.364-.353c.199 0 .361.157.361.353a.355.355 0 01-.361.353m3.109-2.196c.199 0 .361.16.361.353a.36.36 0 01-.361.355.357.357 0 01-.361-.353.357.357 0 01.361-.355M6.355 9.26a.357.357 0 01-.364.353.359.359 0 01-.361-.353c0-.196.162-.353.361-.353a.36.36 0 01.364.353m3.2-2.465a.36.36 0 01-.365.353.357.357 0 01-.361-.353c0-.196.162-.353.361-.353a.36.36 0 01.364.353m.37 14.227c-.947 0-1.594-.378-1.936-1.115.244-.064.49-.17.74-.33a.402.402 0 00.132-.555c-.003-.003-.006-.009-.009-.011a.425.425 0 00-.583-.118c-.294.188-.571.297-.826.269-.025 0-.045.008-.07.011-.011 0-.022-.003-.034-.003-3.274 0-3.529-3.087-3.529-4.03 0-.379.056-1.589.661-2.583.076.039.157.07.238.098-.117.717.328 1.23.888 1.442l.093.034a.422.422 0 00.537-.25.408.408 0 00-.249-.52c-.003 0-.005-.003-.008-.003l-.073-.025c-.345-.13-.387-.353-.361-.524.039 0 .08.006.12.006.429 0 .801-.093 1.115-.28a.404.404 0 00.148-.552c-.002-.006-.005-.009-.008-.014a.424.424 0 00-.577-.138c-.221.132-.516.182-.871.152-.359-.031-.63-.13-.821-.289-.765-1.03-.83-2.42-.83-2.83 0-.943.256-4.03 3.612-4.03h.002c.25-.008.474.045.673.163a.426.426 0 00.577-.143.404.404 0 00-.146-.56 2.01 2.01 0 00-.53-.21c.345-.729.992-1.101 1.933-1.101 1.152 0 1.569 1.179 1.645 1.431a28.9 28.9 0 000 .986v.986h-1.253a1.2 1.2 0 00-1.123-.762c-.664 0-1.204.524-1.204 1.174 0 .65.54 1.173 1.204 1.173a1.2 1.2 0 001.123-.764h1.255V8.85H7.126a1.2 1.2 0 00-1.124-.762c-.664 0-1.204.527-1.204 1.174 0 .647.54 1.173 1.204 1.173.516 0 .953-.319 1.126-.764h4.451v1.45H9.226a.415.415 0 00-.42.41v1.792a1.171 1.171 0 00-.781 1.096c0 .647.54 1.173 1.204 1.173.664 0 1.205-.526 1.205-1.173 0-.505-.328-.928-.785-1.096V11.94h1.933v5.336H6.54v-.272c.457-.168.784-.594.784-1.098 0-.647-.54-1.174-1.204-1.174-.664 0-1.204.527-1.204 1.174 0 .504.327.93.784 1.098v.683c0 .227.188.41.42.41h5.462v.504c0 .193-.005.91-.008 1.142-.115.255-.597 1.278-1.65 1.278m11.09-12.16c0-.79-.2-4.647-4.138-4.837-.431-1.208-1.423-1.869-2.818-1.869-1.064 0-1.714.639-2.078 1.177-.398-.603-1.059-1.177-2.056-1.177-1.395 0-2.384.659-2.818 1.86-3.936.146-4.137 4.05-4.137 4.846 0 .448.064 1.933.86 3.135-.796 1.204-.86 2.691-.86 3.142 0 .79.199 4.65 4.137 4.838.431 1.207 1.423 1.868 2.82 1.868 1.065 0 1.715-.638 2.08-1.176.394.602 1.058 1.176 2.055 1.176 1.395 0 2.384-.655 2.818-1.857 3.936-.148 4.137-4.053 4.137-4.849 0-.448-.064-1.932-.86-3.134.793-1.207.858-2.695.858-3.143"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNeuralNetworkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.569 18.808h-.006c-.199.003-.434-.07-.68-.23a2.069 2.069 0 01-.152-.106.629.629 0 00-.868.095.592.592 0 00.084.835c.005.003.008.009.014.011.07.056.151.112.24.171.155.098.309.174.46.238-.316.538-.846.807-1.616.807-.95 0-1.32-.97-1.4-1.23.002-.221.005-.798 0-.938V17.3h1.235c.207.328.574.546.997.546.65 0 1.176-.515 1.176-1.15 0-.637-.53-1.152-1.176-1.152-.423 0-.79.221-.997.546h-1.24V9.92h.874v1.954c-.294.21-.49.55-.49.93 0 .634.53 1.152 1.177 1.152.42 0 .787-.219.994-.544l2.247-.005v1.249a1.14 1.14 0 00-.563.975c0 .633.526 1.151 1.179 1.151.647 0 1.176-.515 1.176-1.151 0-.41-.224-.768-.557-.972v-1.857a.596.596 0 00-.18-.426.636.636 0 00-.436-.177l-2.858.006a1.147 1.147 0 00-.453-.412V9.92h2.185a.608.608 0 00.616-.602V7.842c.336-.202.563-.56.563-.975 0-.636-.53-1.151-1.177-1.151s-1.176.515-1.176 1.151c0 .41.224.77.557.972v.874h-3.68V5.525c0-.176.005-.82.008-1.078.112-.26.532-1.09 1.395-1.09.768 0 1.3.27 1.616.807-.689.297-1.148.894-1.361 1.482l-.065.187a.6.6 0 00.41.754c.322.1.666-.076.77-.398l.05-.148c.095-.264.415-.894 1.101-.871h.003c3.008 0 3.244 2.868 3.244 3.748 0 .322-.045 1.294-.474 2.165a3.901 3.901 0 00-1.756-.616.613.613 0 00-.68.532.607.607 0 00.537.666h.006c.66.07 1.187.311 1.571.712.737.96.796 2.3.796 2.689.002.874-.233 3.695-3.241 3.742m-6.566 1.824c-.754 0-1.283-.255-1.602-.773.182-.07.364-.157.546-.272a.597.597 0 00.187-.82c-.002-.006-.005-.01-.008-.015a.625.625 0 00-.854-.173c-.252.162-.474.235-.687.232-.03-.003-.056.008-.084.008l-.022-.002c-3.008 0-3.244-2.869-3.244-3.748 0-.317.045-1.255.448-2.115.04.627.48 1.076 1.009 1.277.008.003.1.037.11.037.06.02.122.03.187.03.243 0 .456-.165.549-.409.115-.308-.084-.663-.398-.784a.349.349 0 01-.185-.137c.4-.017.768-.107 1.073-.286a.595.595 0 00.216-.812l-.009-.017a.623.623 0 00-.846-.202c-.176.104-.417.143-.725.118-.291-.025-.516-.104-.672-.224-.695-.958-.754-2.247-.754-2.63 0-.877.235-3.748 3.322-3.748.21.008.392.039.552.131a.626.626 0 00.846-.207.6.6 0 00-.199-.82l-.014-.009a2.379 2.379 0 00-.33-.157c.322-.504.846-.756 1.59-.756.95 0 1.32.97 1.404 1.23-.003.22-.006.798 0 .938v.767h-1.12a1.178 1.178 0 00-.998-.546c-.65 0-1.176.516-1.176 1.151 0 .634.526 1.149 1.176 1.149.404 0 .779-.205.998-.546h1.12v1.21H7.157a1.178 1.178 0 00-.997-.546c-.65 0-1.18.515-1.18 1.15 0 .634.527 1.15 1.18 1.15.423 0 .79-.22.997-.547h4.246v1.02H9.311a.614.614 0 00-.62.602v1.854a1.143 1.143 0 00-.56.975c0 .633.53 1.149 1.177 1.149s1.177-.516 1.177-1.149c0-.414-.224-.773-.56-.975v-1.252H11.4v4.824H6.882v-.146L6.88 16.8c.35-.202.568-.577.571-.98 0-.636-.53-1.152-1.176-1.152-.648 0-1.177.516-1.177 1.151 0 .412.224.77.557.972 0 .014-.005.023-.005.037l.011.742a.61.61 0 00.616.594h5.132v.294c0 .177-.006.82-.008 1.079-.118.268-.538 1.095-1.398 1.095M21.045 8.918c0-2.18-1.067-4.706-4.101-4.93-.473-1.188-1.49-1.838-2.902-1.838-.978 0-1.627.51-2.034 1.011-.428-.543-1.075-1.011-2.005-1.011-1.387 0-2.42.658-2.9 1.83C4.085 4.17 3 6.72 3 8.917c0 .563.084 1.91.804 3.072C3.084 13.15 3 14.503 3 15.066c0 2.18 1.067 4.709 4.1 4.933.474 1.19 1.491 1.837 2.906 1.837.977 0 1.627-.51 2.03-1.01.429.542 1.079 1.01 2.009 1.01 1.409 0 2.423-.644 2.899-1.829 3.02-.193 4.104-2.745 4.104-4.938 0-.563-.084-1.91-.804-3.073.717-1.16.8-2.513.8-3.078"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotConexionFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.595 15.4a5.119 5.119 0 00-1-.788c-.543-.336-1.1-.504-1.66-.504-.158 0-.314.014-.474.042-.72.12-1.423.524-2.095 1.196-.171.17-.278.291-.443.496a.277.277 0 01-.118.025c-.184 0-.54-.115-1.131-.518-.883-.605-1.922-1.614-2.628-2.322l-.084-.082c-.706-.705-1.714-1.747-2.319-2.63-.524-.762-.563-1.134-.496-1.252.205-.165.322-.269.496-.442.672-.673 1.076-1.379 1.199-2.096.12-.72-.034-1.44-.465-2.134a4.86 4.86 0 00-.787-1c-.81-.807-1.65-1.224-2.496-1.241H6.04c-.86 0-1.731.415-2.583 1.23-.305.288-.6.697-.695.829l-.014.017-.016.025c-.796 1.154-.776 2.941.056 5.033.874 2.188 2.568 4.58 4.907 6.92l.006.002.073.073.005.005c2.34 2.34 4.731 4.037 6.919 4.908 1.07.426 2.062.641 2.93.641.826 0 1.54-.193 2.104-.582l.025-.02.017-.011c.134-.095.54-.39.832-.692.831-.871 1.246-1.759 1.226-2.639-.016-.845-.431-1.683-1.238-2.49m-3.826-3.341c-3.053 0-4.832-1.544-4.832-4.838 0-3.3 1.779-4.843 4.832-4.843s4.835 1.543 4.835 4.843-1.782 4.838-4.835 4.838zm-2.07-2.77a.602.602 0 00.852.002l.002-.003L16.77 8.07l1.221 1.224a.604.604 0 00.852.003l.003-.003a.605.605 0 000-.854l-1.222-1.222 1.222-1.224a.604.604 0 00-.852-.854l-1.222 1.22-1.216-1.218a.605.605 0 00-.854.854l1.215 1.218-1.215 1.219a.603.603 0 00-.003.854z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotConexionLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.95 19.89c.718-.751 1.076-1.504 1.065-2.236-.014-.703-.372-1.411-1.064-2.103a4.327 4.327 0 00-.874-.69c-.591-.363-1.18-.495-1.77-.397-.606.104-1.205.45-1.788 1.03-.14.14-.271.286-.395.443a.38.38 0 01-.12.101c-.336.188-.871.028-1.633-.496-.877-.602-1.89-1.585-2.577-2.271l-.081-.079c-.687-.686-1.67-1.697-2.272-2.577-.521-.759-.683-1.291-.496-1.63a.4.4 0 01.104-.123 5.12 5.12 0 00.442-.392c.583-.583.93-1.185 1.034-1.788.1-.588-.03-1.179-.392-1.759a4.263 4.263 0 00-.698-.885c-.692-.695-1.4-1.053-2.103-1.064-.712-.017-1.482.344-2.236 1.064a5.567 5.567 0 00-.616.74c-.708 1.022-.672 2.6.073 4.473.815 2.045 2.412 4.289 4.613 6.49l.003.003.07.07c2.208 2.207 4.451 3.801 6.496 4.616 1.86.743 3.46.776 4.44.098.356-.255.605-.462.776-.638zm.58-4.922c.85.846 1.29 1.745 1.306 2.67.017.955-.417 1.902-1.291 2.818a6.31 6.31 0 01-.855.714c-.652.454-1.409.664-2.297.664-.893 0-1.888-.216-2.96-.645-2.146-.851-4.488-2.512-6.765-4.79l-.07-.07c-.011-.01-.023-.025-.034-.036-2.257-2.255-3.916-4.594-4.773-6.742-.851-2.137-.854-3.986-.011-5.208l.059-.078a6.35 6.35 0 01.689-.823c.919-.874 1.857-1.303 2.82-1.292.922.017 1.821.457 2.67 1.306.336.338.613.689.82 1.044.46.745.631 1.53.497 2.32-.132.773-.558 1.526-1.261 2.23a5.527 5.527 0 01-.361.333c.033.117.129.358.409.767.563.82 1.512 1.796 2.173 2.46l.082.078c.663.664 1.641 1.61 2.459 2.176.412.28.653.379.767.41.11-.13.205-.23.337-.362.703-.706 1.453-1.129 2.23-1.26.792-.132 1.573.033 2.33.504a5.17 5.17 0 011.03.812zM16.873 3.027c-2.767 0-4.112 1.345-4.112 4.115 0 2.804 1.306 4.112 4.112 4.112 2.768 0 4.115-1.345 4.115-4.112 0-2.77-1.347-4.115-4.115-4.115zm0 9.048c-3.117 0-4.932-1.572-4.932-4.933 0-3.362 1.815-4.936 4.932-4.936 3.118 0 4.936 1.574 4.936 4.936 0 3.358-1.818 4.93-4.936 4.933zm-1.969-2.97a.41.41 0 010-.58L16.29 7.14l-1.387-1.387a.41.41 0 01.58-.58L16.87 6.56l1.392-1.392a.41.41 0 01.58.58L17.449 7.14l1.39 1.392a.41.41 0 01-.58.58L16.867 7.72l-1.384 1.386a.407.407 0 01-.577.003s-.003 0-.003-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotConexionRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.642 19.59c.666-.698.997-1.387.986-2.048-.012-.636-.345-1.283-.984-1.921a4.046 4.046 0 00-.818-.645c-.537-.333-1.072-.45-1.599-.364-.549.093-1.1.415-1.644.955a4.708 4.708 0 00-.37.415.647.647 0 01-.176.148c-.41.233-.984.073-1.813-.493-.868-.596-1.874-1.568-2.552-2.249l-.078-.078c-.68-.681-1.655-1.684-2.25-2.552-.565-.826-.725-1.4-.495-1.81a.561.561 0 01.148-.176c.171-.137.272-.227.418-.37.54-.54.862-1.092.955-1.644.09-.527-.03-1.062-.356-1.586a3.808 3.808 0 00-.65-.832c-.641-.638-1.288-.972-1.924-.983-.68-.017-1.35.32-2.048.986a5.32 5.32 0 00-.58.698c-.652.944-.61 2.42.096 4.19.787 1.972 2.33 4.143 4.46 6.278l.021.02.07.07c2.14 2.14 4.317 3.688 6.295 4.475 1.75.698 3.257.74 4.16.118a.266.266 0 01.055-.042c.146-.104.457-.336.673-.56zm.854-4.824c.868.869 1.32 1.793 1.336 2.754.02.989-.426 1.966-1.32 2.902a6.826 6.826 0 01-.856.722l-.023.014c-.008.009-.02.014-.028.023-.63.434-1.412.655-2.322.655-.902 0-1.9-.218-2.975-.644-2.129-.849-4.442-2.487-6.697-4.742l-.062-.065c-.005-.003-.011-.01-.017-.017-2.252-2.249-3.89-4.565-4.74-6.694-.86-2.157-.856-4.037.01-5.292.134-.184.43-.599.761-.913.936-.896 1.9-1.313 2.902-1.319.958.017 1.885.468 2.754 1.336.341.342.624.7.834 1.065.477.767.65 1.582.51 2.406-.134.8-.568 1.571-1.291 2.294a5.48 5.48 0 01-.26.246c.05.118.145.303.33.577.538.785 1.462 1.734 2.11 2.381l.078.079c.647.644 1.596 1.568 2.383 2.109.272.185.457.28.575.33.075-.086.15-.165.249-.26.72-.72 1.493-1.157 2.294-1.291.826-.14 1.641.036 2.423.518a5.32 5.32 0 011.042.826zM16.77 3.612c-2.507 0-3.624 1.118-3.624 3.628 0 2.507 1.117 3.624 3.624 3.624 2.51 0 3.628-1.117 3.628-3.624.003-2.51-1.118-3.63-3.628-3.628zm0 8.46c-3.053 0-4.831-1.541-4.831-4.832 0-3.294 1.778-4.835 4.831-4.835 3.054 0 4.838 1.543 4.838 4.835 0 3.29-1.784 4.832-4.838 4.832zM14.7 9.307a.602.602 0 010-.852l1.216-1.215L14.7 6.024a.602.602 0 11.852-.852l1.216 1.216 1.22-1.221a.602.602 0 11.852.851L17.62 7.24l1.22 1.22a.605.605 0 01-.854.855L16.77 8.091l-1.215 1.216a.605.605 0 01-.855 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotesFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.717 7.818l-4.073-4.005v1.781c0 .653.213 1.219.62 1.614.402.395.982.613 1.663.613h1.79v-.003zm1.417-.28c.165.16.26.387.26.62v12.31c0 .75-.632 1.378-1.386 1.378h-12c-.737 0-1.378-.647-1.378-1.378V3.538c0-.717.658-1.378 1.378-1.378h7.308c.23 0 .443.087.603.25l5.215 5.128zm-3.266 5.925c-.151.145-1.815 1.652-4.454 4.03l-1.988.692.65-1.966c.389-.348 4.249-3.815 4.5-4.07.239-.241.491-.292.676-.275a.965.965 0 01.896.952.887.887 0 01-.28.637zm.84-2.169c-.728-.742-2.036-.944-2.972 0a3.492 3.492 0 00-.182.177H7.588a.604.604 0 00-.594.605.6.6 0 00.594.605h4.636c-.364.322-.762.686-1.188 1.064H7.588a.598.598 0 00-.594.605c0 .331.27.606.594.606h2.1l-.428.386a1.14 1.14 0 00-.302.46l-.07.21h-1.3a.598.598 0 00-.594.605c0 .33.27.605.594.605h.905l-.286.88c-.022.055-.03.12-.04.176h-.579a.604.604 0 00-.594.605c0 .33.27.605.594.605h1.465c.017 0 .03 0 .048-.009a.277.277 0 00.086.009c.104 0 .213-.017.325-.048l2.26-.765a.939.939 0 00.365-.21l.07-.064a658.278 658.278 0 004.493-4.07 2.08 2.08 0 00.636-1.499c0-.563-.23-1.134-.628-1.538z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotesLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.577 20.64V8.757h-2.549c-.969 0-1.806-.322-2.417-.913-.62-.6-.944-1.432-.944-2.387V2.98h-6.83c-.178 0-.397.204-.397.386v17.275c0 .188.205.378.398.378h12.33c.213 0 .41-.18.41-.378zM13.48 3.16v2.296c0 .731.244 1.35.692 1.793.465.445 1.098.683 1.857.683h2.336L13.48 3.16zm5.709 4.428a.686.686 0 01.205.484v12.569c0 .65-.564 1.202-1.222 1.202H5.838c-.642 0-1.213-.56-1.213-1.202V3.366c0-.633.577-1.21 1.213-1.21h7.51c.179 0 .341.073.473.2l5.367 5.232zm-2.737 5.77c.244-.247.384-.552.384-.88 0-.33-.146-.683-.384-.921a1.286 1.286 0 00-.854-.387h-.056c-.244 0-.569.073-.88.387-.218.221-3.38 3.045-5.016 4.51l-.872 2.565c-.008.034 0 .068.026.084l.056.034c.008 0 .016-.008.025-.008l2.515-.84.154-.132c4.04-3.614 4.804-4.314 4.902-4.412zm.577-2.387c.393.395.62.956.62 1.507a2.088 2.088 0 01-.628 1.474c-.188.179-1.84 1.67-4.936 4.434l-.123.115a.886.886 0 01-.316.182l-2.507.837a.854.854 0 01-.286.05c-.023 0-.048-.016-.081-.016-.017 0-.04.008-.065.008H7.08a.411.411 0 010-.823h.885a.924.924 0 01.034-.37l.44-1.3H7.075a.417.417 0 01-.406-.411.41.41 0 01.406-.412h1.627l.138-.412a.862.862 0 01.252-.386c.333-.297.658-.594.986-.88h-3a.417.417 0 01-.406-.412.41.41 0 01.406-.412h3.941c.7-.633 1.336-1.21 1.857-1.677H7.08a.411.411 0 010-.824h6.711c.163-.148.27-.238.294-.272.925-.93 2.222-.734 2.944 0z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNotesRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.207 20.468V9.028h-2.283c-1 0-1.854-.33-2.496-.958-.633-.621-.974-1.484-.974-2.476V3.37H6.008c-.07 0-.182.112-.19.168v16.93c0 .056.095.171.19.171h12c.104-.003.199-.098.199-.17zm-.49-12.65l-4.073-4.005v1.781c0 .653.213 1.219.62 1.614.402.395.982.613 1.663.613h1.79v-.003zm1.417-.28c.165.16.26.387.26.62v12.31c0 .75-.632 1.378-1.386 1.378h-12c-.737 0-1.378-.647-1.378-1.378V3.538c0-.717.658-1.378 1.378-1.378h7.308c.23 0 .443.087.603.25l5.215 5.128zm-3.266 5.925a.882.882 0 00.277-.636.97.97 0 00-.277-.67.93.93 0 00-.619-.283c-.182-.017-.437.034-.675.275-.255.257-4.112 3.725-4.501 4.07l-.65 1.966 1.989-.692c2.641-2.378 4.308-3.885 4.456-4.03zm.84-2.169c.395.404.628.975.628 1.533 0 .571-.221 1.09-.636 1.498-.213.21-2.56 2.33-4.493 4.07l-.07.065a.997.997 0 01-.364.21l-2.26.765c-.11.033-.222.047-.326.047-.03 0-.064 0-.086-.008-.017.008-.031.008-.048.008H7.588a.604.604 0 01-.594-.605c0-.33.27-.605.594-.605h.58c.008-.056.017-.12.039-.176l.286-.88h-.905a.604.604 0 01-.594-.605.6.6 0 01.594-.605h1.3l.07-.21a1.11 1.11 0 01.302-.46l.429-.386H7.588a.604.604 0 01-.594-.605c0-.34.27-.605.594-.605h3.448c.429-.378.824-.742 1.188-1.065H7.588a.598.598 0 01-.594-.605c0-.33.27-.605.594-.605h5.966c.096-.098.16-.154.182-.176.936-.939 2.244-.737 2.972.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNumericKeypadFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.983 5.416c1.09 0 1.768.68 1.768 1.773V9.57c.185-.05.375-.075.566-.073.829 0 1.408.412 1.61 1.11a2.09 2.09 0 01.644-.098c.835 0 1.415.417 1.614 1.12a2.07 2.07 0 01.641-.095c1.042 0 1.687.647 1.687 1.692v5.736c0 .799-.225 1.432-.67 1.888-.445.457-1.146.712-1.958.712h-6.448c-.647 0-.933-.61-1.053-.869-.115-.249-.527-1.075-1-2.03-.762-1.535-1.712-3.446-2.275-4.633-.33-.7-.199-1.429.34-1.858.557-.445 1.355-.434 1.938.028.302.241.554.572.834 1.045V7.153c.07-1.104.715-1.737 1.762-1.737zm-7.1 3.289c.73 0 1.207.383 1.207 1.212 0 .398-.11.695-.306.894-.21.219-.52.322-.902.322-.38 0-.692-.106-.902-.322-.196-.199-.305-.496-.305-.894 0-.826.476-1.212 1.207-1.212zm3.551 0c.734 0 1.207.383 1.207 1.212 0 .398-.109.695-.305.894-.21.219-.52.322-.902.322-.38 0-.692-.106-.902-.322-.196-.199-.305-.496-.305-.894 0-.826.476-1.212 1.207-1.212zM4.882 5.427c.731 0 1.208.384 1.208 1.213 0 .398-.11.695-.306.894-.21.215-.52.32-.902.32-.38 0-.692-.105-.902-.32-.196-.2-.305-.496-.305-.894 0-.826.476-1.213 1.207-1.213zm3.552 0c.734 0 1.207.384 1.207 1.213 0 .398-.109.695-.305.894-.21.215-.52.32-.902.32-.38 0-.692-.105-.902-.32-.196-.2-.305-.496-.305-.894 0-.826.476-1.213 1.207-1.213zM4.882 2.15c.731 0 1.208.384 1.208 1.213 0 .398-.11.695-.306.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213zm3.552 0c.734 0 1.207.384 1.207 1.213 0 .398-.109.695-.305.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213zm3.55 0c.73 0 1.206.384 1.206 1.213 0 .398-.109.695-.305.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNumericKeypadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.255 5.43c.933 0 1.487.558 1.487 1.493v3.356c.224-.146.51-.224.846-.224.824 0 1.336.46 1.4 1.24.225-.148.513-.226.855-.226.826 0 1.34.465 1.4 1.252.225-.149.513-.227.852-.227.883 0 1.406.53 1.406 1.412v6.008c0 .723-.198 1.291-.59 1.692-.393.4-1.017.622-1.754.622h-6.448c-.412 0-.628-.342-.801-.709-.06-.126-.186-.4-.362-.78l-.162-.351A878.962 878.962 0 007.552 13.9c-.334-.7-.084-1.244.26-1.516.449-.358 1.118-.344 1.591.028.348.275.673.888 1.017 1.54.056.107.112.214.171.32a.867.867 0 00.168.233.301.301 0 00.014-.112V6.906c.062-.952.588-1.476 1.482-1.476zm.003.558c-.603 0-.88.282-.925.944v7.458c0 .35-.168.619-.431.686-.17.042-.501.031-.807-.538-.056-.106-.115-.215-.17-.322-.303-.571-.617-1.162-.869-1.361a.81.81 0 00-.49-.174.641.641 0 00-.41.14c-.229.182-.268.49-.1.838a945.8 945.8 0 012.835 6.092l.162.351.138.3.224.478c.16.345.243.38.28.383h6.46c.584 0 1.066-.162 1.355-.456.288-.294.431-.73.431-1.302v-6c0-.574-.277-.852-.846-.852-.568 0-.846.28-.846.852h-.56V12.48c0-.575-.277-.852-.846-.852-.568 0-.846.28-.846.852h-.56v-1.014c0-.575-.277-.852-.846-.852s-.846.28-.846.852h-.56V6.92c0-.627-.303-.932-.927-.932zM5.154 8.702c.93 0 1.487.557 1.487 1.493 0 .462-.128.826-.383 1.09-.255.263-.642.408-1.104.408-.462 0-.846-.14-1.104-.406-.257-.266-.383-.627-.383-1.09 0-.935.557-1.495 1.487-1.495zm3.552.003c.93 0 1.487.557 1.487 1.493 0 .462-.129.826-.383 1.09-.255.263-.642.405-1.104.405-.462 0-.843-.14-1.104-.406-.26-.266-.384-.627-.384-1.09 0-.935.558-1.492 1.488-1.492zm-3.552.56c-.625 0-.927.305-.927.933 0 .308.076.543.224.697.148.154.39.235.703.235.314 0 .55-.078.703-.235.154-.157.224-.386.224-.697 0-.628-.302-.933-.927-.933zm3.552 0c-.625 0-.927.305-.927.933 0 .308.075.543.224.697.148.154.39.235.703.235.314 0 .549-.078.703-.235.154-.157.224-.386.224-.697 0-.628-.302-.933-.927-.933zM5.154 5.427c.93 0 1.487.558 1.487 1.493 0 .462-.128.827-.383 1.09-.255.263-.642.406-1.104.406-.462 0-.846-.14-1.104-.406-.257-.266-.383-.628-.383-1.09 0-.935.557-1.493 1.487-1.493zm3.552 0c.93 0 1.487.558 1.487 1.493 0 .462-.129.827-.383 1.09-.255.263-.642.406-1.104.406-.462 0-.843-.14-1.104-.406-.26-.266-.384-.628-.384-1.09 0-.935.558-1.493 1.488-1.493zm-3.552.56c-.625 0-.927.306-.927.933 0 .311.076.544.224.698.148.154.39.235.703.235.314 0 .55-.078.703-.235.154-.157.224-.39.224-.698 0-.627-.302-.932-.927-.932zm3.552 0c-.625 0-.927.306-.927.933 0 .311.075.544.224.698.148.154.39.235.703.235.314 0 .549-.078.703-.235.154-.157.224-.39.224-.698 0-.627-.302-.932-.927-.932zM5.154 2.15c.933 0 1.487.557 1.487 1.493 0 .462-.128.826-.383 1.09-.255.263-.642.406-1.104.406-.462 0-.846-.14-1.104-.406-.257-.266-.383-.628-.383-1.09 0-.936.554-1.493 1.487-1.493zm3.552 0c.93 0 1.487.557 1.487 1.493 0 .462-.129.826-.383 1.09-.255.263-.642.406-1.104.406-.462 0-.843-.14-1.104-.406-.26-.266-.384-.628-.384-1.09 0-.936.558-1.493 1.488-1.493zm3.549 0c.933 0 1.487.557 1.487 1.493 0 .462-.129.826-.383 1.09-.255.263-.642.406-1.104.406-.462 0-.843-.14-1.104-.406-.26-.266-.383-.628-.383-1.09 0-.936.554-1.493 1.487-1.493zm-7.1.56c-.626 0-.928.306-.928.933 0 .31.076.543.224.697.148.155.39.236.703.236.314 0 .55-.079.703-.236.154-.156.224-.386.224-.697 0-.627-.302-.933-.927-.933zm3.55 0c-.624 0-.926.306-.926.933 0 .31.075.543.224.697.148.155.39.236.703.236.314 0 .549-.079.703-.236.154-.156.224-.386.224-.697 0-.627-.302-.933-.927-.933zm3.55 0c-.625 0-.927.306-.927.933 0 .31.075.543.224.697.148.155.39.236.703.236.314 0 .549-.079.703-.236.154-.156.224-.386.224-.697 0-.627-.302-.933-.927-.933z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconNumericKeypadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.98 5.413c1.09 0 1.768.681 1.768 1.773v2.381c.185-.05.375-.075.566-.072.829 0 1.409.411 1.61 1.109a2.09 2.09 0 01.645-.098c.834 0 1.414.417 1.613 1.12a2.07 2.07 0 01.642-.095c1.042 0 1.686.647 1.686 1.692v5.736c0 .799-.227 1.432-.67 1.888-.442.457-1.143.715-1.955.715h-6.448c-.647 0-.933-.61-1.053-.869-.118-.249-.527-1.075-1.003-2.033-.762-1.535-1.712-3.446-2.275-4.633-.33-.7-.198-1.429.34-1.857.557-.446 1.355-.435 1.938.028.302.24.554.571.834 1.044V7.15c.07-1.104.715-1.737 1.762-1.737zm.009 1.12c-.499 0-.614.236-.644.673v1.362l-.001.249v5.291c.003.476-.254.86-.64.958-.203.05-.712.087-1.124-.675-.362-.67-.622-1.098-.888-1.308-.193-.152-.42-.132-.546-.031-.157.123-.098.339-.023.499.56 1.179 1.504 3.084 2.266 4.613.499 1.003.891 1.793 1.014 2.056.028.076.068.148.115.221h6.367c.504 0 .924-.134 1.154-.372.23-.238.353-.61.353-1.107v-5.74c0-.422-.148-.57-.566-.57-.417 0-.566.148-.566.57a.562.562 0 01-.56.561.562.562 0 01-.56-.56v-1.025c0-.423-.148-.572-.566-.572-.417 0-.566.149-.566.572 0 .308-.252.56-.56.56a.562.562 0 01-.56-.56v-1.014c0-.423-.149-.572-.566-.572-.417 0-.566.149-.566.572 0 .308-.252.56-.56.56a.562.562 0 01-.56-.56V7.186c0-.476-.177-.652-.647-.652zM4.882 8.706c.731 0 1.208.383 1.208 1.212 0 .398-.11.695-.306.894-.21.219-.52.322-.902.322-.38 0-.692-.106-.902-.322-.196-.199-.305-.496-.305-.894 0-.826.476-1.212 1.207-1.212zm3.552 0c.734 0 1.207.383 1.207 1.212 0 .398-.109.695-.305.894-.21.219-.52.322-.902.322-.38 0-.692-.106-.902-.322-.196-.199-.305-.496-.305-.894 0-.826.476-1.212 1.207-1.212zM4.882 5.427c.731 0 1.208.384 1.208 1.213 0 .398-.11.695-.306.894-.21.215-.52.32-.902.32-.38 0-.692-.105-.902-.32-.196-.2-.305-.496-.305-.894 0-.826.476-1.213 1.207-1.213zm3.552 0c.734 0 1.207.384 1.207 1.213 0 .398-.109.695-.305.894-.21.215-.52.32-.902.32-.38 0-.692-.105-.902-.32-.196-.2-.305-.496-.305-.894 0-.826.476-1.213 1.207-1.213zM4.882 2.15c.731 0 1.208.384 1.208 1.213 0 .398-.11.695-.306.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213zm3.552 0c.734 0 1.207.384 1.207 1.213 0 .398-.109.695-.305.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213zm3.55 0c.73 0 1.206.384 1.206 1.213 0 .398-.109.695-.305.893-.21.216-.52.32-.902.32-.38 0-.692-.104-.902-.32-.196-.201-.305-.495-.305-.893 0-.83.476-1.213 1.207-1.213z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.965 21.775c-.535 0-.871-.432-.98-.575-.194-.249-.364-.557-.527-.854-.137-.25-.386-.706-.526-.807-.18.014-.645.294-.9.449-.672.406-1.367.826-1.974.473-.617-.356-.6-1.174-.583-1.966.006-.292.017-.827-.056-.986-.16-.073-.695-.062-.986-.056-.793.016-1.61.033-1.966-.583-.35-.61.067-1.305.473-1.978.154-.255.434-.72.448-.899-.104-.14-.557-.39-.81-.526-.296-.163-.604-.334-.854-.527-.574-.443-.574-.846-.574-.978 0-.535.431-.87.574-.98.25-.193.558-.364.855-.527.249-.137.705-.386.806-.526-.014-.18-.294-.645-.448-.9-.406-.672-.826-1.366-.473-1.974.355-.616 1.173-.6 1.966-.583.291.006.826.017.986-.056.073-.16.062-.695.056-.986-.017-.793-.033-1.61.583-1.966.61-.353 1.305.067 1.975.473.254.154.72.434.896.448.14-.103.39-.557.527-.806.162-.297.333-.605.526-.855.446-.574.849-.574.98-.574.536 0 .872.431.98.574.194.25.365.558.528.855.14.249.389.703.529.806.18-.014.644-.294.9-.448.671-.406 1.366-.826 1.977-.473.616.355.6 1.173.582 1.966-.005.291-.016.826.056.986.16.073.695.062.986.056.793-.017 1.611-.033 1.967.583.353.61-.068 1.305-.474 1.975-.154.254-.434.72-.448.899.104.14.558.39.807.526.297.163.605.334.854.527.574.445.574.849.574.98 0 .535-.43.871-.574.98-.25.194-.557.365-.854.527-.25.138-.706.387-.807.527.014.18.294.644.448.896.406.673.827 1.367.474 1.975-.356.616-1.177.6-1.967.583-.291-.006-.826-.017-.986.056-.072.16-.061.694-.056.986.017.792.034 1.61-.582 1.966-.611.353-1.303-.067-1.975-.473-.255-.154-.72-.434-.896-.448-.14.103-.39.557-.527.806-.163.297-.333.605-.527.855-.448.577-.851.577-.983.577z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.91 21.665c-.57 0-.934-.666-1.29-1.31-.212-.387-.504-.916-.716-.973-.23-.061-.765.261-1.152.496-.644.39-1.252.757-1.725.482-.482-.277-.465-.994-.448-1.753.008-.449.022-1.065-.14-1.227-.163-.163-.78-.152-1.227-.14-.76.016-1.477.03-1.754-.449-.274-.476.093-1.084.48-1.728.234-.39.557-.921.495-1.151-.056-.213-.586-.504-.972-.717-.644-.353-1.311-.72-1.311-1.286 0-.566.667-.933 1.31-1.288.387-.213.917-.505.973-.717.062-.23-.26-.765-.496-1.152-.39-.644-.756-1.252-.482-1.725.278-.482.995-.465 1.754-.448.448.008 1.064.022 1.227-.14.162-.163.151-.78.14-1.227-.017-.76-.031-1.477.448-1.754.473-.274 1.081.093 1.725.482.39.235.922.557 1.152.496.213-.056.504-.586.717-.972.358-.647.722-1.314 1.291-1.314s.933.667 1.286 1.31c.213.387.504.917.717.973.232.062.765-.26 1.151-.496.644-.39 1.252-.756 1.726-.482.481.278.465.995.448 1.754-.009.448-.023 1.064.14 1.227.162.162.779.151 1.227.14.759-.017 1.476-.031 1.753.448.275.473-.092 1.081-.482 1.725-.235.39-.557.922-.495 1.152.056.213.585.504.972.717.644.353 1.31.72 1.31 1.288 0 .569-.663.936-1.308 1.289-.386.213-.915.504-.972.717-.061.232.261.765.496 1.151.39.644.757 1.252.482 1.726-.277.481-.994.465-1.753.448-.449-.009-1.065-.023-1.227.14-.163.162-.152.779-.14 1.227.016.759.03 1.476-.449 1.753-.473.275-1.08-.092-1.725-.482-.39-.235-.922-.557-1.151-.495-.213.056-.504.585-.717.972-.356.65-.723 1.313-1.289 1.313zm-2.068-2.848c.07 0 .14.008.207.025.446.118.745.667 1.062 1.244.224.406.56 1.02.795 1.02.236 0 .575-.614.796-1.02.32-.58.619-1.126 1.061-1.244.463-.123 1.009.207 1.586.557.386.233.966.586 1.154.476.193-.112.18-.8.17-1.257-.013-.67-.027-1.303.306-1.636.333-.333.967-.32 1.636-.305.457.008 1.146.025 1.258-.171.109-.188-.244-.77-.477-1.154-.35-.58-.68-1.126-.557-1.586.118-.445.667-.745 1.244-1.061.406-.224 1.02-.56 1.02-.796 0-.235-.614-.574-1.02-.795-.58-.32-1.126-.62-1.244-1.062-.123-.462.207-1.008.557-1.585.233-.387.586-.97.477-1.155-.112-.193-.801-.179-1.258-.17-.67.014-1.303.028-1.636-.306-.333-.333-.32-.963-.305-1.636.008-.456.025-1.142-.171-1.254-.188-.11-.77.243-1.154.476-.58.35-1.126.68-1.586.557-.445-.118-.745-.667-1.061-1.244-.224-.406-.56-1.02-.796-1.02-.235 0-.571.609-.792 1.015-.32.58-.62 1.126-1.065 1.244-.462.123-1.008-.208-1.585-.558-.387-.232-.97-.585-1.154-.476-.194.112-.18.801-.171 1.258.014.67.028 1.302-.306 1.635-.333.334-.963.32-1.635.306-.457-.011-1.146-.025-1.258.17-.11.188.244.771.476 1.155.35.577.68 1.126.558 1.585-.118.446-.667.745-1.244 1.065-.406.224-1.02.56-1.02.795s.614.574 1.02.796c.58.319 1.126.619 1.244 1.061.123.462-.208 1.009-.558 1.586-.232.386-.585.966-.476 1.154.112.193.801.179 1.258.17.67-.013 1.302-.027 1.635.306.334.333.32.964.306 1.633-.011.457-.025 1.146.17 1.258.188.109.771-.244 1.155-.477.493-.296.963-.58 1.378-.58z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferPercentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.967 2.16c.535 0 .87.429.98.571.193.25.364.558.527.855.137.25.386.703.526.806.177-.014.642-.294.897-.448.672-.403 1.367-.823 1.972-.476.616.359.6 1.177.582 1.967-.005.294-.017.826.056.985.16.073.695.062.986.057.793-.017 1.611-.034 1.967.582.353.608-.068 1.303-.474 1.975-.154.255-.434.717-.448.896.104.14.558.39.807.527.297.162.605.333.854.527.574.445.574.845.574.983 0 .535-.431.87-.571.98-.25.193-.557.364-.854.527-.25.137-.703.386-.807.526.014.177.294.642.448.897.406.672.826 1.367.473 1.974-.358.617-1.176.6-1.966.583-.294-.006-.826-.017-.986.056-.073.16-.062.695-.056.986.014.793.034 1.61-.583 1.966-.607.353-1.302-.067-1.974-.473-.255-.154-.717-.434-.897-.448-.14.104-.389.557-.526.807-.163.297-.334.605-.527.854-.445.571-.849.571-.98.571-.535 0-.871-.431-.98-.571-.194-.25-.365-.557-.527-.854-.138-.25-.387-.703-.527-.807-.176.014-.641.294-.896.448-.673.406-1.367.826-1.975.473-.616-.358-.6-1.176-.583-1.966.006-.294.017-.826-.056-.986-.16-.073-.694-.062-.986-.056-.792.017-1.61.034-1.966-.583-.306-.526-.031-1.118.312-1.704l.161-.27c.154-.255.434-.717.448-.897-.103-.14-.557-.389-.806-.526-.297-.163-.605-.334-.855-.527-.571-.445-.571-.849-.571-.98 0-.535.429-.871.571-.98.25-.194.558-.365.855-.527.25-.138.703-.387.806-.527-.014-.176-.294-.641-.448-.896-.406-.673-.826-1.367-.473-1.975.358-.616 1.176-.6 1.966-.583.294.006.827.017.986-.056.073-.16.062-.694.056-.986-.016-.792-.033-1.61.583-1.966.608-.353 1.302.067 1.975.473.255.154.717.434.896.448.14-.103.39-.557.527-.806.162-.297.333-.605.526-.855.446-.571.85-.571.98-.571zm3.736 5.028a.561.561 0 00-.787.095L8.135 15.95a.56.56 0 00.882.69v-.001L15.8 7.975a.561.561 0 00-.096-.787zm-1.406 5.625c-1.176 0-1.877.7-1.877 1.876 0 1.177.704 1.877 1.877 1.877 1.174 0 1.877-.7 1.877-1.877 0-1.176-.7-1.876-1.877-1.876zm0 1.123c.558 0 .757.196.757.756s-.2.756-.757.756c-.557 0-.756-.196-.756-.756s.199-.756.756-.756zM9.633 7.353c-1.173 0-1.876.7-1.876 1.877 0 1.176.7 1.877 1.876 1.877 1.177 0 1.877-.7 1.877-1.877 0-1.176-.703-1.877-1.877-1.877zm0 1.118c.558 0 .757.196.757.756s-.2.757-.757.757c-.557 0-.756-.2-.756-.757 0-.557.199-.756.756-.756z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferPercentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.003 2.16c.572 0 .939.672 1.297 1.32.213.389.507.924.723.983.235.061.75-.25 1.162-.5.647-.391 1.26-.761 1.737-.484.484.28.468 1.003.45 1.768-.008.454-.022 1.073.144 1.238.165.165.787.151 1.238.143.765-.017 1.487-.031 1.767.45.275.477-.095 1.09-.484 1.737-.25.415-.563.93-.499 1.163.059.216.594.51.983.723l.278.153c.55.312 1.042.654 1.042 1.144 0 .571-.673.938-1.32 1.296-.389.213-.924.507-.983.723-.061.235.25.75.499 1.163.392.647.762 1.26.484 1.736-.28.485-1.002.468-1.767.451-.454-.008-1.073-.022-1.238.143-.166.165-.152.787-.143 1.238.017.765.03 1.488-.451 1.768-.476.274-1.09-.095-1.737-.485-.414-.25-.93-.563-1.162-.498-.194.052-.452.491-.657.862l-.066.12c-.358.653-.725 1.323-1.297 1.323-.571 0-.938-.672-1.297-1.32-.213-.389-.507-.924-.722-.983-.236-.061-.751.25-1.166.499-.647.392-1.26.762-1.736.485-.485-.28-.468-1.003-.451-1.768.008-.454.022-1.073-.143-1.238-.166-.165-.787-.151-1.238-.143-.765.017-1.488.03-1.768-.45-.274-.477.095-1.09.485-1.738.249-.414.563-.93.498-1.162-.053-.194-.491-.452-.862-.657l-.12-.066C2.832 12.94 2.16 12.572 2.16 12c0-.571.672-.938 1.32-1.297.389-.212.924-.507.983-.722.061-.236-.25-.751-.5-1.166-.391-.647-.761-1.26-.484-1.736.28-.485 1.003-.468 1.768-.451.454.008 1.073.022 1.238-.143.165-.165.151-.787.143-1.238-.017-.765-.031-1.488.45-1.768.477-.274 1.09.096 1.737.485.415.25.93.563 1.163.499.216-.06.51-.594.723-.984.361-.647.73-1.319 1.302-1.319zm0 .566c-.238 0-.566.594-.804 1.03-.32.583-.624 1.135-1.07 1.256a.745.745 0 01-.21.025c-.417 0-.89-.286-1.39-.588-.389-.236-.977-.592-1.167-.482-.196.115-.182.81-.171 1.269.014.675.028 1.313-.306 1.647-.333.333-.971.319-1.647.305-.459-.011-1.156-.025-1.268.17-.11.191.246.78.481 1.169.353.583.687 1.134.56 1.6-.12.448-.669.75-1.254 1.07-.435.238-1.031.565-1.031.803 0 .238.594.566 1.03.804.583.32 1.135.625 1.256 1.07.123.465-.208 1.014-.56 1.6-.236.392-.592.98-.482 1.168.114.196.809.182 1.268.173.676-.014 1.314-.028 1.647.306.334.333.32.972.306 1.647-.011.46-.025 1.157.17 1.269.191.109.78-.247 1.169-.482.496-.3.972-.585 1.39-.585.07 0 .14.008.21.028.447.12.75.669 1.07 1.254.237.435.565 1.031.803 1.031.238 0 .566-.594.804-1.03.32-.583.625-1.135 1.07-1.255.465-.124 1.014.21 1.6.56.389.235.977.59 1.168.482.196-.115.182-.81.173-1.27-.014-.674-.028-1.313.306-1.646.333-.334.972-.323 1.647-.306.459.009 1.157.025 1.269-.173.109-.19-.247-.78-.482-1.168-.353-.583-.687-1.135-.56-1.6.12-.448.669-.75 1.254-1.07.435-.238 1.031-.566 1.031-.804 0-.238-.594-.566-1.03-.804-.583-.32-1.135-.624-1.255-1.07-.124-.465.21-1.014.56-1.6.235-.389.59-.977.482-1.167-.115-.196-.81-.182-1.27-.171-.674.014-1.313.028-1.646-.306-.334-.333-.323-.971-.306-1.647.009-.459.025-1.156-.173-1.268-.19-.11-.78.246-1.168.481-.583.353-1.135.687-1.6.56-.448-.12-.75-.669-1.07-1.254-.238-.435-.566-1.031-.804-1.031zm3.56 4.72a.28.28 0 01.048.392l-6.779 8.667a.276.276 0 01-.221.109.28.28 0 01-.221-.454l6.781-8.667a.28.28 0 01.392-.047zm-1.232 5.686c.498 0 .89.134 1.165.4.286.275.432.678.432 1.197 0 .518-.146.921-.432 1.196-.272.266-.664.4-1.162.4-.499 0-.891-.134-1.166-.4-.285-.275-.431-.678-.431-1.196 0-.519.146-.922.429-1.196.274-.267.666-.401 1.165-.401zm.003.563c-.717 0-1.037.32-1.037 1.036 0 .718.32 1.037 1.037 1.037.717 0 1.036-.32 1.036-1.037 0-.717-.32-1.036-1.036-1.036zM9.67 7.67c.498 0 .89.134 1.165.4.286.275.431.678.431 1.196 0 .519-.145.922-.43 1.197-.275.266-.668.4-1.166.4-.499 0-.891-.134-1.165-.4-.286-.275-.432-.678-.432-1.197 0-.518.146-.921.432-1.196.274-.266.666-.4 1.165-.4zm0 .563c-.717 0-1.037.32-1.037 1.036 0 .717.32 1.037 1.037 1.037.717 0 1.036-.32 1.036-1.037 0-.717-.32-1.036-1.036-1.036z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferPercentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.964 2.16c.535 0 .871.431.98.571.194.25.364.558.527.855.137.25.386.703.527.806.179-.014.641-.294.896-.448l.27-.161c.586-.343 1.178-.618 1.705-.312.616.356.596 1.174.582 1.966-.005.292-.016.824.056.984.16.072.692.061.986.056.79-.017 1.608-.034 1.967.582.353.608-.068 1.303-.474 1.975-.154.255-.434.72-.448.896.104.14.558.39.807.527.297.162.605.333.854.527.572.445.572.848.572.98 0 .535-.432.871-.572.98-.25.194-.557.364-.854.527-.25.137-.703.386-.807.527.014.179.294.641.448.896.406.672.827 1.367.474 1.975-.356.616-1.174.596-1.967.582-.291-.005-.826-.016-.986.056-.072.16-.061.692-.056.986.017.79.034 1.608-.582 1.967-.527.306-1.12.03-1.705-.31l-.27-.16c-.255-.155-.72-.435-.896-.449-.14.104-.39.557-.527.807-.163.297-.333.605-.527.854-.445.571-.848.571-.98.571-.535 0-.871-.43-.98-.571-.194-.25-.365-.557-.527-.854-.137-.25-.387-.703-.527-.807-.179.014-.641.294-.896.448-.672.406-1.367.826-1.975.474-.616-.356-.6-1.174-.582-1.967.005-.291.016-.826-.056-.986-.16-.073-.692-.061-.986-.056-.79.017-1.608.034-1.967-.583-.347-.607.073-1.302.476-1.974.154-.255.434-.72.448-.897-.103-.14-.557-.389-.806-.526-.297-.163-.605-.334-.855-.527-.571-.445-.571-.849-.571-.98 0-.535.431-.871.571-.98.25-.194.558-.365.855-.527.25-.138.703-.387.806-.527-.014-.18-.294-.641-.448-.896-.406-.673-.826-1.367-.473-1.975.356-.616 1.174-.6 1.966-.583.292.006.824.017.984-.056.072-.16.061-.692.056-.986-.017-.79-.034-1.608.582-1.966.608-.353 1.303.067 1.975.473.255.154.72.434.896.448.14-.103.39-.557.527-.806.162-.297.333-.605.527-.855.445-.571.848-.571.98-.571zm-.003 1.154c-.154.14-.39.574-.524.818-.341.619-.66 1.204-1.213 1.353-.568.151-1.179-.219-1.77-.574-.224-.135-.616-.373-.818-.429-.053.205-.045.672-.039.939.014.717.03 1.392-.381 1.803-.412.412-1.087.395-1.804.381-.266-.005-.734-.016-.938.04.056.201.294.593.428.818.359.59.726 1.201.575 1.77-.149.552-.734.874-1.353 1.213-.244.134-.675.37-.818.524.14.154.574.389.818.523.619.342 1.204.661 1.353 1.213.15.569-.219 1.18-.575 1.77-.134.225-.372.617-.428.818.204.054.672.045.938.04.717-.014 1.392-.031 1.804.38.412.412.395 1.087.381 1.805-.006.266-.017.733.04.938.2-.056.593-.294.817-.429.499-.302 1.009-.61 1.496-.61.092 0 .185.01.274.036.552.149.874.734 1.213 1.353.135.244.373.678.524.818.154-.14.39-.574.524-.818.342-.619.661-1.204 1.213-1.353.568-.151 1.18.219 1.77.574.224.135.616.373.818.429.053-.205.045-.672.04-.938-.015-.718-.032-1.393.38-1.804.412-.412 1.087-.395 1.804-.381.266.005.734.016.939-.04-.057-.201-.295-.593-.43-.817-.358-.592-.725-1.202-.573-1.77.148-.553.734-.875 1.353-1.214.243-.134.678-.372.818-.523-.14-.155-.575-.39-.818-.524-.62-.342-1.205-.661-1.353-1.213-.152-.569.218-1.18.574-1.77.134-.225.372-.617.429-.818-.205-.054-.673-.045-.939-.04-.717.014-1.392.031-1.804-.38-.412-.412-.395-1.087-.38-1.804.005-.267.016-.734-.04-.939-.202.056-.594.294-.818.429-.59.358-1.202.725-1.77.574-.552-.149-.874-.734-1.213-1.353-.135-.244-.373-.678-.524-.818zm3.737 3.88a.56.56 0 01.095.787l-6.781 8.664a.562.562 0 01-1.003-.345.55.55 0 01.12-.344l6.782-8.667a.561.561 0 01.787-.095zm-1.406 5.624c1.176 0 1.876.7 1.876 1.877 0 1.176-.703 1.877-1.876 1.877-1.174 0-1.877-.7-1.877-1.877 0-1.176.7-1.877 1.877-1.877zm0 1.124c-.558 0-.757.196-.757.756s.2.756.757.756c.557 0 .756-.196.756-.756s-.199-.756-.756-.756zM9.628 7.356c1.176 0 1.877.7 1.877 1.877 0 1.176-.7 1.877-1.877 1.877-1.174 0-1.877-.7-1.877-1.877s.7-1.877 1.877-1.877zm0 1.123c-.558 0-.757.2-.757.757 0 .557.2.756.757.756.557 0 .756-.196.756-.756s-.199-.757-.756-.757z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOfferRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.965 21.775c-.535 0-.871-.432-.98-.575-.194-.249-.364-.557-.527-.854-.137-.25-.386-.706-.526-.807-.18.014-.645.294-.9.449-.672.406-1.367.826-1.974.473-.617-.356-.6-1.174-.583-1.966.006-.292.017-.827-.056-.986-.16-.073-.695-.062-.986-.056-.793.016-1.61.033-1.966-.583-.353-.61.067-1.303.473-1.975.154-.255.434-.72.448-.9-.104-.14-.557-.388-.81-.526-.296-.162-.604-.333-.854-.526-.574-.446-.574-.849-.574-.98 0-.536.431-.872.574-.981.25-.193.558-.364.855-.527.249-.137.705-.386.806-.526-.014-.18-.294-.645-.448-.9-.406-.672-.826-1.366-.473-1.974.355-.616 1.173-.6 1.966-.583.291.006.826.017.986-.056.073-.16.062-.695.056-.986-.017-.793-.033-1.61.583-1.966.61-.353 1.305.067 1.975.473.254.154.72.434.899.448.14-.103.39-.557.526-.806.163-.297.334-.605.527-.855.445-.574.849-.574.98-.574.535 0 .871.431.98.574.194.25.365.558.527.855.14.249.39.703.53.806.179-.014.644-.294.896-.448.672-.406 1.367-.826 1.975-.473.616.355.6 1.173.583 1.966-.006.291-.017.826.056.986.16.073.694.062.986.056.792-.017 1.61-.033 1.966.583.353.61-.067 1.305-.473 1.975-.155.254-.435.72-.449.899.104.14.558.39.807.526.297.163.605.334.854.527.575.445.575.849.575.98 0 .535-.432.871-.575.98-.249.194-.557.365-.854.527-.25.138-.706.387-.807.527.014.18.294.644.449.896.406.673.826 1.367.473 1.975-.356.616-1.177.6-1.966.583-.292-.006-.827-.017-.986.056-.073.16-.062.694-.056.986.016.792.033 1.61-.583 1.966-.61.353-1.303-.067-1.975-.473-.255-.154-.72-.434-.9-.448-.14.103-.388.557-.526.806-.162.297-.333.605-.526.855-.443.577-.846.577-.978.577zm-2.014-3.359c.093 0 .185.011.275.037.551.148.874.733 1.215 1.352.135.244.373.678.527.818.154-.14.392-.574.527-.818.341-.621.663-1.207 1.215-1.352.569-.152 1.18.218 1.77.574.225.134.617.372.818.428.054-.204.045-.672.04-.938-.014-.717-.031-1.395.38-1.804.412-.412 1.087-.395 1.805-.38.266.005.736.016.938-.04-.056-.202-.294-.594-.429-.818-.358-.591-.728-1.205-.574-1.77.149-.552.734-.874 1.353-1.216.244-.135.678-.373.818-.527-.14-.154-.574-.392-.818-.526-.622-.342-1.207-.664-1.353-1.216-.151-.569.219-1.18.574-1.77.135-.224.373-.617.429-.818-.205-.053-.672-.045-.938-.04-.718.015-1.395.031-1.804-.38-.41-.412-.395-1.087-.381-1.804.005-.266.016-.737-.04-.941-.201.056-.593.294-.817.428-.592.359-1.205.726-1.77.574-.553-.148-.875-.734-1.216-1.353-.135-.243-.373-.677-.527-.818-.154.14-.392.575-.527.818-.341.622-.664 1.208-1.215 1.353a1.11 1.11 0 01-.275.037c-.487 0-1-.308-1.498-.61-.225-.135-.617-.373-.818-.43-.054.205-.045.673-.04.942.014.717.031 1.395-.38 1.804-.412.409-1.087.395-1.804.38-.267-.005-.737-.016-.942.04.056.201.294.594.429.818.358.59.728 1.204.574 1.77-.148.552-.734.874-1.353 1.216-.244.134-.678.372-.818.526.14.154.574.392.818.527.622.342 1.207.664 1.353 1.216.151.568-.218 1.179-.574 1.77-.135.224-.373.616-.429.818.205.053.673.045.942.04.717-.015 1.394-.032 1.803.38.412.412.395 1.087.381 1.804-.005.266-.016.737.04.938.201-.056.593-.294.818-.428.498-.3 1.01-.61 1.498-.61z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.463 15.665V8.942a.41.41 0 00-.41-.409h-.274a.41.41 0 00-.409.41v4.772l-3.314-5a.41.41 0 00-.341-.185h-.219a.411.411 0 00-.409.41v6.722a.41.41 0 00.41.41h.274a.41.41 0 00.409-.41v-4.765l3.3 4.995a.41.41 0 00.341.185h.227c.23 0 .415-.185.415-.412zm-8.928.549c1.286 0 2.818-.675 2.818-3.9 0-3.232-1.532-3.91-2.818-3.91-1.291 0-2.829.678-2.829 3.91 0 3.222 1.538 3.9 2.83 3.9zm3.871-14.045c1.575.037 9.44.69 9.44 9.86 0 9.177-7.834 9.784-9.403 9.812-.171.003-.364.006-.563.006-.104 0-.213 0-.314-.003-8.952-.129-9.406-8.246-9.406-9.87 0-1.626.451-9.738 9.339-9.813.3-.003.63.003.907.008zm-3.87 7.35c.784 0 1.683.32 1.683 2.796 0 2.445-.852 2.776-1.684 2.776-.837 0-1.694-.33-1.694-2.776 0-2.465.857-2.796 1.694-2.796z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.411 2.16c1.577.05 9.434.63 9.434 9.843s-7.826 9.843-9.4 9.843h-.877c-8.958-.115-9.41-8.201-9.41-9.843 0-1.641.452-9.762 9.343-9.843zm-.017.82h-.885c-1.97 0-8.532.754-8.532 9.023s6.563 9.023 8.613 9.023h.846c2.028 0 8.588-.821 8.588-9.023s-6.563-8.966-8.63-9.022zM8.96 8.206c1.238 0 2.748.664 2.748 3.798 0 3.135-1.476 3.798-2.714 3.798-1.813 0-2.732-1.28-2.732-3.798 0-3.134 1.451-3.798 2.698-3.798zm4.182.131c.1 0 .196.048.255.132l3.524 5.289V8.639c0-.157.123-.289.28-.303h.3c.162.003.29.14.285.303v6.737a.301.301 0 01-.302.302h-.23a.303.303 0 01-.255-.14l-3.487-5.283v5.11c0 .17-.14.31-.311.31h-.28a.31.31 0 01-.303-.31V8.638c0-.165.135-.303.303-.303zm-4.182.78c-.835 0-1.796.352-1.796 2.904S8.14 14.9 8.96 14.9c.826 0 1.787-.303 1.787-2.88s-.95-2.905-1.787-2.905z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineOfferFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.071 2.025c.309 0 .56.252.56.56 0 .541 0 .967 1.614.967h1.098c.922 0 1.6.193 2.067.588.451.378.678.922.678 1.61v.382c1.552.086 2.776.557 3.65 1.397 1.011.975 1.524 2.423 1.524 4.303v1.82c.1.124.182.272.255.404.03.056.075.137.115.199.067-.034.15-.084.21-.12.294-.177.658-.401 1.008-.197.35.205.342.636.333.98 0 .068-.002.163 0 .239.076.003.171 0 .239 0 .347-.009.778-.017.98.333.202.35-.02.714-.196 1.009-.034.058-.084.142-.12.21.061.039.142.084.198.115.306.168.687.375.687.787 0 .411-.381.621-.684.784-.056.03-.137.076-.199.115.034.067.084.151.12.21.177.294.401.658.197 1.008-.205.35-.636.342-.98.334-.068 0-.163-.003-.239 0-.003.075 0 .17 0 .238.009.347.017.778-.333.98-.35.202-.714-.02-1.008-.196-.06-.034-.143-.084-.21-.12-.04.061-.085.142-.115.198-.168.306-.379.687-.788.687-.408 0-.619-.381-.787-.687a3.926 3.926 0 00-.114-.198 2.958 2.958 0 00-.21.12c-.272.165-.603.364-.925.238-.851.443-1.907.667-3.146.667-1.806 0-3.218-.474-4.19-1.412-1.011-.975-1.524-2.423-1.524-4.302v-4.437c0-1.883.513-3.331 1.527-4.309.865-.834 2.081-1.302 3.613-1.395v-.48c-.01-.389-.13-.982-1.624-.982H7.248c-.964 0-1.591-.143-2.03-.462-.477-.344-.707-.874-.707-1.625 0-.308.252-.56.56-.56zM15.8 14.285a.516.516 0 01-.093.01c-.017 0-.033-.004-.05-.004-.227.118-.384.723-.605.782-.255.07-.762-.482-.989-.353-.227.129-.006.849-.188 1.034-.182.184-.902-.034-1.033.187-.132.221.42.734.353.989-.068.246-.801.415-.801.68 0 .267.733.435.8.681.07.255-.481.762-.352.99.129.226.848.002 1.033.187.126.123.065.493.082.759a.583.583 0 01.23.291c.251-.045.65-.426.865-.37.246.068.414.802.68.802.267 0 .435-.737.681-.802.255-.07.762.482.989.353.227-.128.006-.848.188-1.033.182-.185.902.033 1.033-.188.132-.221-.42-.734-.353-.989.065-.246.804-.414.804-.68 0-.266-.736-.435-.8-.681-.07-.252.48-.762.352-.989-.129-.227-.849-.005-1.034-.187-.184-.183.034-.902-.187-1.034-.222-.132-.734.42-.989.353-.227-.062-.384-.686-.616-.787zm.865 3.667c.448 0 .731.28.731.731 0 .451-.28.732-.73.732-.452 0-.732-.28-.732-.732 0-.45.28-.73.731-.73zm.006-1.994a.28.28 0 01.392-.048l.047.046a.274.274 0 010 .347l-2.319 2.963a.28.28 0 01-.392.048.28.28 0 01-.047-.392zm-.006 2.552c-.143 0-.17.028-.17.17 0 .144.03.172.17.172s.171-.028.171-.171c0-.143-.028-.171-.17-.171zm-1.89-2.72c.45 0 .73.28.73.731 0 .448-.28.731-.73.731-.451 0-.732-.28-.732-.731 0-.451.28-.731.732-.731zm.002.56c-.143 0-.17.031-.17.171s.027.17.17.17c.143 0 .171-.027.171-.17 0-.143-.028-.17-.17-.17zm-9.341-3.745a.28.28 0 00-.078.555c1.719.24 3.456.358 5.192.355a37.021 37.021 0 005.194-.355.282.282 0 00.232-.311.278.278 0 00-.31-.244 36.751 36.751 0 01-5.116.35 36.751 36.751 0 01-5.114-.35zm5.114-4.291a.562.562 0 00-.56.56v2.485a.561.561 0 001.12 0V8.874a.562.562 0 00-.56-.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineOfferLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.343 2.156a.28.28 0 01.28.28c0 .303.109.737.624 1.076.446.294 1.076.448 1.827.448h1.95c.988 0 1.461.53 1.683.975.143.294.224.616.235.944v.655c3.354.108 5.123 1.98 5.123 5.429l.001 1.752c.178.113.3.335.411.54.053.095.135.246.19.305a2.02 2.02 0 00.331-.174c.275-.168.588-.356.866-.196.277.16.271.53.263.854-.003.112-.006.292.014.367.076.02.255.014.367.014.325-.008.695-.014.854.263.16.278-.028.589-.196.866-.059.098-.154.252-.174.33.056.054.21.138.303.191.289.16.613.336.613.664s-.327.507-.613.664c-.095.053-.247.134-.303.19.023.079.115.233.174.33.168.275.356.589.196.866-.16.278-.53.272-.854.264a1.885 1.885 0 00-.367.014c-.02.075-.014.255-.014.367.008.324.014.694-.263.854-.278.16-.589-.028-.866-.196-.098-.059-.252-.154-.33-.174-.054.056-.138.21-.19.303-.158.288-.337.613-.665.613s-.507-.328-.664-.613a2 2 0 00-.19-.303 1.974 1.974 0 00-.33.174c-.278.168-.589.356-.866.196a.443.443 0 01-.112-.09c-.811.422-1.827.636-3.02.636-3.554 0-5.434-1.88-5.434-5.434l-.001-3.344a.278.278 0 01-.002-.082l.003-.014v-.997c0-3.47 1.79-5.343 5.182-5.431v-.653a1.782 1.782 0 00-.182-.709c-.221-.431-.616-.65-1.177-.65H7.074c-1.801 0-3.011-.837-3.011-2.084a.28.28 0 01.28-.28zm1.414 11.172V16.4c0 1.644.426 2.888 1.266 3.697.81.782 2.025 1.177 3.608 1.177 1.157 0 2.119-.211 2.867-.63-.002-.072 0-.142.001-.21a1.885 1.885 0 00-.014-.367c-.075-.02-.254-.014-.366-.014-.325.008-.695.014-.855-.264-.16-.277.028-.588.196-.865.06-.098.154-.252.174-.33-.056-.054-.21-.138-.305-.191-.289-.16-.614-.336-.614-.664s.325-.507.614-.664c.095-.053.246-.134.305-.19-.022-.079-.115-.233-.174-.331-.168-.277-.355-.588-.196-.866.16-.277.53-.271.855-.263.112.003.29.006.366-.014.02-.075.014-.255.014-.367-.008-.325-.014-.694.264-.854.277-.16.588.028.865.196.098.059.252.154.33.174.054-.056.138-.21.191-.306.1-.182.207-.378.355-.498v-.428l-.418.055c-1.478.174-2.966.26-4.455.258a37.06 37.06 0 01-4.874-.313zm10.056.918a2.317 2.317 0 00-.173.288c-.14.255-.283.516-.533.583-.255.067-.515-.09-.767-.244a3.282 3.282 0 00-.275-.154 3.037 3.037 0 00-.005.32c.005.294.014.596-.171.781-.185.185-.488.18-.782.171a2.43 2.43 0 00-.319.006c.045.095.098.184.154.274.154.252.311.516.244.768-.067.246-.328.392-.583.532-.1.05-.196.11-.288.173.092.065.187.124.288.174.255.14.516.283.583.532.067.255-.09.516-.244.768-.056.09-.106.18-.154.274.106.009.213.009.32.006.293-.006.596-.014.78.17.186.186.18.488.172.782a2.43 2.43 0 00.005.32c.096-.045.185-.098.275-.154.21-.132.428-.264.641-.264.042 0 .084.006.126.017.25.067.392.328.533.583.05.098.109.196.173.288.065-.092.123-.187.174-.288.14-.255.283-.516.532-.583.255-.067.515.09.768.244.09.056.179.106.274.154.009-.107.009-.213.006-.32-.006-.294-.014-.596.17-.78.185-.186.488-.177.782-.172.107.006.213.003.32-.005a2.642 2.642 0 00-.155-.275c-.154-.252-.31-.515-.243-.767.067-.247.327-.393.582-.533.101-.05.196-.109.289-.173a2.317 2.317 0 00-.289-.174c-.255-.14-.515-.283-.582-.532-.068-.255.09-.516.243-.768a3.2 3.2 0 00.154-.274 3.037 3.037 0 00-.319-.006c-.294.006-.597.014-.781-.17-.185-.186-.177-.488-.171-.782a2.43 2.43 0 00-.006-.32 2.642 2.642 0 00-.274.155c-.253.154-.516.31-.768.243-.25-.067-.392-.327-.532-.582a2.676 2.676 0 00-.174-.286zm1.524 1.54a.28.28 0 01.048.393l-2.71 3.459a.267.267 0 01-.218.11.28.28 0 01-.22-.452l2.708-3.462a.28.28 0 01.392-.047zm-.594 2.233c.499 0 .807.308.807.807 0 .498-.308.806-.807.806-.496 0-.807-.308-.807-.806 0-.499.309-.807.807-.807zm0 .563c-.19 0-.246.056-.246.247 0 .19.056.246.246.246s.247-.056.247-.246c0-.191-.056-.247-.247-.247zm-1.86-2.742c.499 0 .807.308.807.806 0 .499-.311.807-.807.807-.496 0-.806-.308-.806-.807 0-.498.308-.806.806-.806zm0 .563c-.19 0-.246.056-.246.246s.056.247.246.247.247-.056.247-.247c0-.19-.06-.246-.247-.246zm-4.252-9.314c-1.583 0-2.798.395-3.608 1.176-.84.81-1.266 2.054-1.266 3.698v.801l.486.063c1.456.173 2.921.259 4.388.256 1.63.003 3.258-.104 4.874-.317v-.803c0-1.644-.426-2.888-1.266-3.698-.812-.781-2.025-1.176-3.608-1.176zm0 1.392a.28.28 0 01.28.28v2.961a.28.28 0 01-.28.28.28.28 0 01-.28-.28v-2.96a.28.28 0 01.28-.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineOfferRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.069 2.003c.308 0 .56.252.56.56 0 .54 0 .966 1.613.966h1.104c.924 0 1.6.194 2.067.589.448.378.678.921.678 1.61v.382c1.55.087 2.777.557 3.65 1.397 1.011.972 1.524 2.42 1.524 4.303v1.02l.002.037a.56.56 0 010 .02l-.001.737c.1.123.181.27.254.401.03.056.075.137.114.2.068-.037.152-.088.21-.121.295-.177.659-.398 1.009-.196.35.201.342.633.333.98 0 .067-.003.162 0 .238.076.003.171 0 .238 0 .345-.008.776-.017.98.333.205.35-.019.715-.195 1.009a2.958 2.958 0 00-.12.21c.06.04.142.084.198.115.305.168.686.378.686.787 0 .409-.38.619-.686.787-.056.03-.137.076-.199.115.037.067.087.151.12.21.177.294.398.658.197 1.008-.202.35-.633.342-.98.334-.068 0-.163-.003-.239 0-.003.075 0 .17 0 .238.009.344.017.776-.333.98-.35.205-.714-.02-1.008-.196a2.958 2.958 0 00-.21-.12c-.04.061-.085.142-.115.198-.168.306-.379.687-.788.687-.408 0-.619-.381-.787-.687a3.926 3.926 0 00-.114-.198c-.068.036-.152.086-.21.12-.27.162-.6.362-.923.237-.853.445-1.91.668-3.148.668-1.81 0-3.218-.476-4.19-1.412-1.011-.975-1.524-2.423-1.524-4.303V11.81c0-1.88.513-3.328 1.524-4.303.866-.836 2.08-1.303 3.613-1.395V5.63c-.01-.39-.13-.982-1.624-.982H7.245c-.963 0-1.59-.143-2.03-.46-.474-.344-.707-.873-.707-1.624 0-.308.253-.56.56-.56zM15.79 14.258l-.086.01-.043-.003c-.229.122-.387.722-.61.783-.254.067-.767-.485-.988-.353-.221.131-.003.851-.188 1.033-.185.182-.904-.039-1.033.188-.13.227.423.737.353.989-.068.246-.801.414-.801.68 0 .267.733.435.8.681.068.255-.484.768-.352.989.131.221.851.003 1.033.188.124.125.061.5.08.766a.519.519 0 01.225.28c.251-.03.654-.426.872-.366.246.065.414.801.68.801.267 0 .435-.734.681-.8.255-.068.768.484.989.352.221-.131.003-.851.188-1.033.185-.182.904.036 1.033-.188.13-.224-.423-.734-.353-.989.065-.246.801-.414.801-.68 0-.267-.736-.435-.8-.681-.068-.255.484-.768.352-.989-.131-.221-.851-.003-1.033-.188-.182-.185.039-.904-.188-1.033-.227-.13-.734.423-.989.353-.228-.063-.39-.697-.623-.79zm-9.833-.766v2.754c0 1.566.397 2.74 1.179 3.496.756.729 1.905 1.098 3.414 1.098 1.106 0 2.025-.2 2.73-.594l-.001.026c0-.068.003-.163 0-.238-.076-.003-.171 0-.238 0-.348.008-.776.016-.98-.334-.205-.35.019-.714.195-1.008.037-.059.087-.143.12-.21a3.925 3.925 0 00-.198-.115c-.305-.168-.686-.378-.686-.787 0-.41.38-.62.686-.787.056-.031.137-.076.199-.115-.037-.067-.087-.151-.12-.21-.177-.294-.398-.658-.197-1.009.202-.35.633-.341.98-.333.068 0 .163.003.239 0 .003-.076 0-.17 0-.238-.009-.345-.017-.776.333-.98.35-.205.714.02 1.008.196.06.036.143.086.21.12a3.11 3.11 0 00.115-.199c.06-.106.123-.222.199-.328v-.205l-.103.014c-1.491.178-2.99.264-4.49.262-1.536.002-3.07-.09-4.594-.276zm10.708 4.43c.451 0 .731.28.731.73 0 .452-.283.732-.73.732-.452 0-.732-.28-.732-.731 0-.451.28-.731.731-.731zm.398-2.04a.28.28 0 01.048.393l-2.32 2.963a.267.267 0 01-.218.11.28.28 0 01-.221-.454l2.319-2.964a.28.28 0 01.392-.048zm-.398 2.603c-.14 0-.17.028-.17.17 0 .143.027.171.17.171.143 0 .171-.028.171-.17 0-.143-.03-.171-.17-.171zm-1.888-2.726c.451 0 .731.28.731.731 0 .451-.28.731-.73.731-.452 0-.732-.28-.732-.73 0-.452.28-.732.731-.732zm0 .563c-.14 0-.17.028-.17.171 0 .143.027.17.17.17.143 0 .171-.027.171-.17 0-.143-.03-.17-.17-.17zM10.55 7.216c-1.51 0-2.658.37-3.414 1.098-.782.756-1.18 1.93-1.18 3.496v.55l.24.032c1.447.171 2.9.257 4.354.255 1.535.003 3.07-.091 4.594-.283v-.554c0-1.566-.398-2.74-1.179-3.496-.756-.729-1.905-1.098-3.415-1.098zm0 1.07c.309 0 .56.252.56.56v2.485c0 .308-.251.56-.56.56a.562.562 0 01-.56-.56V8.846c0-.308.252-.56.56-.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineReloadFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.248 19.132H2.744a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504c.308 0 .56.252.56.56 0 .308-.252.56-.56.56zm-.193-13.26c-.563-.644-1.404-.972-2.504-.972H5.44c-1.098 0-1.94.328-2.504.972-.52.6-.787 1.468-.787 2.583v4.938c0 1.115.266 1.983.787 2.583.563.644 1.403.972 2.504.972h13.11c1.098 0 1.94-.328 2.504-.97.524-.599.787-1.467.787-2.582V8.455c0-1.115-.266-1.984-.787-2.583zm-10.709 6.18a6.441 6.441 0 00-.076.503c-.028.205-.053.415-.09.577-.089.412-.369.648-.753.648-.07 0-.137-.009-.207-.023-.146-.028-.42-.106-.877-.232l-.235-.065a.422.422 0 01.224-.812l.235.064.034.009c-.252-.521-.381-1.154-.381-1.888 0-2.342 1.32-3.63 3.714-3.63a5.33 5.33 0 011.247.137.423.423 0 01.297.515.422.422 0 01-.493.303 4.57 4.57 0 00-1.05-.112c-1.933 0-2.875.913-2.875 2.79 0 .672.124 1.224.367 1.652l.006-.047c.025-.202.053-.41.09-.575a.423.423 0 01.495-.327.423.423 0 01.328.495c.003.012.003.012 0 .017zm5.815-3.186a.422.422 0 01-.518.294l-.235-.064-.037-.011c.252.52.381 1.154.381 1.888 0 2.342-1.32 3.63-3.714 3.63a5.385 5.385 0 01-1.235-.134.42.42 0 11.196-.818 4.5 4.5 0 001.039.112c1.933 0 2.874-.913 2.874-2.79 0-.672-.123-1.224-.367-1.653l-.006.048a6.737 6.737 0 01-.09.574.423.423 0 01-.495.328.423.423 0 01-.328-.496c0-.003 0-.006.003-.006.028-.129.053-.319.076-.504.028-.204.053-.414.09-.577.103-.484.473-.725.957-.627.146.028.42.106.88.232l.235.065a.413.413 0 01.294.51z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineReloadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.548 18.043a.28.28 0 01.28.28.28.28 0 01-.28.28H2.43a.28.28 0 01-.28-.28.28.28 0 01.28-.28h19.118zM18.825 4.9c1.014 0 1.784.294 2.291.874.477.546.72 1.353.72 2.398v4.938c0 1.045-.24 1.852-.72 2.398-.507.582-1.277.877-2.29.877H5.17c-1.014 0-1.785-.295-2.292-.874-.479-.55-.72-1.356-.72-2.4V8.17c0-1.044.241-1.85.72-2.397.507-.58 1.278-.874 2.292-.874h13.655zm0 .56H5.17c-1.673 0-2.451.863-2.451 2.715v4.938c0 1.851.778 2.714 2.45 2.714h13.656c1.672 0 2.451-.863 2.451-2.714V8.172c0-1.852-.779-2.712-2.45-2.712zm-4.098 2.465c.14.028.415.104.868.23l.236.064a.283.283 0 01.196.345.282.282 0 01-.345.196l-.235-.064-.357-.099c.35.55.525 1.257.525 2.11 0 1.151-.322 2.039-.952 2.633-.608.571-1.49.86-2.622.86a4.83 4.83 0 01-1.504-.216.28.28 0 01-.169-.359.281.281 0 01.345-.173 4.32 4.32 0 001.33.187c.987 0 1.737-.238 2.239-.708.515-.485.776-1.233.776-2.224 0-.868-.201-1.551-.598-2.032a7.23 7.23 0 00-.058.407 7.558 7.558 0 01-.087.563.28.28 0 01-.549-.118c.028-.134.053-.33.079-.515.025-.202.053-.409.087-.566.086-.406.386-.602.795-.52zm-2.787-.843c.563 0 1.067.073 1.504.213a.28.28 0 01-.174.532 4.32 4.32 0 00-1.33-.188c-.986 0-1.737.239-2.238.71-.516.484-.776 1.232-.776 2.223 0 .864.199 1.544.59 2.024.022-.117.041-.255.057-.39a7.25 7.25 0 01.087-.56.279.279 0 01.546.117c-.028.134-.053.327-.078.515a7.212 7.212 0 01-.087.566c-.07.339-.297.532-.614.532a.941.941 0 01-.176-.017c-.14-.028-.415-.103-.869-.23l-.235-.064a.279.279 0 11.12-.546l.029.008.235.065.365.1c-.354-.551-.53-1.26-.53-2.117 0-1.151.319-2.04.952-2.633.608-.571 1.49-.86 2.622-.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnlineReloadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.248 18.012c.308 0 .56.252.56.56 0 .308-.252.56-.56.56H2.744a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504zM18.551 4.9c1.098 0 1.94.328 2.504.972.524.6.787 1.468.787 2.583v4.938c0 1.115-.266 1.983-.787 2.583-.563.644-1.406.972-2.504.972H5.44c-1.098 0-1.94-.328-2.504-.97-.52-.602-.787-1.47-.787-2.585V8.455c0-1.115.266-1.984.787-2.583C3.5 5.228 4.34 4.9 5.441 4.9h13.11zm0 1.12l-13.11.003c-.773 0-1.313.194-1.658.588-.339.387-.513 1.009-.513 1.844v4.938c0 .835.174 1.457.513 1.846.345.395.888.588 1.658.588h13.11c.77 0 1.313-.193 1.658-.588.339-.39.512-1.011.512-1.846V8.455c0-.835-.173-1.457-.512-1.846-.345-.395-.888-.589-1.658-.589zm-3.799 2.037c.146.028.42.106.88.232l.235.065a.422.422 0 01-.224.812l-.235-.064-.033-.01c.251.52.377 1.15.377 1.884.003 2.341-1.316 3.63-3.711 3.63a5.402 5.402 0 01-1.236-.135.42.42 0 11.197-.818c.341.079.691.115 1.039.113 1.933 0 2.874-.914 2.874-2.79 0-.674-.125-1.23-.37-1.659l-.008.056a6.737 6.737 0 01-.09.575.42.42 0 01-.818-.182c.028-.13.053-.32.076-.505.028-.204.053-.414.09-.577.103-.484.473-.725.957-.627zM11.94 7.21a5.33 5.33 0 011.246.137.422.422 0 01-.173.824l-.023-.006a4.57 4.57 0 00-1.05-.112c-1.933 0-2.874.913-2.874 2.79 0 .67.123 1.223.365 1.65l.008-.05c.025-.202.053-.41.09-.575a.423.423 0 01.495-.328.423.423 0 01.328.496c0 .003 0 .006-.003.006a6.55 6.55 0 00-.076.504c-.028.205-.053.415-.09.577-.092.423-.372.658-.753.658a1.04 1.04 0 01-.207-.022c-.146-.028-.42-.107-.877-.233l-.235-.064a.422.422 0 01.224-.812l.235.064.033.01c-.251-.521-.377-1.15-.377-1.884 0-2.342 1.319-3.63 3.714-3.63z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOnRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.415 20.639c1.93-.036 8.227-.762 8.227-8.608s-6.328-8.608-8.266-8.653a17.205 17.205 0 00-.855-.008c-1.913.017-8.154.69-8.154 8.608 0 7.933 6.294 8.639 8.224 8.667.275.002.577 0 .824-.006zm-.011-18.468c1.574.037 9.442.69 9.442 9.857 0 9.174-7.837 9.785-9.409 9.813a33.17 33.17 0 01-.552.005c-.106 0-.21 0-.313-.003-1.572-.022-9.412-.605-9.412-9.87 0-1.625.451-9.735 9.347-9.813.297 0 .625.006.897.011zM8.605 15.028c.816 0 1.65-.322 1.65-2.72 0-2.425-.882-2.736-1.65-2.736-.82 0-1.658.325-1.658 2.736 0 2.398.838 2.72 1.658 2.72zm0-6.549c1.258 0 2.762.664 2.762 3.83 0 3.156-1.501 3.82-2.762 3.82-1.263 0-2.77-.66-2.77-3.82 0-3.166 1.507-3.83 2.77-3.83zm8.342.126a.4.4 0 01.4.4v6.586a.4.4 0 01-.4.4h-.221a.406.406 0 01-.336-.178l-3.233-4.894v4.672a.4.4 0 01-.4.4h-.27a.4.4 0 01-.4-.4V9.006a.4.4 0 01.4-.4h.214c.134 0 .26.067.336.179l3.24 4.896V9.006a.4.4 0 01.401-.4h.27z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenEmailFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.636 14.536a1.684 1.684 0 01-.919.292 1.815 1.815 0 01-.963-.297L3.24 9.794v-.003c.011-.386.106-.664.25-.767l7.408-4.684a1.84 1.84 0 01.95-.271c.532 0 .935.269.963.288l7.359 4.65c.151.106.24.347.263.667l-7.798 4.862zm9.036 5.031l.009-9.804c-.023-1.002-.44-1.51-.815-1.776l-7.359-4.65a3.025 3.025 0 00-1.67-.5c-.927 0-1.582.447-1.624.48l-7.283 4.6-.137.087c-.348.25-.765.757-.787 1.773l.008 9.793c-.025.219-.062.902.4 1.457.25.3.734.658 1.63.677h15.597c.894-.016 1.379-.378 1.628-.677.465-.558.428-1.238.403-1.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenEmailLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.835 20.285c-.168.202-.465.308-.88.317-.815.014-5.061.014-7.526.01h-.04c-3.669.004-7.674 0-8.344-.01-.414-.009-.709-.112-.877-.314-.243-.291-.179-.723-.173-.793l-.009-8.95 7.32 4.62c.028.02.666.479 1.565.479.53 0 1.04-.157 1.507-.462l7.636-4.765-.002 9.148c0 .006.061.432-.177.72M3.34 8.485L10.908 3.7c.33-.205.711-.317 1.098-.32.622 0 1.081.314 1.104.328l7.535 4.765c.232.165.358.504.37.97v.021c-.015.006-.031.009-.045.017l-8.037 5.011a1.913 1.913 0 01-1.062.334c-.619 0-1.075-.32-1.103-.336L2.984 9.58v-.13c.01-.473.14-.812.355-.966m18.488 11.014l.008-10.064c-.022-.936-.4-1.4-.731-1.636l-7.535-4.765a2.92 2.92 0 00-1.577-.47 2.9 2.9 0 00-1.543.456l-7.44 4.703-.132.084c-.314.224-.692.686-.714 1.633l.014 9.989c-.014.081-.123.807.353 1.378.327.395.832.6 1.501.61.532.01 2.992.012 5.614.012h2.745v-.409l.042.409c2.462.003 6.717.003 7.538-.011.666-.011 1.17-.219 1.498-.61.476-.572.367-1.298.359-1.309"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenEmailRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.622 20.464c-.591.01-3.272.014-7.356.01h-.042c-3.58 0-7.493 0-8.157-.01-.232-.003-.54-.048-.694-.227-.171-.202-.132-.535-.132-.535l.008-.05-.005-8.404 6.812 4.291c.07.053.728.51 1.661.51.563 0 1.1-.165 1.588-.485l7.138-4.448-.009 8.482.009.104c0 .002.042.327-.126.53-.152.184-.463.226-.695.232zM10.899 4.34a1.84 1.84 0 01.95-.271c.535 0 .935.269.96.288l7.36 4.647c.15.107.24.348.262.667l-7.795 4.86a1.658 1.658 0 01-.919.288 1.8 1.8 0 01-.96-.294L3.243 9.791V9.79c.008-.387.103-.664.246-.768l7.41-4.68zm10.782 5.418c-.023-1.003-.44-1.51-.815-1.773l-7.362-4.647a3.071 3.071 0 00-1.67-.502c-.926 0-1.582.448-1.624.482L2.93 7.915 2.793 8c-.345.25-.765.757-.787 1.774l.008 9.787c-.025.218-.062.899.4 1.456.25.3.734.658 1.63.678.505.008 2.822.011 5.455.011h2.764c1.933 0 6.527.003 7.381-.01.894-.018 1.378-.38 1.628-.679.462-.557.428-1.238.403-1.456-.003-.003.006-9.804.006-9.804z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenFileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.415 5.775h6.128c.107 0 .18.064.18.123v1.028c0 .344.277.624.619.624h7.722c.107 0 .18.065.18.171l.064.86v.003H5.591c-.72 0-1.31.571-1.345 1.289l-.557 3.02-.45-6.995c0-.056.07-.123.176-.123zm16.924 2.812h-.807c.003-.034.014-.065.011-.098l-.064-.813c0-.759-.636-1.375-1.417-1.375H10.96v-.4c0-.76-.636-1.376-1.418-1.376H3.415A1.402 1.402 0 002 5.915v.025l.77 11.95-.002.044c0 .745.605 1.356 1.347 1.356h14.77c.72 0 1.311-.574 1.345-1.289l1.448-7.946a.515.515 0 00.011-.115 1.355 1.355 0 00-1.35-1.353z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenFileLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.5 18.247a.33.33 0 01-.33.33H4.095c-.182 0-.33-.148-.337-.257l1.547-8.826a.33.33 0 01.33-.33h15.053a.33.33 0 01.328.299l-1.515 8.784zM2.98 5.85c0-.194.18-.353.403-.353h6.255c.221 0 .4.156.4.353v1.056c0 .232.185.42.412.42h7.883c.221 0 .4.16.403.383l.048.614H5.635c-.636 0-1.154.527-1.148 1.098L3.55 14.76l-.57-8.91zm17.706 2.473h-1.079l-.05-.644c0-.659-.552-1.194-1.227-1.194h-7.465V5.85c0-.659-.552-1.194-1.227-1.194H3.383c-.678 0-1.227.535-1.227 1.222l.787 12.344-.005.025c0 .647.518 1.174 1.157 1.174H19.17c.636 0 1.154-.527 1.149-1.1l1.518-8.754a.591.591 0 00.006-.073c0-.644-.519-1.171-1.157-1.171z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenFileRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.03 17.82a.507.507 0 00-.01.111c0 .06-.048.104-.11.104H4.14a.11.11 0 01-.104-.073l1.463-7.91c.005-.04.01-.076.01-.115 0-.059.048-.104.11-.104h14.75c.051 0 .09.031.104.073l-1.442 7.913zM3.444 5.774H9.57c.107 0 .18.064.18.123v1.028c0 .344.277.624.619.624h7.722c.107 0 .18.065.183.174l.064.86v.003H5.619c-.72 0-1.31.571-1.344 1.288l-.558 3.02L3.266 5.9c-.003-.062.07-.126.177-.126zm16.924 2.809h-.807c.003-.034.014-.064.011-.098l-.064-.812c0-.757-.636-1.376-1.417-1.376h-7.104v-.403c0-.756-.636-1.375-1.417-1.375H3.44c-.78 0-1.414.616-1.414 1.414l.77 11.95c0 .014-.005.028-.005.045 0 .747.605 1.355 1.347 1.355h14.77c.72 0 1.311-.574 1.345-1.288l1.448-7.947a.507.507 0 00.011-.112 1.348 1.348 0 00-1.344-1.353z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.616 11.02l12.474-.003-5.393-5.378c-.257.129-.546.21-.854.21-.308 0-.594-.081-.851-.21l-5.376 5.38zm11.955 6.677v-2.986c0-.224-.179-.4-.4-.4h-.12a.4.4 0 00-.401.4v1.393l-1.067-1.617a.408.408 0 00-.334-.179h-.095a.4.4 0 00-.4.4v2.987a.4.4 0 00.4.4h.123a.4.4 0 00.4-.4v-1.392l1.065 1.613a.4.4 0 00.334.18h.1a.395.395 0 00.395-.399zm-3.339 0v-.117a.4.4 0 00-.4-.4h-.941v-.539h.66a.4.4 0 00.401-.4v-.118a.4.4 0 00-.4-.4h-.661v-.49h.87a.404.404 0 00.393-.314l.025-.118a.41.41 0 00-.078-.339.406.406 0 00-.314-.148h-1.426a.4.4 0 00-.4.4V17.7c0 .222.18.4.4.4h1.47a.405.405 0 00.401-.403zm-3.07-1.145c.202-.23.303-.535.303-.941 0-.412-.11-.734-.328-.964-.213-.227-.524-.336-.952-.336h-.83a.4.4 0 00-.4.4v2.986a.4.4 0 00.4.401h.132a.4.4 0 00.401-.4v-.788h.39c.38 0 .68-.123.884-.358zm-4.22 1.608c.548 0 1.47-.252 1.47-1.95 0-1.703-.922-1.955-1.47-1.955-.553 0-1.474.255-1.474 1.955 0 1.695.921 1.95 1.473 1.95zm4.901-14.93a.71.71 0 10.002 1.416.71.71 0 00-.002-1.416zm9.824 10.291l.02 5.812a2.36 2.36 0 01-.695 1.681 2.368 2.368 0 01-1.678.697l-14.947.003c-.709-.005-1.33-.257-1.754-.708-.425-.457-.633-1.076-.593-1.793L2 13.4a2.36 2.36 0 011.854-2.317l6.289-6.294a1.895 1.895 0 01-.21-.852c0-1.056.857-1.913 1.91-1.913s1.91.857 1.91 1.913c0 .308-.078.594-.207.852l6.297 6.28c.488.095.913.32 1.23.655.426.457.633 1.079.594 1.796zM6.94 15.185c.185 0 .53 0 .53 1.022 0 1.014-.33 1.014-.53 1.014-.199 0-.532 0-.532-1.014 0-1.022.333-1.022.532-1.022zm3.227.045c.224 0 .277.047.277.047.037.042.076.154.076.342 0 .23-.034.289-.064.322-.02.023-.042.05-.236.05h-.336v-.761h.283z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.616 20.61a1.4 1.4 0 00.409-.992l-.02-5.966c.025-.47-.09-.84-.33-1.098-.244-.26-.606-.398-1.048-.4l-15.252.002c-.373 0-.726.146-.989.412a1.387 1.387 0 00-.409.992l.02 5.966c-.026.47.09.84.33 1.098.244.258.608.398 1.05.4l15.253-.005c.37 0 .72-.146.986-.409zM11.999 2.974a.93.93 0 000 1.857.926.926 0 00.88-.974.929.929 0 00-.88-.883zm0 2.675a1.71 1.71 0 01-.907-.263l-5.944 5.95 13.72-.003-5.961-5.944c-.266.162-.574.26-.908.26zm9.824 8.023l.02 5.944a2.208 2.208 0 01-.647 1.571c-.415.417-.98.653-1.57.653l-15.257.003c-.664-.006-1.246-.241-1.641-.662-.398-.423-.589-1.002-.552-1.677l-.02-5.944a2.208 2.208 0 011.804-2.182c.009-.012.011-.026.023-.034l6.532-6.535a1.724 1.724 0 01-.26-.905c0-.963.78-1.748 1.744-1.748a1.75 1.75 0 011.746 1.748c0 .333-.099.642-.264.905l6.577 6.557.006.009c.482.081.899.294 1.204.619.4.423.591 1.003.555 1.678zm-14.826 3.89c.224 0 .644 0 .644-1.137 0-1.146-.417-1.146-.644-1.146-.227 0-.647 0-.647 1.146 0 1.137.42 1.137.647 1.137zm0-3.03c.523 0 1.397.246 1.397 1.893 0 1.563-.759 1.888-1.397 1.888-.639 0-1.404-.328-1.404-1.888 0-1.647.877-1.893 1.404-1.893zm3.666 1.689c.056-.065.09-.154.09-.395 0-.188-.036-.34-.104-.415-.022-.025-.103-.087-.361-.087h-.39v.984h.446c.244-.003.283-.045.32-.087zm-.355-1.63c.409 0 .7.1.896.31.204.213.305.521.305.914 0 .389-.092.68-.283.893-.19.221-.462.33-.826.33h-.501v.908a.309.309 0 01-.309.308h-.134a.309.309 0 01-.308-.308v-3.05c0-.168.137-.308.308-.308.006.002.852.002.852.002zm3.722 2.927c.168 0 .308.137.308.308v.12a.309.309 0 01-.308.308h-1.5a.309.309 0 01-.308-.308v-3.05c0-.168.137-.308.308-.308h1.456c.168 0 .309.137.309.305a.276.276 0 01-.009.067l-.028.12a.308.308 0 01-.3.242h-.988v.705h.776a.31.31 0 01.308.309v.12a.309.309 0 01-.308.308h-.776v.754h1.061zm3.41-2.928c.17 0 .307.138.307.309v3.05a.309.309 0 01-.308.308h-.1a.3.3 0 01-.256-.137l-1.271-1.93v1.762a.309.309 0 01-.308.308h-.126a.309.309 0 01-.309-.308v-3.056a.31.31 0 01.309-.308h.098a.3.3 0 01.255.137l1.28 1.93v-1.762c0-.168.137-.308.308-.308a.94.94 0 00.12.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpenRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.14 20.165c.221-.221.342-.518.342-.829l-.02-5.846c.023-.417-.073-.728-.269-.938-.201-.213-.504-.328-.882-.33l-14.941.002a1.172 1.172 0 00-1.17 1.174l.018 5.846c-.022.414.073.728.27.938.201.213.506.328.882.33l14.94-.002a1.17 1.17 0 00.83-.345zM11.843 3.23a.708.708 0 100 1.417.708.708 0 100-1.417zm0 2.622c-.308 0-.594-.079-.851-.208l-5.376 5.378 12.474-.002-5.395-5.379c-.258.13-.544.21-.852.21zm9.824 7.669l.02 5.812a2.373 2.373 0 01-2.373 2.378l-14.947.003c-.709-.005-1.33-.257-1.754-.711-.425-.457-.633-1.076-.593-1.793L2 13.398a2.364 2.364 0 011.854-2.317l6.289-6.291a1.895 1.895 0 01-.21-.852c0-1.056.857-1.913 1.91-1.913s1.91.857 1.91 1.913c0 .308-.078.594-.207.852l6.297 6.28c.488.095.913.322 1.23.658.426.454.633 1.073.594 1.793zm-14.726 3.7c.2 0 .53 0 .53-1.014 0-1.022-.345-1.022-.53-1.022-.199 0-.532 0-.532 1.022 0 1.014.333 1.014.532 1.014zm0-2.969c.55 0 1.47.255 1.47 1.955 0 1.698-.92 1.953-1.47 1.953-.552 0-1.473-.252-1.473-1.953 0-1.7.921-1.955 1.473-1.955zm3.518 1.69c.031-.037.065-.096.065-.323 0-.185-.04-.297-.079-.342 0 0-.053-.047-.277-.047h-.28v.762h.336c.19-.003.216-.028.235-.05zm-.274-1.634c.426 0 .74.11.952.336.216.23.328.555.328.964 0 .406-.098.714-.303.944-.204.235-.5.358-.885.358h-.389v.787a.4.4 0 01-.4.401h-.132a.4.4 0 01-.4-.4V14.71a.4.4 0 01.4-.4h.829v-.003zm3.647 2.868a.4.4 0 01.4.401v.118a.4.4 0 01-.4.4h-1.47a.4.4 0 01-.401-.4v-2.986a.4.4 0 01.4-.4h1.426a.4.4 0 01.314.148.408.408 0 01.078.339l-.025.117a.399.399 0 01-.392.314h-.871v.493h.66a.4.4 0 01.401.4v.118a.4.4 0 01-.4.4h-.661v.541h.94v-.003zm3.339-2.868a.4.4 0 01.4.4v2.99a.4.4 0 01-.4.4h-.101a.397.397 0 01-.333-.18l-1.065-1.613v1.392a.4.4 0 01-.4.401h-.12a.4.4 0 01-.401-.4v-2.99a.4.4 0 01.4-.4h.095c.135 0 .261.067.334.18l1.067 1.613v-1.392a.4.4 0 01.4-.4h.124z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpticalFiberFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 2c3.123 0 5.557.818 7.23 2.429 1.736 1.675 2.616 4.168 2.616 7.417 0 3.25-.88 5.745-2.616 7.417-1.673 1.61-4.107 2.429-7.23 2.429-2.303 0-4.23-.446-5.754-1.325l3.647-3.748a.561.561 0 00-.002-.784l-.224-.227c1.344-.678 3.327-1.384 5.966-1.574.073.17.182.327.317.456.285.27.655.41 1.109.41.454 0 .823-.132 1.109-.41.286-.277.437-.647.437-1.07 0-.423-.154-.795-.437-1.067-.283-.272-.655-.412-1.11-.412-.453 0-.826.137-1.108.41a1.39 1.39 0 00-.356.56c-2.056.145-3.748.588-5.079 1.097l4.768-4.705a1.4 1.4 0 00.605.117c.392-.011.75-.174 1.076-.493.324-.32.493-.678.504-1.07a1.423 1.423 0 00-.446-1.064c-.3-.297-.67-.448-1.067-.437-.392.008-.75.173-1.076.493-.324.32-.493.678-.504 1.07-.008.204.034.406.115.594l-4.863 4.8c.535-1.347 1-3.086 1.152-5.215a1.36 1.36 0 00.56-.356c.272-.285.409-.658.409-1.109 0-.45-.135-.823-.41-1.11a1.442 1.442 0 00-1.066-.436 1.45 1.45 0 00-1.068.437c-.271.286-.409.655-.409 1.11 0 .453.138.825.41 1.108.128.135.285.244.456.317-.19 2.63-.89 4.61-1.566 5.952l-.193-.196a.549.549 0 00-.398-.168.566.566 0 00-.4.168L3.3 17.56C2.437 16.045 2 14.132 2 11.846c0-3.247.88-5.742 2.616-7.417C6.29 2.818 8.723 2 11.846 2zm5.067 11.064c.23 0 .308.073.333.098.045.045.093.11.093.261 0 .151-.048.216-.093.26-.025.026-.103.099-.333.099-.23 0-.308-.073-.333-.099-.042-.042-.09-.103-.093-.249v-.014c0-.148.048-.213.093-.258.025-.025.103-.098.333-.098zM15.835 7.48c.064-.003.148.014.249.115.1.1.115.176.112.235-.003.034-.003.135-.17.303-.169.168-.28.17-.317.17-.065.003-.143-.008-.247-.112-.103-.103-.117-.179-.115-.238.003-.033.003-.134.171-.302.168-.168.28-.171.317-.171zm-5.712-1.272c.152 0 .216.048.26.093.026.025.099.1.099.333s-.073.308-.098.333c-.045.045-.11.093-.258.093h-.017c-.143-.003-.204-.048-.246-.093-.025-.025-.098-.1-.098-.333 0-.232.073-.308.098-.333.045-.045.109-.093.26-.093z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpticalFiberLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.994 2.156c3.14 0 5.574.813 7.238 2.418 1.725 1.663 2.602 4.162 2.602 7.423 0 6.437-3.403 9.837-9.84 9.837-6.434 0-9.838-3.4-9.838-9.835 0-6.434 3.404-9.843 9.838-9.843zm0 .56c-2.989 0-5.294.762-6.849 2.261-1.61 1.555-2.429 3.916-2.429 7.02 0 2.22.42 4.063 1.248 5.5l.038-.05.006-.005 3.325-3.283a.279.279 0 01.395.003l.465.47c.751-1.389 1.594-3.571 1.786-6.562a1.144 1.144 0 01-.61-.337c-.227-.238-.347-.56-.347-.95 0-.389.117-.71.347-.949.23-.238.538-.367.905-.367s.67.123.905.367.347.56.347.95c0 .39-.118.711-.347.95a1.18 1.18 0 01-.642.342l.003-.046c-.182 3.011-1.008 5.244-1.77 6.703l6.04-5.962a1.141 1.141 0 01-.206-.693c.009-.33.154-.639.435-.913.28-.275.588-.42.921-.429a1.2 1.2 0 01.902.373c.26.257.387.557.378.896-.008.33-.157.639-.434.913-.277.275-.588.42-.921.429h-.037c-.23 0-.443-.063-.636-.187l-5.955 5.881c1.45-.738 3.616-1.518 6.51-1.703.04-.264.157-.488.347-.672.244-.235.56-.347.95-.347.39 0 .711.117.95.347.237.23.366.538.366.905s-.123.67-.367.905c-.243.235-.557.347-.95.347-.391 0-.71-.118-.949-.347a1.158 1.158 0 01-.33-.582l.078-.007c-3.025.185-5.227 1.037-6.627 1.796l.49.496a.279.279 0 01-.003.395L6.33 19.928c1.461.894 3.36 1.346 5.665 1.346 2.989 0 5.294-.76 6.851-2.258C20.46 17.462 21.277 15.1 21.277 12s-.818-5.465-2.432-7.02c-1.557-1.5-3.862-2.263-6.851-2.263zM7.529 14.753l-3.13 3.087a.635.635 0 01-.147.118 6.812 6.812 0 001.608 1.657l.027-.036 3.244-3.201-.801-.813-.272-.274-.53-.538zm9.535-1.765c-.216 0-.378.053-.49.163a.548.548 0 00-.163.425v.014a.54.54 0 00.163.407c.112.109.274.162.49.162.215 0 .378-.053.49-.162a.547.547 0 00.162-.423c0-.182-.05-.32-.162-.423-.112-.104-.275-.163-.49-.163zM15.974 7.4c-.16.003-.314.081-.473.235-.16.154-.236.306-.238.46 0 .15.056.28.185.406.128.126.26.185.417.18.16-.004.314-.082.47-.236.157-.154.236-.306.239-.46.005-.15-.054-.28-.182-.406a.545.545 0 00-.418-.18zm-5.7-1.272a.549.549 0 00-.423.163c-.104.109-.163.274-.163.49 0 .216.054.378.163.49.104.107.232.16.406.163h.017a.553.553 0 00.423-.163c.106-.11.162-.274.162-.49 0-.216-.053-.378-.162-.49a.547.547 0 00-.423-.163z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOpticalFiberRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.846 2c3.123 0 5.557.818 7.23 2.429 1.736 1.672 2.616 4.168 2.616 7.417 0 3.25-.88 5.742-2.616 7.417-1.673 1.61-4.107 2.429-7.23 2.429-2.473 0-4.513-.513-6.086-1.526l-.032-.007a.565.565 0 01-.276-.202 7.331 7.331 0 01-.836-.694C2.88 17.588 2 15.093 2 11.846s.88-5.742 2.616-7.417C6.29 2.818 8.723 2 11.846 2zm0 1.12c-2.824 0-4.994.712-6.451 2.115-1.51 1.454-2.275 3.678-2.275 6.61 0 1.906.323 3.51.963 4.801l2.875-2.837a.559.559 0 01.793.006l.193.196C8.619 12.67 9.319 10.69 9.51 8.06a1.353 1.353 0 01-.457-.317c-.272-.283-.409-.655-.409-1.109 0-.454.137-.823.41-1.11a1.448 1.448 0 011.066-.436c.423 0 .793.151 1.068.437.274.286.409.658.409 1.109 0 .451-.138.824-.41 1.11a1.36 1.36 0 01-.56.355c-.15 2.129-.616 3.868-1.15 5.216l4.86-4.801a1.354 1.354 0 01-.116-.594c.011-.392.18-.75.504-1.07.325-.32.684-.485 1.076-.493.398-.011.768.14 1.067.437.3.297.457.666.446 1.064-.012.392-.18.75-.505 1.07-.324.32-.683.482-1.075.493a1.406 1.406 0 01-.605-.117l-4.768 4.705c1.33-.51 3.023-.952 5.079-1.098a1.39 1.39 0 01.355-.56c.283-.272.656-.409 1.11-.409.454 0 .826.14 1.109.412.283.272.437.644.437 1.067 0 .423-.151.793-.437 1.07-.286.277-.655.41-1.11.41-.453 0-.823-.14-1.109-.41a1.393 1.393 0 01-.316-.456c-2.639.19-4.622.896-5.966 1.574l.224.227a.559.559 0 01-.006.792L6.834 19.5c1.325.712 3.004 1.072 5.012 1.072 2.823 0 4.994-.711 6.45-2.114 1.51-1.454 2.275-3.678 2.275-6.611s-.764-5.154-2.274-6.61C16.84 3.831 14.669 3.12 11.846 3.12zM7.347 15.003l-2.668 2.63a6.266 6.266 0 001.193 1.239l2.683-2.648-.603-.61-.271-.275-.334-.336zm9.569-1.939c-.23 0-.308.073-.333.098-.045.045-.093.11-.093.258v.011c-.003.003-.003.006 0 .006.003.143.048.204.093.246.025.026.103.098.333.098.23 0 .308-.072.333-.098.045-.044.093-.109.093-.26 0-.151-.048-.216-.093-.26-.025-.026-.103-.099-.333-.099zm-1.081-5.582c-.037 0-.149.003-.317.17-.168.169-.168.27-.17.303-.003.056.008.132.109.233.109.106.187.12.252.117.036 0 .148-.002.316-.17.168-.169.168-.27.171-.303.003-.059-.011-.135-.112-.235-.1-.101-.185-.118-.25-.115zm-5.712-1.275c-.151 0-.215.048-.26.093-.025.025-.098.1-.098.333s.073.308.098.333c.042.045.103.09.246.093h.017c.148 0 .213-.048.258-.093.025-.025.098-.1.098-.333 0-.232-.073-.308-.098-.333-.045-.045-.11-.093-.26-.093z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOutgoingCallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.61 15.41c.805.803 1.222 1.64 1.236 2.49.017.879-.398 1.767-1.227 2.638-.291.305-.697.597-.832.695-.008.005-.014.011-.017.011-.008.006-.017.011-.025.02-.563.389-1.277.582-2.104.582-.865 0-1.857-.213-2.93-.641-2.187-.871-4.58-2.569-6.918-4.908l-.006-.005-.073-.073c-.003 0-.003-.003-.005-.003-2.34-2.339-4.037-4.731-4.908-6.919-.835-2.092-.854-3.88-.059-5.033.006-.009.011-.017.02-.026a6.447 6.447 0 01.706-.849C4.322 2.576 5.19 2.16 6.05 2.16h.054c.848.017 1.686.431 2.49 1.235.325.325.59.661.787 1 .431.695.588 1.415.465 2.135-.123.72-.524 1.423-1.196 2.095a5.499 5.499 0 01-.496.443c-.064.117-.025.49.496 1.252.605.882 1.613 1.921 2.32 2.63l.083.084c.706.706 1.748 1.714 2.63 2.32.591.405.947.517 1.135.517a.216.216 0 00.118-.025c.165-.204.268-.322.442-.496.672-.672 1.378-1.075 2.095-1.196a2.73 2.73 0 01.474-.039c.56 0 1.117.171 1.66.507.343.196.679.46 1.004.787zm-6.061-5.138l-.95-1.056a.771.771 0 01.115-1.134l2.521-2.219-.552-.613a.584.584 0 01-.128-.614.579.579 0 01.515-.356l3.846-.3c.017-.002.036-.002.053-.002a.633.633 0 01.625.779l-.813 3.79a.59.59 0 01-.417.465.626.626 0 01-.143.02.61.61 0 01-.45-.214l-.558-.619-2.532 2.177a.748.748 0 01-.519.207c-.022 0-.042-.003-.064-.003a.762.762 0 01-.549-.308z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOutgoingCallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.96 19.9c.72-.754 1.076-1.505 1.065-2.236-.014-.703-.372-1.412-1.064-2.103a4.327 4.327 0 00-.874-.69c-.588-.364-1.18-.495-1.773-.397-.603.1-1.205.45-1.787 1.033a4.64 4.64 0 00-.395.443.403.403 0 01-.118.1c-.339.194-.871.029-1.636-.495-.871-.597-1.888-1.583-2.574-2.272l-.081-.078c-.692-.692-1.678-1.712-2.272-2.577-.521-.765-.683-1.3-.493-1.636a.4.4 0 01.104-.123 4.29 4.29 0 00.44-.392c.582-.583.93-1.185 1.033-1.788.1-.59-.03-1.182-.392-1.759a4.358 4.358 0 00-.698-.885c-.692-.692-1.4-1.05-2.103-1.064H6.3c-.717 0-1.454.358-2.19 1.064a5.2 5.2 0 00-.617.74c-.709 1.022-.675 2.6.073 4.473.815 2.04 2.406 4.283 4.602 6.482l.014.014.07.07c2.207 2.207 4.451 3.804 6.496 4.616 1.857.742 3.454.779 4.44.098.16-.115.526-.38.773-.638zm.58-4.922c.85.849 1.29 1.748 1.306 2.67.017.955-.415 1.901-1.291 2.817a6.396 6.396 0 01-.922.762c-.585.406-1.342.62-2.227.62-.893 0-1.888-.216-2.96-.645-2.15-.854-4.49-2.515-6.768-4.795l-.065-.065-.016-.017c-2.28-2.28-3.939-4.622-4.796-6.767-.851-2.137-.854-3.986-.011-5.21.132-.18.428-.591.75-.9.914-.873 1.852-1.29 2.816-1.288.921.017 1.82.457 2.67 1.305.335.34.613.69.817 1.042.462.745.63 1.53.496 2.322-.132.776-.557 1.527-1.26 2.233-.115.118-.236.23-.362.333.03.118.129.356.409.768.555.81 1.507 1.793 2.174 2.46l.08.08c.668.664 1.645 1.617 2.46 2.177.41.28.65.375.768.409.11-.129.202-.23.336-.361.706-.706 1.457-1.13 2.23-1.261.795-.134 1.577.036 2.33.504.348.196.7.47 1.037.807zm-6.562-6.569c-.107.082-.157.166-.168.264a.36.36 0 00.084.283l.946 1.053c.087.112.18.162.28.17a.332.332 0 00.26-.089l2.542-2.185a.407.407 0 01.571.037l.557.616c.031.036.104.092.18.073.084-.026.112-.115.12-.152l.807-3.776a.22.22 0 00-.045-.201.229.229 0 00-.174-.073h-.02l-3.831.291c-.048.003-.135.023-.165.098-.031.079.02.152.05.185l.549.61a.412.412 0 01-.034.583c.003.003-2.51 2.213-2.51 2.213zm.232 2.12l-.924-1.024a1.178 1.178 0 01.179-1.737l2.17-1.91-.274-.303a1.003 1.003 0 01-.204-1.04.995.995 0 01.863-.61l3.829-.297.087-.003a1.038 1.038 0 011.022 1.272l-.807 3.776a1 1 0 01-.711.773 1.01 1.01 0 01-1.003-.314l-.283-.322-2.218 1.908a1.122 1.122 0 01-.883.3 1.175 1.175 0 01-.843-.468z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconOutgoingCallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.61 19.558c.661-.692.99-1.37.975-2.022-.011-.625-.339-1.264-.972-1.9a3.969 3.969 0 00-.81-.638c-.532-.328-1.058-.443-1.576-.359-.541.093-1.09.41-1.625.944a4.642 4.642 0 00-.367.412.62.62 0 01-.185.157c-.414.235-1 .078-1.835-.493-.868-.597-1.87-1.569-2.549-2.244l-.08-.081c-.676-.672-1.645-1.672-2.245-2.546-.571-.835-.728-1.418-.495-1.838a.562.562 0 01.16-.185c.17-.134.265-.22.411-.367.535-.535.854-1.08.944-1.624.09-.524-.025-1.037-.35-1.56a4.017 4.017 0 00-.647-.824c-.63-.63-1.27-.958-1.894-.97-.647-.016-1.33.315-2.022.976a5.155 5.155 0 00-.572.691c-.647.93-.602 2.395.098 4.149.785 1.97 2.325 4.134 4.454 6.263l.031.034.045.045c2.132 2.129 4.297 3.67 6.266 4.453 1.737.692 3.23.737 4.12.12.149-.106.493-.355.72-.593zm.894-4.81c.874.875 1.325 1.802 1.342 2.765.02.995-.426 1.978-1.325 2.916-.306.32-.706.61-.857.72-.69.48-1.474.7-2.387.7-.902 0-1.902-.215-2.975-.644-2.129-.849-4.44-2.484-6.689-4.734l-.076-.075a.336.336 0 01-.061-.065c-2.219-2.232-3.835-4.52-4.672-6.63-.863-2.157-.858-4.04.01-5.3.132-.185.435-.602.763-.916.94-.899 1.918-1.339 2.916-1.325.96.02 1.89.47 2.764 1.342.322.32.605.678.838 1.067.476.77.653 1.591.512 2.42-.137.804-.57 1.58-1.296 2.303a4.834 4.834 0 01-.247.232c.05.115.146.295.32.55.537.787 1.453 1.73 2.097 2.37l.082.08c.638.64 1.585 1.558 2.37 2.096.254.173.434.269.548.319.07-.078.143-.157.236-.246.722-.723 1.498-1.16 2.302-1.297.832-.14 1.65.036 2.434.52.348.208.706.488 1.05.833zm-6.42-6.08c-.07.053-.084.08-.09.111a.118.118 0 00.028.096l.924 1.03c.05.065.079.09.124.093.008-.009.092-.042.1-.05l2.463-2.115a.632.632 0 01.88.053l.467.515.762-3.568-.011-.003-3.597.28.451.504a.63.63 0 01-.048.89l-.002.004-2.451 2.16zm-.11 2.036l-.888-.983a1.378 1.378 0 01.21-2.037l1.93-1.7-.112-.123a1.207 1.207 0 01-.243-1.252c.168-.42.566-.706 1.042-.743l3.74-.288.1-.003c.364 0 .712.154.947.423.26.297.361.697.277 1.092l-.79 3.69a1.203 1.203 0 01-.86.927 1.196 1.196 0 01-1.207-.376l-.132-.145-1.997 1.717a1.32 1.32 0 01-1.028.347 1.38 1.38 0 01-.989-.546z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPacifierFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.654 13.717c-.26.26-.577.465-.924.639-.174.087-.348.17-.541.235a5.455 5.455 0 01-1.47.244c-.093.005-.174.02-.27.02H9.364c-.096 0-.177-.018-.27-.02a5.529 5.529 0 01-1.47-.244 4.089 4.089 0 01-.54-.235 3.44 3.44 0 01-.925-.639c-.255-.339-.39-.807-.39-1.415 0-.605.138-1.072.39-1.417.6-.605 1.454-.966 2.48-1.084a4.78 4.78 0 00-.057.709c0 1.059.308 1.888.913 2.468.58.554 1.393.837 2.412.837 1.023 0 1.832-.283 2.412-.837.605-.58.91-1.41.91-2.468 0-.25-.02-.485-.053-.709 1.025.12 1.877.48 2.479 1.084.255.342.392.812.392 1.417-.003.608-.14 1.076-.392 1.415zm-3.479 2.843c-.006.642-.24 2.129-2.269 2.137-2.03-.008-2.263-1.495-2.269-2.137l-.008-.468.201-.002h4.35l-.005.47zm4.4-6.496c-.013-.016-.025-.033-.041-.05-.056-.067-.104-.104-.166-.162a1.549 1.549 0 00-.17-.149c-.734-.6-1.67-.978-2.751-1.12.403-.65.613-1.465.613-2.44 0-1.33-.38-2.37-1.131-3.093-.723-.694-1.74-1.05-3.026-1.05-1.285 0-2.302.353-3.022 1.05-.754.723-1.135 1.765-1.135 3.093 0 .975.21 1.79.614 2.44-1.081.142-2.017.52-2.75 1.12-.065.042-.121.098-.172.149-.061.058-.109.095-.165.162-.017.017-.025.034-.042.05-.465.566-.711 1.311-.711 2.241 0 .93.249 1.673.711 2.241.014.017.025.034.042.05.107.11.219.213.336.309.149.123.37.266.594.4.19.115.384.222.535.297v.502l.011.703c.023 2.355 1.387 4.87 5.14 4.882h.023c3.753-.011 5.117-2.527 5.14-4.882l.008-.712v-.49c.151-.076.347-.182.535-.297.224-.134.446-.277.594-.4.118-.096.23-.202.336-.309l.042-.05c.465-.566.715-1.308.715-2.24.005-.936-.241-1.682-.706-2.245z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPacifierLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.703 14.061a3.66 3.66 0 01-1.017.726c-.137.07-.269.145-.417.201-.47.171-1.003.258-1.574.283-.082.003-.157.02-.241.02H9.496a2.46 2.46 0 00-.149-.012c-.03 0-.058-.005-.092-.005-.572-.025-1.104-.112-1.574-.283-.12-.056-.18-.09-.289-.132-.03-.01-.09-.056-.129-.07a3.632 3.632 0 01-1.017-.725c-.282-.387-.434-.913-.434-1.591 0-.678.152-1.205.434-1.591.673-.712 1.645-1.11 2.816-1.194-.065.295-.11.608-.11.956 0 1.02.278 1.818.827 2.367.52.523 1.255.79 2.185.795v.003h.022v-.003c.927-.005 1.664-.269 2.185-.795.549-.552.826-1.35.826-2.367 0-.35-.045-.661-.109-.956 1.174.084 2.146.482 2.818 1.194.283.386.434.916.434 1.59-.003.676-.154 1.202-.437 1.589zm-5.731 4.728c-1.975-.008-2.204-1.526-2.21-2.185l-.006-.473h4.429l-.006.473c-.003.659-.232 2.177-2.207 2.185zm4.207-1.946c-.008.974-.339 4.15-4.207 4.156-3.868-.008-4.199-3.182-4.207-4.156l-.011-.947c.375.109.773.179 1.196.213l.008.504c.014 1.45.812 3.003 3.006 3.014v.003h.022v-.003c2.196-.011 2.994-1.563 3.006-3.014l.005-.504c.423-.034.82-.107 1.2-.213l-.018.947zM9.742 3.77c.504-.51 1.255-.77 2.23-.773.972 0 1.723.26 2.23.773.53.535.792 1.341.792 2.406 0 .983-.238 1.737-.689 2.266-.036.042-.064.095-.103.134-.02.023-.034.048-.05.065-.07.059-.11.11-.172.176-.014.014-.022.034-.033.05-.098.146-.065.362-.045.418l.146.364c.086.289.134.616.134.992 0 .781-.193 1.375-.58 1.762-.367.372-.919.557-1.636.56-.714-.003-1.266-.188-1.635-.56-.384-.387-.58-.98-.58-1.762 0-.378.047-.703.137-.992l.146-.364c.02-.056.053-.272-.045-.417-.014-.014-.017-.037-.034-.05-.061-.068-.098-.121-.17-.177-.017-.02-.031-.042-.051-.065-.04-.039-.067-.09-.104-.134-.454-.53-.692-1.283-.692-2.266.009-1.062.275-1.871.804-2.406zm8.566 6.557l-.017-.022c-.014-.014-.008-.014-.022-.028a1.449 1.449 0 00-.14-.154 1.035 1.035 0 00-.165-.14c-.765-.661-1.76-1.054-2.928-1.152.499-.67.765-1.554.765-2.655 0-1.297-.35-2.311-1.04-3.009-.66-.666-1.596-1.008-2.78-1.01h-.023c-1.185.005-2.12.344-2.782 1.01-.689.698-1.039 1.71-1.039 3.009 0 1.103.27 1.986.768 2.655-1.168.098-2.163.49-2.93 1.152-.056.036-.12.098-.163.14-.058.061-.087.086-.14.154-.014.014-.005.014-.02.028l-.016.022C5.22 10.865 5 11.577 5 12.47c0 .89.221 1.605.636 2.143.014.014.022.033.036.047.053.068.096.107.154.169.045.044.09.09.152.126.288.249.613.456.963.63l.017 1.266c.022 2.409 1.347 4.978 5.003 4.992h.022c3.656-.012 4.983-2.583 5.003-4.992l.017-1.266c.35-.174.675-.381.96-.63a.682.682 0 00.152-.126c.061-.062.1-.101.154-.169.014-.014.022-.033.036-.047.415-.538.636-1.25.636-2.143.003-.89-.218-1.605-.633-2.143z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPacifierRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.634 13.723c-.26.26-.577.465-.924.638a4.174 4.174 0 01-.54.236c-.44.142-.936.224-1.471.243-.093.006-.174.02-.269.02H9.343c-.092 0-.176-.017-.269-.02a5.529 5.529 0 01-1.47-.243 4.089 4.089 0 01-.541-.236 3.44 3.44 0 01-.924-.638c-.255-.34-.39-.807-.39-1.415 0-.605.138-1.073.392-1.417.6-.605 1.454-.967 2.48-1.084a4.74 4.74 0 00-.057.711c0 1.059.309 1.888.914 2.468.58.555 1.392.838 2.411.838 1.023 0 1.832-.283 2.412-.838.605-.58.91-1.409.91-2.468 0-.25-.02-.484-.053-.711 1.025.12 1.877.479 2.48 1.084.254.341.391.812.391 1.417-.005.608-.14 1.076-.395 1.415zm-7.823 2.375h4.151l-.003.255c-.005.725-.285 1.936-2.072 1.936-1.788 0-2.068-1.21-2.073-1.936l-.003-.255zm6.202.487c-.012 1.166-.435 3.869-4.126 3.869-3.695 0-4.115-2.703-4.126-3.869l-.012-.663c.26.058.533.103.813.131l.005.311c.014 1.457.891 3.154 3.317 3.157 2.428 0 3.305-1.697 3.316-3.157l.006-.31c.28-.029.552-.074.812-.132l-.005.663zM9.73 3.938c.481-.465 1.21-.7 2.157-.7.95 0 1.675.238 2.156.7.499.482.754 1.224.754 2.208 0 .798-.177 1.428-.507 1.896a2.176 2.176 0 01-.247.305s-.042.031-.095.079a.608.608 0 00-.339.44.617.617 0 00.076.389.526.526 0 00.036.098c.084.162.096.199.146.398.059.23.095.479.095.764 0 .712-.18 1.241-.53 1.577-.341.328-.862.493-1.548.493-.687 0-1.208-.165-1.546-.493-.353-.336-.533-.868-.533-1.577 0-.285.04-.537.098-.764.05-.2.065-.236.146-.398a.503.503 0 00.04-.098.6.6 0 00.075-.39.608.608 0 00-.34-.44c-.052-.047-.094-.078-.094-.078-.096-.09-.171-.199-.247-.305-.33-.468-.507-1.098-.507-1.896 0-.984.252-1.726.754-2.208zm8.826 6.13c-.014-.018-.025-.034-.042-.051-.056-.067-.104-.104-.168-.163a1.275 1.275 0 00-.17-.148c-.735-.6-1.67-.978-2.752-1.12.404-.65.614-1.466.614-2.44 0-1.33-.381-2.373-1.132-3.096-.723-.697-1.74-1.05-3.025-1.05-1.286 0-2.303.353-3.022 1.05-.751.723-1.132 1.765-1.132 3.096 0 .974.207 1.79.613 2.44-1.08.142-2.014.52-2.75 1.12-.065.042-.12.098-.171.148-.062.06-.11.096-.165.163-.017.017-.026.033-.043.05-.462.566-.711 1.311-.711 2.241 0 .93.25 1.675.711 2.241l.043.05c.106.11.218.213.336.309.274.226.577.42.904.582l.017 1.107c.02 2.462 1.443 5.09 5.37 5.09s5.35-2.628 5.37-5.09l.017-1.107c.327-.165.63-.358.904-.582.118-.096.23-.202.336-.309l.042-.05c.465-.566.715-1.31.715-2.24.003-.93-.244-1.676-.709-2.242z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPackageTrolleyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.357 4.327l1.437-.25.216 1.381c.025.11.08.21.168.278.064.05.145.075.232.075.025 0 .04 0 .065-.008l1.445-.252c.218-.034.361-.25.33-.477l-.224-1.38 1.437-.253.731 4.53-5.117.888-.72-4.532zm6.073 7.4a.416.416 0 00.33-.476l-.33-2.05 2.112-.362.899 5.628-7.255 1.263-.9-5.628 2.421-.425.328 2.042c.017.109.073.21.16.277a.39.39 0 00.232.076c.025 0 .042 0 .064-.009l1.939-.336zm4.347 4.462l-7.68 1.33a5.137 5.137 0 00-.225-.635l6.86-1.188c.28-.05.53-.215.7-.467.185-.27.258-.611.21-.956l-.907-5.658a1.301 1.301 0 00-.49-.829 1.03 1.03 0 00-.81-.202l-1.045.185-.756-4.706a1.125 1.125 0 00-.378-.686.97.97 0 00-.77-.216l-5.544.961c-.53.1-.89.653-.795 1.247l.779 4.865a1.2 1.2 0 00.207.476 1.273 1.273 0 00-.04.586l.788 4.924a3.129 3.129 0 00-.754-.059L7.334 4.001a.614.614 0 00-.481-.518l-2.885-.56c-.323-.067-.645.16-.71.502-.055.344.16.67.483.728l2.476.487 1.717 10.734c-1.544.51-2.314 1.866-2.022 3.667.16.997.577 1.776 1.22 2.252.483.358 1.076.543 1.743.543.224 0 .457-.025.7-.067 1.664-.294 2.628-1.406 2.667-2.997l7.737-1.347c.33-.05.546-.376.49-.72-.05-.348-.361-.583-.692-.516z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPackageTrolleyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.96 20.216c-.581.112-1.057.022-1.41-.259-.355-.278-.58-.745-.683-1.386-.193-1.294.321-2.092 1.491-2.312.16-.03.314-.037.453-.037.383 0 .701.097.956.303.353.28.58.747.683 1.388.194 1.292-.323 2.09-1.49 2.303zm.56-9.36c-.02-.103.026-.183.065-.193l2.088-.382.3 1.986c.027.177.166.31.328.31.02 0 .04-.007.052-.007l1.612-.296a.384.384 0 00.22-.154.34.34 0 00.053-.274l-.294-1.988 1.82-.332h.013c.052 0 .1.088.107.148l.76 4.993c.014.104-.034.184-.073.193l-6.175 1.137c-.06.022-.114-.082-.119-.147l-.758-4.993zm4.01.746l-.956.177-.24-1.619.95-.176c-.002 0 .246 1.618.246 1.618zM9.704 5.588l1.377-.244.214 1.396c.014.096.06.184.135.237a.337.337 0 00.193.067h.052l1.205-.222a.37.37 0 00.273-.428l-.207-1.374 1.363-.245.642 4.33-4.58.813-.667-4.33zm2.58-.457l.152 1.02-.542.105-.152-1.028c0-.003.541-.097.541-.097zm6.323 11.258l-6.545 1.205a3.397 3.397 0 00-.3-.917l5.92-1.093c.415-.073.688-.54.615-1.036l-.753-4.995a.986.986 0 00-.3-.583c-.167-.147-.38-.222-.588-.177l-1.042.192c0-.015.006-.03 0-.037l-.65-4.298a.784.784 0 00-.254-.487.591.591 0 00-.508-.154l-4.605.856a.605.605 0 00-.407.28.835.835 0 00-.12.598l.648 4.294a.73.73 0 00.207.42c-.06.163-.093.332-.066.518l.701 4.643a2.445 2.445 0 00-.981-.119L8.068 5.477a.374.374 0 00-.267-.302l-2.408-.496c-.182-.034-.355.096-.387.29v.005c-.034.196.084.387.266.428l2.172.45L8.92 15.62c-1.309.385-1.95 1.507-1.71 3.075.121.827.454 1.47.95 1.862.366.295.828.443 1.35.443.182 0 .368-.015.555-.053.756-.14 1.336-.501 1.691-1.055.276-.423.41-.96.394-1.56l6.57-1.22c.182-.028.302-.222.275-.423-.036-.203-.21-.343-.39-.3z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconParkingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.74 10.785a1.494 1.494 0 01-.655.4c-.218.065-.658.137-1.504.137H11.15V6.348h1.305c.672 0 1.219.05 1.622.148.311.076.555.196.709.34.425.416.512 1.246.512 1.87 0 .986-.19 1.706-.557 2.079m3.846-6.925c-.65-.622-1.504-1.07-2.54-1.333-.964-.244-2.197-.367-3.667-.367H6.312a.82.82 0 00-.812.83v18.027c0 .457.364.83.812.83h4.028a.822.822 0 00.813-.83v-5.392h2.028c1.255 0 2.341-.157 3.23-.468.94-.328 1.728-.849 2.33-1.549 1.011-1.151 1.524-2.81 1.524-4.927-.003-2.146-.566-3.77-1.678-4.82"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconParkingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.629 3.8c1.084 1.024 1.639 2.615 1.622 4.725a7.095 7.095 0 01-1.507 4.854 5.264 5.264 0 01-2.283 1.493 10.294 10.294 0 01-3.26.46h-2.609v6.1a.408.408 0 01-.409.41H5.91a.41.41 0 01-.409-.41V2.572a.41.41 0 01.409-.409h6.437c1.26-.025 2.518.098 3.748.37.941.193 1.815.63 2.535 1.266zm-.474 9.021a6.353 6.353 0 001.297-4.305c0-1.863-.465-3.28-1.378-4.1a4.765 4.765 0 00-2.143-1.09 15.415 15.415 0 00-3.585-.345h-6.03v18.045H9.78v-6.112c0-.227.182-.41.406-.41H13.2a9.381 9.381 0 003.014-.416 4.402 4.402 0 001.941-1.267zm-4.26-7.38c.454.09.874.3 1.221.607.605.698.9 1.614.815 2.535a3.696 3.696 0 01-.888 2.69c-.31.316-.697.548-1.123.672a6.646 6.646 0 01-1.63.165h-2.104a.405.405 0 01-.406-.409V5.687c0-.227.182-.409.406-.409h1.997a7.642 7.642 0 011.712.163zm.571 5.249a2.925 2.925 0 00.645-2.084 2.631 2.631 0 00-.586-1.936 1.708 1.708 0 00-.815-.409 7.152 7.152 0 00-1.524-.165h-1.588v5.193h1.658c.485.014.97-.03 1.443-.14.294-.081.557-.24.767-.46z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconParkingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.861 12.687c.807-.91 1.213-2.286 1.213-4.087 0-1.779-.428-3.087-1.277-3.883-.493-.467-1.163-.81-1.992-1.02-.882-.218-2.042-.333-3.445-.333H6.688v17.278H9.66v-5.776a.6.6 0 01.596-.602h2.933c1.14 0 2.107-.135 2.874-.4.734-.253 1.339-.648 1.798-1.177zm.748-8.85c1.098 1.032 1.656 2.634 1.656 4.763 0 2.106-.51 3.75-1.513 4.888-.596.686-1.372 1.199-2.305 1.518-.894.308-1.989.465-3.258.465H10.85v5.773c.003.33-.263.6-.594.602H6.094a.598.598 0 01-.594-.602V2.762a.598.598 0 01.594-.602h6.266c1.501 0 2.756.126 3.731.367 1.03.26 1.877.7 2.518 1.31zm-4.294 6.74c.362-.367.546-1.014.546-1.927 0-.832-.17-1.423-.512-1.753-.165-.154-.406-.275-.712-.348-.364-.086-.848-.131-1.434-.131H10.85v4.686h1.46c.747 0 1.145-.067 1.344-.126a1.5 1.5 0 00.661-.4zm-.403-5.199c.51.124.93.34 1.252.645.588.577.885 1.46.885 2.63 0 1.244-.3 2.176-.893 2.779a2.682 2.682 0 01-1.18.706c-.4.114-.947.17-1.67.17h-2.052a.598.598 0 01-.594-.602v-5.89a.598.598 0 01.594-.603H12.2c.684 0 1.258.056 1.712.165z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPauseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.208 4.583c-1.67-1.608-4.098-2.423-7.222-2.423-3.123 0-5.551.815-7.218 2.426-1.731 1.67-2.608 4.162-2.608 7.409 0 3.246.877 5.736 2.608 7.406 1.667 1.608 4.095 2.423 7.218 2.423 3.124 0 5.552-.815 7.222-2.423 1.73-1.67 2.61-4.16 2.61-7.406 0-3.247-.88-5.743-2.61-7.412zM9.782 15.804c0 .308-.238.56-.532.56a.548.548 0 01-.533-.56V8.157c0-.308.239-.56.533-.56.294 0 .532.252.532.56v7.647zm5.49.009c0 .308-.238.56-.53.56-.29 0-.529-.252-.529-.56V8.166c0-.309.238-.56.53-.56.29 0 .529.251.529.56v7.647z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPauseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.998 2.16c3.14 0 5.574.812 7.238 2.417C20.96 6.241 21.838 8.74 21.838 12c.003 6.435-3.4 9.838-9.84 9.838-6.435 0-9.838-3.4-9.838-9.838 0-6.437 3.4-9.84 9.838-9.84zm0 .56C5.843 2.72 2.72 5.843 2.72 12c0 6.154 3.12 9.278 9.278 9.278 6.16 0 9.28-3.12 9.28-9.278.002-6.16-3.12-9.28-9.28-9.28zM8.953 7.558a.28.28 0 01.28.28v8.333a.28.28 0 01-.28.28.28.28 0 01-.28-.28V7.838a.28.28 0 01.28-.28zm6.045-.028a.28.28 0 01.28.28v8.333a.28.28 0 01-.28.28.28.28 0 01-.28-.28V7.81a.28.28 0 01.28-.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPauseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.986 2.16c3.124 0 5.552.815 7.222 2.423 1.734 1.67 2.61 4.162 2.61 7.409 0 3.246-.88 5.737-2.61 7.406-1.67 1.608-4.098 2.423-7.222 2.423-3.123 0-5.551-.815-7.218-2.423-1.731-1.667-2.608-4.157-2.608-7.403 0-3.247.877-5.74 2.608-7.41C6.435 2.979 8.866 2.16 11.986 2.16zm0 1.09c-5.798 0-8.74 2.94-8.74 8.745 0 5.798 2.942 8.74 8.74 8.74 5.801 0 8.745-2.942 8.745-8.74 0-5.801-2.944-8.745-8.745-8.745zM9.258 7.608c.308 0 .56.252.56.56v7.647c0 .309-.252.56-.56.56a.562.562 0 01-.56-.56V8.168c0-.308.252-.56.56-.56zm5.462 0c.308 0 .56.252.56.56v7.647c0 .309-.252.56-.56.56a.562.562 0 01-.56-.56V8.168c0-.308.252-.56.56-.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPayInvoiceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.098 2.16c.014 0 .028.003.042.006h.014l.05.008a.284.284 0 01.048.011l.014.003a.139.139 0 01.037.011l.011.006c.014.008.03.014.045.022l.042.025.011.009.03.022.012.009.037.033 5.198 5.2.017.019.009.011.022.03.008.012.026.042.022.048.006.01.014.037c.002.006.005.009.005.014.003.014.009.028.011.045l.009.05v.014a.185.185 0 01.003.04v.785l.001 3.818v7.98l.001.076v.142c-.002.711-.445 1.157-1.154 1.157H8.505c-.367 0-.659-.107-.866-.317-.207-.21-.314-.504-.314-.868v-6.227c-1.63-.003-2.902-.434-3.781-1.283-.919-.885-1.384-2.196-1.384-3.896 0-1.7.465-3.014 1.384-3.897.88-.848 2.154-1.28 3.781-1.283v-.748c0-.72.451-1.17 1.177-1.17h.154l.104-.001h.574l.18-.001h1.314l.252-.001h1.922l.287-.001h1.438l.281-.001zm2.345 15.017h-8.037a.562.562 0 00-.56.56c0 .308.252.56.56.56h8.04a.56.56 0 00-.003-1.12zm.003-3.278h-6.737a.562.562 0 00-.56.56c0 .309.252.56.56.56h6.737c.308 0 .56-.251.56-.56a.562.562 0 00-.56-.56zM7.339 5.17c-2.75 0-4.09 1.338-4.09 4.092 0 2.753 1.337 4.092 4.09 4.092 2.751 0 4.09-1.336 4.09-4.092 0-1.446-.32-2.465-.975-3.12-.655-.656-1.675-.973-3.115-.973zm-.003.487a.42.42 0 01.42.42v.476c.35.048.676.16.939.322.199.124.23.283.23.367a.39.39 0 01-.39.39.515.515 0 01-.23-.065 2.176 2.176 0 00-.546-.216v1.485c1.197.202 1.454.913 1.449 1.485 0 .476-.174.876-.502 1.162-.243.21-.568.35-.952.41v.383a.42.42 0 11-.84 0v-.378a2.874 2.874 0 01-1.227-.48.408.408 0 01-.19-.352.4.4 0 01.402-.398c.096.003.185.03.261.084.23.16.487.275.756.345V9.524C5.852 9.297 5.62 8.631 5.62 8.087c0-.815.496-1.38 1.297-1.526v-.485a.42.42 0 01.42-.42zm11.11 4.966h-4.552a.562.562 0 00-.56.56c0 .309.252.56.56.56h4.552c.308 0 .56-.251.56-.56a.562.562 0 00-.56-.56zm-10.687-.96v1.44c.412-.104.656-.373.656-.754 0-.275-.09-.544-.656-.687zm-.84-2.3a.68.68 0 00-.498.689c0 .232.07.479.498.63zm9.742-3.286v1.37c.003.6.135 1.09.373 1.414.238.325.588.482 1.067.485h1.827l-3.268-3.27z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPayInvoiceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.182 2.16a.31.31 0 01.069.008l-.069-.008a.279.279 0 01.184.069.09.09 0 01.015.012l5.336 5.336a.278.278 0 01.082.198v13.209c0 .565-.325.893-.891.893l-.487-.002H7.829c-.59 0-.918-.331-.918-.925v-6.89c-1.463-.05-2.612-.468-3.412-1.239-.888-.857-1.339-2.14-1.339-3.812 0-1.673.451-2.955 1.339-3.813.8-.774 1.95-1.19 3.415-1.238v-.882c0-.577.333-.91.915-.91l.375-.002h.291l.169-.001.59-.001h.22l.988-.001h.268l5.452-.001zm-.28.563H9.471l-.221.001H8.203l-.12.001h-.254c-.271 0-.355.082-.355.351l-.001.88.038.002c1.465.048 2.616.464 3.417 1.238.887.858 1.338 2.14 1.338 3.813 0 1.672-.45 2.955-1.338 3.812-.809.78-1.97 1.197-3.457 1.24v6.889c0 .286.078.364.358.364h13.079c.255 0 .33-.078.333-.333V8.059h-2.597l-.107-.001h-.173l-.12-.002c-.636-.002-1.161-.2-1.552-.567-.506-.474-.787-1.23-.79-2.209V2.723zm2.61 14.765a.28.28 0 01.281.28.28.28 0 01-.28.28h-8.28a.28.28 0 01-.28-.28.28.28 0 01.28-.28h8.28zm.004-3.278a.28.28 0 01.28.28c0 .155-.129.28-.283.28H11.39a.28.28 0 01-.28-.28.28.28 0 01.28-.28h7.126zM7.213 4.513c-1.46 0-2.577.367-3.328 1.087-.775.748-1.168 1.893-1.168 3.409 0 1.515.393 2.66 1.168 3.409.748.722 1.869 1.087 3.328 1.087 1.46 0 2.577-.365 3.328-1.087.773-.748 1.168-1.894 1.168-3.41 0-1.515-.392-2.66-1.168-3.408-.748-.723-1.868-1.087-3.328-1.087zm-.042 1.053a.28.28 0 01.28.28v.302c.406.044.78.165 1.079.35.134.082.207.2.207.326a.337.337 0 01-.336.336.515.515 0 01-.213-.059l-.003-.003a2.306 2.306 0 00-.733-.266L7.45 8.631l.06.008c.728.117 1.54.484 1.54 1.532.005.912-.599 1.515-1.599 1.638v.52a.28.28 0 01-.28.28.28.28 0 01-.28-.28l-.001-.505-.059-.002a3.023 3.023 0 01-1.473-.528.364.364 0 01-.171-.313.348.348 0 01.353-.345.426.426 0 01.232.076c.372.248.746.392 1.118.433V9.26l-.13-.02c-1.188-.213-1.444-.924-1.444-1.497 0-.916.61-1.528 1.574-1.606v-.29a.28.28 0 01.28-.28zm11.342 5.367a.28.28 0 01.28.28.28.28 0 01-.28.28h-5.336a.28.28 0 01-.28-.28.28.28 0 01.28-.28h5.336zM7.453 9.342v1.788c.565-.094.903-.432.903-.928 0-.339-.113-.7-.902-.86zm-1.44-1.639c0 .313.106.683.877.845l.002-1.736c-.547.062-.88.39-.88.891zm13.028-.206h.518l.2.001h1.083l-4.378-4.38V5.28c.002.824.235 2.208 1.778 2.216l.653.001h.146z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPayInvoiceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.093 2.16c.148 0 .291.059.398.165l5.204 5.219a.559.559 0 01.16.341V7.9a.21.21 0 01.002.039V20.72c0 .712-.442 1.154-1.154 1.157h-.266l-.102-.001-.87-.001H7.972c-.367 0-.658-.107-.865-.32-.208-.213-.314-.501-.314-.868v-6.211c-1.373-.09-2.465-.517-3.246-1.271C2.627 12.317 2.16 11 2.16 9.297c0-1.703.468-3.02 1.387-3.907.781-.755 1.873-1.182 3.246-1.271v-.783c0-.722.451-1.17 1.177-1.17l.424-.002h.322l.186-.001h.414l.227-.001h1.018l.277-.001 5.255-.001zm-.561 1.12l-5.076.001h-.258l-1.51.001H8.14l-.093.001h-.074c-.022 0-.042 0-.056.003l-.002.05v.78c1.463.084 2.558.504 3.336 1.28.874.87 1.3 2.148 1.3 3.901 0 1.706-.468 3.02-1.387 3.908-.784.754-1.874 1.181-3.249 1.27v6.214c0 .023 0 .042.002.065.014 0 .034.003.06.003h12.758V8.498h-2.619c-.857 0-1.549-.324-2-.937-.384-.521-.58-1.222-.582-2.079l-.001-2.202zm3.292 13.93a.56.56 0 110 1.12H10.63a.562.562 0 01-.56-.56c0-.307.251-.56.56-.56h8.193zm0-3.277a.56.56 0 110 1.12h-7.101a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h7.1zM7.387 5.222l-.034.002-.032-.002-.213.003C4.534 5.304 3.28 6.638 3.28 9.297c0 2.743 1.334 4.076 4.073 4.076 2.74 0 4.073-1.333 4.073-4.076 0-1.44-.316-2.456-.97-3.109-.647-.648-1.65-.961-3.07-.966zm-.034.465a.42.42 0 01.42.42v.463c.354.049.68.16.947.324.205.126.236.291.236.378a.405.405 0 01-.404.403.54.54 0 01-.238-.064l-.006-.003a2.075 2.075 0 00-.534-.21l-.001 1.455.052.009c1.163.213 1.416.919 1.416 1.488 0 .48-.176.886-.507 1.174-.244.212-.572.353-.96.414v.37a.42.42 0 11-.84 0l-.001-.364a2.873 2.873 0 01-1.235-.484.427.427 0 01-.196-.364.415.415 0 01.417-.412c.095.003.188.03.266.084.248.165.499.28.748.34l-.001-1.54c-1.074-.23-1.31-.905-1.31-1.45 0-.823.502-1.395 1.31-1.54l.001-.471a.42.42 0 01.42-.42zm11.47 4.423a.56.56 0 110 1.12h-4.915a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h4.916zM7.776 9.705v1.41c.402-.102.64-.365.64-.737 0-.268-.087-.532-.64-.673zM6.45 8.082c0 .153 0 .441.483.615V7.409a.67.67 0 00-.483.673zm10.204-4.006v1.4c0 .608.126 1.099.364 1.418.238.32.597.482 1.098.482l1.826-.001-3.288-3.299z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPendriveFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.639 14.214V9.663a.58.58 0 00-.51-.566h-1.515v5.686h1.482a.56.56 0 00.543-.569zm-.557-6.35c.952 0 1.745.799 1.764 1.782v4.566c0 .988-.784 1.795-1.75 1.795h-1.51c-.188.964-1.023 1.695-2.02 1.695h-9.07c-3.448-.126-5.336-2.168-5.336-5.748 0-3.588 1.888-5.625 5.317-5.734h9.075c.983 0 1.807.709 2.011 1.65h.678v-.003h.84v-.003zM6.519 11.136c-.558 0-.92.294-.92.927 0 .305.085.53.233.684.163.165.398.246.687.246.288 0 .526-.081.686-.246.148-.154.232-.379.232-.684.003-.633-.361-.927-.918-.927z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPendriveLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.294 11.33c.504 0 .829.27.829.85 0 .28-.076.484-.21.624-.146.151-.359.224-.622.224-.26 0-.476-.073-.62-.224-.134-.14-.21-.347-.21-.624 0-.58.331-.85.833-.85zm14.728 2.967v-4.72c-.009-.417-.325-.767-.717-.798h-1.762v6.32h1.717c.42 0 .762-.36.762-.802zm-3.289 1.432v-.208h-.014v-7.33c0-.622-.482-1.124-1.075-1.124H7.397c-2.927.096-4.42 1.74-4.42 4.886 0 3.143 1.49 4.792 4.434 4.902h9.247c.593 0 1.075-.505 1.075-1.126zm2.513-7.802c.863 0 1.58.734 1.597 1.642v4.728c0 .908-.712 1.65-1.583 1.65h-1.714c-.104.986-.91 1.756-1.888 1.756h-9.26c-3.385-.126-5.242-2.168-5.242-5.75 0-3.589 1.857-5.625 5.23-5.734h9.26c.961 0 1.757.745 1.88 1.711h.952l-.002-.003h.77z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPendriveRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.519 11.139c.557 0 .918.294.918.927 0 .305-.084.53-.232.683-.163.166-.398.247-.686.247-.289 0-.527-.081-.687-.247-.148-.154-.232-.378-.232-.683 0-.633.364-.927.919-.927zm14.12 3.078V9.665a.578.578 0 00-.51-.565h-1.515v5.686h1.482a.56.56 0 00.543-.569zm-4.073 2.26c.47 0 .852-.394.852-.879V15.4h-.014V8.33c0-.484-.381-.88-.852-.88H7.496c-2.734.088-4.129 1.606-4.129 4.508s1.395 4.423 4.149 4.52h9.05zm3.516-8.61c.952 0 1.745.798 1.764 1.782v4.565c0 .99-.784 1.796-1.75 1.796h-1.51c-.188.964-1.023 1.695-2.02 1.695h-9.07c-3.448-.126-5.336-2.168-5.336-5.751 0-3.588 1.888-5.625 5.317-5.734h9.075c.983 0 1.807.709 2.011 1.65h.678v-.003h.84z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPenFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.78 19.151l-1.663-1.644 9.339-9.238 1.639 1.622-9.314 9.26zm-3.66.919l-1.373-1.342.387-2.473 3.383 3.347-2.397.468zm8.79-14.32l1.686 1.67-9.336 9.238-1.686-1.666L13.91 5.75zm6.69-2.256a10.46 10.46 0 00-.249-.25c-1.37-1.335-3.605-2.002-5.759.13l-11.31 11.19a.615.615 0 00-.124.182l-.022.067c-.009.028-.023.054-.028.084l-.942 6.096a.6.6 0 00.712.68l5.865-1.075c.012 0 .023.005.034.005.11 0 .213-.039.308-.095.009-.003.014-.008.023-.014.033-.022.07-.036.1-.067.006-.006.006-.011.012-.014.005-.006.014-.009.02-.014L20.48 9.22c2.132-2.103 1.46-4.336.12-5.728z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPenLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.925 8.597l-.829.824-4.565-4.516.845-.837c2.037-2.011 3.77-.76 4.423-.126.079.078.163.165.233.235.639.664 1.91 2.423-.107 4.42zM3.267 19.628L4.34 20.69l-1.272.232.2-1.294zM6.13 17.2l-2.014-1.995 9.83-9.723 2.013 1.995L6.13 17.2zm-.804 3.308L3.421 18.62l.395-2.555 4.025 3.98-2.515.463zm3.381-.76L6.715 17.78l9.83-9.722 1.969 1.946-9.807 9.746zM20.631 3.612c-.084-.084-.165-.168-.252-.252-1.33-1.294-3.498-1.938-5.59.132L3.233 14.919a.368.368 0 00-.104.205c-.003.008-.011.014-.011.022L2.16 21.37a.41.41 0 00.484.465l6.02-1.103c.014 0 .028.008.042.008.11 0 .216-.042.294-.12.006-.006.009-.014.014-.023.003-.003.011-.003.014-.005L20.514 9.177c2.67-2.644.566-5.1.117-5.566z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPenRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.616 8.373l-.667.663L14.767 4.9l.683-.678c1.863-1.846 3.448-.7 4.048-.12.073.073.154.154.221.224.583.608 1.745 2.218-.103 4.048zM3.677 19.17l.967.958-1.149.21.182-1.168zm2.577-2.516L4.568 14.99l9.339-9.238 1.683 1.666-9.336 9.238zm-.16 3.208l-2.19-2.168.221-1.44 3.384 3.347-1.414.26zm2.681-.712l-1.664-1.644 9.336-9.238 1.64 1.622c.002 0-9.312 9.26-9.312 9.26zm11.82-15.658a10.46 10.46 0 00-.248-.25c-1.373-1.333-3.605-2.002-5.76.13L3.28 14.563a.526.526 0 00-.123.18.608.608 0 00-.02.067c-.008.028-.022.056-.027.084l-.942 6.1c-.03.194.037.39.18.524a.622.622 0 00.532.16l5.868-1.079c.011 0 .02.006.031.006a.594.594 0 00.305-.095c.012-.006.023-.017.037-.023.03-.02.064-.033.09-.058l.008-.012.02-.016L20.48 9.224c2.126-2.11 1.454-4.342.115-5.731z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPeopleNetworkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 6.426c-.697 0-1.24-.185-1.616-.546-.39-.379-.588-.936-.588-1.664 0-.729.196-1.289.588-1.667C10.6 2.185 11.146 2 11.84 2c.698 0 1.244.185 1.622.549.392.378.591.938.591 1.667 0 .725-.199 1.285-.59 1.664-.379.364-.925.546-1.623.546zM8.17 10.84a.253.253 0 01-.251-.252v-.736c0-.704.218-1.303.633-1.737.45-.47 1.123-.72 1.941-.72h2.695c.82 0 1.493.25 1.944.72.414.434.635 1.033.635 1.737v.736a.253.253 0 01-.252.252H8.171zm-2.248 6.432c-.698 0-1.241-.185-1.617-.547-.392-.378-.588-.935-.588-1.663 0-.729.196-1.286.588-1.667.376-.364.922-.552 1.62-.552.697 0 1.243.185 1.621.55.392.377.591.938.591 1.666 0 .725-.199 1.286-.594 1.664-.378.367-.924.549-1.621.549zm1.347.969c.818 0 1.49.25 1.944.72.417.434.636 1.033.636 1.736v.737c0 .14-.112.252-.252.252H2.252A.251.251 0 012 21.434v-.737c0-.703.218-1.305.633-1.736.451-.47 1.123-.723 1.941-.723H7.27v.003zm8.871-1.521c-.392-.378-.591-.936-.591-1.664 0-.728.199-1.289.588-1.667.376-.364.922-.549 1.62-.549.697 0 1.243.185 1.621.55.392.377.591.94.591 1.666 0 .725-.202 1.286-.594 1.664-.378.364-.921.546-1.622.546-.7 0-1.238-.185-1.613-.546zm4.91 2.235c.418.434.636 1.034.636 1.737v.737a.253.253 0 01-.252.252h-7.347a.253.253 0 01-.252-.252v-.737c0-.703.218-1.305.633-1.737.45-.47 1.123-.72 1.94-.72h2.693c.823 0 1.496.25 1.95.72zM14.5 16.34a.621.621 0 01-.858.207l-1.817-1.112-1.818 1.112a.622.622 0 01-.86-.207.627.627 0 01.207-.86l1.843-1.129v-2.143a.625.625 0 011.25 0v2.143l1.842 1.129c.297.18.393.563.21.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPeopleNetworkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.957 3.305c-.224.215-.336.574-.336 1.067s.112.849.334 1.064c.215.208.565.314 1.042.314.476 0 .826-.106 1.044-.314.224-.213.337-.571.337-1.061 0-.493-.115-.852-.34-1.067-.218-.21-.568-.317-1.041-.317-.474 0-.824.106-1.04.314zm1.04 3.277c-.698 0-1.241-.185-1.617-.546-.392-.378-.59-.936-.59-1.664 0-.728.198-1.289.59-1.667.376-.364.92-.549 1.617-.549s1.243.185 1.621.55c.393.377.591.94.591 1.666 0 .725-.198 1.286-.59 1.664-.379.361-.925.546-1.622.546zM8.91 10.008v.154h6.182v-.154c0-.336-.07-.813-.404-1.16-.37-.386-.935-.465-1.341-.465h-2.695c-.409 0-.972.081-1.342.465-.333.345-.4.824-.4 1.16zm-.583.989a.253.253 0 01-.252-.253v-.736c0-.703.219-1.306.633-1.737.451-.47 1.123-.72 1.941-.72h2.695c.818 0 1.49.25 1.944.72.414.434.636 1.034.636 1.737v.736c0 .138-.112.25-.25.253H8.327zM5.04 14.15c-.222.215-.334.574-.334 1.067s.112.849.334 1.064c.215.208.565.314 1.042.314.476 0 .826-.104 1.042-.314.224-.215.336-.571.336-1.061s-.112-.85-.336-1.065c-.219-.21-.569-.316-1.042-.316-.477-.003-.827.103-1.042.31zm1.039 3.277c-.698 0-1.241-.185-1.62-.546-.391-.378-.587-.936-.587-1.664 0-.726.198-1.286.588-1.664.375-.364.921-.549 1.619-.549.697 0 1.244.185 1.619.549.392.378.59.941.59 1.667 0 .725-.198 1.285-.59 1.664-.375.358-.919.543-1.62.543zm3.095 3.58v-.154c0-.336-.07-.813-.403-1.157-.37-.384-.936-.465-1.345-.465H4.733c-.409 0-.975.081-1.339.465-.333.347-.4.82-.4 1.16v.154c-.003-.003 6.18-.003 6.18-.003zm-1.748-2.61c.82 0 1.493.248 1.944.719.418.434.636 1.036.636 1.737v.736c0 .14-.112.253-.252.253H2.408a.251.251 0 01-.252-.253v-.736c0-.703.219-1.303.633-1.737.451-.47 1.124-.723 1.941-.723l2.695.003zm9.451-4.253c-.221.216-.333.574-.333 1.067s.112.849.333 1.062c.216.207.566.314 1.04.314.476 0 .826-.107 1.044-.314.224-.216.336-.572.336-1.062 0-.493-.112-.848-.336-1.067-.218-.207-.568-.314-1.045-.314-.473 0-.823.107-1.039.314zm-.58 2.731c-.392-.378-.588-.935-.588-1.664 0-.728.196-1.288.588-1.666.376-.365.922-.55 1.617-.55.697 0 1.243.185 1.621.55.395.378.591.938.591 1.666 0 .726-.198 1.286-.59 1.664-.379.361-.922.546-1.622.546-.695 0-1.241-.185-1.617-.546zm4.715 4.126v-.154c0-.336-.07-.812-.404-1.157-.37-.383-.935-.465-1.344-.465H16.57c-.41 0-.972.082-1.34.465-.332.348-.4.821-.4 1.16v.154h6.18v-.003zm.193-1.89c.417.434.639 1.033.639 1.736v.737c0 .14-.113.252-.253.252h-7.344a.251.251 0 01-.252-.252v-.737c0-.703.218-1.305.633-1.737.45-.47 1.123-.72 1.941-.72h2.695c.818 0 1.49.25 1.94.72zm-6.726-2.726a.418.418 0 01-.571.14l-1.924-1.176-1.925 1.176a.414.414 0 01-.571-.137.414.414 0 01.137-.572l1.944-1.19v-2.258a.418.418 0 01.835 0v2.258l1.94 1.188a.42.42 0 01.135.57z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPeopleNetworkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.09 3.448c-.171.165-.208.51-.208.768 0 .21.026.588.208.762.176.17.546.196.75.196.205 0 .577-.026.757-.2.17-.164.207-.503.207-.758 0-.258-.037-.6-.21-.768-.171-.165-.504-.199-.756-.199-.202.003-.57.028-.748.2zm.75 2.978c-.697 0-1.24-.182-1.616-.546-.392-.379-.588-.936-.588-1.664 0-.726.196-1.289.588-1.664.373-.367.919-.552 1.616-.552.698 0 1.244.185 1.622.549.392.378.591.941.591 1.667 0 .725-.199 1.285-.59 1.664-.379.364-.925.546-1.623.546zM9.454 8.98a1.08 1.08 0 00-.266.608H14.5c-.03-.21-.103-.434-.269-.605-.266-.28-.714-.336-1.044-.336h-2.692c-.33 0-.776.056-1.042.333zm-1.286 1.86a.25.25 0 01-.25-.252v-.736c0-.704.22-1.306.634-1.737.45-.474 1.123-.72 1.941-.72h2.692c.82 0 1.49.25 1.944.72.417.431.638 1.033.638 1.737v.736a.252.252 0 01-.249.252h-7.35zm-2.997 3.457c-.171.165-.207.51-.207.767 0 .258.036.597.207.762.176.171.546.196.75.196.205 0 .578-.025.757-.198.17-.166.207-.505.207-.76 0-.257-.036-.599-.21-.767-.17-.165-.504-.199-.753-.199-.205 0-.572.025-.751.199zm.75 2.975c-.697 0-1.24-.185-1.616-.547-.392-.375-.588-.935-.588-1.663 0-.726.196-1.289.588-1.667.378-.364.922-.55 1.62-.55.697 0 1.243.186 1.621.55.392.38.591.941.591 1.667 0 .725-.199 1.285-.594 1.663-.378.365-.924.547-1.621.547zm-2.655 3.162H8.58a1.095 1.095 0 00-.27-.608c-.268-.28-.716-.336-1.044-.336H4.574c-.328 0-.773.059-1.039.336-.165.171-.238.398-.269.608zm4.003-2.193c.818 0 1.49.25 1.944.72.417.434.636 1.036.636 1.74v.733a.25.25 0 01-.25.252H2.252A.253.253 0 012 21.434v-.737c0-.703.218-1.305.63-1.736.451-.47 1.123-.723 1.941-.723l2.698.003zm9.742-3.953c-.17.169-.207.51-.207.768 0 .21.025.588.207.762.177.17.546.196.75.196.205 0 .578-.025.757-.199.171-.165.207-.504.207-.759 0-.258-.036-.6-.21-.768-.17-.165-.504-.198-.753-.198-.207.002-.574.028-.75.198zm-.871 2.432c-.392-.378-.588-.936-.588-1.664 0-.728.196-1.289.588-1.664.375-.367.922-.552 1.62-.552.697 0 1.243.185 1.62.55.393.377.592.94.592 1.666 0 .725-.199 1.286-.594 1.664-.375.364-.921.546-1.619.546-.697 0-1.24-.185-1.619-.546zm-1.034 3.709h5.314a1.095 1.095 0 00-.269-.608c-.269-.28-.717-.336-1.045-.336h-2.694c-.328 0-.773.058-1.04.336-.165.17-.238.397-.266.608zm5.944-1.474c.418.434.636 1.037.636 1.737v.737a.252.252 0 01-.25.252h-7.35a.25.25 0 01-.248-.252v-.737c0-.703.218-1.303.63-1.737.45-.47 1.123-.72 1.94-.72h2.696c.823 0 1.493.25 1.946.72zM14.5 16.34a.626.626 0 01-.86.207l-1.815-1.112-1.818 1.112a.625.625 0 01-.858-.204s0-.003-.002-.003a.627.627 0 01.207-.86l1.843-1.129v-2.14a.625.625 0 011.25 0v2.14l1.842 1.129c.297.182.39.566.21.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPercentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.923 7.856a.575.575 0 00-.907-.706l-6.944 8.927a.572.572 0 00.45.927.57.57 0 00.454-.221l6.947-8.927zm-1.608 8.627c1.045 0 1.656-.526 1.656-1.655s-.61-1.656-1.656-1.656c-1.045 0-1.655.527-1.655 1.656s.608 1.655 1.655 1.655zM9.671 7.626c-1.048 0-1.655.53-1.655 1.656s.607 1.655 1.655 1.655c1.045 0 1.655-.53 1.655-1.655 0-1.13-.61-1.656-1.655-1.656zm2.32-5.476c6.218 0 9.845 3.14 9.845 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84 0-6.706 3.622-9.846 9.84-9.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPercentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.992 21.02c5.99 0 9.027-3.035 9.027-9.022 0-5.99-3.037-9.027-9.027-9.027-5.987 0-9.021 3.037-9.021 9.027 0 5.987 3.034 9.021 9.021 9.021zm0-18.87c6.22 0 9.848 3.14 9.848 9.848 0 6.707-3.628 9.842-9.848 9.842-6.22 0-9.842-3.135-9.842-9.842 0-6.707 3.623-9.848 9.842-9.848zm2.326 13.54c.633 0 .837-.204.837-.835 0-.633-.204-.837-.837-.837-.634 0-.835.204-.835.837 0 .634.201.835.835.835zm0-2.49c1.045 0 1.658.53 1.658 1.658 0 1.127-.61 1.656-1.658 1.656-1.045 0-1.656-.53-1.656-1.656s.608-1.658 1.656-1.658zM9.672 8.473c-.63 0-.834.205-.834.838 0 .63.204.835.834.835.634 0 .838-.202.838-.835-.003-.636-.207-.838-.838-.838zm0 2.491c-1.045 0-1.655-.527-1.655-1.656s.61-1.658 1.655-1.658 1.659.53 1.659 1.658c0 1.13-.614 1.656-1.659 1.656zm6.052-3.757a.41.41 0 01.073.574l-6.945 8.932a.41.41 0 01-.648-.502l6.943-8.934a.407.407 0 01.571-.076l.006.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPercentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.315 15.335c.457 0 .51-.053.51-.507 0-.451-.056-.507-.51-.507-.456 0-.507.05-.507.507 0 .454.05.507.507.507zm0-2.163c1.045 0 1.659.53 1.659 1.659s-.611 1.655-1.659 1.655c-1.045 0-1.655-.526-1.655-1.655 0-1.132.608-1.659 1.655-1.659zM9.671 8.775c-.457 0-.507.05-.507.507 0 .453.05.507.507.507s.507-.05.507-.507c0-.451-.056-.507-.507-.507zm0 2.162c-1.048 0-1.655-.53-1.655-1.655 0-1.13.61-1.659 1.655-1.659s1.658.53 1.658 1.659c0 1.128-.613 1.655-1.658 1.655zm5.345-3.787a.571.571 0 01.8-.104l.003.003c.25.193.297.555.101.804l-6.94 8.93a.575.575 0 11-.908-.706l6.944-8.927zM11.99 20.607c5.796 0 8.617-2.818 8.617-8.611 0-5.798-2.818-8.616-8.617-8.616-5.792 0-8.61 2.818-8.61 8.616 0 5.793 2.818 8.61 8.61 8.61zm0-18.457c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84 0-6.706 3.622-9.846 9.84-9.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonalComputerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.843 6.5c.81 0 1.443.224 1.877.667.423.428.636 1.039.636 1.815v4.28c0 1.59-.916 2.501-2.513 2.501l-2.203.001.557.575 3.621-.001a.55.55 0 010 1.098L2.71 17.44a.55.55 0 010-1.098l3.531-.002.548-.574-2.104.002c-1.597 0-2.513-.91-2.513-2.501v-4.28c0-.777.213-1.387.636-1.816.434-.442 1.067-.666 1.877-.666l9.16-.006zm6.516.006c.434 0 1.448.196 1.448 2.014l.003 6.88c.003 1.823-1.011 2.019-1.446 2.019h-1.997a1.28 1.28 0 01-1.12-.61c-.213-.34-.317-.8-.317-1.407l-.005-6.88c0-.607.103-1.067.316-1.406.25-.392.647-.61 1.12-.61h1.998zm-10.247 9.259l-1.806.001-.549.575 2.912-.002-.557-.574z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonalComputerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.51 6.531c.495 0 1.327.238 1.327 1.843l.003 7.241c0 1.605-.832 1.843-1.328 1.843h-2.283c-.493 0-1.316-.238-1.316-1.843l-.003-7.24c0-1.603.823-1.844 1.316-1.844h2.283zm-6.474 0c.767 0 1.358.21 1.756.625.384.4.58.98.58 1.725v4.56c0 1.527-.83 2.37-2.336 2.37l-2.644.001 1.07 1.084h3.633c.154 0 .277.123.277.277a.276.276 0 01-.277.277l-3.711.004a.286.286 0 01-.034.002l-.036-.005-9.88.005a.276.276 0 01-.278-.278c0-.154.123-.277.278-.277l3.543-.002 1.058-1.087-2.543.002c-1.507 0-2.336-.84-2.336-2.37V8.887c0-.745.196-1.325.58-1.725.398-.415.989-.625 1.756-.625l9.544-.006zm-3.418 9.281H7.811l-1.059 1.086h4.931l-1.05-1.067-.015-.019zm9.918-8.72h-2.31c-.207 0-.756 0-.756 1.282l.003 7.241c0 1.222.498 1.28.724 1.283h2.315c.19 0 .767 0 .767-1.283l-.005-7.24c0-1.222-.523-1.28-.738-1.283zm-6.5-.003l-9.544.005c-.61 0-1.067.154-1.358.454-.283.294-.426.745-.426 1.339v4.56c0 1.222.583 1.815 1.782 1.815l9.543-.005c1.199 0 1.782-.594 1.782-1.815v-4.56c0-.597-.143-1.048-.426-1.34-.286-.302-.743-.453-1.353-.453z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonalComputerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.843 6.5c.81 0 1.443.224 1.877.667.423.428.636 1.039.636 1.815v4.28c0 1.588-.916 2.501-2.513 2.501l-2.203.001.557.575 3.621-.001a.55.55 0 010 1.098L2.71 17.44a.55.55 0 010-1.098l3.535-.002.549-.574-2.11.002c-1.596 0-2.512-.91-2.512-2.501v-4.28c0-.777.213-1.387.636-1.816.434-.442 1.067-.666 1.877-.666l9.16-.006zm6.519.006c.434 0 1.448.196 1.448 2.016l.003 6.88c0 1.82-1.014 2.017-1.449 2.017h-1.997a1.28 1.28 0 01-1.12-.61c-.213-.34-.317-.8-.317-1.407l-.005-6.88c0-.607.103-1.067.319-1.406.25-.392.647-.61 1.12-.61h1.998zm-1.998 1.061c-.126 0-.176.04-.22.115-.06.093-.155.322-.155.84l.003 6.88c0 .518.095.748.154.84.048.076.095.115.221.115h1.997c.13 0 .18-.042.23-.118.059-.092.157-.322.157-.834l-.003-6.88c0-.515-.098-.745-.157-.837-.047-.076-.1-.118-.23-.118h-1.997v-.003zm-8.252 8.198l-1.8.001-.549.575 2.906-.002-.557-.574zm3.731-8.19l-9.16.006c-1.008 0-1.436.42-1.436 1.406v4.28c0 1 .431 1.426 1.437 1.426l9.16-.005c1.008 0 1.436-.426 1.436-1.426v-4.28c0-.986-.428-1.406-1.437-1.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.304 14.048a1.52 1.52 0 01-1.079 1.857 1.509 1.509 0 01-1.196-.168v4.594c0 .863-.619 1.515-1.44 1.515-.818 0-1.434-.652-1.434-1.515v-4.454h-.28v4.454c0 .865-.597 1.493-1.415 1.493-.823 0-1.445-.642-1.445-1.493v-4.594l-.04.025a1.521 1.521 0 01-1.162.14 1.516 1.516 0 01-1.072-1.851l1.154-4.21a.885.885 0 01.047-.146c.286-1.294 1.46-2.23 2.801-2.23h2.563c1.342 0 2.513.933 2.799 2.224a.85.85 0 01.059.188c0 .006 1.14 4.171 1.14 4.171zm-5.527-6.93c-1.563 0-2.499-.927-2.499-2.476 0-.793.23-1.415.684-1.849.44-.42 1.05-.633 1.815-.633.767 0 1.378.213 1.815.63.454.434.686 1.056.686 1.849 0 1.552-.932 2.476-2.501 2.479z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.603 3.333c-.26.243-.39.63-.39 1.151 0 1.022.49 1.501 1.544 1.501 1.056 0 1.549-.476 1.549-1.501 0-.518-.132-.905-.392-1.148-.252-.239-.639-.359-1.154-.359-.518 0-.905.12-1.157.356zm1.154 3.47c-1.515 0-2.387-.846-2.387-2.319 0-.75.219-1.336.648-1.74.411-.389.997-.588 1.739-.588.74 0 1.325.2 1.74.588.43.404.65.99.65 1.74 0 1.473-.872 2.32-2.39 2.32zm4.345 8.188a.526.526 0 00.383-.633c0-.003 0-.006-.003-.008l-1.196-4.289a.802.802 0 01-.042-.115.633.633 0 00-.016-.056c-.18-.865-.975-1.493-1.888-1.493h-2.664c-.91 0-1.706.628-1.888 1.493-.003.014-.009.025-.011.037a.308.308 0 01-.034.092l-1.21 4.336a.523.523 0 00.372.636h.006c.137.04.283.022.406-.05a.502.502 0 00.247-.309l.532-2.865c.04-.21.224-.347.454-.336a.414.414 0 01.383.409v8.655a.53.53 0 001.062 0v-5.157c0-.227.188-.409.42-.409h1.188c.232 0 .423.185.423.41v5.159a.53.53 0 00.532.527.53.53 0 00.53-.527v-8.655c0-.213.168-.39.383-.41.227-.008.412.127.451.337l.538 2.893a.512.512 0 00.241.278c.12.07.266.086.4.05zm1.196-.854a1.341 1.341 0 01-.956 1.641c-.005 0-.008.003-.014.003a1.396 1.396 0 01-1.4-.41v5.124c0 .742-.616 1.348-1.373 1.348a1.36 1.36 0 01-1.372-1.348v-4.748h-.336v4.751c0 .742-.617 1.347-1.373 1.347s-1.372-.605-1.372-1.347v-5.126a1.39 1.39 0 01-1.404.409 1.34 1.34 0 01-.969-1.63l.003-.009L7.93 9.848a.825.825 0 01.047-.14c.27-1.238 1.406-2.132 2.709-2.132h2.664c1.302 0 2.437.894 2.706 2.126a.868.868 0 01.056.171l1.185 4.264z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPersonRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.903 14.745a.313.313 0 00.224-.383l-1.149-4.2a.59.59 0 01-.047-.14c-.003-.013-.009-.027-.012-.041a1.651 1.651 0 00-1.616-1.303H10.74a1.654 1.654 0 00-1.63 1.348.73.73 0 01-.045.131l-1.151 4.21a.311.311 0 00.218.378.301.301 0 00.238-.028.295.295 0 00.143-.182l.507-2.787a.602.602 0 01.653-.493.605.605 0 01.555.6v8.481c0 .132.039.289.23.289.055 0 .198 0 .198-.289V15.28c0-.333.272-.602.608-.602h1.496c.336 0 .608.27.608.602v5.056c0 .073.016.309.218.309.207 0 .224-.239.224-.309v-8.481c0-.311.241-.572.552-.6a.616.616 0 01.653.493l.518 2.838c.017.056.09.109.132.134a.36.36 0 00.238.025zm1.4-.694a1.517 1.517 0 01-1.078 1.857 1.5 1.5 0 01-1.157-.146c-.014-.008-.028-.014-.04-.022v4.594c0 .862-.618 1.515-1.44 1.515-.817 0-1.433-.653-1.433-1.515V15.88h-.28v4.454c0 .865-.594 1.493-1.415 1.493-.823 0-1.445-.642-1.445-1.493V15.74l-.04.025a1.52 1.52 0 01-1.162.143 1.518 1.518 0 01-1.073-1.852l1.151-4.21a.77.77 0 01.048-.145c.286-1.295 1.46-2.227 2.801-2.227h2.563c1.342 0 2.513.932 2.799 2.224.028.064.044.126.058.187l1.143 4.166zM10.81 3.66c-.207.2-.314.53-.314.984 0 .888.384 1.269 1.28 1.269.903 0 1.286-.381 1.286-1.27 0-.45-.106-.78-.313-.983-.205-.196-.533-.294-.972-.294-.44 0-.765.098-.967.294zm.967 3.457c-1.563 0-2.499-.927-2.499-2.476 0-.793.23-1.412.683-1.849.437-.42 1.048-.633 1.813-.633.767 0 1.378.213 1.815.633.454.434.686 1.056.686 1.849.003 1.552-.93 2.476-2.498 2.476z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPharmacyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.392 16.924a3.535 3.535 0 01-1.37.645c.961-.6 1.482-1.345 1.482-2.446 0-1.061-.804-1.773-1.54-2.187.137-.126.268-.26.392-.401.115.05.213.112.31.185.085.062.163.118.244.165.737.429 1.233 1.241 1.297 2.118.025.454-.036 1.302-.815 1.921m-4.227.678v-3.437a5.078 5.078 0 001.745-.512c.524.19 1.496.73 1.496 1.473-.003.938-.507 1.583-3.24 2.476M6.59 6.681c.185-1.06.882-2.037 1.919-2.684 2.65-1.652 5.103-.23 5.232-.154.006.003.737.41.86 1.098.076.418-.09.89-.493 1.406-.16-.137-.336-.551-.378-1.341a.58.58 0 00-.23-.435c-.072-.053-1.764-1.319-4.283-.098-.882.426-1.5.944-1.862 2.216a3.245 3.245 0 00.084 1.978v.784c0 .14.011.274.022.409-.857-.966-1.033-2.233-.871-3.18m12.706 8.25c-.09-1.233-.793-2.375-1.835-2.986-.05-.028-.095-.064-.145-.1a3.24 3.24 0 00-.348-.23 4.776 4.776 0 00.485-2.07l.003-.88a.585.585 0 00-.586-.586H8.493a2.04 2.04 0 01-.003-1.07c.27-.95.684-1.21 1.241-1.481 1.417-.684 2.437-.348 2.852-.146.095.947.389 1.597.87 1.938.387.272.819.283 1.07.208a.578.578 0 00.273-.171c.792-.888 1.117-1.768.963-2.622-.224-1.252-1.414-1.9-1.434-1.91C14.196 2.745 11.162.96 7.888 3c-1.32.82-2.213 2.09-2.454 3.479-.28 1.602.185 3.919 2.404 5.174.044.025.092.022.137.036.725 1.395 2.154 2.303 4.014 2.473v4.678c-1.084.224-1.7 1.023-1.7 2.286 0 .325.263.585.588.585h3.532a.588.588 0 00.588-.585c0-1.314-.658-2.134-1.832-2.316v-.118c.126.025.698.134 1.462.134 1.02 0 2.379-.193 3.446-1.042.86-.683 1.305-1.722 1.224-2.854"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPharmacyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.22 17.14c-.56.41-1.266.625-1.939.731 1.41-.72 2.101-1.66 2.101-2.846 0-1.157-1.131-1.837-1.955-2.182.221-.173.426-.37.614-.582.092.053.182.103.26.15.146.088.277.166.415.236.753.384 1.313 1.32 1.397 2.322.07.913-.252 1.703-.893 2.171m-4.47.77a.454.454 0 00-.2.12v-4.094a5.345 5.345 0 001.986-.535c.76.215 2.003.781 2.003 1.624 0 1.292-1.238 2.233-3.79 2.885m.897 3.112h-2.891c.118-.714.577-1.036 1.445-1.036.869 0 1.328.322 1.446 1.036M7.662 9.168v-.414h8.656v.498c-.042 2.544-2.104 3.877-4.12 3.877-2.177.003-4.513-1.04-4.536-3.96M5.923 6.534c.199-1.087.947-2.087 2.056-2.748 2.826-1.683 5.437-.23 5.56-.16.011.006.975.547 1.12 1.401.08.47-.103.978-.54 1.507-.272-.132-.76-.549-.83-1.851a.412.412 0 00-.173-.311c-.087-.062-2.145-1.46-4.507-.054-1.008.6-1.65 1.429-1.815 2.334-.076.414-.137 1.017.042 1.624-.003.023-.014.045-.014.068v.826c.003.221.02.434.045.641-.815-.935-1.16-2.086-.944-3.277m13.025 8.37c-.106-1.294-.832-2.465-1.849-2.983-.12-.062-.235-.132-.364-.208-.064-.042-.137-.08-.21-.126a4.634 4.634 0 00.63-2.322l.003-.921a.414.414 0 00-.42-.41H7.604c-.07-.313-.068-.68.016-1.137.166-.904.961-1.501 1.426-1.776 1.56-.932 2.955-.33 3.418-.075.212 2.336 1.7 2.465 1.764 2.468a.437.437 0 00.342-.132c.742-.796 1.053-1.597.916-2.387-.21-1.26-1.487-1.96-1.532-1.983-.126-.073-3.146-1.773-6.418.174-1.313.781-2.204 1.989-2.442 3.305-.334 1.832.409 3.583 2.036 4.807.04.028.087.028.132.042.725 1.574 2.308 2.563 4.445 2.692v5.266c-1.168.168-1.826.96-1.826 2.232 0 .227.188.412.42.412h3.793a.416.416 0 00.42-.409c0-1.322-.714-2.117-1.966-2.243v-.603a.421.421 0 00.24.126 8.5 8.5 0 001.222.079c1.056 0 2.582-.168 3.711-.992.88-.644 1.325-1.697 1.227-2.896"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPharmacyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.305 16.894c-.336.266-.72.45-1.112.571.835-.583 1.286-1.305 1.286-2.339 0-1.073-.807-1.793-1.546-2.213.117-.106.23-.221.336-.344.115.05.21.109.314.184.084.062.162.12.246.169.723.423 1.21 1.224 1.272 2.09.03.439-.031 1.274-.796 1.882m-4.187.666v-3.392a5.006 5.006 0 001.689-.487c.501.17 1.501.703 1.501 1.445 0 .919-.501 1.552-3.19 2.434m.571 2.98h-2.185c.146-.417.49-.596 1.093-.596.602 0 .946.18 1.092.597M8.577 9.448v-.196h7.644v.275c-.036 2.297-1.851 3.498-3.63 3.498-1.924 0-3.992-.941-4.014-3.577M6.56 6.681c.185-1.06.883-2.037 1.913-2.684 2.642-1.652 5.09-.23 5.216-.157.008.003.742.415.86 1.104.073.417-.092.888-.49 1.4-.079-.067-.328-.355-.378-1.341a.587.587 0 00-.227-.434c-.07-.054-1.765-1.317-4.275-.101-.88.426-1.496.944-1.854 2.215a3.253 3.253 0 00.081 1.978l.003.003v.784c0 .14.011.275.022.41-.857-.964-1.033-2.23-.87-3.177m12.708 8.246c-.09-1.244-.798-2.4-1.849-3.017-.047-.028-.092-.064-.14-.098a3.612 3.612 0 00-.35-.232c.302-.636.462-1.33.465-2.037l.003-.88a.585.585 0 00-.586-.585H8.454a2.04 2.04 0 01-.003-1.07c.269-.946.683-1.21 1.238-1.481 1.415-.684 2.431-.348 2.846-.146.095.947.387 1.597.868 1.936.384.271.815.282 1.068.207a.6.6 0 00.274-.171c.79-.885 1.112-1.768.96-2.622-.223-1.252-1.41-1.9-1.433-1.91-.126-.079-3.149-1.863-6.418.179-1.316.824-2.207 2.09-2.448 3.479-.277 1.602.185 3.919 2.398 5.174.045.025.092.022.14.036.723 1.395 2.148 2.3 4.003 2.473v4.675c-1.084.225-1.695 1.026-1.695 2.286 0 .325.263.586.586.586h3.52a.585.585 0 00.586-.586c0-1.314-.658-2.134-1.826-2.32v-.078c.479.09.969.135 1.456.132 1.025 0 2.39-.196 3.462-1.05.863-.684 1.314-1.737 1.233-2.88"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPhotoCameraLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.091 14.765c1.622-.03 1.622-1.342 1.622-1.773 0-.431 0-1.748-1.638-1.787-.06-.003-.127-.003-.19-.003h-.049c-1.59.014-1.59 1.339-1.59 1.773 0 .437 0 1.768 1.616 1.793h.075l.154-.003zm.012-4.756c.574.014 2.812.243 2.812 2.983 0 2.745-2.241 2.958-2.804 2.97l-.174.002h-.095c-.588-.008-2.801-.224-2.801-2.986 0-2.756 2.193-2.96 2.781-2.966h.06c.075-.006.153-.006.22-.003zm8.324 8.039c.16-.17.174-.515.169-.58l-.003-8.927c0-.277-.06-.476-.18-.591a.575.575 0 00-.336-.143l-5.59-.003a.604.604 0 01-.522-.297l-.989-1.689-2.168.006-.798 1.647a.604.604 0 01-.54.336c-2.583 0-4.77 0-5.32.006-.31.002-.53.07-.647.204-.16.18-.146.46-.143.462l.028 8.956c.023.733.404.728.415.733l16.266.003c.221-.005.31-.073.358-.123zm1.373-.62c.006.051.042.87-.493 1.435-.213.227-.602.496-1.238.496l-16.25-.003c-.462 0-1.585-.31-1.632-1.91L2.16 8.538c-.005-.02-.067-.75.446-1.325.246-.271.711-.6 1.538-.602.52-.003 2.529-.006 4.95-.006L9.74 5.29a1.18 1.18 0 011.067-.664h2.183c.42 0 .815.227 1.028.591l.812 1.39 5.235.005c.056.011.695.003 1.19.485.247.24.541.686.541 1.445v8.888h.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.144 11.172l-3.213 3.213c-.03.006-.062 0-.095.011-1.482.474-3.126-.767-4.25-1.89-1.666-1.667-2.26-3.14-1.815-4.508.009-.028.006-.056.011-.08L12.29 5.41c.084-.095.177-.185.27-.272l.173-.168c1.034-1.033 2.076-1.568 3.098-1.585h.056c1.04 0 2.1.535 3.154 1.588 2.09 2.087 2.12 4.118.104 6.2zm.762-7.067c-1.317-1.317-2.723-1.972-4.101-1.944-1.35.025-2.675.68-3.941 1.944l-.154.145a4.412 4.412 0 00-.323.328l-6.775 6.779a5.193 5.193 0 00-.362.353l-.145.151c-1.267 1.266-1.92 2.591-1.944 3.939-.023 1.4.63 2.778 1.95 4.095 1.299 1.3 2.669 1.95 4.033 1.95 1.274 0 2.543-.566 3.75-1.695.068-.056.127-.118.19-.185l7.93-7.933c2.485-2.56 2.446-5.375-.108-7.927z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.114 14.636a.44.44 0 00-.134.014c-1.294.412-2.827-.252-4.555-1.983-1.72-1.72-2.33-3.614-1.927-4.902.02-.068.899-.947 2.636-2.639.09-.104.19-.196.291-.294l.17-.168c1.121-1.118 2.247-1.678 3.373-1.678 1.127 0 2.253.56 3.37 1.678 2.205 2.204 2.238 4.437.107 6.639l-3.33 3.333zm-4.706 4.706l-.081.081c-.04.045-.084.087-.129.126-2.162 2.025-4.358 1.955-6.53-.213-2.237-2.238-2.24-4.504-.008-6.737l.171-.179c.095-.1.188-.199.311-.305l3.356-3.356c-.053 1.381.717 2.888 2.33 4.501 1.538 1.541 2.986 2.323 4.314 2.345l-3.734 3.737zm.597-15.266l-.16.15c-.12.119-.24.23-.325.331L4.582 11.5a5.755 5.755 0 00-.35.344l-.16.163c-2.552 2.551-2.549 5.364.006 7.918 1.28 1.283 2.63 1.922 3.975 1.922 1.257 0 2.51-.557 3.7-1.672.064-.054.12-.112.18-.177l8.106-8.106c2.445-2.524 2.406-5.3-.113-7.813-2.551-2.557-5.364-2.557-7.921-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.144 11.172l-3.213 3.213c-.03.006-.062 0-.095.011-1.48.474-3.126-.767-4.25-1.89-1.666-1.667-2.26-3.14-1.815-4.508.009-.028.006-.056.011-.08L12.29 5.41c.084-.095.177-.185.27-.272l.173-.168c1.034-1.033 2.076-1.568 3.098-1.585h.056c1.04 0 2.1.535 3.154 1.588 2.09 2.087 2.12 4.118.104 6.2zm-7.863 7.863l-.084.087c-.03.033-.059.064-.115.114-2.05 1.922-4.045 1.852-6.104-.204-1.072-1.073-1.607-2.151-1.588-3.207.017-1.02.552-2.062 1.586-3.096l.168-.173a4.63 4.63 0 01.305-.3l2.98-2.98c.115 1.322.866 2.675 2.292 4.1 1.372 1.373 2.68 2.149 3.902 2.32l-3.342 3.339zm8.625-14.93c-1.317-1.317-2.723-1.972-4.101-1.944-1.35.025-2.675.68-3.941 1.944l-.154.145a4.412 4.412 0 00-.323.328l-6.775 6.779a5.193 5.193 0 00-.362.353l-.145.151c-1.267 1.266-1.92 2.591-1.944 3.939-.023 1.4.63 2.778 1.95 4.095 1.299 1.3 2.669 1.95 4.033 1.95 1.274 0 2.543-.566 3.75-1.695.068-.056.13-.118.19-.185l7.93-7.933c2.485-2.56 2.446-5.375-.108-7.927z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.099 20.6c-2.852 0-4.275-1.255-4.465-3.894h8.933c-.194 2.641-1.616 3.893-4.468 3.893zM11.746 5.296c.078-.09.165-.171.252-.255l.163-.157c1.972-1.977 3.888-1.975 5.857 0 1.91 1.913 1.96 3.776.17 5.686a8.166 8.166 0 00-2.086-.249c-2.19 0-3.729.664-4.658 1.888-.149-.134-.297-.266-.449-.417-1.512-1.516-2.106-2.84-1.767-3.933.005-.014 0-.028.005-.042l2.513-2.521zm8.82 10.165h-8.932c.193-2.638 1.616-3.893 4.465-3.893 2.852 0 4.274 1.252 4.468 3.893zm-1.145-4.398c1.913-2.302 1.737-4.79-.527-7.058-2.453-2.46-5.16-2.463-7.613 0l-.143.137c-.117.112-.232.221-.302.308l-6.359 6.378c-.118.101-.23.219-.342.336l-.137.14c-1.199 1.2-1.815 2.46-1.837 3.74-.023 1.33.596 2.638 1.843 3.888 1.23 1.235 2.526 1.851 3.82 1.851 1.11 0 2.213-.46 3.272-1.367.869 1.563 2.513 2.426 5.006 2.426 3.916 0 5.748-2.126 5.748-5.762-.003-2.38-.79-4.106-2.429-5.017z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.037 21.006c-2.4 0-3.902-.858-4.565-2.572a.4.4 0 00-.107-.252c-.168-.52-.25-1.132-.277-1.801a.413.413 0 00.201.059h9.496c.076 0 .14-.025.2-.06-.119 3.102-1.73 4.626-4.948 4.626zM4.553 18.16c-1.05-1.054-1.574-2.12-1.555-3.171.017-1.014.538-2.045 1.55-3.059l.159-.165c.087-.093.173-.185.291-.286l2.964-2.972c.064 1.213.79 2.524 2.176 3.916.221.218.434.417.65.602-.372.835-.555 1.838-.555 2.995 0 .876.107 1.66.32 2.355-1.989 1.855-4.006 1.785-6-.215zM11.48 4.978c.081-.096.174-.182.266-.27l.162-.159c2.065-2.067 4.155-2.067 6.216 0 1.972 1.978 2.042 3.983.244 5.964-.675-.208-1.445-.32-2.328-.32-2.316 0-3.905.737-4.829 2.084-.16-.143-.317-.285-.482-.448-1.585-1.594-2.204-3-1.837-4.188.008-.028.005-.053.008-.078l2.58-2.585zm9.507 10.68a.412.412 0 00-.199-.059h-9.496a.413.413 0 00-.201.06c.12-3.102 1.73-4.625 4.946-4.625 3.219 0 4.83 1.526 4.95 4.624zm-1.779-4.818c1.88-2.243 1.715-4.672-.493-6.885-2.386-2.395-5.014-2.392-7.4 0l-.149.146a5.105 5.105 0 00-.302.305l-6.434 6.46a4.426 4.426 0 00-.328.322l-.146.148c-1.168 1.174-1.773 2.398-1.795 3.636-.023 1.288.582 2.557 1.8 3.779 1.197 1.201 2.457 1.8 3.712 1.8 1.087 0 2.171-.453 3.21-1.352.849 1.7 2.538 2.644 5.157 2.644 3.958 0 5.81-2.148 5.81-5.826-.003-2.499-.857-4.283-2.642-5.177z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPillsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.099 20.6c-2.852 0-4.275-1.255-4.465-3.894h8.933c-.194 2.641-1.616 3.893-4.468 3.893zm-5.552-2.354c-1.902 1.788-3.753 1.723-5.667-.19-1.972-1.975-1.972-3.896-.005-5.868l.157-.163c.084-.087.165-.176.285-.283l2.636-2.641c.194 1.126.908 2.32 2.157 3.574.241.238.476.457.706.656-.31.784-.468 1.703-.468 2.753 0 .773.087 1.47.255 2.1a.255.255 0 01-.056.062zm1.199-12.95c.078-.089.165-.17.252-.254l.163-.157c1.972-1.977 3.888-1.975 5.857 0 1.91 1.913 1.96 3.776.17 5.686a8.166 8.166 0 00-2.086-.249c-2.19 0-3.729.664-4.658 1.888-.149-.134-.297-.266-.449-.417-1.512-1.516-2.106-2.84-1.767-3.933.003-.014 0-.028.003-.042l2.515-2.521zm8.82 10.166h-8.932c.193-2.638 1.616-3.893 4.465-3.893 2.852 0 4.274 1.252 4.468 3.893zm-1.145-4.398c1.913-2.302 1.737-4.79-.527-7.058-2.453-2.46-5.16-2.463-7.613 0l-.143.137c-.117.112-.23.221-.302.308l-6.359 6.378c-.118.101-.23.219-.342.336l-.137.14c-1.199 1.2-1.815 2.46-1.837 3.74-.023 1.33.596 2.638 1.843 3.888 1.23 1.235 2.526 1.851 3.82 1.851 1.11 0 2.213-.46 3.272-1.367.869 1.563 2.513 2.426 5.006 2.426 3.916 0 5.748-2.126 5.748-5.762-.003-2.38-.79-4.106-2.429-5.017z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPinFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.523 8.167l-5.66-5.689a1.041 1.041 0 00-1.5 0c-.736.743-1.178 1.56-1.316 2.437l-2.53 2.55c-1.456-.253-3.529-.01-5.719 2.195l-.03.034a1.23 1.23 0 00-.362.88c0 .33.129.641.361.876l3.443 3.468-5.866 5.854a.634.634 0 00-.003.891.626.626 0 00.886.003l5.868-5.857 3.518 3.546a1.2 1.2 0 00.86.359c.333 0 .672-.135.947-.412 1.767-1.782 2.49-3.709 2.143-5.734l2.532-2.552c.877-.148 1.7-.602 2.462-1.37a.995.995 0 00.291-.708 1.093 1.093 0 00-.325-.77"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPinLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.903 9.964a.415.415 0 00-.255.123l-2.983 3a.433.433 0 00-.112.4c.417 1.816-.2 3.57-1.886 5.27a.199.199 0 01-.145.061.208.208 0 01-.146-.061l-4.022-4.054c-.006-.008-.009-.016-.014-.025-.009-.008-.017-.011-.026-.017l-3.955-3.98a.196.196 0 01.006-.28l.03-.03c1.665-1.68 3.415-2.316 5.203-1.884a.424.424 0 00.398-.112l2.98-3.003a.437.437 0 00.124-.26c.07-.735.428-1.432 1.098-2.076l5.798 5.826c-.653.653-1.356 1.022-2.092 1.1m2.678-1.722l-5.786-5.81a.899.899 0 00-.63-.269c-.213 0-.412.081-.6.269-.739.742-1.173 1.563-1.296 2.44L10.555 7.6c-1.434-.27-3.535-.078-5.764 2.166l.3.303-.334-.272a1.058 1.058 0 00-.003 1.49l3.67 3.695-6.138 6.134a.429.429 0 00-.002.605.422.422 0 00.599.006l.003-.003 6.146-6.134 3.745 3.773c.198.201.465.313.745.313.28 0 .543-.112.798-.367 1.79-1.798 2.499-3.739 2.11-5.775l2.714-2.732c.876-.131 1.7-.58 2.467-1.35a.817.817 0 00.236-.574.899.899 0 00-.266-.636"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPinRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.734 9.795a.62.62 0 00-.376.182l-2.919 2.938a.627.627 0 00-.165.586c.39 1.703-.193 3.353-1.779 4.96l-3.921-3.943c-.011-.014-.017-.034-.03-.048-.015-.014-.035-.02-.049-.03l-3.84-3.864.028-.03C7.257 8.96 8.904 8.36 10.577 8.758a.61.61 0 00.585-.168l2.919-2.938a.623.623 0 00.18-.384c.058-.605.335-1.187.856-1.764l5.387 5.414c-.563.524-1.143.812-1.77.877m2.79-1.628l-5.662-5.689a1.041 1.041 0 00-1.498 0c-.737.743-1.18 1.56-1.317 2.437l-2.53 2.55c-1.456-.253-3.529-.01-5.719 2.195l-.03.034a1.23 1.23 0 00-.362.88c0 .33.129.641.361.876l3.443 3.468-5.866 5.854a.634.634 0 00-.003.891.626.626 0 00.886.003l5.868-5.857 3.518 3.546a1.2 1.2 0 00.86.359c.333 0 .672-.135.947-.412 1.767-1.782 2.49-3.709 2.143-5.734l2.532-2.552c.877-.148 1.7-.602 2.462-1.37a.995.995 0 00.291-.708 1.093 1.093 0 00-.325-.77"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlaneFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.683 4.692c.031-.608-.215-1.224-.717-1.779-1.028-1.145-2.325-1.213-3.47-.185-.28.252-2.86 3.031-3.569 3.793L5.137 5.23a.426.426 0 00-.406.187L3.83 6.85a.396.396 0 00-.045.336.414.414 0 00.222.258l6.347 2.932c-.874.95-1.53 1.586-2.118 2.157-.79.768-1.423 1.381-2.232 2.412l-2.855-.207a.398.398 0 00-.372.185l-.709 1.072a.411.411 0 00.118.569l2.812 1.849 1.832 3.075c.11.182.34.25.53.16l1.249-.602a.408.408 0 00.23-.4L8.6 17.544c1.068-.834 1.687-1.456 2.46-2.235a49.409 49.409 0 012.173-2.092l3.017 6.353a.41.41 0 00.547.193h.002l1.443-.706a.408.408 0 00.224-.431L17.073 9.77c.703-.644 3.468-3.165 3.709-3.383.557-.505.87-1.09.901-1.695"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlaneLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.51 9.463a.41.41 0 00-.13.367l1.378 8.773-.795.39-3.07-6.474a.416.416 0 00-.289-.227.405.405 0 00-.355.096 51.172 51.172 0 00-2.62 2.493c-.792.798-1.417 1.428-2.551 2.3a.411.411 0 00-.16.358l.235 3.042-.658.316L5.81 18.06a.405.405 0 00-.126-.132l-2.55-1.675.348-.532 2.832.207a.401.401 0 00.353-.16c.843-1.09 1.482-1.711 2.291-2.498a49.753 49.753 0 002.53-2.608.412.412 0 00-.132-.647L4.927 7.043l.51-.812 8.739 1.285a.417.417 0 00.358-.126c1.356-1.465 3.451-3.711 3.661-3.899.398-.358.802-.52 1.185-.51.39.02.768.233 1.126.63.717.796.675 1.597-.12 2.314-.277.25-3.877 3.538-3.877 3.538m4.608-6.4c-.501-.558-1.087-.869-1.692-.902-.608-.042-1.221.215-1.776.717-.28.252-2.86 3.03-3.566 3.795L5.293 5.38a.426.426 0 00-.406.188L3.985 7a.412.412 0 00.177.594l6.342 2.933c-.684.74-1.39 1.459-2.118 2.156-.79.768-1.423 1.381-2.233 2.412L3.3 14.89a.406.406 0 00-.372.185l-.704 1.073a.411.411 0 00.118.568l2.812 1.849 1.83 3.078a.41.41 0 00.529.16l1.25-.602a.408.408 0 00.229-.4l-.238-3.104c1.067-.835 1.686-1.457 2.46-2.236a49.784 49.784 0 012.173-2.092l3.017 6.353a.413.413 0 00.546.196s.003 0 .003-.003l1.442-.706a.41.41 0 00.224-.434L17.226 9.92c.703-.644 3.465-3.165 3.709-3.384 1.143-1.03 1.21-2.33.182-3.473"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlaneRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.078 5.895L16.28 9.36a.61.61 0 00-.19.54l1.33 8.45-.465.226-2.925-6.16a.607.607 0 00-.425-.333.593.593 0 00-.519.14c-1.198 1.062-1.93 1.801-2.574 2.451-.773.779-1.38 1.392-2.482 2.235a.61.61 0 00-.235.527l.219 2.843-.353.17-1.558-2.618a.627.627 0 00-.187-.196l-2.33-1.532.164-.253 2.659.194a.616.616 0 00.52-.233c.816-1.056 1.438-1.66 2.225-2.426.666-.647 1.42-1.378 2.49-2.565a.6.6 0 00-.193-.95L5.355 7.052l.309-.49 8.43 1.238a.613.613 0 00.53-.188c1.272-1.372 3.367-3.619 3.575-3.806.7-.63 1.35-.597 1.98.103.633.703.6 1.353-.1 1.986m1-2.792c-1.08-1.197-2.488-1.272-3.682-.194-.271.244-2.585 2.734-3.437 3.653l-8.507-1.25a.603.603 0 00-.596.275l-.885 1.404a.6.6 0 00.257.868l5.964 2.759a46.003 46.003 0 01-1.88 1.902c-.756.737-1.367 1.33-2.137 2.297l-2.692-.193a.607.607 0 00-.546.271l-.689 1.053a.602.602 0 00.174.835L5.14 18.57l1.77 2.975a.606.606 0 00.779.235l1.221-.588a.6.6 0 00.339-.59l-.227-2.93c1.006-.794 1.602-1.396 2.345-2.144.518-.52 1.092-1.1 1.924-1.86l2.838 5.98a.603.603 0 00.809.284l1.412-.69a.603.603 0 00.33-.635l-1.347-8.566c.798-.728 3.325-3.034 3.555-3.241 1.19-1.087 1.266-2.499.19-3.697"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlantFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.667 9.533a12.265 12.265 0 00-.849 2.179h3.717c.81 0 1.468.65 1.468 1.442v1.482c0 .68-.487 1.247-1.129 1.404H7.14c-.641-.146-1.137-.723-1.137-1.404v-1.482c0-.792.661-1.442 1.468-1.442h3.759c-.182-1.62-.53-2.835-.916-3.734.199-.104.387-.235.56-.39l.118-.131c.445.964.832 2.238 1.047 3.938.239-.776.544-1.602.956-2.372l.008.008.025.025c.177.2.4.345.639.477.602-1.169 1.442-2.163 2.597-2.493a.413.413 0 00.29-.505c0-.002 0-.005-.002-.005a.415.415 0 00-.518-.275c-1.37.39-2.35 1.49-3.042 2.77l-.213-.274c-.339-.527-.501-1.16-.501-1.902-.003-1.966 1.142-3.092 3.145-3.092h1.846c.717 0 1.294.574 1.294 1.271l-.017 2.107c-.114 1.815-1.22 2.804-3.126 2.804-.697-.003-1.274-.14-1.753-.406zm-3.353-1.558c-.487.252-1.056.381-1.723.381-1.913 0-3.028-.994-3.134-2.81l-.009-.016-.008-.12V3.44c0-.706.585-1.28 1.303-1.28h1.854c2.028 0 3.148 1.1 3.148 3.1 0 .827-.207 1.508-.619 2.034l-.14.16c-1.103-2.398-2.571-2.826-2.67-2.851a.411.411 0 00-.503.29.406.406 0 00.288.502c.02.006 1.255.4 2.213 2.58zm-2.96 9.065h9.304l-.378 3.593c0 .639-.585 1.216-1.31 1.216H9.027a1.294 1.294 0 01-1.302-1.28l-.373-3.53z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlantLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.712 6.831a.332.332 0 00-.011.076c-.059 1.375-.807 2.042-2.286 2.042-.538 0-.972-.098-1.32-.277.55-.815 1.258-1.488 2.169-1.743a.405.405 0 00.291-.493c0-.005-.003-.008-.003-.014a.428.428 0 00-.526-.277c-1.084.305-1.919 1.036-2.569 1.958-.224-.35-.339-.807-.339-1.367 0-1.485.754-2.207 2.3-2.207h1.846a.441.441 0 01.45.431l-.002 1.871zm-.594 6.465v1.493a.44.44 0 01-.448.432H7.323a.438.438 0 01-.449-.429V13.3a.44.44 0 01.449-.431h9.347a.437.437 0 01.448.428zm-1.776 7.46a.277.277 0 01-.28.271H8.933c-.157 0-.283-.123-.285-.313l-.538-4.678h7.767l-.535 4.72zM8.594 7.406c-1.484 0-2.235-.673-2.294-2.037a.315.315 0 00-.011-.09V3.414a.45.45 0 01.457-.443H8.6c1.552 0 2.305.726 2.305 2.219 0 .54-.117.986-.339 1.339-1.028-1.644-2.162-1.967-2.243-1.986a.426.426 0 00-.513.286.409.409 0 00.289.5h.005c.017.004.964.3 1.835 1.796-.356.185-.807.28-1.345.28zm8.67-3.692h-1.849c-2.003 0-3.148 1.1-3.148 3.022 0 .728.162 1.342.504 1.857l.216.27a12.247 12.247 0 00-.95 2.304c-.213-1.647-.591-2.904-1.03-3.837l.114-.126a.076.076 0 01.02-.023c.409-.515.613-1.187.613-1.994-.003-1.955-1.123-3.03-3.157-3.03H6.743c-.72 0-1.306.562-1.306 1.257v1.922c0 .03.006.067.015.103.098 1.796 1.21 2.784 3.14 2.784.663 0 1.232-.126 1.714-.375.434.98.81 2.33.975 4.185 0 .006.005.011.005.017H7.323c-.715 0-1.297.56-1.297 1.246v1.493c0 .664.549 1.205 1.232 1.238l.544 4.729c0 .6.51 1.087 1.131 1.087h6.126c.625 0 1.132-.488 1.13-1.042l.548-4.774c.684-.033 1.233-.574 1.233-1.238v-1.493c0-.686-.583-1.246-1.3-1.246h-4.003c.202-.773.524-1.765 1.006-2.675.476.249 1.05.39 1.742.39 1.919 0 3.028-.976 3.135-2.768a.443.443 0 00.014-.107V4.966c0-.692-.586-1.252-1.3-1.252z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlantRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.33 6.894a.863.863 0 00-.01.084c-.05 1.23-.692 1.804-2.009 1.804a2.85 2.85 0 01-.98-.154c.49-.672 1.098-1.21 1.857-1.426a.596.596 0 00.423-.728l-.003-.011a.623.623 0 00-.767-.407c-.984.278-1.76.905-2.379 1.698a2.525 2.525 0 01-.17-.933c0-1.333.641-1.952 2.02-1.952h1.79c.125 0 .229.098.229.221v1.804zm-.576 6.42v1.454a.225.225 0 01-.23.221h-9.05a.227.227 0 01-.23-.221v-1.454c0-.123.104-.221.23-.221h9.053c.123 0 .227.098.227.221zm-1.787 7.339H9.03c-.036 0-.067-.03-.07-.132l-.496-4.339h7.065l-.499 4.407c.003.036-.028.064-.064.064zM8.7 7.278c-1.323 0-1.964-.575-2.015-1.787a.482.482 0 00-.01-.11V3.59c0-.13.106-.233.235-.233h1.795c1.381 0 2.025.625 2.025 1.964 0 .341-.053.638-.148.896-.986-1.417-2.017-1.7-2.093-1.72a.617.617 0 00-.742.418c-.092.31.101.638.42.733.014.003.785.252 1.547 1.463a2.76 2.76 0 01-1.014.168zm8.4-3.6h-1.79c-2.07 0-3.255 1.146-3.255 3.146 0 .748.168 1.384.53 1.935l.131.163c-.232.44-.434.896-.605 1.364-.207-1.157-.501-2.095-.837-2.84l.028-.034.028-.034c.426-.537.638-1.232.638-2.061-.002-2.006-1.19-3.157-3.263-3.157H6.911c-.81 0-1.471.639-1.471 1.429v1.87c0 .043.006.088.014.13.106 1.834 1.286 2.885 3.247 2.885.585 0 1.095-.104 1.549-.3.372.9.686 2.106.84 3.728H7.474c-.807 0-1.463.636-1.463 1.415v1.454c0 .697.527 1.274 1.213 1.389l.51 4.429c0 .694.583 1.257 1.3 1.257h5.935c.717 0 1.3-.563 1.297-1.193l.513-4.496c.686-.115 1.213-.692 1.213-1.39v-1.453c0-.779-.656-1.415-1.465-1.415h-3.639a12.3 12.3 0 01.827-2.238c.45.2.98.311 1.596.311 1.947 0 3.12-1.036 3.238-2.868a.553.553 0 00.017-.134V5.09c0-.776-.658-1.412-1.465-1.412z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlayFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.208 4.583c-1.67-1.608-4.098-2.423-7.222-2.423-3.123 0-5.551.815-7.218 2.426-1.731 1.67-2.608 4.162-2.608 7.409 0 3.246.877 5.736 2.608 7.406 1.667 1.608 4.095 2.423 7.218 2.423 3.124 0 5.552-.815 7.222-2.423 1.73-1.67 2.61-4.16 2.61-7.406 0-3.247-.876-5.743-2.61-7.412zm-3.126 7.807l-6.653 3.84a.486.486 0 01-.728-.42V8.126a.485.485 0 01.728-.42l6.653 3.84c.232.135.31.432.176.664a.471.471 0 01-.176.18z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlayLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.998 2.16c3.14 0 5.574.812 7.238 2.417C20.96 6.241 21.838 8.74 21.838 12c.003 6.435-3.4 9.838-9.84 9.838-6.435 0-9.838-3.4-9.838-9.838 0-6.437 3.4-9.84 9.838-9.84zm0 .56C5.843 2.72 2.72 5.843 2.72 12c0 6.154 3.12 9.278 9.278 9.278 6.16 0 9.28-3.12 9.28-9.278.002-6.16-3.12-9.28-9.28-9.28zm-2.91 4.891l7.128 4.115a.26.26 0 010 .448l-7.132 4.118a.26.26 0 01-.257 0 .257.257 0 01-.13-.224V7.835a.26.26 0 01.39-.224zm.128.675v7.33l6.347-3.663-6.347-3.667z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlayRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.986 2.16c3.124 0 5.552.815 7.222 2.423 1.734 1.67 2.61 4.162 2.61 7.409 0 3.246-.88 5.737-2.61 7.406-1.67 1.608-4.098 2.423-7.222 2.423-3.123 0-5.551-.815-7.218-2.423-1.731-1.667-2.608-4.157-2.608-7.403 0-3.247.877-5.74 2.608-7.41C6.435 2.979 8.866 2.16 11.986 2.16zm0 1.09c-5.798 0-8.74 2.94-8.74 8.745 0 5.798 2.942 8.74 8.74 8.74 5.801 0 8.745-2.942 8.745-8.74 0-5.801-2.944-8.745-8.745-8.745zM9.43 7.712l6.653 3.84a.484.484 0 010 .84L9.43 16.236a.5.5 0 01-.241.064.484.484 0 01-.487-.485V8.132a.484.484 0 01.728-.42zm.244 1.26v6l5.196-3-5.196-3z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlugFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.718 20.493h1.219v-3.661h-1.219v3.661zM8.906 3.63a.39.39 0 01.392-.378c.216 0 .392.171.392.378v3.866h-.784V3.63zm5.902 0a.39.39 0 01.392-.378c.216 0 .392.171.392.378V7.5h-.784V3.63zm2.68 3.869h-.63V3.627c0-.882-.742-1.602-1.658-1.602-.913 0-1.658.717-1.658 1.602v3.869l-2.588-.003V3.627c0-.882-.745-1.602-1.658-1.602-.914 0-1.659.717-1.659 1.602v3.866h-.476a.985.985 0 00-.992 1c0 2.762 1.227 4.199 2.337 4.936v1.246c0 .625.21 1.132.599 1.462.328.294.784.448 1.345.48v4.15c0 .524.44.947.98.947h1.787c.54 0 .98-.423.98-.947v-4.15c.566-.029 1.026-.183 1.359-.48.39-.339.585-.832.585-1.465V13.42c1.11-.737 2.337-2.17 2.337-4.896v-.07c0-.527-.443-.955-.99-.955z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlugLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.192 2c.801 0 1.448.641 1.448 1.429v3.95h.84c.547 0 .99.439.995.974v.07c0 2.787-1.227 4.246-2.336 5v1.28c0 .636-.202 1.154-.586 1.496-.364.333-.877.501-1.524.501h-.044v4.227a.764.764 0 01-.77.76h-1.788a.766.766 0 01-.77-.76V16.7h-.02c-.652 0-1.168-.168-1.535-.501-.39-.336-.6-.854-.6-1.493v-1.272c-1.108-.75-2.335-2.218-2.335-5.039 0-.583.445-1.02.991-1.02h.687V3.43c0-.791.647-1.43 1.445-1.43.801 0 1.448.641 1.448 1.429v3.946l3.008.003v-3.95c0-.79.65-1.428 1.446-1.428zm-2.053 14.7h-1.642v4.154h1.642V16.7zM7.16 8.207a.147.147 0 00-.148.146c0 2.137.72 3.639 2.134 4.504a.409.409 0 01.199.353v1.499c0 .395.106.689.32.874.215.193.537.288.968.288h3.39c.428 0 .75-.095.955-.283.207-.187.31-.482.31-.882v-1.504c0-.146.077-.278.2-.353 1.417-.871 2.137-2.362 2.137-4.423 0 0 0-.07.006-.067a.147.147 0 00-.149-.146zm8.03-5.375a.602.602 0 00-.601.597l.002 3.95h1.205v-3.95a.603.603 0 00-.605-.597zm-5.901 0a.602.602 0 00-.602.597v3.946h1.207V3.43a.603.603 0 00-.605-.597z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPlugRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.318 7.266h-.608V3.6a1.603 1.603 0 00-3.204 0v3.664l-2.502-.003V3.6a1.603 1.603 0 00-3.204 0v3.66h-.46c-.638 0-1.162.522-1.162 1.205 0 2.776 1.168 4.26 2.258 5.04v1.14c0 .865.355 1.358.647 1.613.355.327.843.501 1.437.532v3.95a.95.95 0 00.95.946h1.727a.947.947 0 00.947-.947v-3.95c.6-.027 1.093-.2 1.448-.531.289-.26.633-.754.633-1.614V13.5c1.09-.785 2.258-2.264 2.258-5.003v-.07a1.17 1.17 0 00-1.165-1.16zm-4.4 9.538v3.66h-1.18v-3.66h1.18zM7.39 8.479l9.857.006v.01h.008c0 1.945-.66 3.345-1.969 4.158a.612.612 0 00-.288.518v1.47c0 .331-.079.572-.236.715-.199.182-.538.221-.787.221h-3.28c-.364 0-.633-.076-.804-.232-.16-.14-.24-.376-.24-.704v-1.465a.61.61 0 00-.292-.52c-1.294-.802-1.955-2.191-1.97-4.177zm7.717-5.258c.204 0 .378.174.378.378v3.667h-.76V3.6c0-.204.175-.378.382-.378zm-5.706 0c.204 0 .378.174.378.378V7.26H9.02V3.6c0-.205.174-.379.38-.379z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPodiumFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.773 16.2c.622 0 1.073.335 1.073.798v4.022c0 .47-.442.82-1.075.82h-3.852V16.2h3.854zM2.16 14.72c0-.554.557-.899 1.073-.899h3.851v8.02H3.233c-.591 0-1.073-.423-1.073-.92v-6.2zm12.462-3.933c.572 0 1.073.48 1.073 1.028v10.031h-7.38V11.818c0-.546.5-1.025 1.072-1.025h5.235v-.006zM10.9 4.933l-1.196.182.888.986c.138.14.208.364.174.558l-.21 1.283 1.129-.558a.627.627 0 01.622.014l1.084.594.002.003s.003 0 .006-.003l-.196-1.333a.675.675 0 01.193-.575l.877-.89-1.244-.266a.643.643 0 01-.47-.345L12 3.403l-.585 1.169a.638.638 0 01-.516.361zM9.507 6.751l-.683-.695a1.274 1.274 0 01-.297-1.308c.148-.45.532-.776.994-.846l.922-.14.417-.882a1.238 1.238 0 012.25 0l.42.885.921.137c.465.07.849.398 1 .849.152.465.037.964-.302 1.308l-.684.698.163.991A1.292 1.292 0 0114.11 9a1.24 1.24 0 01-1.306.076l-.608-.333-.21-.115-.21.115-.605.333A1.242 1.242 0 019.6 8.743a1.276 1.276 0 01-.25-.995l.157-.997z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPodiumLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.44 4.891a.252.252 0 00.059.266l.913.916a.482.482 0 01.123.384l-.215 1.291a.25.25 0 00.1.252c.07.048.155.054.227.012L11.78 7.4a.436.436 0 01.426.008l1.115.603A.22.22 0 0013.547 8a.244.244 0 00.1-.252l-.215-1.291a.462.462 0 01.134-.395l.902-.905c.067-.07.09-.17.059-.266a.23.23 0 00-.185-.16l-1.263-.187a.444.444 0 01-.322-.236l-.569-1.184c-.081-.168-.33-.168-.409 0L11.213 4.3a.459.459 0 01-.356.247l-1.232.184a.226.226 0 00-.185.16zm.238 1.62l-.773-.777a1.072 1.072 0 01-.255-1.103c.129-.384.457-.656.852-.717l1.05-.157.474-.99a1.06 1.06 0 011.918-.002l.477.989 1.05.157c.395.059.723.333.851.717.132.39.034.812-.257 1.103l-.773.776.182 1.104c.067.415-.101.818-.443 1.059a1.074 1.074 0 01-1.112.064l-.933-.507-.932.507a1.036 1.036 0 01-1.11-.064A1.073 1.073 0 019.5 7.61l.18-1.1zm11.334 14.47V17.3c-.017-.004-.034-.004-.05-.004H15.61c-.017 0-.034 0-.048.003v3.68c.014 0 .031.004.048.004h5.35c.017 0 .034 0 .05-.003zm-11.684.022h5.35l.05-9.286-5.4-.002-.048 8.829V21l.048.003zm-6.283-.02h5.35a.247.247 0 00.048-.005v-6.126a.13.13 0 00-.048-.009h-5.35a.13.13 0 00-.047.009v6.129c.01.003.03.003.047.003zm12.566.866H3.045c-.487 0-.885-.342-.885-.737v-6.397c0-.429.457-.717.885-.717h5.35c.017 0 .034.008.048.008v-2.291c0-.451.414-.85.885-.85h5.35c.47 0 .885.399.885.85v4.74c.014 0 .034-.006.048-.006h5.35c.44 0 .885.21.885.613v4.148c0 .362-.367.633-.888.633h-5.347v.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPodiumRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.39 7.998l.002.002s.003 0 .003-.002l-.193-1.334a.664.664 0 01.193-.574l.877-.89-1.244-.267a.65.65 0 01-.47-.344L12 3.406l-.585 1.169a.65.65 0 01-.516.36l-1.196.183.888.986c.138.14.208.364.174.557l-.21 1.283 1.129-.554a.646.646 0 01.622.011l1.084.597zM9.507 6.754l-.683-.695a1.28 1.28 0 01-.3-1.308c.149-.454.532-.779.997-.849l.922-.14.417-.882a1.238 1.238 0 012.25 0l.42.885.921.137c.465.07.85.395 1 .849.152.462.037.964-.302 1.308l-.684.695.163.991c.078.49-.12.97-.518 1.253-.381.268-.897.3-1.306.075l-.818-.448-.815.445a1.21 1.21 0 01-.59.154c-.253 0-.5-.078-.715-.23a1.275 1.275 0 01-.518-1.251l.16-.99zM15.692 20.6h4.927v-3.165h-4.927V20.6zM3.387 15.056V20.6H8.31v-5.544H3.387zm11.078-3.036H9.538v2.686c0 .009.003.011.003.02v5.893h4.924v-8.6zm.157 9.83H3.232c-.59 0-1.072-.424-1.072-.92v-6.204c0-.555.557-.9 1.073-.9h5.081v-2.008c0-.546.501-1.028 1.07-1.028h5.238c.572 0 1.073.48 1.073 1.028v4.387h5.081c.622 0 1.07.336 1.07.798v4.025c0 .47-.442.818-1.073.818h-6.15v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoisonFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.048 15.123a.188.188 0 01.03-.02c.006-.002.014-.008.023-.01a.376.376 0 01.232-.022.608.608 0 01.068.019h.002c.023.008.042.02.062.033.048.034.09.079.12.13.012.016.028.03.034.05l.003.002.005.009v.003l.12.28a.398.398 0 01-.563.504c-.008-.003-.013-.009-.019-.014a.373.373 0 01-.151-.18l-.006-.013-.002.002-.006.009a.37.37 0 01-.118.157l-.008.005-.025.017-.017.011a.396.396 0 01-.199.056.356.356 0 01-.095-.014l-.053-.017h-.009a.13.13 0 01-.028-.014c-.022-.014-.04-.03-.061-.044l-.031-.02-.011-.008c-.02-.02-.031-.045-.045-.068l-.026-.042a.393.393 0 01-.036-.095.388.388 0 01.02-.221l.002-.009.006-.01.006-.018.109-.269a.4.4 0 01.216-.207c.002 0 .002-.003.005-.003h.003c.006 0 .011 0 .014-.002a.395.395 0 01.286.005c.036.017.064.042.095.065.02-.014.034-.026.048-.037zm-2.185-.26a.495.495 0 01-.107-.042.375.375 0 01-.1-.062.374.374 0 01-.096-.18.378.378 0 01-.011-.078c0-.008-.006-.016-.006-.025v-.025a.408.408 0 01.112-.258l.328-.327-.328-.328a.387.387 0 01-.109-.221.458.458 0 01-.005-.062l.002-.006a.3.3 0 01.009-.07.397.397 0 01.106-.21.428.428 0 01.32-.115.4.4 0 01.246.112l.328.328.328-.328a.394.394 0 01.355-.106.43.43 0 01.21.106.39.39 0 01.101.227l.006.031a.226.226 0 01.003.045v.011a.384.384 0 01-.11.255l-.327.328.327.327a.394.394 0 01.11.227c.002.017.002.037.002.054a.176.176 0 01-.008.053l-.008.03a.398.398 0 01-.098.205c-.028.025-.062.042-.093.059a.47.47 0 01-.095.042c-.003 0-.006.003-.011.003a.29.29 0 01-.084.01.38.38 0 01-.208-.066c-.005-.003-.01-.009-.02-.014-.019-.014-.038-.02-.055-.037l-.325-.327-.325.327c-.02.023-.045.031-.07.048h-.003a.392.392 0 01-.21.07.632.632 0 01-.003 0 .385.385 0 00.21-.07l.003-.003-.291.062zm.997-3.787c-.843.257-1.866.955-1.866 2.826 0 .924.255 1.569.611 2.008l.084.098c.16.177.336.317.518.429v.216c0 .078.006.15.02.218.025.126.07.235.14.322.025.031.05.06.081.084.151.138.367.208.644.208h1.754c.28 0 .493-.073.647-.208a.508.508 0 00.067-.067c.112-.134.165-.325.165-.555v-.215c.645-.4 1.21-1.143 1.21-2.518 0-1.034-.322-1.712-.753-2.155a2.401 2.401 0 00-.238-.212c-.686-.538-1.53-.611-1.854-.617l-.031-.002c-.079-.006-.168-.006-.247-.006a3.431 3.431 0 00-.904.134.12.12 0 00-.048.012zM9.308 6.03a.598.598 0 01-.597-.6V4.333a.598.598 0 111.193 0v1.098c0 .33-.265.6-.596.6zm1.706 0a.598.598 0 01-.597-.6V4.333a.598.598 0 111.193 0v1.098c0 .33-.265.6-.596.6zm1.706 0a.598.598 0 01-.597-.6V4.333a.598.598 0 111.193 0v1.098c.003.33-.266.6-.596.6zm1.709 0a.598.598 0 01-.597-.6V4.333a.598.598 0 111.193 0v1.098a.6.6 0 01-.596.6zm-7.85 3.353h10.64c-.13-.894-.558-1.496-1.275-1.782a1.41 1.41 0 01-.709.2H8.493c-.238 0-.454-.074-.653-.177a2.071 2.071 0 00-.627.392c-.34.328-.552.784-.633 1.367zm8.113 11.131c1.305 0 2.112-.518 2.423-1.543H6.683c.113.367.286.672.527.913.429.415 1.076.63 1.91.63h5.572zM8.277 3.451v2.927c0 .12.096.224.216.224h6.742a.223.223 0 00.224-.224V3.451a.223.223 0 00-.224-.224H8.493a.221.221 0 00-.216.224zm8.359 3.134c1.18.583 1.823 1.776 1.823 3.398l-.008 7.925c0 2.383-1.409 3.806-3.76 3.806h-5.57c-1.157 0-2.079-.327-2.74-.966-.692-.672-1.045-1.622-1.045-2.838V9.983c0-1.207.35-2.157 1.053-2.832.208-.207.454-.367.717-.512a1.59 1.59 0 01-.022-.264V3.448c0-.784.63-1.423 1.409-1.423h6.742c.782 0 1.42.639 1.42 1.423v2.927a2.333 2.333 0 01-.02.21zm-4.095 6.95a.4.4 0 01-.115-.283c0-.003.003-.003.003-.006a.425.425 0 01.112-.28.41.41 0 01.565 0l.328.328.328-.328a.41.41 0 01.566 0 .438.438 0 01.098.202.351.351 0 01.005.143.388.388 0 01-.103.221L14 13.86l.328.328a.38.38 0 01.106.246.342.342 0 01-.014.14.409.409 0 01-.095.182.366.366 0 01-.093.056.409.409 0 01-.193.06.387.387 0 01-.227-.082c-.017-.011-.039-.02-.056-.034l-.327-.327-.328.327a.295.295 0 01-.067.042.394.394 0 01-.213.07.37.37 0 01-.185-.053.375.375 0 01-.101-.062.435.435 0 01-.11-.26c0-.008-.005-.017-.005-.025a.4.4 0 01.115-.283l.328-.328-.322-.322z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoisonLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.848 21.169c1.438 0 2.34-.615 2.675-1.779H6.468c.123.427.317.788.597 1.065.483.472 1.188.714 2.098.714h5.685zM7.068 7.846c-.391.384-.627.92-.716 1.591h11.293c-.136-1.073-.649-1.779-1.531-2.1-.2.142-.444.224-.705.224h-6.89c-.244 0-.469-.074-.66-.199a2.36 2.36 0 00-.791.484zm1.02-4.585v3.034c0 .242.195.438.431.438h6.89c.236 0 .43-.196.43-.438V3.26a.435.435 0 00-.43-.438h-6.89a.435.435 0 00-.43.438zm-1.775 15c0 .107.014.198.02.3h11.323c.006-.102.023-.193.023-.3l.008-7.993H6.313v7.992zM16.599 6.644c1.227.544 1.901 1.73 1.901 3.398l-.008 8.22c0 2.374-1.327 3.737-3.644 3.737H9.163c-1.13 0-2.026-.319-2.664-.948-.663-.654-.999-1.594-.999-2.789v-8.217c0-1.198.339-2.137 1.007-2.792.239-.233.527-.41.841-.558a1.245 1.245 0 01-.07-.395V3.267c0-.7.558-1.267 1.244-1.267h6.89c.685 0 1.243.57 1.243 1.267V6.3c-.003.116-.025.23-.056.344zM9.35 6.16a.411.411 0 01-.408-.415V3.81c0-.228.183-.415.408-.415.224 0 .408.185.408.415v1.936c0 .23-.184.415-.408.415zm1.742 0a.411.411 0 01-.408-.415V3.81c0-.228.183-.415.408-.415.225 0 .408.185.408.415v1.936c0 .23-.183.415-.408.415zm1.746 0a.411.411 0 01-.408-.415V3.81c0-.228.183-.415.408-.415.224 0 .408.185.408.415v1.936a.413.413 0 01-.408.415zm1.742 0a.411.411 0 01-.408-.415V3.81c0-.228.183-.415.408-.415.225 0 .408.185.408.415v1.936c0 .23-.183.415-.408.415zm-1.007 10.155c.663-.418 1.002-1.147 1.002-2.163 0-2.271-1.682-2.553-2.403-2.57l-.27-.003c-.71.003-2.364.26-2.364 2.556 0 1.033.336 1.768 1 2.18l.194.123v.45c0 .15.033.258.097.315.075.069.2.103.369.103h1.731c.117 0 .272-.017.358-.097.08-.074.097-.214.097-.322v-.45l.189-.122zm-1.382-5.564c.533.011 3.197.233 3.197 3.398 0 1.483-.61 2.297-1.194 2.735 0 .499-.197.783-.363.934-.222.208-.527.313-.907.313H11.19c-.38 0-.688-.105-.913-.316-.163-.148-.366-.432-.366-.928-.583-.435-1.193-1.252-1.193-2.755 0-3.21 2.644-3.384 3.174-3.387l.297.006zm-.558 4.184a.402.402 0 01-.577 0l-.238-.242-.236.242a.402.402 0 01-.577 0 .422.422 0 010-.586l.235-.242-.235-.242a.422.422 0 010-.587.4.4 0 01.574 0l.236.242.238-.242a.4.4 0 01.575 0 .422.422 0 010 .587l-.239.242.239.242a.416.416 0 01.005.586zm2.267-.828l.239.242a.422.422 0 010 .586.402.402 0 01-.577 0l-.239-.242-.238.242a.402.402 0 01-.577 0 .422.422 0 010-.586l.238-.242-.239-.242a.422.422 0 010-.587.4.4 0 01.575 0l.238.242.24-.242a.4.4 0 01.573 0 .422.422 0 010 .587l-.233.242zm-1.257 1.426l.122.293a.419.419 0 01-.216.543.383.383 0 01-.158.032.401.401 0 01-.353-.228.407.407 0 01-.352.228.447.447 0 01-.158-.032.42.42 0 01-.22-.543l.123-.293a.4.4 0 01.533-.222c.027.01.05.034.072.05.025-.016.044-.036.072-.05a.408.408 0 01.535.222z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoisonRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.69 20.487c1.204 0 1.98-.448 2.338-1.313H6.768c.109.266.252.498.44.683.433.42 1.075.633 1.912.633h5.57v-.003zM8.271 3.42v2.925c0 .123.098.224.221.224h6.742a.223.223 0 00.222-.224V3.42a.22.22 0 00-.222-.221H8.493c-.12 0-.221.1-.221.221zm8.918 5.756c-.156-.795-.574-1.333-1.249-1.602-.207.12-.448.196-.706.196H8.493c-.238 0-.462-.064-.658-.17a2.07 2.07 0 00-.625.389c-.302.291-.496.697-.597 1.187H17.19zM6.532 17.882c0 .031.006.06.006.093h10.714c0-.031.006-.059.006-.09l.008-7.507H6.532v7.504zM16.633 6.56c1.185.583 1.83 1.768 1.83 3.398l-.01 7.924c0 2.381-1.408 3.804-3.764 3.804H9.123c-1.16 0-2.081-.325-2.745-.969-.689-.67-1.04-1.622-1.04-2.835V9.958c0-1.213.351-2.165 1.049-2.835.21-.204.456-.367.72-.507a1.412 1.412 0 01-.029-.269V3.423c0-.784.636-1.42 1.418-1.42h6.742a1.42 1.42 0 011.417 1.42v2.924c0 .073-.01.143-.022.213zm-7.328-.546a.598.598 0 01-.596-.6v-1.04a.6.6 0 01.596-.6.6.6 0 01.597.6v1.042a.596.596 0 01-.597.599zm1.709 0a.598.598 0 01-.597-.6v-1.04a.598.598 0 111.193 0v1.042c0 .33-.265.599-.596.599zm1.706 0a.598.598 0 01-.597-.6v-1.04a.6.6 0 01.597-.6.6.6 0 01.597.6v1.042a.597.597 0 01-.597.599zm1.706 0a.598.598 0 01-.597-.6v-1.04a.598.598 0 111.193 0v1.042a.596.596 0 01-.596.599zm-1.05 9.992c.65-.404.98-1.107.98-2.087 0-2.188-1.647-2.462-2.353-2.48-.081-.002-.168-.002-.25-.002h-.014c-.694.003-2.313.252-2.313 2.465 0 .997.33 1.703.977 2.104l.19.117v.432c0 .148.032.249.096.305.073.067.196.098.359.098h1.694c.115 0 .266-.017.353-.095.079-.07.093-.208.093-.308v-.435l.187-.114zm-1.348-5.365c.515.012 3.126.225 3.126 3.278 0 1.431-.597 2.215-1.168 2.638 0 .482-.193.757-.356.9-.218.198-.518.302-.888.302h-1.694c-.373 0-.673-.104-.891-.305-.16-.14-.359-.418-.359-.894-.571-.42-1.168-1.207-1.168-2.655 0-3.093 2.588-3.264 3.107-3.266.115-.023.199 0 .291.002zm-.552 4.034a.396.396 0 01-.563 0l-.232-.232-.233.232a.396.396 0 01-.563 0 .404.404 0 010-.566l.233-.232-.233-.233a.404.404 0 010-.566.396.396 0 01.563 0l.233.233.232-.233a.396.396 0 01.563 0 .404.404 0 010 .566l-.232.233.232.232a.399.399 0 010 .566zm2.219-.798l.232.232a.404.404 0 010 .566.396.396 0 01-.563 0l-.232-.232-.233.232a.396.396 0 01-.563 0 .404.404 0 010-.566l.233-.232-.233-.233a.404.404 0 010-.566.396.396 0 01.563 0l.233.233.232-.233a.396.396 0 01.563 0 .404.404 0 010 .566l-.232.233zm-1.23 1.372l.12.283a.4.4 0 01-.367.555.392.392 0 01-.344-.219.392.392 0 01-.345.219.4.4 0 01-.364-.555l.12-.283a.396.396 0 01.522-.213c.028.012.047.031.07.048.022-.017.042-.036.07-.048a.395.395 0 01.518.213z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPortabilityFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11 3.16c2.8 0 4.98.734 6.473 2.18 1.548 1.497 2.335 3.74 2.336 6.66 0 .401-.015.791-.045 1.168l.345-.403c.294-.345.596-.7.851-.955a.561.561 0 01.793.793 16.35 16.35 0 00-.79.89c-.297.348-.602.709-.86.964-.328.322-.678.484-1.025.484-.345 0-.686-.16-1.003-.476-.224-.224-.636-.703-1.32-1.495l-.344-.401a.56.56 0 11.849-.731l.345.4c.44.513.78.905 1.011 1.164.049-.445.073-.914.073-1.402 0-2.605-.673-4.574-1.995-5.857C15.417 4.908 13.501 4.28 11 4.28c-2.502 0-4.418.628-5.695 1.863-1.322 1.28-1.995 3.252-1.995 5.86 0 2.608.673 4.577 1.995 5.86 1.277 1.235 3.193 1.863 5.695 1.863 1.722 0 3.176-.3 4.322-.888a.56.56 0 01.513.997c-1.309.67-2.934 1.008-4.835 1.008-2.802 0-4.98-.733-6.474-2.179-1.549-1.498-2.336-3.74-2.336-6.66 0-2.922.787-5.166 2.336-6.665C6.02 3.894 8.198 3.16 11 3.16zm2.036 2.258c.79 0 1.266.333 1.53.61.243.26.534.723.537 1.457v8.499c0 .733-.291 1.196-.535 1.456-.263.28-.742.61-1.53.61h-4.69c-.79 0-1.266-.333-1.53-.61-.243-.26-.535-.723-.535-1.456V8.745c0-.294.115-.577.323-.787l2.173-2.207c.21-.213.499-.333.799-.333zM9.66 14.205h-.894v1.075h.894v-1.075zm1.453 0h-.896v1.075h.896v-1.075zm1.46 0h-.9v1.075h.9v-1.075zm.003-1.644h-3.81v1.084h3.81V12.56zm0-1.664h-.9V12h.9v-1.103zm-1.463 0h-.896V12h.896v-1.103zm-1.456 0h-.894V12h.894v-1.103z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPortabilityLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.921 3.188c2.801 0 4.972.725 6.45 2.156 1.472 1.423 2.248 3.535 2.31 6.28l.005.362c0 .715-.047 1.396-.14 2.03.04-.033.083-.072.128-.117.241-.24.544-.597.838-.941.297-.35.605-.712.86-.967a.279.279 0 11.395.395c-.238.238-.538.591-.83.933-.299.353-.61.717-.868.975-.271.277-.554.415-.837.415-.277 0-.555-.135-.824-.404-.22-.221-.644-.711-1.341-1.52l-.356-.413a.282.282 0 01.028-.395.282.282 0 01.395.028l.356.415c.666.773 1.106 1.286 1.31 1.49.06.06.118.11.172.147l-.045.27c.131-.714.198-1.5.198-2.341 0-2.765-.72-4.863-2.142-6.238-1.37-1.328-3.412-2-6.062-2-2.65 0-4.692.672-6.062 2C3.436 7.12 2.716 9.22 2.716 11.986c0 2.765.72 4.863 2.143 6.238 1.373 1.328 3.412 2 6.062 2 1.619 0 3.022-.252 4.17-.75a.28.28 0 11.225.515c-1.219.526-2.698.795-4.395.795-2.801 0-4.972-.725-6.451-2.157-1.535-1.484-2.314-3.72-2.314-6.641 0-2.922.779-5.157 2.314-6.642 1.479-1.431 3.65-2.157 6.451-2.157zm2.067 2.775c.588 0 .933.236 1.12.432.253.266.384.636.384 1.073v8.501c0 .437-.134.807-.383 1.073-.185.199-.533.434-1.12.434H8.295c-.588 0-.932-.235-1.12-.434-.252-.266-.384-.636-.384-1.073V8.731a.57.57 0 01.163-.392L9.128 6.13a.566.566 0 01.4-.168zm0 .56H9.526L7.352 8.732v7.24c0 .575.3.948.944.948h4.692c.644 0 .944-.373.944-.947V7.47c0-.574-.3-.946-.944-.946zm-.18 3.796a.28.28 0 01.281.28v4.944a.28.28 0 01-.28.28h-4.37a.28.28 0 01-.28-.28V10.6a.28.28 0 01.28-.28h4.37zM9.61 14.187h-.89v1.076h.89v-1.075zm1.457 0h-.896v1.075h.896v-1.075zm1.462 0h-.902v1.075l.903.001v-1.075zM8.72 12.543v1.084h3.81v-1.085H8.72zm.89-1.664h-.89v1.104h.89v-1.104zm1.457 0h-.896v1.104h.896v-1.104zm1.463 0h-.903v1.104h.902v-1.104z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPortabilityRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11 3.16c2.8 0 4.98.734 6.473 2.18 1.548 1.497 2.335 3.74 2.336 6.66 0 .401-.015.791-.044 1.168l.344-.403c.294-.344.596-.7.851-.955a.561.561 0 01.793.793 16.35 16.35 0 00-.79.89c-.297.348-.602.709-.86.964-.328.322-.678.485-1.025.485-.345 0-.686-.16-1.003-.477-.224-.224-.636-.703-1.32-1.495l-.344-.401a.56.56 0 11.849-.731l.345.4c.44.513.78.905 1.011 1.164.049-.445.073-.914.073-1.402 0-2.605-.673-4.574-1.995-5.857C15.417 4.908 13.501 4.28 11 4.28c-2.502 0-4.418.628-5.695 1.863-1.322 1.28-1.995 3.252-1.995 5.86 0 2.608.673 4.577 1.995 5.86 1.277 1.235 3.193 1.863 5.695 1.863 1.722 0 3.176-.3 4.322-.888a.56.56 0 01.513.997c-1.309.67-2.934 1.008-4.835 1.008-2.802 0-4.98-.733-6.474-2.179-1.549-1.498-2.336-3.74-2.336-6.66 0-2.922.787-5.166 2.336-6.665C6.02 3.894 8.198 3.16 11 3.16zm2.036 2.26c.79 0 1.266.331 1.532.608.244.258.535.723.535 1.457v8.501c0 .734-.291 1.196-.535 1.457-.263.28-.742.61-1.53.61h-4.69c-.79 0-1.266-.333-1.53-.61-.243-.26-.535-.723-.535-1.457V8.748c0-.294.115-.577.323-.787l2.173-2.207c.21-.213.499-.333.799-.333zm0 1.121h-3.46L7.404 8.748v7.241c0 .574.3.947.944.947h4.689c.644 0 .944-.373.944-.947V7.488c0-.574-.3-.947-.944-.947zm-.18 3.795a.28.28 0 01.28.28v4.945a.28.28 0 01-.28.28h-4.37a.28.28 0 01-.28-.28v-4.944a.28.28 0 01.28-.28h4.37zm-3.199 3.868h-.89v1.076h.89v-1.076zm1.457 0h-.896v1.076h.896v-1.076zm1.462 0h-.902v1.076h.903l-.001-1.076zm0-1.644H8.767v1.084h3.809V12.56zm-2.919-1.664h-.89V12h.89v-1.104zm1.457 0h-.896V12h.896v-1.104zm1.463 0h-.903V12h.902v-1.103z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPostpayFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.515 8.054l-2.73-2.732a.562.562 0 00-.396-.165h-.26c-.045-.938-.314-1.644-.815-2.154-.563-.566-1.37-.843-2.468-.843H7.29c-1.109 0-1.916.269-2.47.826C4.266 3.544 4 4.348 4 5.451v13.11c0 1.114.272 1.927.826 2.479.552.546 1.359.812 2.465.812h6.555c1.106 0 1.913-.266 2.465-.812.557-.552.826-1.365.826-2.48v-2.45h2.67c.524 0 .874-.353.874-.877V8.449a.55.55 0 00-.166-.395zm-1.467.114h-.286c-.39 0-.67-.08-.832-.246-.163-.165-.247-.443-.247-.832v-.286l1.365 1.364zm-5.468 6.818V6.275h2.983v.812c0 1.398.801 2.199 2.199 2.199h.798v5.7c-1.056.003-4.947.003-5.98 0zm5.053-4.619a.42.42 0 01-.42.42h-3.286a.42.42 0 110-.84h3.286a.42.42 0 01.42.42zm0 1.639a.42.42 0 01-.42.42h-3.286a.42.42 0 110-.84h3.286a.42.42 0 01.42.42zm0 1.639a.42.42 0 01-.42.42h-3.286a.42.42 0 110-.84h3.286a.42.42 0 01.42.42zm-8.064 5.874c-.342 0-.628-.107-.821-.306-.193-.199-.289-.47-.289-.81 0-.697.415-1.114 1.112-1.114.698 0 1.112.417 1.112 1.115 0 .341-.098.613-.288.81-.19.195-.485.305-.826.305z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPostpayLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.112 2.156c1.02 0 1.762.25 2.269.762.499.507.742 1.241.742 2.25v.265h.535c.025 0 .05.004.073.01l-.073-.01a.278.278 0 01.182.068.111.111 0 01.017.014l2.731 2.73.016.02.011.014-.027-.033a.276.276 0 01.052.07l.007.018a.193.193 0 01.014.042.332.332 0 01.008.069v6.784c0 .367-.226.597-.593.597h-2.953v2.997c0 1.036-.243 1.781-.745 2.28-.496.493-1.238.731-2.266.731h-7.1c-1.029 0-1.771-.238-2.267-.731-.501-.499-.745-1.244-.745-2.28V5.167c0-1.028.24-1.767.74-2.266.498-.498 1.24-.745 2.271-.745h7.101zm-.003.56H7.011c-.874 0-1.487.191-1.877.58-.389.39-.574 1-.574 1.871v13.656c0 1.742.709 2.45 2.451 2.45h7.101c1.74 0 2.451-.708 2.451-2.45v-2.998h-2.947c-.38 0-.608-.229-.608-.613V6.04c0-.373.233-.605.608-.605h2.947v-.267c0-.854-.19-1.462-.583-1.857-.397-.4-1.008-.594-1.87-.594zm-3.552 15.11c.505 0 .832.266.832.834 0 .275-.075.477-.21.614-.145.148-.358.221-.622.221-.263 0-.476-.073-.621-.221-.135-.137-.21-.342-.21-.614 0-.568.327-.834.831-.834zm6.821-11.833h-3.762c-.014 0-.03 0-.045.004l-.002.02v9.195c0 .017 0 .034.002.05a.227.227 0 00.045.003h6.457c.011 0 .022 0 .033-.002.003-.012.003-.023.003-.034V8.724h-.812c-.622 0-1.1-.164-1.429-.492-.327-.328-.49-.807-.49-1.426v-.813zm1.378 7.368a.28.28 0 01.28.28.28.28 0 01-.28.28h-3.823a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.823zm0-1.639a.28.28 0 01.28.28.28.28 0 01-.28.28h-3.823a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.823zm0-1.639a.28.28 0 01.28.28.28.28 0 01-.28.28h-3.823a.28.28 0 01-.28-.28.28.28 0 01.28-.28h3.823zm.958-1.919l-1.776-1.773v.415c0 .938.42 1.359 1.359 1.359h.417z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPostpayRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.846 2.16c1.098 0 1.905.277 2.468.843.503.509.771 1.215.816 2.154h.262a.55.55 0 01.395.165l2.731 2.732a.55.55 0 01.165.395v6.784c0 .524-.35.877-.873.877l-.099-.001h-2.574v2.452c0 1.114-.271 1.927-.826 2.479-.555.546-1.359.812-2.465.812H7.29c-1.106 0-1.913-.266-2.465-.812C4.27 20.485 4 19.675 4 18.56V5.452c0-1.103.269-1.91.82-2.465.553-.554 1.362-.826 2.471-.826h6.555zm0 1.12H7.29c-.795 0-1.344.163-1.678.496-.333.334-.493.883-.493 1.675v13.11c0 1.582.589 2.17 2.171 2.17h6.555c1.583 0 2.17-.588 2.17-2.17v-2.452h-2.669c-.532 0-.888-.358-.888-.89V6.042c0-.53.356-.885.888-.885h2.661c-.079-1.327-.724-1.877-2.162-1.877zM10.57 17.29c.698 0 1.112.417 1.112 1.115 0 .341-.098.613-.288.81-.19.195-.485.305-.826.305-.342 0-.628-.107-.821-.306-.193-.199-.289-.47-.289-.81 0-.697.415-1.114 1.112-1.114zm5.992-11.012H13.58v8.71h5.98V9.287h-.798c-1.398 0-2.199-.8-2.199-2.198v-.813zm1.65 6.947a.42.42 0 110 .84h-3.286a.42.42 0 110-.84h3.286zm0-1.638a.42.42 0 110 .84h-3.286a.42.42 0 110-.84h3.286zm0-1.639a.42.42 0 110 .84h-3.286a.42.42 0 110-.84h3.286zm-.53-3.143v.286c0 .39.085.67.247.832.162.162.443.246.832.246h.285l-1.364-1.364z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 2.16c6.44 0 9.846 3.403 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.44 0-9.84-3.403-9.84-9.84C2.16 5.563 5.563 2.16 12 2.16zm2.843 14.387h-4.711c.818-.872 1.115-1.628 1.115-2.69 0-.498-.067-1.016-.2-1.54h2.11c.224 0 .404-.18.404-.404v-.397a.403.403 0 00-.404-.404h-2.482c-.17-.571-.325-1.218-.325-1.86 0-1.456.765-2.134 2.404-2.134.524 0 1.187.073 1.871.202a.402.402 0 00.476-.398v-.364a.406.406 0 00-.283-.387c-.728-.224-1.652-.305-2.224-.305-2.252 0-3.54 1.238-3.54 3.4 0 .71.142 1.387.302 1.93l-.661.045a.404.404 0 00-.375.404v.271c0 .224.179.404.403.404h.997c.168.563.244 1.044.244 1.526 0 .745-.171 1.342-1.04 2.182-.464.446-.697.673-.697 1.118 0 .16.031.302.093.423a.4.4 0 00.358.218h6.168a.403.403 0 00.404-.403v-.431a.408.408 0 00-.407-.406z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 21.026c5.99 0 9.023-3.034 9.023-9.02 0-5.989-3.037-9.022-9.023-9.022s-9.02 3.033-9.02 9.022c0 5.983 3.037 9.02 9.02 9.02zM12 2.16c6.443 0 9.846 3.406 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.437 0-9.84-3.403-9.84-9.84 0-6.44 3.403-9.846 9.84-9.846zm2.916 14.782c.112 0 .205.092.205.204v.44a.206.206 0 01-.205.204H8.62a.206.206 0 01-.184-.112.74.74 0 01-.07-.336c0-.367.19-.552.647-.994.938-.905 1.126-1.58 1.126-2.373 0-.557-.096-1.106-.303-1.765H8.667a.206.206 0 01-.204-.204v-.277c0-.11.08-.196.19-.205l.936-.064c-.19-.572-.379-1.345-.379-2.157 0-2.104 1.21-3.263 3.41-3.263.568 0 1.49.078 2.21.302a.208.208 0 01.142.196v.376a.208.208 0 01-.073.156.219.219 0 01-.17.045 10.94 10.94 0 00-1.947-.207c-1.787 0-2.658.779-2.658 2.38 0 .738.187 1.471.386 2.104h2.678c.112 0 .204.093.204.205v.409a.206.206 0 01-.204.204h-2.42c.18.608.266 1.205.266 1.78 0 1.156-.37 1.946-1.429 2.949h5.311v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 20.639c5.731 0 8.639-2.905 8.639-8.633 0-5.731-2.905-8.639-8.639-8.639-5.728 0-8.633 2.908-8.633 8.639 0 5.728 2.905 8.633 8.633 8.633zM12 2.16c6.44 0 9.846 3.403 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.44 0-9.84-3.403-9.84-9.84C2.16 5.563 5.563 2.16 12 2.16zm2.843 14.387c.222 0 .404.182.404.403v.431c0 .224-.18.404-.404.404H8.675a.4.4 0 01-.358-.219.914.914 0 01-.093-.423c0-.445.233-.672.698-1.117.871-.84 1.04-1.437 1.04-2.183 0-.481-.077-.963-.245-1.526H8.72a.402.402 0 01-.403-.403v-.272c0-.213.165-.387.375-.404l.661-.044a6.852 6.852 0 01-.302-1.93c0-2.16 1.291-3.4 3.54-3.4.572 0 1.496.08 2.224.304.169.054.283.21.283.387v.367a.402.402 0 01-.476.398 10.495 10.495 0 00-1.871-.202c-1.639 0-2.403.678-2.403 2.134 0 .642.154 1.286.325 1.86h2.476c.224 0 .403.182.403.404v.398c0 .224-.18.403-.403.403h-2.11c.132.526.2 1.042.2 1.54 0 1.062-.297 1.818-1.115 2.69h4.72z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundryFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.308 3.714c-.213-.017-5.19-.378-9.468 1.813-4.274-2.188-9.249-1.832-9.462-1.813A.409.409 0 002 4.12v13.46a.41.41 0 00.409.409c5.24 0 9.204 2.03 9.244 2.05.058.03.123.048.19.048.025 0 .05-.017.079-.023.039-.008.078-.008.112-.028l.016-.008h.006l.003-.003c.252-.126 4.126-2.036 9.218-2.036a.408.408 0 00.41-.41V4.12a.409.409 0 00-.379-.406"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundryLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.022 17.308c-4.101.076-7.325 1.291-8.614 1.857V6.355c3.404-1.725 7.384-1.753 8.614-1.716v12.669zM2.977 4.641c1.224-.039 5.21-.008 8.613 1.717v12.81c-1.285-.566-4.512-1.779-8.613-1.857V4.64zm18.487-.795c-.215-.02-5.193-.378-9.467 1.81-4.275-2.186-9.25-1.827-9.463-1.807a.404.404 0 00-.378.403v13.46a.41.41 0 00.41.406c5.24 0 9.204 2.03 9.243 2.05.059.03.123.045.19.045.017 0 .034-.011.05-.014a.38.38 0 00.138-.034l.02-.011h.002c.241-.12 4.118-2.04 9.219-2.04.227 0 .41-.181.41-.408V4.249a.398.398 0 00-.374-.403z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPoundryRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.431 16.812a23.065 23.065 0 00-7.96 1.687V6.519c3.067-1.505 6.593-1.614 7.96-1.589v11.882zM3.255 4.93c1.367-.017 4.885.081 7.96 1.588v11.98a23.115 23.115 0 00-7.96-1.686V4.93zm17.854-1.216c-.21-.017-5.056-.361-9.266 1.734C7.636 3.35 2.79 3.698 2.58 3.714a.62.62 0 00-.577.62v13.092c0 .342.28.622.627.622 5.06 0 8.885 1.95 8.925 1.969.092.047.19.07.29.07.026 0 .049-.017.077-.02a.596.596 0 00.249-.07c.328-.162 4.022-1.952 8.89-1.952a.623.623 0 00.628-.622V4.331a.627.627 0 00-.58-.617z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPowerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.234 4.579c-1.672-1.611-4.106-2.429-7.238-2.429-3.132 0-5.563.818-7.233 2.429C3.03 6.254 2.15 8.749 2.15 12.004s.88 5.751 2.613 7.423c1.673 1.61 4.107 2.429 7.236 2.429 3.129 0 5.566-.818 7.238-2.429 1.737-1.672 2.616-4.17 2.616-7.423 0-3.252-.882-5.75-2.619-7.425zm-7.745.308c0-.308.252-.56.56-.56.308 0 .56.252.56.56v4.098c0 .308-.252.56-.56.56a.562.562 0 01-.56-.56V4.887zm5.042 11.706c-1.036 1-2.535 1.504-4.457 1.504-1.921 0-3.417-.507-4.453-1.507-1.076-1.037-1.622-2.577-1.622-4.572 0-1.658.378-3.005 1.126-4.008.74-.989 1.82-1.633 3.218-1.91a.559.559 0 11.219 1.098c-2.32.462-3.446 2.039-3.446 4.82 0 1.681.432 2.947 1.28 3.765.821.79 2.06 1.19 3.678 1.19 1.62 0 2.857-.4 3.678-1.19.849-.818 1.28-2.087 1.28-3.765 0-2.82-1.16-4.403-3.543-4.84a.56.56 0 11.202-1.104c1.434.264 2.543.9 3.302 1.891.77 1.009 1.16 2.37 1.16 4.05.003 2-.544 3.538-1.622 4.578z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPowerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.988 2.15c3.14 0 5.574.812 7.238 2.417 1.725 1.664 2.602 4.163 2.602 7.423.003 6.435-3.4 9.838-9.84 9.838-6.435 0-9.838-3.4-9.838-9.838 0-6.437 3.4-9.84 9.838-9.84zm0 .56c-6.155 0-9.278 3.123-9.278 9.28 0 6.154 3.12 9.278 9.278 9.278 6.16 0 9.28-3.12 9.28-9.278.002-6.16-3.12-9.28-9.28-9.28zm1.574 3.374l.064.004c1.42.26 2.518.886 3.263 1.86.762.998 1.149 2.359 1.149 4.048 0 1.997-.54 3.53-1.602 4.555-.968.922-2.35 1.42-4.111 1.476l-.335.005c-1.921 0-3.417-.501-4.44-1.487-1.061-1.025-1.602-2.557-1.602-4.555 0-1.664.376-3.01 1.115-4.005.726-.972 1.793-1.605 3.18-1.88l.064-.005.062.009a.281.281 0 01-.017.548c-2.55.507-3.843 2.303-3.843 5.336 0 3.639 1.843 5.482 5.481 5.482 3.639 0 5.485-1.843 5.485-5.482 0-3.073-1.33-4.877-3.95-5.356a.28.28 0 01.037-.553zM11.99 4.579a.28.28 0 01.28.28v4.098a.281.281 0 01-.216.272l-.064.008a.28.28 0 01-.28-.28V4.859a.28.28 0 01.28-.28z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPowerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.999 2.15c3.129 0 5.563.818 7.238 2.429 1.737 1.675 2.616 4.17 2.616 7.425 0 3.252-.88 5.751-2.616 7.423-1.675 1.611-4.11 2.426-7.238 2.426-3.13 0-5.563-.818-7.236-2.428-1.733-1.673-2.613-4.169-2.613-7.423 0-3.253.88-5.751 2.613-7.426C6.436 2.968 8.87 2.15 12 2.15zm0 1.09c-5.813 0-8.76 2.95-8.76 8.764 0 5.813 2.947 8.76 8.76 8.76 5.815 0 8.764-2.947 8.764-8.76C20.761 6.19 17.813 3.24 12 3.24zm1.694 2.832c1.435.263 2.544.899 3.303 1.89.77 1.009 1.16 2.37 1.16 4.05 0 1.995-.547 3.536-1.625 4.572-1.036 1.006-2.535 1.513-4.454 1.513-1.919 0-3.417-.507-4.454-1.507-1.075-1.037-1.621-2.577-1.621-4.572 0-1.658.378-3.005 1.126-4.008.736-.989 1.82-1.633 3.218-1.91a.559.559 0 11.219 1.098c-2.32.462-3.446 2.039-3.446 4.82 0 1.681.432 2.947 1.28 3.765.821.79 2.06 1.19 3.678 1.19 1.62 0 2.857-.4 3.678-1.193.849-.818 1.28-2.084 1.28-3.764 0-2.821-1.16-4.404-3.543-4.84a.56.56 0 11.201-1.104zM12.05 4.326c.308 0 .56.253.56.56v4.099c0 .308-.252.56-.56.56a.562.562 0 01-.56-.56V4.887c0-.308.252-.56.56-.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPrepaidFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.463 2.16c1.11 0 1.919.269 2.473.826.552.555.818 1.362.818 2.463v13.109c0 1.115-.269 1.927-.826 2.479-.552.546-1.359.812-2.465.812h-6.555c-1.106 0-1.913-.266-2.465-.812-.554-.552-.826-1.364-.826-2.48v-3.562c-1.289-.09-2.314-.493-3.05-1.202-.874-.843-1.317-2.09-1.317-3.709 0-1.619.443-2.865 1.317-3.708.736-.712 1.764-1.112 3.056-1.202.042-.947.31-1.658.817-2.17.563-.567 1.37-.844 2.468-.844zM14.19 17.289c-.697 0-1.112.417-1.112 1.115 0 .339.093.61.289.81.196.198.479.305.82.305.342 0 .625-.107.821-.306.19-.199.289-.47.294-.81 0-.697-.414-1.114-1.112-1.114zM8.18 6.278c-1.255 0-2.21.305-2.835.907-.647.622-.975 1.6-.975 2.902 0 1.303.328 2.28.975 2.902.625.602 1.58.908 2.835.908s2.21-.306 2.835-.908c.647-.622.974-1.6.974-2.902s-.327-2.28-.974-2.902c-.625-.602-1.58-.907-2.835-.907zm0 .462a.35.35 0 01.35.35v.31c.373.046.717.16.995.331.204.126.235.292.235.379a.403.403 0 01-.404.403.538.538 0 01-.235-.064 2.232 2.232 0 00-.59-.225v1.454c1.248.188 1.517.916 1.515 1.502 0 .479-.177.885-.507 1.17-.255.222-.6.365-1.009.42v.328a.35.35 0 01-.7 0v-.319a2.88 2.88 0 01-1.32-.493.426.426 0 01-.196-.364.415.415 0 01.418-.41.514.514 0 01.266.085c.274.185.555.302.832.359v-1.538c-1.146-.21-1.395-.905-1.395-1.465 0-.852.538-1.434 1.395-1.552V7.09a.35.35 0 01.35-.35zm.35 3.787v1.429c.434-.093.69-.362.69-.746 0-.277-.09-.546-.69-.683zm-.7-2.308c-.362.09-.569.336-.569.697 0 .163 0 .474.569.642z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPrepaidLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.732 2.156c1.03 0 1.773.244 2.272.745.498.502.739 1.241.739 2.266v13.656c0 1.036-.244 1.781-.745 2.28-.496.493-1.238.731-2.266.731H10.63c-1.028 0-1.77-.238-2.266-.731-.502-.496-.745-1.244-.745-2.28l-.001-4.096-.011.001c-1.341-.048-2.39-.43-3.126-1.138-.817-.787-1.232-1.966-1.232-3.507 0-1.54.415-2.72 1.232-3.507.737-.71 1.791-1.091 3.134-1.138v-.27c0-1.009.245-1.746.743-2.25.51-.512 1.252-.762 2.272-.762h7.1zm0 .56H10.63c-.863 0-1.473.194-1.871.594-.392.395-.583 1.003-.583 1.857v.271h.014c1.34.048 2.392.43 3.126 1.138.818.788 1.233 1.967 1.233 3.507 0 1.541-.415 2.72-1.233 3.507-.737.711-1.792 1.093-3.138 1.139l.001 4.094c0 1.742.711 2.45 2.451 2.45h7.1c1.743 0 2.452-.708 2.452-2.45V5.167c0-.87-.188-1.484-.574-1.87-.387-.387-1.003-.58-1.877-.58zm-3.546 15.11c.504 0 .832.266.832.834 0 .275-.076.477-.21.614-.146.148-.362.221-.622.221s-.477-.073-.622-.221c-.135-.137-.21-.339-.21-.614 0-.568.327-.834.832-.834zM7.9 5.994c-1.33 0-2.35.33-3.031.986-.703.678-1.062 1.722-1.062 3.103 0 1.381.356 2.426 1.06 3.104.677.656 1.697.986 3.03.986 1.333 0 2.35-.33 3.028-.986.703-.678 1.059-1.723 1.059-3.104 0-1.38-.356-2.425-1.059-3.103-.675-.656-1.695-.986-3.025-.986zm0 .812a.28.28 0 01.28.28v.404c.382.038.735.15 1.017.325.12.075.187.179.187.294a.306.306 0 01-.305.305.429.429 0 01-.193-.056l-.003-.003a2.19 2.19 0 00-.703-.248l-.001 1.655.087.014c.664.11 1.401.445 1.401 1.403 0 .835-.561 1.39-1.488 1.496l.001.42a.28.28 0 01-.28.28.28.28 0 01-.28-.28v-.411a2.798 2.798 0 01-1.336-.48.33.33 0 01-.154-.286.316.316 0 01.319-.31.394.394 0 01.213.07c.318.21.638.34.957.388v-1.74l-.06-.008c-1.072-.2-1.303-.846-1.303-1.366 0-.812.526-1.365 1.363-1.461v-.405a.28.28 0 01.28-.28zm.281 3.602l-.001 1.658c.535-.081.857-.394.857-.86 0-.317-.107-.653-.856-.798zM6.883 8.913c0 .28.09.604.737.762V8.104c-.46.077-.737.374-.737.809z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPrepaidRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.463 2.16c1.11 0 1.916.269 2.47.826.555.558.821 1.362.821 2.465v13.11c0 1.114-.272 1.927-.826 2.479-.552.546-1.359.812-2.465.812h-6.555c-1.106 0-1.913-.266-2.465-.812-.557-.552-.826-1.365-.826-2.48l-.001-3.562c-1.29-.09-2.313-.493-3.05-1.202-.873-.843-1.316-2.09-1.316-3.709 0-1.619.443-2.865 1.317-3.709.737-.71 1.763-1.114 3.056-1.202.043-.948.31-1.658.817-2.173.564-.566 1.37-.843 2.468-.843h6.555zm0 1.12h-6.555c-1.445 0-2.09.555-2.163 1.897 1.29.089 2.313.493 3.048 1.201.874.844 1.317 2.09 1.317 3.71 0 1.618-.443 2.865-1.317 3.708-.737.71-1.763 1.114-3.055 1.203v3.562c0 1.582.588 2.17 2.17 2.17h6.555c1.583 0 2.17-.588 2.17-2.17V5.45c0-.792-.162-1.341-.492-1.675-.33-.333-.883-.496-1.678-.496zm-3.275 14.01c.698 0 1.112.417 1.112 1.115 0 .341-.098.613-.288.81-.19.195-.482.305-.826.305-.342 0-.628-.107-.821-.306-.193-.199-.289-.47-.289-.81 0-.697.415-1.114 1.112-1.114zM8.18 6.278c-1.258 0-2.21.305-2.835.907-.647.622-.975 1.6-.975 2.902 0 1.303.328 2.28.975 2.902.625.602 1.58.908 2.835.908s2.21-.306 2.835-.908c.647-.622.974-1.6.974-2.902s-.327-2.28-.974-2.902c-.625-.602-1.577-.907-2.835-.907zm0 .462a.35.35 0 01.35.35v.31c.373.046.717.16.997.331.205.126.236.292.236.379 0 .224-.18.403-.404.403a.518.518 0 01-.235-.064l-.006-.003a2.135 2.135 0 00-.587-.223L8.53 9.677l.104.017c1.162.213 1.414.916 1.414 1.486 0 .479-.176.882-.507 1.17-.257.222-.6.364-1.01.42v.328a.35.35 0 01-.701 0v-.32a2.889 2.889 0 01-1.32-.492.423.423 0 01-.196-.364.411.411 0 01.418-.41.514.514 0 01.266.085c.277.184.555.304.831.358v-1.538c-1.146-.213-1.394-.905-1.394-1.464 0-.85.537-1.433 1.394-1.552V7.09a.35.35 0 01.351-.35zm.351 3.784v1.43c.432-.092.688-.361.688-.746 0-.277-.09-.547-.688-.684zM7.264 8.916c0 .162 0 .472.564.64l.001-1.334c-.359.089-.565.335-.565.694z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPresentationFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.883 7.268l.009-.365a1.198 1.198 0 00-.317-.022L4.379 6.873a.794.794 0 00-.28.045v.364c.061.014.165.028.308.022h.518c.045 0 .084-.008.12-.008l13.85.008c.053-.008.097.006.142.006h.566a.791.791 0 00.28-.042zm-7.921 13.621c.353-.008.353-.187.353-.31 0-.118 0-.314-.3-.32h-.059c-.263 0-.286.151-.286.311-.003.126-.003.314.292.32zm-.423-16.282l-2.2 1.176 5.194.008-2.045-1.201a1.31 1.31 0 01-.45.081h-.085c-.134 0-.277-.022-.414-.064zm.414-1.513c-.263.008-.286.151-.286.314 0 .16.023.319.295.319.353-.008.353-.188.353-.31 0-.119 0-.315-.3-.32l-.062-.003zm8.782 3.048c.179.16.277.378.285.602l-.008.689c0 .395-.294.714-.76.865.01.05.023.11.023.166l-.008 8.383c0 .645-.594 1.177-1.33 1.177l-6.379-.008v1.403c.415.168.737.546.737 1.157 0 .848-.63 1.243-1.255 1.257h-.098c-.616-.008-1.25-.4-1.25-1.266 0-.619.323-.988.74-1.157v-1.394H5.093c-.52.02-.834-.177-1.017-.342a1.09 1.09 0 01-.36-.82V8.466c0-.05.008-.101.013-.152a1.272 1.272 0 01-.482-.263.833.833 0 01-.277-.61v-.69c0-.56.594-.966 1.406-.966h2.639l3.725-1.992a1.496 1.496 0 01-.053-.386c0-.857.63-1.25 1.255-1.258v.008h.098c.616.006 1.25.407 1.25 1.258 0 .132-.015.247-.046.35l3.48 2.025h2.834c.504-.02.919.11 1.177.35zm-5.314 8.781H8.483l1.165-1.767 2.526.946a.45.45 0 00.474-.123l1.826-2.224.045.289c.03.196.21.341.406.341.023 0 .045-.008.067-.008a.413.413 0 00.348-.46l-.18-1.162a.413.413 0 00-.414-.333h-1.333a.407.407 0 00-.415.392c0 .224.188.398.415.398h.442l-1.664 2.03-2.557-.952a.41.41 0 00-.496.154l-1.196 1.818v-3.79a.402.402 0 00-.412-.398h-.003a.4.4 0 00-.414.387v4.86c0 .218.18.4.414.4h7.891a.41.41 0 00.415-.4.404.404 0 00-.412-.398z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPresentationLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.26 7.316s.07-.011.07-.286c0-.26-.092-.333-.092-.333-.042-.034-.138-.056-.451-.056H4.22c-.3 0-.364-.017-.48.092-.002 0-.066.07-.064.328.003.24.115.308.115.308.062.045.093.076.406.076H19.77c.291-.003.468-.093.49-.13zm-.776 9.588V8.436a.232.232 0 00-.07-.176c-.053-.05-.151-.065-.269-.081H4.82c-.176.03-.322.131-.322.257v8.48a.2.2 0 00.079.167c.07.065.193.087.353.087l14.16.009c.204 0 .394-.126.394-.275zm-7.045 3.773c0-.117 0-.42-.423-.426h-.07c-.409 0-.409.309-.409.426 0 .11 0 .426.415.426.487-.006.487-.308.487-.426zm-1.005-16.31L8.546 5.903h6.736l-2.697-1.552a1.373 1.373 0 01-.546.132h-.084a1.398 1.398 0 01-.521-.118zm.515-1.48c-.409 0-.409.308-.409.429 0 .12 0 .426.423.434.476-.006.476-.314.476-.426 0-.117 0-.425-.423-.434.003-.003-.067-.003-.067-.003zm8.843 3.32a.686.686 0 01.222.484v.692c0 .367-.331.647-.821.75a.95.95 0 01.061.295v8.479c0 .557-.52 1.006-1.168 1.006h-6.705v1.663c.462.126.829.485.829 1.104 0 .787-.591 1.154-1.166 1.163h-.1c-.577-.009-1.169-.367-1.169-1.163 0-.639.384-1 .838-1.118v-1.647l-6.667-.008c-.445.03-.745-.146-.899-.286a.97.97 0 01-.316-.706V8.434a.9.9 0 01.061-.295c-.246-.05-.454-.131-.59-.263a.69.69 0 01-.233-.484l.008-.692c0-.463.524-.793 1.247-.793h2.742l3.91-2.081a1.26 1.26 0 01-.1-.507c0-.796.59-1.154 1.176-1.163h.092c.577.017 1.166.384 1.166 1.168 0 .177-.031.34-.093.48l3.65 2.103h2.958c.468-.017.835.092 1.067.3zm-5.294 8.787c.207 0 .384.168.384.367a.375.375 0 01-.384.367H7.431a.377.377 0 01-.384-.367v-4.905c0-.199.177-.367.384-.367a.377.377 0 01.384.367v3.955l1.297-1.935a.38.38 0 01.462-.149l2.636.978 1.767-2.132h-.53a.372.372 0 01-.383-.358v-.009a.37.37 0 01.384-.367h1.367c.185 0 .347.132.378.308l.185 1.185c.039.196-.107.381-.322.418h-.054c-.185 0-.353-.132-.378-.309l-.059-.38-1.927 2.316a.393.393 0 01-.437.118l-2.605-.97-1.258 1.869h7.16z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPresentationRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.883 7.268l.009-.364c-.104-.023-.21-.029-.317-.023L4.382 6.873a.794.794 0 00-.28.045v.364c.061.014.165.028.308.022h.518c.045 0 .084-.008.12-.008l13.85.008c.052-.008.097.006.142.006h.563a.791.791 0 00.28-.042zm-.745 9.582l.008-8.383c-.022-.042-.075-.056-.15-.065L5.003 8.394c-.09.014-.16.056-.16.078v8.375c.022.06.09.082.218.082l13.872.008c.128 0 .196-.067.204-.087zm-7.176 4.04c.353-.009.353-.188.353-.311 0-.118 0-.314-.3-.32h-.059c-.263 0-.286.152-.286.311-.003.126-.003.314.292.32zm-.423-16.283L9.343 5.783l5.19.008-2.045-1.201a1.31 1.31 0 01-.45.081h-.085c-.134 0-.277-.022-.414-.064zm.414-1.513c-.263.008-.286.151-.286.314 0 .16.023.319.295.319.353-.008.353-.188.353-.31 0-.119 0-.315-.3-.32l-.062-.003zm8.779 3.048c.18.16.277.378.286.602l-.009.689c0 .395-.294.714-.759.865.009.05.023.11.023.166l-.009 8.383c0 .645-.594 1.177-1.33 1.177l-6.379-.008v1.403c.415.168.737.546.737 1.157 0 .849-.63 1.243-1.255 1.257h-.098c-.616-.008-1.25-.4-1.25-1.266 0-.619.323-.988.74-1.156v-1.395H5.093c-.52.02-.834-.177-1.017-.342a1.09 1.09 0 01-.36-.82V8.466c0-.05.008-.101.013-.152a1.272 1.272 0 01-.482-.263.833.833 0 01-.277-.61v-.69c0-.56.594-.966 1.406-.966h2.639l3.723-1.992a1.496 1.496 0 01-.054-.386c0-.857.63-1.25 1.255-1.258v.008h.098c.616.006 1.25.407 1.25 1.258 0 .132-.014.247-.045.35l3.482 2.025h2.834c.504-.02.919.11 1.174.35zm-5.311 8.781c.227 0 .415.174.415.4a.41.41 0 01-.415.401h-7.89a.407.407 0 01-.415-.398v-4.854c0-.227.179-.398.414-.398.227 0 .415.174.415.398v3.787l1.196-1.818a.412.412 0 01.496-.154l2.557.953 1.664-2.028h-.445a.407.407 0 01-.415-.398v-.003c0-.218.188-.395.415-.395h1.339c.204 0 .375.14.414.336l.18 1.163a.413.413 0 01-.348.46c-.022 0-.045.007-.067.007a.412.412 0 01-.406-.341l-.045-.289-1.827 2.224a.448.448 0 01-.473.126l-2.527-.946-1.168 1.767h6.936z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPriceDropFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.423 2c.854 0 1.387.532 1.387 1.387v10.638h2.717a.559.559 0 01.378.972l-7.098 6.56a.557.557 0 01-.76 0L4.948 15a.56.56 0 01.378-.975h2.717v-.543c-1.291-.09-2.317-.496-3.056-1.207-.877-.846-1.32-2.093-1.32-3.712 0-1.619.443-2.868 1.32-3.711.74-.715 1.765-1.118 3.056-1.208v-.257C8.042 2.532 8.569 2 9.415 2zm-6.82 2.745c-2.57 0-3.816 1.25-3.816 3.818 0 2.569 1.25 3.815 3.815 3.815 2.566 0 3.815-1.246 3.815-3.815s-1.246-3.818-3.815-3.818zm0 .47a.35.35 0 01.35.35v.289c.356.048.685.16.955.325.204.126.235.292.235.378 0 .222-.18.404-.404.404a.54.54 0 01-.238-.065l-.005-.002c-.184-.1-.363-.17-.544-.213v1.451l.06.01c1.161.213 1.414.916 1.414 1.485 0 .48-.177.883-.507 1.171-.248.213-.577.353-.966.413v.299a.35.35 0 01-.7-.003l-.001-.276a2.89 2.89 0 01-1.364-.497.423.423 0 01-.196-.364.411.411 0 01.417-.41.511.511 0 01.266.085c.292.194.586.316.877.366v-1.54l-.048-.006c-1.141-.21-1.389-.906-1.389-1.464 0-.863.555-1.452 1.437-1.558v-.277a.35.35 0 01.35-.35zm.35 3.767v1.41c.406-.101.646-.365.646-.737 0-.27-.085-.533-.646-.673zM7.641 7.364c0 .166 0 .488.61.653V6.66c-.386.079-.61.33-.61.704z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPriceDropLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.601 2.156c.706 0 1.11.404 1.11 1.107V14.18h2.717c.274 0 .37.163.4.233.03.07.076.252-.118.445L13 21.562a.562.562 0 01-.793 0L5.5 14.86c-.193-.193-.148-.375-.117-.445.03-.07.126-.233.4-.233H8.5v-1.075h-.011c-1.342-.048-2.394-.432-3.129-1.14-.82-.79-1.235-1.972-1.235-3.513 0-1.54.415-2.72 1.232-3.51.74-.713 1.797-1.095 3.143-1.14v-.54c0-.703.398-1.107 1.093-1.107H15.6zm0 .563H9.593c-.387 0-.532.149-.532.546l-.001.537c1.349.049 2.403.433 3.138 1.141.818.79 1.235 1.972 1.235 3.51 0 1.538-.414 2.723-1.235 3.51-.734.713-1.79 1.097-3.137 1.144v1.074c0 .309-.253.56-.56.56H6.18l6.423 6.424 6.423-6.423h-2.32a.562.562 0 01-.56-.56V3.261c0-.386-.156-.543-.546-.543zM8.708 4.357l.072-.002c-1.33 0-2.352.333-3.033.989-.706.68-1.062 1.725-1.062 3.106 0 1.381.359 2.429 1.062 3.107.676.651 1.688.985 3.01.989l.023-.003.024.002.257-.004c1.197-.045 2.121-.376 2.753-.984.706-.68 1.062-1.726 1.062-3.107 0-1.38-.359-2.428-1.062-3.106-.671-.644-1.666-.974-2.962-.988a.278.278 0 01-.144.001zm.072.819a.28.28 0 01.28.28l.001.355c.368.042.71.153.983.323.129.081.201.193.201.32a.332.332 0 01-.333.333.433.433 0 01-.204-.06l-.003-.002a2.183 2.183 0 00-.644-.237L9.06 8.084l.046.008c.676.11 1.425.452 1.425 1.428 0 .844-.553 1.404-1.47 1.523v.357a.28.28 0 01-.28.28.28.28 0 01-.28-.28l-.001-.343h-.03a2.802 2.802 0 01-1.362-.486.358.358 0 01-.168-.308.342.342 0 01.347-.34c.082.004.16.029.227.074.328.218.659.35.986.391v-1.68l-.114-.018c-1.09-.204-1.325-.863-1.325-1.394 0-.844.558-1.413 1.439-1.494v-.346a.28.28 0 01.28-.28zm.283 3.615l-.002 1.583c.491-.09.784-.39.784-.823 0-.296-.1-.613-.782-.76zM7.747 7.257c0 .477.349.66.753.746V6.47c-.474.063-.753.348-.753.788z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPriceDropRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.429 2c.854 0 1.386.532 1.386 1.387v10.638h2.717a.558.558 0 01.381.972l-7.103 6.558a.559.559 0 01-.76 0l-7.1-6.558a.562.562 0 01.38-.972h2.718v-.545c-1.292-.089-2.317-.493-3.056-1.205-.877-.846-1.32-2.093-1.32-3.712 0-1.619.443-2.868 1.32-3.714.739-.712 1.764-1.117 3.056-1.206v-.256C8.048 2.532 8.574 2 9.42 2h6.009zm0 1.12H9.42c-.14 0-.199.028-.21.04-.011.01-.042.075-.042.227v.256c1.291.09 2.317.494 3.056 1.206.877.843 1.32 2.092 1.32 3.711 0 1.62-.446 2.869-1.32 3.712-.739.714-1.766 1.119-3.056 1.208v1.103c0 .308-.252.56-.56.56H6.762l5.67 5.235 5.669-5.235h-1.846a.562.562 0 01-.56-.56V3.387c0-.14-.028-.205-.045-.222-.017-.017-.081-.045-.221-.045zM8.608 4.745c-2.566 0-3.815 1.25-3.815 3.818 0 2.569 1.249 3.818 3.815 3.818s3.815-1.25 3.815-3.818c0-2.569-1.25-3.818-3.815-3.818zm0 .47a.35.35 0 01.35.35v.289c.356.048.686.16.955.325.205.126.235.292.235.378a.403.403 0 01-.403.404.54.54 0 01-.238-.065l-.006-.002c-.184-.1-.363-.17-.543-.213v1.451l.06.01c1.16.213 1.413.916 1.413 1.485 0 .48-.176.883-.507 1.171-.248.213-.576.353-.965.413l-.001.299a.35.35 0 01-.7-.003v-.276a2.89 2.89 0 01-1.364-.497.423.423 0 01-.197-.364.411.411 0 01.418-.41.511.511 0 01.266.085c.292.194.585.316.877.366v-1.54l-.048-.006c-1.142-.21-1.39-.906-1.39-1.464 0-.863.556-1.452 1.437-1.558v-.277a.35.35 0 01.35-.35zm.351 3.767v1.41c.406-.101.646-.365.646-.737 0-.27-.086-.533-.646-.673zM7.647 7.364c0 .166 0 .488.61.653V6.66c-.387.079-.61.33-.61.704z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProcessLoadingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.2 12.65h-3.023a.604.604 0 110-1.21h3.022a.604.604 0 110 1.21zm-1.712 4.9a.602.602 0 01-.852.002l-.003-.003-2.137-2.14a.605.605 0 01.854-.854l2.138 2.137a.604.604 0 010 .857zM12.65 7.831a.604.604 0 11-1.21 0V4.807a.604.604 0 111.21 0v3.025zM12.566 19.2a.604.604 0 11-1.21 0v-3.025a.604.604 0 111.21 0V19.2zM9.45 15.35l-2.14 2.14a.605.605 0 01-.854-.854L8.594 14.5a.605.605 0 01.855.022.6.6 0 010 .83zm-5.247-3.389c0-.333.272-.605.605-.605h3.025a.604.604 0 110 1.21H4.807a.606.606 0 01-.605-.605zm10.356-3.305l2.137-2.137a.605.605 0 01.854.854L15.41 9.51a.605.605 0 01-.854 0 .608.608 0 01.003-.854zM12 2.16c-6.437 0-9.84 3.403-9.84 9.846 0 6.437 3.403 9.84 9.84 9.84 6.44 0 9.846-3.403 9.846-9.84 0-6.443-3.403-9.846-9.846-9.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProcessLoadingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.003 2.16c6.415 0 9.843 3.395 9.843 9.843s-3.395 9.843-9.843 9.843-9.843-3.395-9.843-9.843S5.555 2.16 12.003 2.16zm0 18.866c5.964 0 9.023-3.034 9.023-9.023S18 2.981 12.003 2.981 2.981 6.04 2.981 12.003c0 5.964 3.025 9.023 9.022 9.023zm0-16.782c.216 0 .392.162.41.378V7.74a.417.417 0 01-.41.409.41.41 0 01-.409-.41V4.654c0-.227.182-.409.41-.409zM8.15 11.947a.41.41 0 01-.41.41H4.62a.41.41 0 010-.819h3.118a.408.408 0 01.412.41zm.507 2.731a.411.411 0 01.58.028l.002.003c.16.148.166.398.017.557l-.017.017-2.156 2.149a.381.381 0 01-.311.123.41.41 0 01-.286-.695c-.003 0 2.17-2.182 2.17-2.182zm3.291 1.157a.41.41 0 01.41.409v3.076a.41.41 0 01-.819 0v-3.076a.406.406 0 01.41-.409zm3.336-1.1l2.182 2.181c.16.16.163.42.003.58l-.003.003a.42.42 0 01-.285.115.402.402 0 01-.286-.115l-2.185-2.182a.41.41 0 01-.003-.58l.003-.003a.41.41 0 01.574 0zm4.037-3.11a.41.41 0 010 .818h-3.076a.41.41 0 010-.818h3.076zM15.03 9.421a.435.435 0 01-.294-.115.42.42 0 010-.583l2.19-2.182a.411.411 0 01.575.583l-2.216 2.182a.471.471 0 01-.255.115z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProcessLoadingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 20.639c5.731 0 8.639-2.905 8.639-8.633 0-5.731-2.905-8.639-8.639-8.639-5.728 0-8.633 2.908-8.633 8.639 0 5.728 2.905 8.633 8.633 8.633zM12 2.16c6.44 0 9.846 3.403 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.437 0-9.84-3.403-9.84-9.84C2.16 5.563 5.563 2.16 12 2.16zm.045 2.042c.333 0 .605.272.605.605v3.025a.604.604 0 11-1.21 0V4.807a.608.608 0 01.605-.605zm-3.61 7.76a.606.606 0 01-.606.604H4.804a.604.604 0 110-1.21H7.83a.606.606 0 01.606.605zm.162 2.534a.605.605 0 01.854.854l-2.137 2.138a.604.604 0 01-.851.003l-.003-.003a.605.605 0 010-.855l2.137-2.137zm3.364 1.076c.333 0 .602.271.602.605v3.022a.602.602 0 01-1.204 0v-3.022c0-.334.269-.605.602-.605zm3.39-1.014l2.137 2.137a.604.604 0 01-.852.854l-2.14-2.14a.603.603 0 01-.033-.854.603.603 0 01.854-.034l.033.037zm3.848-3.115a.602.602 0 010 1.204h-3.025a.602.602 0 010-1.204h3.025zm-4.215-1.756a.606.606 0 01-.429-1.031l2.137-2.14a.605.605 0 01.855.854l-2.138 2.14a.604.604 0 01-.425.177z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProgramAlarmFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.367 11.42c0 2.919 1.37 4.277 4.306 4.277 2.935 0 4.305-1.358 4.305-4.277s-1.37-4.277-4.305-4.277c-2.936 0-4.306 1.358-4.306 4.277zm18.25 6.451c.201.16.274.426.184.667a.592.592 0 01-.565.403h-5.227c-.034.55-.185 1.359-.76 1.995-.534.602-1.31.907-2.296.907-.99 0-1.765-.305-2.3-.907-.574-.636-.72-1.449-.75-1.995H4.674a.598.598 0 01-.568-.403.59.59 0 01.187-.667c.412-.339.754-.779 1.037-1.302-2.03-.667-3.171-2.348-3.171-5.146 0-3.328 1.619-5.073 4.443-5.412 1.507-3.958 5.924-3.868 6.353-3.843.364-.025 3.002-.095 4.918 1.68C19.151 5.031 19.8 6.737 19.8 8.93v3.804c-.014.07-.19 3.504 1.816 5.137zM9.37 13.863a.607.607 0 01-.428-.177L7.244 12a.596.596 0 01-.18-.426V9.291c0-.333.272-.602.609-.602.336 0 .607.269.607.602v2.034l1.521 1.51a.597.597 0 010 .851.613.613 0 01-.43.177z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProgramAlarmLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.684 18.061h14.773c-1.675-2.095-1.504-5.19-1.496-5.336v-3.86c0-1.938-.546-3.431-1.619-4.434-1.709-1.6-4.218-1.451-4.244-1.443-.008 0-.016-.008-.025-.008-.017 0-.025.008-.033.008-.166-.017-3.78-.213-5.241 2.832 3.473.025 5.51 1.807 5.51 5.6 0 3.812-2.06 5.593-5.575 5.593-.482 0-.933-.033-1.358-.106-.194.423-.42.818-.692 1.154zm8.947 2.38c.434-.484.507-1.173.515-1.556H11c0 .386.073 1.075.507 1.557.345.386.874.583 1.563.583.692 0 1.216-.197 1.56-.583zM2.978 11.418c0 3.21 1.56 4.77 4.759 4.77 3.199 0 4.76-1.56 4.76-4.77 0-3.216-1.564-4.776-4.76-4.776-3.196 0-4.76 1.557-4.76 4.776zm18.717 6.742c.174.14.202.398.062.571a.404.404 0 01-.314.152h-5.48c-.007.51-.114 1.42-.719 2.103-.507.575-1.244.86-2.174.86-.932 0-1.67-.285-2.176-.86-.614-.689-.712-1.602-.712-2.1H4.703a.406.406 0 01-.254-.723c.442-.37.817-.855 1.112-1.437-2.171-.642-3.401-2.367-3.401-5.308 0-3.496 1.737-5.286 4.728-5.558 1.513-3.826 5.813-3.708 6.18-3.692.254-.016 2.91-.131 4.831 1.659 1.244 1.168 1.88 2.865 1.88 5.042v3.885c-.006.061-.196 3.667 1.916 5.406zM9.74 13.579a.397.397 0 01-.286.123.418.418 0 01-.294-.123l-1.709-1.714a.418.418 0 01-.123-.294V9.237c0-.23.18-.409.409-.409.23 0 .409.18.409.41v2.168l1.594 1.602a.391.391 0 010 .571z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconProgramAlarmRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.045 17.737h13.83c-1.449-2.093-1.295-4.897-1.286-5.042V8.93c0-1.84-.519-3.25-1.538-4.199-1.62-1.504-4.023-1.358-4.048-1.367-.017.009-.033 0-.042 0-.017 0-.03.009-.047 0-.146-.008-3.538-.193-4.953 2.591 3.311.087 5.235 1.84 5.235 5.468 0 3.74-2.039 5.485-5.52 5.485-.398 0-.77-.031-1.124-.073a6.198 6.198 0 01-.507.902zm8.303 2.398c.322-.356.42-.838.45-1.19h-3.68c.025.352.12.837.445 1.198.308.33.762.499 1.393.499.63-.003 1.084-.171 1.392-.507zM3.373 11.423c0 2.919 1.37 4.277 4.305 4.277 2.936 0 4.306-1.358 4.306-4.277.002-2.919-1.367-4.277-4.306-4.277-2.935 0-4.305 1.358-4.305 4.277zm18.25 6.451c.2.16.274.426.184.667a.588.588 0 01-.566.4h-5.227c-.033.55-.185 1.362-.759 1.995-.535.602-1.31.907-2.3.907-.988 0-1.764-.305-2.3-.907-.573-.636-.72-1.448-.753-1.995H4.678a.591.591 0 01-.566-.4.584.584 0 01.188-.667c.412-.339.754-.779 1.034-1.302-2.034-.67-3.174-2.35-3.174-5.149 0-3.328 1.619-5.073 4.443-5.412 1.507-3.958 5.924-3.868 6.353-3.843.364-.025 3.002-.098 4.918 1.68 1.28 1.183 1.927 2.889 1.927 5.082v3.804c-.005.073-.184 3.507 1.821 5.14zM8.946 13.686L7.25 12a.596.596 0 01-.18-.426V9.29c0-.334.272-.603.608-.603.334 0 .608.27.608.603v2.033l1.521 1.51s.496.4.496.734c0 .38-.291.54-.625.549-.308.008-.616-.314-.73-.429z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPuzzleFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.182 21.416H3.614c-.801 0-1.454-.67-1.454-1.49v-2.847a.65.65 0 01.207-.476.591.591 0 01.485-.154c.12.014.224.023.297.025h.036c.053 0 .112 0 .163-.005a2.76 2.76 0 00.857-.14c.991-.317 1.49-1.098 1.49-2.33 0-1.236-.496-2.02-1.479-2.329-.387-.137-.728-.15-.84-.156H3.11c-.056.002-.152.005-.267.02a.604.604 0 01-.479-.158.637.637 0 01-.204-.473v-2.54c0-.824.653-1.49 1.454-1.49h2.655a5.655 5.655 0 01-.03-.59c0-2.719 1.803-3.71 3.49-3.733h.29c1.715.048 3.533 1.056 3.533 3.75 0 .197-.011.387-.03.57h2.663c.799 0 1.446.669 1.446 1.49v1.907c.168-.02.308-.022.403-.022h.3c1.697.05 3.512 1.061 3.512 3.75 0 2.72-1.893 3.712-3.512 3.734a3.314 3.314 0 01-.703-.022v2.216c0 .823-.65 1.493-1.449 1.493"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPuzzleLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.003 17.648v2.448c0 .244.193.443.432.443H16.26a.434.434 0 00.423-.443V17.03c0-.14.064-.269.176-.35a.404.404 0 01.381-.056c.367.129.715.157.941.165.068 0 .154 0 .224-.006.634-.01 2.586-.232 2.586-2.739 0-2.412-1.782-2.728-2.557-2.754h-.283a3.02 3.02 0 00-.916.152.416.416 0 01-.379-.065.431.431 0 01-.17-.35V8.281a.434.434 0 00-.423-.442H12.77a.42.42 0 01-.34-.177.441.441 0 01-.06-.387c.103-.336.153-.694.153-1.1 0-2.423-1.793-2.734-2.563-2.754h-.277c-.754.011-2.518.297-2.518 2.737 0 .409.053.787.154 1.117a.441.441 0 01-.062.387.42.42 0 01-.339.177H3.435a.438.438 0 00-.432.442v2.143h.219c.288.011.697.05 1.154.21.826.263 2.238 1.059 2.238 3.406 0 2.345-1.41 3.143-2.252 3.412a3.621 3.621 0 01-1.135.188 1.485 1.485 0 01-.224.008m13.26 3.756H3.436c-.704 0-1.275-.588-1.275-1.308V17.19c0-.124.053-.241.143-.322a.42.42 0 01.33-.107c.132.017.247.025.325.025.073 0 .157 0 .23-.008.17-.003.521-.017.919-.151 1.106-.353 1.664-1.224 1.664-2.589 0-1.37-.558-2.238-1.659-2.585a3.082 3.082 0 00-.913-.168h-.277a6.09 6.09 0 00-.294.02.417.417 0 01-.325-.11.439.439 0 01-.14-.322V8.275c0-.72.571-1.308 1.274-1.308H6.39a5.337 5.337 0 01-.065-.818c0-2.619 1.734-3.58 3.356-3.599h.294c1.644.045 3.392 1.02 3.392 3.619 0 .28-.022.546-.061.798h2.958c.697 0 1.266.586 1.266 1.308v2.197c.266-.045.487-.056.622-.056h.3c1.632.047 3.38 1.022 3.38 3.619 0 2.621-1.82 3.58-3.378 3.602-.059.008-.17.008-.286.008a4.445 4.445 0 01-.638-.064v2.512c0 .726-.569 1.311-1.266 1.311"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconPuzzleRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.398 17.732v2.19c0 .124.095.222.216.222h12.568c.115 0 .208-.101.208-.221v-3c0-.205.095-.398.257-.516a.607.607 0 01.56-.084c.337.118.653.143.863.151.054 0 .13 0 .19-.005.743-.014 2.348-.275 2.348-2.47 0-2.096-1.44-2.457-2.302-2.483h-.275c-.126 0-.46.014-.835.138a.61.61 0 01-.554-.093.633.633 0 01-.252-.512V8.362c0-.123-.093-.224-.208-.224H12.76a.604.604 0 01-.498-.26.636.636 0 01-.09-.566 3.38 3.38 0 00.143-1.011c0-2.107-1.448-2.462-2.31-2.485h-.267c-.84.011-2.26.347-2.26 2.465 0 .381.047.726.142 1.03a.653.653 0 01-.09.567.619.619 0 01-.498.26H3.617a.22.22 0 00-.216.224l.005 1.885c.183.006.662.028 1.2.219.857.272 2.33 1.098 2.33 3.535 0 2.429-1.473 3.26-2.35 3.54-.502.171-.95.197-1.171.197-.009-.006-.011-.006-.017-.006m12.784 3.684H3.614c-.801 0-1.454-.67-1.454-1.49v-2.847a.65.65 0 01.207-.476.591.591 0 01.485-.154c.12.014.224.023.297.025h.036c.053 0 .112 0 .163-.005a2.76 2.76 0 00.857-.14c.991-.317 1.49-1.098 1.49-2.33 0-1.236-.496-2.02-1.479-2.329-.387-.137-.728-.15-.84-.156H3.11c-.056.002-.152.005-.267.02a.604.604 0 01-.479-.158.637.637 0 01-.204-.473v-2.54c0-.824.653-1.49 1.454-1.49h2.655a5.655 5.655 0 01-.03-.59c0-2.719 1.803-3.71 3.49-3.733h.29c1.715.048 3.533 1.056 3.533 3.75 0 .197-.011.387-.03.57h2.663c.799 0 1.446.669 1.446 1.49v1.907c.168-.02.308-.022.403-.022h.3c1.697.05 3.512 1.061 3.512 3.75 0 2.72-1.893 3.712-3.512 3.734a3.314 3.314 0 01-.703-.022v2.216c0 .823-.65 1.493-1.449 1.493"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconQuestionFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.542 12.062c-1.339 1.55-1.39 1.61-1.39 3.056a.4.4 0 01-.4.4h-.442a.394.394 0 01-.393-.324 3.13 3.13 0 01-.056-.633c0-1.084.381-1.726 1.236-2.754l.162-.196c1.406-1.664 1.672-2.126 1.672-2.913 0-.557-.16-.922-.535-1.221-.215-.171-.593-.37-1.627-.37-.56 0-1.059.064-1.667.219a.4.4 0 01-.49-.317l-.064-.345a.4.4 0 01.221-.437c.378-.179 1.303-.364 2.196-.364.941 0 1.692.21 2.235.62.698.512 1.026 1.223 1.026 2.232-.003 1.232-.516 1.966-1.684 3.347m-1.955 6.216c-.535 0-.874-.333-.874-.826v-.065c0-.496.347-.843.843-.843.53 0 .874.347.874.843 0 .56-.339.89-.843.89m.807-16.117c-.275-.005-.603-.014-.894-.008-1.563.014-9.35.549-9.35 9.812 0 9.266 7.84 9.849 9.412 9.871a36.113 36.113 0 00.863-.003c1.57-.028 9.408-.635 9.408-9.812.003-9.17-7.862-9.823-9.44-9.86"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconQuestionLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.419 21.007c2.017-.042 8.597-.793 8.597-8.989 0-8.196-6.611-8.991-8.636-9.039-.272-.008-.591-.008-.877-.008-2 .017-8.532.72-8.532 8.989 0 8.285 6.58 9.025 8.596 9.047.289.009.597 0 .852 0zm-.025-18.849c1.582.042 9.442.698 9.442 9.86 0 9.171-7.834 9.78-9.4 9.81-.18 0-.387.008-.591.008-.098 0-.196 0-.286-.008-8.95-.123-9.409-8.247-9.409-9.868 0-1.622.451-9.729 9.342-9.81h.271c.213 0 .443 0 .63.008zm-.81 14.687c.395 0 .647.255.647.655v.065c0 .383-.255.638-.647.638-.434 0-.689-.255-.689-.638V17.5c0-.4.255-.655.647-.655h.042zm2.532-10.311c.664.484.97 1.14.97 2.115 0 1.187-.485 1.876-1.664 3.277-1.362 1.566-1.468 1.697-1.468 3.255 0 .112-.09.204-.205.204h-.448a.209.209 0 01-.204-.165c-.034-.18-.05-.37-.05-.608 0-.95.271-1.557 1.212-2.68l.171-.205c1.451-1.711 1.745-2.238 1.745-3.098 0-.639-.187-1.067-.622-1.412-.246-.196-.68-.426-1.787-.426-.574 0-1.098.073-1.753.23a.193.193 0 01-.166-.025.285.285 0 01-.09-.132l-.064-.353a.21.21 0 01.124-.23c.361-.165 1.285-.344 2.148-.344.913.006 1.636.205 2.151.597z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconQuestionRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.405 20.626c1.93-.037 8.227-.76 8.227-8.608 0-7.846-6.328-8.608-8.266-8.656a28.489 28.489 0 00-.857-.008c-1.914.02-8.155.686-8.155 8.61 0 7.933 6.295 8.64 8.225 8.667.277.006.58 0 .826-.005zM12.394 2.16c1.577.036 9.442.689 9.442 9.857 0 9.176-7.837 9.784-9.411 9.812-.174.003-.379.006-.58.006-.096 0-.19 0-.283-.003-1.572-.02-9.412-.602-9.412-9.868 0-9.267 7.787-9.799 9.35-9.813.291-.005.62 0 .894.009zm-.84 14.383c.529 0 .873.348.873.846 0 .558-.339.891-.843.891-.538 0-.874-.333-.874-.826v-.065c.003-.498.348-.846.843-.846zm2.644-10.058c.697.515 1.025 1.224 1.025 2.232 0 1.233-.51 1.966-1.678 3.345-1.339 1.549-1.392 1.61-1.392 3.056a.4.4 0 01-.4.4h-.443a.404.404 0 01-.395-.325 3.187 3.187 0 01-.056-.633c0-1.084.38-1.725 1.235-2.753l.162-.196c1.407-1.664 1.673-2.13 1.673-2.914 0-.557-.16-.921-.535-1.22-.216-.172-.594-.37-1.628-.37-.563 0-1.059.064-1.666.218a.403.403 0 01-.488-.289c-.003-.008-.003-.016-.005-.025l-.065-.342a.4.4 0 01.221-.437c.379-.179 1.306-.364 2.2-.364.94-.002 1.691.205 2.235.617z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRatingFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.255 18.127a.22.22 0 00.224-.215V8.248H3.207v9.664c0 .117.101.215.224.215h16.824zM5.188 6.732c0-.3-.25-.537-.56-.537-.311 0-.56.24-.56.537 0 .297.249.538.56.538.31 0 .56-.24.56-.538zm1.678 0c0-.3-.25-.537-.558-.537-.31 0-.56.24-.56.537 0 .297.25.538.56.538.308 0 .558-.24.558-.538zm1.677 0c0-.3-.249-.537-.56-.537-.31 0-.56.24-.56.537 0 .297.25.538.56.538.311 0 .56-.24.56-.538zm11.712-2.21c.787 0 1.431.617 1.431 1.379v12.01c0 .76-.641 1.379-1.431 1.379H3.429c-.79 0-1.429-.616-1.429-1.378V5.9c0-.76.641-1.379 1.429-1.379h16.826zm-6.56 7.56c.19.029.347.157.409.34a.504.504 0 01-.126.529l-.723.706c-.006.005-.009.014-.006.02l.171.997a.498.498 0 01-.216.504.516.516 0 01-.529.03l-.89-.47c-.004-.003-.006-.003-.01 0l-.893.47a.508.508 0 01-.53-.03.507.507 0 01-.215-.504l.171-.998a.065.065 0 00-.005-.02l-.723-.705a.51.51 0 01.283-.868l.997-.146c.003 0 .008-.003.011-.008l.446-.908a.513.513 0 01.922 0l.444.908c.003.005.006.008.012.008l1 .146zm5.63 0c.19.029.347.157.409.34a.504.504 0 01-.126.529l-.723.706c-.005.005-.008.014-.005.02l.17.997a.498.498 0 01-.215.504.516.516 0 01-.53.03l-.89-.47c-.003-.003-.006-.003-.009 0l-.893.47a.508.508 0 01-.53-.03.507.507 0 01-.216-.504l.171-.998a.046.046 0 00-.005-.02l-.723-.705a.51.51 0 01.283-.868l.997-.146a.014.014 0 00.011-.008l.446-.908a.513.513 0 01.922 0l.445.908c.002.005.005.008.01.008l1 .146zm-11.263 0c.19.029.347.157.409.34a.504.504 0 01-.126.529l-.723.706c-.006.005-.009.014-.006.02l.171.997a.498.498 0 01-.216.504.516.516 0 01-.529.03l-.894-.47c-.002-.003-.005-.003-.008 0l-.894.47a.508.508 0 01-.529-.03.507.507 0 01-.216-.504l.171-.998a.065.065 0 00-.005-.02l-.723-.705a.51.51 0 01.283-.868l.997-.146c.003 0 .008-.003.011-.008l.446-.908a.513.513 0 01.922 0l.445.908c.002.005.005.008.01.008l1.004.146z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRatingLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.725 18.692c.242 0 .441-.19.441-.427V8.587H2.834v9.68c0 .237.199.428.44.428l17.451-.003zM3.275 5.31a.435.435 0 00-.441.427v2.04h18.332v-2.04a.435.435 0 00-.44-.427H3.274zm17.45-.811c.703 0 1.275.555 1.275 1.235v12.53c0 .68-.572 1.235-1.275 1.235H3.275C2.572 19.503 2 18.948 2 18.268V5.738c0-.683.572-1.235 1.275-1.235 0-.003 17.45-.003 17.45-.003zM6.257 7.166a.572.572 0 01-.58-.563c0-.31.259-.563.58-.563.322 0 .58.25.58.563 0 .31-.258.563-.58.563zm1.742 0a.57.57 0 01-.58-.56v-.003c0-.31.258-.563.58-.563.321 0 .58.25.58.563 0 .31-.259.563-.58.563zm-3.48 0a.572.572 0 01-.581-.563c0-.31.259-.563.58-.563a.57.57 0 01.581.563c0 .31-.259.563-.58.563zm8.537 6.207l.595-.586-.8-.117a.7.7 0 01-.512-.367L12 11.61l-.339.688a.686.686 0 01-.518.373l-.796.117.592.583c.15.148.222.376.187.58l-.133.795.68-.362a.691.691 0 01.637-.005l.692.367-.137-.794a.691.691 0 01.19-.578zm.93-1.19a.527.527 0 01.424.353.53.53 0 01-.128.552l-.751.738c-.003.002-.006.01-.006.02l.177 1.041a.524.524 0 01-.222.526.524.524 0 01-.55.032l-.924-.493L12 14.95c-.003 0-.003 0-.003.002l-.928.493a.544.544 0 01-.25.062.504.504 0 01-.299-.094.524.524 0 01-.222-.526l.177-1.042c0-.008-.003-.017-.006-.02l-.748-.737a.529.529 0 01-.129-.552.527.527 0 01.425-.352l1.035-.151c.006 0 .009-.006.012-.009l.464-.947a.53.53 0 01.956 0l.464.947c.002.003.005.009.011.009l1.027.15zm4.91 1.19l.594-.586-.8-.117a.7.7 0 01-.512-.367l-.339-.694-.335.688a.686.686 0 01-.518.373l-.797.117.592.583a.67.67 0 01.188.58l-.134.795.68-.362a.691.691 0 01.638-.005l.691.367-.134-.794a.687.687 0 01.185-.578zm.93-1.19a.534.534 0 01.299.905l-.752.738c-.002.002-.005.01-.005.02l.176 1.041a.524.524 0 01-.222.526.524.524 0 01-.55.032l-.927-.493-.006-.002c-.002 0-.002 0-.002.002l-.925.493a.544.544 0 01-.25.062.504.504 0 01-.3-.094.524.524 0 01-.221-.526l.176-1.042c0-.008-.003-.017-.006-.02l-.748-.737a.529.529 0 01-.128-.552.527.527 0 01.424-.352l1.036-.151c.005 0 .008-.006.011-.009l.464-.947a.53.53 0 01.956 0l.464.947c.003.003.006.009.011.009l1.025.15zm-12.61 1.19l.595-.586-.8-.117a.7.7 0 01-.512-.367l-.338-.694-.34.688a.686.686 0 01-.517.373l-.797.117.592.583a.67.67 0 01.188.58l-.137.795.68-.362a.691.691 0 01.638-.005l.691.367-.136-.794a.702.702 0 01.193-.578zm.93-1.19a.527.527 0 01.425.353.53.53 0 01-.128.552l-.751.74c-.006.003-.009.012-.006.02l.176 1.042a.524.524 0 01-.222.526.524.524 0 01-.549.032l-.925-.493c-.003 0-.003-.003-.005-.003-.003 0-.003 0-.003.003l-.928.493a.544.544 0 01-.25.062.532.532 0 01-.524-.62l.176-1.042a.044.044 0 00-.005-.02l-.749-.737a.529.529 0 01-.128-.552.527.527 0 01.424-.353l1.036-.15c.006 0 .009-.006.011-.009l.464-.948a.53.53 0 01.956 0l.464.948c.003.003.006.009.012.009-.006-.003 1.03.148 1.03.148z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRatingRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.23 18.105a.222.222 0 00.227-.218V8.842H3.23v9.042c0 .12.1.218.227.218H20.23v.003zM3.457 5.707a.222.222 0 00-.227.219v1.73h17.227v-1.73a.223.223 0 00-.227-.219H3.457zM20.23 4.522c.804 0 1.456.63 1.456 1.404v11.958c0 .773-.652 1.403-1.456 1.403H3.457c-.804 0-1.457-.63-1.457-1.403V5.926c0-.773.653-1.404 1.457-1.404H20.23zM6.17 7.15a.56.56 0 01-.568-.55.56.56 0 01.569-.548c.316 0 .568.246.568.549a.558.558 0 01-.568.549zm1.712 0a.558.558 0 01-.568-.55.56.56 0 01.568-.548c.317 0 .569.246.569.549a.56.56 0 01-.569.549zm-3.42 0a.558.558 0 01-.568-.55.56.56 0 01.568-.548c.317 0 .569.246.569.549a.56.56 0 01-.569.549zm8.33 5.98l.415-.406-.546-.078a.81.81 0 01-.597-.426l-.22-.454-.222.448a.808.808 0 01-.602.432l-.541.078.415.403c.176.171.26.435.218.67l-.092.535.445-.233a.806.806 0 01.74-.008l.462.244-.093-.535a.782.782 0 01.219-.67zm1.004-1.078a.519.519 0 01.29.885l-.736.72c-.005.005-.008.014-.005.02l.173 1.016a.52.52 0 01-.759.546l-.91-.478c-.003 0-.003-.003-.006-.003s-.003 0-.005.003l-.91.478a.541.541 0 01-.544-.03.512.512 0 01-.219-.516l.174-1.017c.003-.008 0-.014-.006-.02l-.736-.719a.519.519 0 01.291-.885l1.017-.149c.003 0 .008-.005.011-.008l.457-.924a.515.515 0 01.467-.292c.202 0 .381.112.468.292l.454.924c.003.003.006.008.011.008l1.023.149zM18.4 13.13l.414-.406-.546-.078a.81.81 0 01-.602-.437l-.219-.443-.221.448a.808.808 0 01-.602.432l-.541.078.415.403a.78.78 0 01.218.67l-.092.535.445-.233a.814.814 0 01.378-.095.83.83 0 01.364.087l.463.244-.093-.535a.782.782 0 01.219-.67zm1.002-1.078a.519.519 0 01.292.885l-.737.72c-.006.005-.008.014-.006.02l.174 1.016a.52.52 0 01-.76.546l-.91-.478c-.002 0-.002-.003-.005-.003s-.003 0-.003.003l-.91.478a.543.543 0 01-.543-.03.512.512 0 01-.22-.516l.175-1.017c.002-.008 0-.014-.006-.02l-.737-.719a.519.519 0 01.291-.885l1.017-.149c.003 0 .009-.005.012-.008l.453-.924a.523.523 0 01.938 0l.455.924c.002.003.005.008.01.008l1.02.149zM7.185 13.13l.414-.406-.546-.078a.81.81 0 01-.596-.426l-.222-.454-.221.448a.808.808 0 01-.602.432l-.544.078.415.403c.174.171.26.435.218.67l-.09.535.446-.233a.814.814 0 01.378-.095.82.82 0 01.364.087l.463.244-.093-.535a.772.772 0 01.216-.67zm1.003-1.078a.519.519 0 01.288.885l-.737.72c-.005.005-.008.014-.005.02l.174 1.016a.516.516 0 01-.516.605.55.55 0 01-.246-.059l-.91-.478c-.004 0-.004-.003-.006-.003-.003 0-.003 0-.003.003l-.91.478a.541.541 0 01-.544-.03.512.512 0 01-.218-.516l.173-1.017c0-.008 0-.014-.005-.02l-.737-.719a.519.519 0 01.291-.885l1.017-.149c.003 0 .009-.005.011-.008l.454-.924a.523.523 0 01.938 0l.454.924c.003.003.006.008.011.008l1.026.149z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconReloadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.496 2.196a.615.615 0 00-.647.112l-2.818 2.673a9.88 9.88 0 00-6.075-2.017c-4.958-.009-9.138 3.557-9.734 8.302-.597 4.745 2.585 9.171 7.4 10.3 4.815 1.129 9.748-1.392 11.482-5.871a.552.552 0 00-.336-.714.597.597 0 00-.445.01.568.568 0 00-.306.315c-1.308 3.358-4.703 5.529-8.42 5.383-3.717-.145-6.919-2.577-7.935-6.025-1.02-3.45.372-7.143 3.45-9.154 3.079-2.011 7.152-1.893 10.099.297l-2.6 2.473a.54.54 0 00-.134.611c.09.21.302.347.537.347l5.916-.355a.569.569 0 00.544-.524l.358-5.569a.574.574 0 00-.336-.594z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconReloadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.581 8.781c.096.202.3.328.521.325h.034l5.81-.336a.56.56 0 00.535-.516l.352-5.518a.553.553 0 00-.333-.538.59.59 0 00-.636.11l-2.571 2.448a10.112 10.112 0 00-6.21-2.12c-5.48 0-9.933 4.305-9.933 9.599 0 5.294 4.454 9.6 9.93 9.6 4.123 0 7.863-2.51 9.305-6.247a.818.818 0 00-.479-1.054l-.025-.008a.865.865 0 00-1.1.485c-1.194 3.092-4.29 5.17-7.701 5.17-4.532.003-8.219-3.562-8.219-7.946s3.687-7.95 8.219-7.95c1.818 0 3.56.574 4.989 1.63l-2.37 2.25a.534.534 0 00-.118.616"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRenovateDeviceChangeMobileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.519 10.104c.271 0 .49-.218.49-.49v-.639c0-1.366.636-2.002 2.003-2.002h.064a25.94 25.94 0 00-.286.246.492.492 0 00.63.754l.009-.009c.137-.117.826-.711.955-.837.4-.4.398-.902-.006-1.306a23.187 23.187 0 00-.95-.846.49.49 0 00-.691.057.49.49 0 00.056.691c.07.06.188.16.317.275h-.096c-.932 0-1.666.252-2.179.745-.535.515-.804 1.269-.804 2.238v.639a.484.484 0 00.488.484zm16.526-6.112c-.51-.493-1.238-.742-2.16-.742h-6.14c-.921 0-1.647.25-2.16.742-.531.513-.8 1.258-.8 2.219v11.56c0 .958.269 1.706.8 2.218.51.493 1.239.743 2.16.743h6.143c.922 0 1.647-.25 2.16-.743.532-.512.801-1.257.801-2.218V6.211c-.003-.958-.272-1.703-.804-2.219zm-4.77 14.499c-.112.112-.275.165-.474.165-.198 0-.36-.053-.473-.165-.1-.104-.16-.255-.16-.462 0-.429.25-.628.633-.628.384 0 .633.2.633.628 0 .204-.058.358-.16.462zM6.95 11.174H3.93c-1.109 0-1.77.661-1.77 1.77v5.992c0 1.11.661 1.77 1.77 1.77h3.02c1.11 0 1.77-.66 1.77-1.77v-5.991c-.003-1.11-.664-1.77-1.77-1.77zm-1.112 7.678c-.067.067-.163.098-.283.098a.394.394 0 01-.283-.098c-.062-.061-.095-.154-.095-.274 0-.255.148-.373.375-.373s.378.118.378.373a.374.374 0 01-.092.274z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRenovateDeviceChangeMobileLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.055 3.219c.877 0 1.56.232 2.034.686.49.473.74 1.176.74 2.087V18c0 .91-.25 1.614-.74 2.087-.473.457-1.157.69-2.034.69h-6.467c-.877 0-1.56-.233-2.034-.687-.49-.473-.74-1.177-.74-2.087V5.992c0-.91.25-1.614.74-2.087.476-.454 1.16-.686 2.034-.686h6.467zm-11.88 8.23c.48 0 .858.128 1.121.386.278.266.415.653.415 1.151v6.224c0 .499-.14.886-.415 1.152-.26.255-.638.386-1.117.386H3.694c-.479 0-.857-.129-1.12-.386-.278-.266-.418-.653-.418-1.152v-6.224c0-.498.14-.885.415-1.151.266-.255.641-.387 1.12-.387h3.485zm11.88-7.67h-6.467c-1.488 0-2.213.723-2.213 2.213V18c0 1.49.722 2.213 2.213 2.213h6.467c1.49 0 2.213-.723 2.213-2.213V5.992c0-1.49-.722-2.213-2.213-2.213zM7.18 12.009H3.694c-.675 0-.978.302-.978.977v6.224c0 .675.303.978.978.978H7.18c.675 0 .977-.303.977-.978v-6.224c0-.675-.302-.977-.977-.977zM5.324 18.98c.182 0 .3.095.3.297 0 .098-.022.165-.076.218-.053.053-.128.078-.224.078a.319.319 0 01-.224-.078c-.047-.048-.075-.12-.075-.218 0-.202.117-.297.3-.297zm10.499-1.208c.302 0 .499.157.499.496 0 .163-.045.283-.127.364-.086.09-.215.132-.372.132s-.286-.042-.373-.132c-.08-.08-.126-.201-.126-.364 0-.339.196-.496.499-.496zM7.546 5.14c.028.026.694.591.938.835.322.322.325.692.006 1.008-.124.124-.86.757-.944.827a.28.28 0 01-.364-.426c.215-.184.513-.441.712-.617h-.48c-1.487 0-2.213.726-2.213 2.214v1.095a.28.28 0 11-.56.003V8.98c0-.91.25-1.614.74-2.087.473-.457 1.156-.686 2.033-.686h.501a30.396 30.396 0 00-.734-.642.28.28 0 11.365-.426z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRenovateDeviceChangeMobileRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.888 3.25c.922 0 1.647.25 2.16.742.532.513.801 1.258.801 2.219v11.56c0 .958-.269 1.706-.801 2.218-.513.493-1.241.743-2.163.743h-6.14c-.921 0-1.647-.25-2.16-.743-.531-.512-.8-1.26-.8-2.218V6.211c0-.958.269-1.706.8-2.219.51-.493 1.239-.742 2.16-.742h6.143zM6.95 11.174c1.11 0 1.77.661 1.77 1.77v5.992c-.003 1.107-.664 1.77-1.77 1.77H3.93c-1.109 0-1.77-.66-1.77-1.77v-5.991c0-1.11.661-1.77 1.77-1.77h3.02zM18.888 4.37h-6.143c-1.271 0-1.84.57-1.84 1.84v11.561c0 1.272.569 1.84 1.84 1.84h6.143c1.272 0 1.84-.568 1.84-1.84V6.211c0-1.272-.568-1.84-1.84-1.84zM6.95 12.295H3.93c-.484 0-.65.165-.65.65v5.991c0 .485.163.65.65.65h3.02c.485 0 .65-.165.65-.65v-5.991c0-.488-.165-.65-.65-.65zm-1.395 5.907c.23 0 .378.118.378.373 0 .12-.034.213-.095.274a.383.383 0 01-.28.098c-.12 0-.219-.03-.283-.098-.062-.061-.095-.15-.095-.274 0-.255.145-.373.375-.373zm10.246-.8c.384 0 .633.198.633.627 0 .207-.058.358-.16.462-.111.112-.274.165-.473.165-.198 0-.36-.053-.473-.165-.104-.104-.16-.258-.16-.462 0-.429.25-.628.633-.628zM7.426 4.97c.028.025.7.597.95.846.403.406.406.905.005 1.305-.1.101-.564.501-.815.717l-.14.12a.459.459 0 01-.316.124.489.489 0 01-.32-.863l.287-.247h-.065c-1.367 0-2.003.637-2.003 2.003v.64a.489.489 0 11-.98 0v-.64c0-.972.271-1.722.803-2.238.513-.495 1.247-.745 2.18-.745h.095c-.13-.113-.247-.215-.317-.274a.49.49 0 01-.056-.692.49.49 0 01.692-.056z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRestaurantFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.12 2.153c.328 0 .594.269.594.602v7.395c0 .613-.359 1.073-.835 1.073h-.3c.521 3.658.953 8.011.958 8.056.003 1.871-1.274 2.538-2.372 2.557h-.2c-1.089-.014-2.372-.683-2.372-2.51.011-.12.61-5.137 1.028-8.109l-.386.003c-.476 0-.835-.46-.835-1.073V2.79c0-.33.266-.62.594-.62.328 0 .594.25.594.583v4.535h.82V2.752a.6.6 0 01.594-.602c.328 0 .594.269.594.602v4.535h.922l.005-4.532a.602.602 0 01.597-.602zm7.756 11.428c.373 2.933.647 5.715.65 5.743.003 1.834-1.252 2.49-2.328 2.512h-.187c-1.079-.014-2.337-.666-2.337-2.462.006-.067.348-2.958.695-5.613h-.185a.598.598 0 01-.594-.603V6.083c0-2.157 1.734-3.91 3.863-3.91.328 0 .594.268.594.602v10.383a.579.579 0 01-.17.423z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRestaurantLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.635 10.193c.006-.023.006-.048.006-.073v-1.9H6.21v1.897c0 .025.002.05.005.073h.902c.025 0 .084.008.11.014a.408.408 0 01.33.462c-.426 2.843-1.143 8.801-1.151 8.863.002 1.271.907 1.481 1.448 1.49h.165c.54-.011 1.445-.221 1.445-1.527-.002-.011-.498-4.966-1.075-8.787a.406.406 0 01.39-.512h.856zm.415-8.026a.41.41 0 01.409.41v7.54c0 .507-.283.89-.653.89h-.543c.549 3.771 1.014 8.396 1.02 8.443.002 1.74-1.208 2.364-2.244 2.384h-.19c-1.037-.017-2.25-.641-2.25-2.356.011-.103.658-5.482 1.09-8.47h-.634c-.372 0-.655-.384-.655-.891 0-7.544 0-7.552.003-7.569a.4.4 0 01.412-.383h.008c.221.008.395.19.392.411v4.827H7.47V2.576a.41.41 0 01.39-.425.41.41 0 01.425.389v4.865h1.361V2.576a.403.403 0 01.404-.409zm6.244 18.852c.523-.011 1.4-.216 1.4-1.48-.003 0-.316-3.114-.725-6.251a.376.376 0 01-.012-.098v-.017c0-.165.098-.308.241-.375V3.036a2.969 2.969 0 00-2.552 2.938v6.807h.477c.224 0 .409.185.409.409l-.003.084c-.381 2.862-.796 6.3-.796 6.302.003 1.233.88 1.437 1.4 1.443h.16zm1.529-7.482c.39 3.03.68 5.933.683 5.964.003 1.706-1.184 2.316-2.198 2.336h-.188c-1.017-.014-2.205-.625-2.205-2.308.003-.048.379-3.16.743-5.93h-.42a.407.407 0 01-.407-.41V5.975a3.78 3.78 0 013.776-3.781c.224 0 .406.182.406.408v10.592c0 .137-.07.268-.19.344z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRestaurantRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.313 10.758a.58.58 0 01.017-.33.589.589 0 01.557-.41h.63V8.486H6.59v1.53h.687c.033 0 .07.002.106.008.317.059.563.367.516.686-.412 2.787-1.11 8.625-1.118 8.684.003.994.661 1.227 1.213 1.235h.154c.549-.011 1.207-.244 1.207-1.297-.005.006-.487-4.84-1.042-8.574zm1.804-8.605c.328 0 .594.269.594.602v7.395c0 .613-.359 1.073-.832 1.073h-.3c.521 3.658.953 8.011.958 8.056.003 1.871-1.277 2.538-2.372 2.557h-.2c-1.089-.014-2.372-.683-2.372-2.51.011-.12.61-5.137 1.028-8.106l-.386.003c-.476 0-.835-.46-.835-1.073V2.791c0-.33.266-.621.594-.621.328 0 .594.252.594.582v4.535h.82V2.752a.6.6 0 01.594-.602c.328 0 .594.269.594.602v4.535h.922l.005-4.532c0-.333.266-.602.594-.602zm6.059 18.482c.53-.012 1.165-.236 1.165-1.253-.003 0-.305-3.033-.7-6.092a.677.677 0 01-.014-.132v-.02a.6.6 0 01.235-.478V3.44a2.705 2.705 0 00-2.081 2.642v6.473h.263c.328 0 .594.27.594.602 0 .026-.003.084-.006.112-.372 2.804-.773 6.177-.773 6.177.006.958.639 1.182 1.168 1.188h.149zm1.697-7.054c.37 2.933.647 5.715.65 5.743.003 1.834-1.252 2.49-2.327 2.512h-.188c-1.076-.014-2.334-.666-2.334-2.462.003-.067.348-2.955.695-5.613h-.185a.598.598 0 01-.594-.603V6.083c0-2.157 1.734-3.91 3.863-3.91.328 0 .594.268.594.602v10.383a.604.604 0 01-.174.423z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRewindFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.237 4.579C17.565 2.968 15.13 2.15 11.999 2.15c-3.132 0-5.563.818-7.233 2.429C3.03 6.254 2.15 8.749 2.15 12.004s.88 5.751 2.613 7.423c1.673 1.61 4.107 2.429 7.236 2.429 3.129 0 5.566-.818 7.238-2.429 1.737-1.672 2.616-4.17 2.616-7.423 0-3.252-.88-5.75-2.616-7.425zM17.6 14.682a.56.56 0 01-.846.482l-4.989-2.97a.564.564 0 01-.215-.234v2.717a.56.56 0 01-.846.481l-4.99-2.969a.56.56 0 01-.002-.96l4.989-2.998a.56.56 0 01.849.48v2.756a.57.57 0 01.212-.233l4.99-2.997a.56.56 0 01.848.479v5.966z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRewindLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.988 2.15c3.14 0 5.574.812 7.238 2.417 1.725 1.664 2.602 4.163 2.602 7.423.003 6.435-3.4 9.838-9.84 9.838-6.435 0-9.838-3.4-9.838-9.838 0-6.437 3.4-9.84 9.838-9.84zm0 .56c-6.155 0-9.278 3.123-9.278 9.28 0 6.154 3.12 9.278 9.278 9.278 6.16 0 9.28-3.12 9.28-9.278.002-6.16-3.12-9.28-9.28-9.28zm-.737 5.423c.087.05.143.143.143.244l-.002 3.177a.275.275 0 01.1-.104l5.507-3.308a.277.277 0 01.283-.003c.086.05.143.143.143.243v6.586a.278.278 0 01-.28.28.288.288 0 01-.143-.04l-5.507-3.276a.284.284 0 01-.103-.107l.002 3.137a.28.28 0 01-.143.244.251.251 0 01-.135.04.288.288 0 01-.142-.04l-5.51-3.28a.28.28 0 01-.003-.482l5.507-3.308a.277.277 0 01.283-.003zm5.613.745l-4.68 2.813 4.68 2.787v-5.6zm-6.03-.005l-4.681 2.812 4.68 2.787v-5.6z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRewindRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.999 2.15c3.129 0 5.563.818 7.238 2.429 1.737 1.675 2.616 4.17 2.616 7.425 0 3.252-.88 5.751-2.616 7.423-1.675 1.61-4.11 2.426-7.238 2.426-3.13 0-5.563-.818-7.236-2.429-1.733-1.672-2.613-4.168-2.613-7.422 0-3.253.88-5.751 2.613-7.426C6.436 2.968 8.87 2.15 12 2.15zm0 1.09c-5.813 0-8.76 2.95-8.76 8.764 0 5.813 2.947 8.76 8.76 8.76 5.815 0 8.764-2.947 8.764-8.76C20.761 6.19 17.813 3.24 12 3.24zm-.712 4.983a.558.558 0 01.286.487l-.002 2.636a.554.554 0 01.134-.112l4.988-2.997a.562.562 0 01.85.479v5.966c0 .202-.11.387-.284.488a.578.578 0 01-.277.072.55.55 0 01-.286-.078l-4.989-2.97a.57.57 0 01-.135-.113l.001 2.596c0 .201-.11.386-.283.487a.548.548 0 01-.277.073.55.55 0 01-.286-.079L5.738 12.19a.562.562 0 01-.274-.479c0-.196.103-.38.271-.482l4.99-2.997a.562.562 0 01.562-.008zm5.135 1.482l-3.34 2.005 3.34 1.986V9.705zm-5.97-.003l-3.336 2.003 3.337 1.988V9.702z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRoadSignFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.99 2.15c6.44 0 9.846 3.406 9.846 9.846 0 6.437-3.406 9.84-9.846 9.84-6.437 0-9.84-3.403-9.84-9.84 0-6.44 3.403-9.846 9.84-9.846zm1.922 4.076a.656.656 0 00-.703-.084.639.639 0 00-.373.582v1.02H9.153c-.258 0-.499.1-.68.28a.942.942 0 00-.281.68v8.446a.41.41 0 00.409.409h2.96a.41.41 0 00.41-.409v-5.448h.868v1.011c0 .25.146.476.37.583.232.109.501.078.734-.112l3.067-2.97a.657.657 0 00.232-.493.628.628 0 00-.207-.47l-3.123-3.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRoadSignLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.99 21.016c5.99 0 9.023-3.034 9.023-9.02 0-5.989-3.037-9.022-9.023-9.022S2.97 6.01 2.97 11.996c0 5.986 3.037 9.02 9.02 9.02zm0-18.866c6.443 0 9.846 3.406 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.437 0-9.84-3.403-9.84-9.84 0-6.44 3.403-9.846 9.84-9.846zm1.768 10.345l2.689-2.6-2.69-2.608v.983c0 .227-.246.463-.47.463H9.248a.142.142 0 00-.1.042.133.133 0 00-.043.1v8.048h2.137v-5.456a.41.41 0 01.41-.41h1.63c.12.009.235.062.319.146a.504.504 0 01.151.317c.006 0 .006.975.006.975zm.255-6.101l3.123 3.028a.642.642 0 01-.022.963L14.04 13.36c-.233.19-.502.221-.731.115a.648.648 0 01-.376-.586v-1.01h-.868v5.453a.41.41 0 01-.409.409H8.693a.41.41 0 01-.409-.409v-8.46c0-.257.101-.498.283-.68a.956.956 0 01.681-.283l3.69.003v-1.02a.64.64 0 01.372-.582.657.657 0 01.703.084z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRoadSignRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.99 20.629c5.731 0 8.639-2.905 8.639-8.633 0-5.731-2.905-8.639-8.639-8.639-5.728 0-8.633 2.908-8.633 8.639 0 5.728 2.905 8.633 8.633 8.633zm0-18.479c6.44 0 9.846 3.403 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84-6.437 0-9.84-3.403-9.84-9.84 0-6.443 3.403-9.846 9.84-9.846zm1.933 9.86l2.143-2.073-2.143-2.076v.488c0 .333-.33.655-.664.655H9.366v7.62h1.692v-5.146c0-.334.271-.603.602-.603h1.596a.705.705 0 01.664.653v.482h.003zm.174-5.661l3.078 2.98a.812.812 0 01.266.608.824.824 0 01-.294.633l-3.003 2.905-.025.022a.383.383 0 01-.067.05c-.205.172-.56.216-.857.074a.827.827 0 01-.476-.754v-.79h-.451v5.143a.603.603 0 01-.603.602H8.766a.601.601 0 01-.602-.602V8.934A1.142 1.142 0 019.307 7.79h3.412v-.793c0-.325.184-.614.481-.754a.838.838 0 01.897.107z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRobotFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.303 11.68h4.543V4.67H6.199v2.123c.003.028.008.056.008.084V9.77c0 .028-.005.056-.008.084v1.83h4.543c.011 0 .02-.006.031-.006h2.499c.01-.003.02.002.03.002zm-1.9 1.974h1.236v-.753h-1.236v.753zm8.376 1.224h-6.49c-.006 0-.012.006-.02.006H10.77c-.005 0-.01-.006-.02-.006H4.26v5.74h1.832l-.002-.034v-3.678c0-.675.563-1.224 1.263-1.224h9.33c.698 0 1.264.546 1.264 1.224v3.678l-.003.034h1.832v-5.74h.003zm-1.933-1.975h-3.944v.754h5.877c.697 0 1.263.549 1.263 1.224v5.74c0 .675-.566 1.224-1.263 1.224H4.263C3.566 21.845 3 21.298 3 20.62v-5.74c0-.675.566-1.224 1.263-1.224h5.877v-.754H6.196c-.697 0-1.263-.546-1.263-1.224v-.689h-.664c-.698 0-1.263-.546-1.263-1.224v-2.89c0-.676.565-1.225 1.263-1.225h.664v-.983c0-.675.566-1.224 1.263-1.224h5.32v-.269a.613.613 0 01-.152-.39c0-.35.294-.635.656-.635.36 0 .655.286.655.636a.62.62 0 01-.151.39v.268h5.32c.697 0 1.262.546 1.262 1.224v.995h.675c.698 0 1.264.546 1.264 1.224v2.89c0 .676-.566 1.225-1.264 1.225h-.675v.677c.003.675-.563 1.224-1.26 1.224zm-8.21-5.322a.456.456 0 00.462-.448.454.454 0 00-.462-.445.454.454 0 00-.462.445c0 .25.204.448.462.448zm1.638-.445c0 .877-.736 1.588-1.641 1.588s-1.641-.711-1.641-1.588c0-.874.736-1.588 1.641-1.588s1.641.714 1.641 1.588zm3.135.429a.454.454 0 00.462-.446.454.454 0 00-.462-.445.454.454 0 00-.462.445c0 .244.207.446.462.446zm0-2.034c.905 0 1.639.711 1.639 1.588 0 .874-.737 1.588-1.64 1.588-.901 0-1.64-.711-1.64-1.588.002-.877.739-1.588 1.64-1.588zm-.765 3.896c.348 0 .63.275.63.61a.62.62 0 01-.63.612h-3.24a.622.622 0 01-.63-.611.62.62 0 01.63-.61h3.24z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRobotLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.986 10.212v1.938H18.07V4.315H5.986v5.897zm-2.146 0h1.306V7.038H3.84v3.174zm7.325 3.462h1.715v-.69h-1.715v.69zm9.04 7.336v-6.513H3.84v6.513h2.43c0-.011-.008-.022-.008-.036V16.8a.83.83 0 01.84-.824h9.84c.462 0 .84.367.84.824v4.174c0 .014-.005.025-.008.036h2.431zM7.1 20.974h9.84V16.8H7.1v4.174zm11.81-10.751h1.293V7.049H18.91v3.174zm-.841 2.75h-4.35v.704h6.484c.463 0 .84.37.84.823v6.513a.832.832 0 01-.84.823H3.84a.834.834 0 01-.84-.823V14.5c0-.454.375-.823.84-.823h6.485v-.703H5.986a.834.834 0 01-.84-.824v-1.115H3.84a.834.834 0 01-.84-.823V7.038c0-.454.375-.824.84-.824h1.306V4.315a.83.83 0 01.84-.823h5.616v-.376a.562.562 0 01-.162-.395c0-.316.263-.571.582-.571a.58.58 0 01.586.571.553.553 0 01-.165.395v.376h5.63c.462 0 .84.367.84.823v1.91h1.294c.462 0 .84.368.84.824v3.174a.834.834 0 01-.84.823h-1.294v1.104a.838.838 0 01-.843.824zM9.513 8.022a.68.68 0 00.686-.672.681.681 0 00-.686-.675.681.681 0 00-.687.675.68.68 0 00.687.672zm1.526-.672c0 .826-.683 1.496-1.526 1.496-.844 0-1.527-.673-1.527-1.496 0-.826.683-1.496 1.527-1.496a1.51 1.51 0 011.526 1.496zm3.504.653a.68.68 0 00.687-.673.681.681 0 00-.687-.675.681.681 0 00-.686.675c0 .37.308.673.686.673zm0-2.171c.844 0 1.527.672 1.527 1.498 0 .827-.683 1.496-1.527 1.496-.843 0-1.526-.672-1.526-1.496 0-.823.683-1.498 1.526-1.498zm-.759 3.896c.233 0 .42.185.42.412a.416.416 0 01-.42.412h-3.512a.416.416 0 01-.42-.412c0-.227.187-.412.42-.412h3.512z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRobotRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.3 11.68h4.543V4.67H6.196v2.123c.003.028.008.056.008.084V9.77c0 .028-.005.056-.008.084v1.83h4.543c.012 0 .02-.006.031-.006h2.499c.011-.003.02.002.03.002zm-1.9 1.974h1.236v-.753H11.4v.753zm8.376 1.224h-6.49c-.006 0-.012.006-.02.006h-2.499c-.005 0-.01-.006-.02-.006H4.264v5.74h1.832l-.003-.034v-3.678c0-.675.563-1.224 1.264-1.224h9.33c.698 0 1.264.546 1.264 1.224v3.678l-.003.034h1.832v-5.74h-.003zm-12.42 5.706h9.33v-3.678h-9.33v3.678zM4.269 9.766h.664v-2.89h-.664v2.89zm14.84.011h.672v-2.89h-.672v2.89zm-1.266 3.126H13.9v.754h5.877c.697 0 1.263.549 1.263 1.224v5.74c0 .675-.566 1.224-1.263 1.224H4.263C3.566 21.845 3 21.298 3 20.62v-5.74c0-.675.566-1.224 1.263-1.224h5.877v-.754H6.196c-.697 0-1.263-.546-1.263-1.224v-.689h-.664c-.698 0-1.263-.546-1.263-1.224v-2.89c0-.676.565-1.225 1.263-1.225h.664v-.983c0-.675.566-1.224 1.263-1.224h5.32v-.269a.613.613 0 01-.152-.39c0-.35.294-.635.656-.635.36 0 .655.286.655.636a.62.62 0 01-.151.39v.268h5.32c.697 0 1.262.546 1.262 1.224v.995h.675c.698 0 1.264.546 1.264 1.224v2.89c0 .676-.566 1.225-1.264 1.225h-.675v.677c0 .675-.565 1.224-1.263 1.224zm-8.21-5.322a.456.456 0 00.462-.448.454.454 0 00-.462-.445.454.454 0 00-.462.445c0 .25.204.448.462.448zm1.639-.445c0 .877-.737 1.588-1.642 1.588-.905 0-1.641-.711-1.641-1.588 0-.874.736-1.588 1.641-1.588s1.642.714 1.642 1.588zm3.134.429a.454.454 0 00.462-.446.454.454 0 00-.462-.445.454.454 0 00-.462.445c0 .244.207.446.462.446zm0-2.034c.905 0 1.639.711 1.639 1.588 0 .874-.737 1.588-1.639 1.588s-1.641-.711-1.641-1.588c.002-.877.74-1.588 1.641-1.588zm-.765 3.896c.348 0 .63.275.63.61a.62.62 0 01-.63.612h-3.24a.622.622 0 01-.63-.611.62.62 0 01.63-.61h3.24z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRocketFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.91 16.678C3.196 17.395 2 18.92 2 21.095c0 .342.275.62.616.62 2.244 0 3.821-1.343 4.395-1.92.97-.974.97-2.14 0-3.117-.972-.978-2.129-.975-3.1 0m13.067.165a2.617 2.617 0 00-.317-1.535 23.843 23.843 0 01-2.877 2.11c.171.366.334.736.485 1.097.19.454.462 1.101.655 1.376 1.272-1.02 1.953-2.034 2.054-3.048zM5.398 9.518c.325.137.655.283.983.437a23.915 23.915 0 012.095-2.893 2.597 2.597 0 00-1.42-.27c-1.017.104-2.036.802-3.03 2.068.277.193.92.468 1.372.658zm14.619-6.221c-.776-.087-2.527.014-4.454.566l4.302 4.327c.558-1.96.653-3.739.563-4.487a.478.478 0 00-.411-.406zM17.944 14.15c-.118.12-.233.227-.345.334.28.43.715 1.3.608 2.45-.131 1.412-1.017 2.762-2.63 4.014a.999.999 0 01-.894.233c-.703-.165-1.056-1.014-1.549-2.188-.134-.325-.28-.652-.425-.972l-.555.272c-.703.328-1.26.49-1.697.49-.348 0-.62-.103-.824-.308l-4.322-4.344c-.6-.552-.224-1.639.174-2.521l.285-.577a32.733 32.733 0 00-.851-.376c-1.168-.496-2.011-.851-2.177-1.557-.045-.182-.067-.546.252-.922C4.218 6.583 5.56 5.692 6.966 5.557a3.804 3.804 0 012.356.558l.286-.3c3.297-3.314 8.624-3.972 10.554-3.748.78.101 1.384.709 1.485 1.482.202 1.636-.303 7.185-3.703 10.602zm-3.577-4.2c-.577 0-.784-.208-.784-.788 0-.582.204-.787.784-.787.577 0 .784.208.784.787 0 .58-.207.788-.784.788zm0-2.816c-1.26 0-2.014.757-2.014 2.026 0 1.269.753 2.025 2.014 2.025 1.26 0 2.014-.76 2.014-2.025 0-1.266-.754-2.026-2.014-2.026z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRocketLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.58 8.198c-.718 0-1.023.308-1.023 1.03 0 .723.305 1.031 1.022 1.031.717 0 1.023-.308 1.023-1.03 0-.723-.303-1.031-1.023-1.031zm0 2.88c-1.169 0-1.838-.676-1.838-1.85 0-1.176.67-1.848 1.837-1.848 1.168 0 1.84.675 1.84 1.849 0 1.173-.669 1.848-1.84 1.848zm-9.96 6.573c-.566.571-1.487 1.73-1.63 3.353 1.68-.155 2.874-1.18 3.333-1.64.589-.593.589-1.12 0-1.713-.294-.295-.571-.443-.851-.443-.28-.003-.558.146-.852.443zm-2.056 4.19a.41.41 0 01-.409-.409v-.003c0-2.14 1.182-3.65 1.888-4.361.908-.913 1.947-.913 2.855 0 .907.913.907 1.96 0 2.874-.566.571-2.127 1.899-4.334 1.899zm1.19-12.96l-.05.072c.082.188 1.003.583 1.617.846.394.165.795.339 1.182.53a23.877 23.877 0 012.322-3.225L8.9 7.02a2.944 2.944 0 00-1.804-.443c-1.131.115-2.257.896-3.341 2.305zm6.233-1.855l-.549.619C8.43 8.825 7.435 10.258 6.78 11.48l-.345.694c-.501 1.118-.38 1.4-.38 1.404l4.414 4.434c.006 0 .314.118 1.398-.39l.708-.347c1.196-.636 2.583-1.61 3.81-2.672l.633-.55c.165-.145.314-.293.482-.461 1.162-1.168 1.963-2.625 2.507-4.076L14.528 4c-1.447.549-2.907 1.361-4.078 2.543a8.546 8.546 0 00-.462.485zm10.398-4.02c-.857-.098-2.857.023-5.006.698l4.93 4.952c.675-2.185.79-4.213.687-5.039a.71.71 0 00-.611-.61zm-2.913 14.076a2.88 2.88 0 00-.493-1.902l-.056.05a23.704 23.704 0 01-3.227 2.353 21 21 0 01.58 1.3c.257.616.647 1.546.868 1.63 1.451-1.154 2.221-2.288 2.328-3.431zm-12.47-6.527c-1.135-.484-1.948-.829-2.096-1.442-.042-.171-.034-.451.213-.745C4.34 6.778 5.663 5.9 7.033 5.769a3.691 3.691 0 012.426.633c.137-.151.283-.302.414-.437 3.311-3.333 8.673-3.991 10.611-3.77a1.53 1.53 0 011.322 1.322c.118.975-.017 3.325-.849 5.793l.026.025-.05.05c-.578 1.681-1.474 3.407-2.85 4.79-.168.168-.316.317-.481.465.526.729.77 1.625.686 2.521-.129 1.379-1.006 2.706-2.602 3.947a.838.838 0 01-.55.219.785.785 0 01-.179-.023c-.607-.145-.952-.969-1.428-2.109a23.359 23.359 0 00-.538-1.21l-.034.02-.734.358c-.689.322-1.226.482-1.633.482-.294 0-.523-.084-.691-.252l-4.423-4.44c-.393-.364-.325-1.106.224-2.328l.355-.717.037-.064c-.356-.177-.72-.34-1.09-.488z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRocketRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.367 9.922c.58 0 .784-.208.784-.788 0-.582-.204-.787-.784-.787-.577 0-.784.208-.784.787 0 .58.207.788.784.788zm0-2.816c1.26 0 2.014.76 2.014 2.026 0 1.269-.754 2.025-2.014 2.025-1.26 0-2.014-.756-2.014-2.025 0-1.266.753-2.026 2.014-2.026zM6.14 18.891c.49-.493.49-.874 0-1.367-.244-.247-.462-.37-.678-.37-.218 0-.434.123-.68.37-.502.504-1.295 1.496-1.5 2.871 1.432-.219 2.452-1.095 2.858-1.504zM3.91 16.65c.972-.975 2.132-.978 3.101 0 .97.977.97 2.143 0 3.118-.574.577-2.151 1.918-4.395 1.918A.619.619 0 012 21.067c0-2.173 1.196-3.7 1.91-4.417zm12.706-2.96c.154-.138.297-.281.457-.44 1.081-1.088 1.835-2.432 2.353-3.777l-5.168-5.196c-1.345.527-2.69 1.289-3.779 2.387-.14.14-.303.302-.443.465l-.537.605c-.975 1.134-1.936 2.527-2.569 3.709l-.333.672c-.328.728-.362 1.061-.362 1.168l4.213 4.235c.081.009.432-.022 1.177-.372l.686-.334c1.154-.613 2.496-1.554 3.683-2.585l.622-.538zm.362 3.125a2.594 2.594 0 00-.317-1.535 23.912 23.912 0 01-2.877 2.11c.174.366.334.736.485 1.097.19.454.46 1.101.655 1.376 1.272-1.02 1.95-2.034 2.054-3.048zM5.398 9.49c.325.137.655.283.983.437.6-.98 1.33-1.989 2.098-2.893a2.606 2.606 0 00-1.42-.27c-1.017.104-2.037.802-3.031 2.068.275.193.919.468 1.37.658zm14.619-6.22c-.776-.087-2.527.014-4.454.566l4.303 4.327c.557-1.96.655-3.739.563-4.487a.476.476 0 00-.412-.406zm-2.073 10.854c-.118.12-.233.224-.345.334.28.431.715 1.3.608 2.45-.131 1.412-1.017 2.762-2.63 4.015a1.016 1.016 0 01-.894.235c-.703-.165-1.056-1.014-1.549-2.188a24.899 24.899 0 00-.425-.972l-.555.272c-.703.328-1.263.49-1.7.49-.348 0-.62-.104-.824-.308l-4.32-4.345c-.599-.551-.223-1.638.175-2.52l.288-.578a32.733 32.733 0 00-.851-.375c-1.168-.493-2.012-.851-2.177-1.557-.045-.182-.067-.547.252-.925C4.221 6.555 5.563 5.664 6.97 5.53a3.8 3.8 0 012.356.558c.098-.104.196-.21.286-.3 3.294-3.314 8.621-3.97 10.554-3.748a1.716 1.716 0 011.485 1.482c.199 1.636-.308 7.185-3.706 10.602z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRookFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.472 6.661a.423.423 0 01-.426-.42v-3.66c0-.23.19-.421.426-.421H9.35c.235 0 .426.188.426.42v1.151h.904v-1.15c0-.23.19-.421.426-.421h1.628c.235 0 .425.188.425.42v1.227l.939-.014V2.58c0-.23.19-.42.426-.42h1.952c.235 0 .426.188.426.42v3.664c0 .233-.19.42-.426.42h-.289V6.66h-8.16v.005h-.554v-.003zm.196 9.737c0-.232.19-.42.426-.42h.781a.515.515 0 01-.014-.149l.813-6.94h-.437a.423.423 0 01-.426-.42V7.324h6.392v1.143c0 .23-.19.42-.426.42h-.437l.813 6.941c.005.05 0 .101-.014.149h.689c.235 0 .426.188.426.42v2.09H7.665v-2.09h.003zm9.608 2.76c.235 0 .426.187.426.42v1.848c0 .233-.19.42-.426.42H6.646a.423.423 0 01-.426-.42v-1.849c0-.23.19-.42.426-.42h10.63z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRookLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.348 2.156c.235 0 .425.188.425.42V3.73h.905V2.576c0-.232.19-.42.426-.42h1.627c.236 0 .426.188.426.42v1.227l.936-.014V2.576c0-.232.19-.42.425-.42h1.956c.235 0 .425.188.425.42v3.659c0 .232-.19.42-.425.42h-1.275v1.807c0 .232-.19.42-.426.42h-.434l.813 6.944c.005.05 0 .098-.014.145h.689c.235 0 .425.188.425.42v1.925h1.02c.238 0 .429.188.429.426v2.689c0 .232-.19.42-.426.42H6.645a.423.423 0 01-.426-.42v-2.69c0-.232.19-.42.426-.42h1.02v-1.924c0-.232.19-.42.425-.42h.781a.417.417 0 01-.01-.146l.812-6.944h-.437a.423.423 0 01-.426-.42V6.66H7.47a.423.423 0 01-.425-.42V2.576c0-.232.19-.42.426-.42zm7.498 17H7.07v1.849h9.776v-1.849zm-1.445-2.344H8.518v1.504h6.883v-1.504zm-1.922-7.927h-2.947l-.823 7.039c-.003.017-.011.033-.017.05h4.628c-.006-.017-.014-.03-.017-.05l-.824-7.04zm.869-2.225H9.664v1.387h4.684V6.66zm1.694-3.669h-1.1v1.207c0 .23-.188.418-.42.42l-1.79.028a.45.45 0 01-.306-.12.417.417 0 01-.126-.3V2.994h-.776v1.151c0 .233-.19.42-.426.42H9.342a.423.423 0 01-.426-.42V2.994H7.894v2.823h8.148V2.991z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRookRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.444 2.16c.339 0 .616.277.616.616v.925h.463v-.925c0-.341.274-.616.616-.616h1.568c.34 0 .617.277.617.616v.995l.493-.009v-.986c0-.341.274-.616.616-.616h1.885c.339 0 .616.277.616.616v3.586a.614.614 0 01-.616.616h-1.022V8.54a.614.614 0 01-.617.616h-.19l.753 6.532h.451c.34 0 .617.278.617.617v1.678h.778a.61.61 0 01.614.619v2.633a.615.615 0 01-.616.616H6.836a.618.618 0 01-.616-.616v-2.633c0-.342.275-.617.616-.617h.779v-1.678c0-.341.274-.616.616-.616h.544l.753-6.532h-.19a.618.618 0 01-.617-.616V6.98H7.635a.618.618 0 01-.617-.617V2.776c0-.341.275-.616.617-.616zm7.028 17.053H7.458v1.4h9.014v-1.4zm-1.395-2.291H8.853v1.062h6.224v-1.062zm-1.829-7.765h-2.473l-.754 6.532H14l-.751-6.532zm.815-2.176H9.957v.947h4.106V6.98zM8.828 3.392H8.25v2.359h7.45V3.392h-.65v.975c0 .336-.27.61-.607.617l-1.725.025a.62.62 0 01-.628-.614V3.392h-.336v.925a.614.614 0 01-.616.616H9.444a.618.618 0 01-.616-.616v-.925z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouteFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.817 17.436c.313.117.473.47.355.787-.114.305-.3.596-.546.865a.61.61 0 01-.445.196.61.61 0 01-.445-1.028c.14-.15.24-.308.3-.465a.605.605 0 01.78-.355zm-2.208 1.588a.61.61 0 01.816.283c.145.302.02.67-.283.818a8.35 8.35 0 01-.785.333.61.61 0 01-.784-.359.615.615 0 01.356-.787c.24-.09.468-.184.68-.288zm-1.425-3.227a.612.612 0 01.445-1.137c.238.095.485.182.731.271a.61.61 0 01.364.782.607.607 0 01-.778.367 25.78 25.78 0 01-.762-.283zm.61-3.986a.61.61 0 01-.193-1.19c.269-.09.54-.171.801-.239a.61.61 0 01.314 1.182c-.235.062-.482.135-.726.219a.691.691 0 01-.196.028zM12.752 13a.61.61 0 01-.468-1.003c.188-.227.435-.44.734-.636a.612.612 0 01.843.174.612.612 0 01-.173.846 2.177 2.177 0 00-.47.4.607.607 0 01-.466.219zm.258 2.092a.592.592 0 01-.387-.14 2.316 2.316 0 01-.658-.832.61.61 0 111.11-.504c.061.137.167.266.322.395.26.216.296.6.084.86a.612.612 0 01-.471.221zm3.336 1.563a.608.608 0 01-.258-.823.608.608 0 01.821-.26 3.4 3.4 0 01.793.543.613.613 0 01-.418 1.056.616.616 0 01-.417-.166 2.294 2.294 0 00-.52-.35zm-5.16 3.55c.35-.04.645.181.692.515a.615.615 0 01-.512.694c-.278.042-.55.079-.807.11-.025.002-.05.005-.076.005a.608.608 0 01-.602-.538.61.61 0 01.53-.68c.249-.031.51-.065.775-.107zm2.289-.443a.61.61 0 01.297 1.184c-.266.068-.532.13-.801.185a.61.61 0 01-.246-1.199c.249-.053.5-.109.75-.17zM6.79 14.284c.746 0 1.048-.302 1.048-1.05s-.302-1.05-1.048-1.05c-.742 0-1.044.305-1.044 1.05-.003.748.302 1.05 1.044 1.05zm2.062 6.183a.624.624 0 01.656.563.611.611 0 01-.56.655c-.365.028-.628.042-.746.05h-.036a.639.639 0 01-.614-.476c-.162.19-.288.33-.355.4a.611.611 0 01-.863 0c-.524-.523-4.193-4.943-4.185-7.924.008-2.899 1.737-4.627 4.622-4.627h.022c1.42.003 2.594.434 3.398 1.244.804.81 1.224 1.988 1.219 3.411-.006 2.171-1.995 5.126-3.255 6.751.117-.008.361-.022.697-.047zM18.61 5.94c.51 0 .717-.21.717-.723 0-.512-.21-.72-.717-.72-.51 0-.717.208-.717.72 0 .513.208.723.717.723zm-.042-3.79c2.023.006 3.275 1.269 3.27 3.297-.006 2.056-2.485 5.011-2.86 5.386a.611.611 0 01-.863 0c-.031-.03-.079-.084-.138-.148a.6.6 0 01-.56.546c-.025.003-.104.011-.216.028a.61.61 0 01-.174-1.207c.172-.025.284-.036.317-.04.034-.002.062.012.093.012-.855-1.115-2.168-3.106-2.166-4.597.003-1 .309-1.832.886-2.406.571-.571 1.4-.871 2.392-.871h.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouteLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.654 20.805c1.053-1.22 3.7-4.8 3.709-7.01.006-1.186-.314-2.113-.944-2.749-.63-.635-1.552-.96-2.737-.963h-.02c-1.173 0-2.089.316-2.72.947-.632.63-.957 1.554-.96 2.742-.008 2.112 2.521 5.706 3.672 7.033zm.031-11.551c2.83.008 4.515 1.708 4.507 4.546-.008 2.941-3.714 7.386-4.244 7.916a.415.415 0 01-.585.003l-.003-.003c-.857-.863-4.216-5.202-4.21-7.944.003-1.398.423-2.55 1.204-3.33.782-.78 1.925-1.191 3.309-1.191l.022.003zm-.014 5.154c.594 0 .882-.292.882-.885 0-.597-.288-.886-.882-.886-.594 0-.882.292-.882.886 0 .593.288.885.882.885zm0-2.603c1.056 0 1.712.659 1.712 1.718 0 1.058-.656 1.717-1.712 1.717s-1.711-.66-1.711-1.717c0-1.06.655-1.718 1.711-1.718zM18.685 9.75c.793-.944 2.317-3.145 2.322-4.442.003-1.516-.793-2.32-2.305-2.325h-.014c-.742 0-1.317.199-1.709.588-.395.395-.594.972-.596 1.723-.003 1.308 1.512 3.51 2.302 4.456zm.02-7.599c1.966.006 3.137 1.185 3.131 3.157-.005 2.005-2.504 5-2.857 5.356a.413.413 0 01-.585 0c-.353-.356-2.843-3.353-2.835-5.373.003-.966.294-1.765.84-2.31.54-.541 1.336-.83 2.289-.83h.017zm-.009 3.423c.317 0 .448-.129.448-.448 0-.32-.128-.448-.448-.448-.316 0-.448.128-.448.448s.129.448.448.448zm0-1.728c.776 0 1.278.501 1.278 1.28s-.502 1.28-1.278 1.28-1.277-.501-1.277-1.28.501-1.28 1.277-1.28zm-3.843 7.753a.418.418 0 01-.414-.417c0-.177.114-.334.282-.392.272-.093.541-.171.804-.241a.415.415 0 01.213.804c-.243.064-.498.14-.753.227a.417.417 0 01-.132.02zm.924 7.76a.416.416 0 01.384.736l-.02.008a8.35 8.35 0 01-.784.334.415.415 0 01-.291-.779c.25-.09.487-.19.711-.3zm1.617-2.29a.405.405 0 01-.283-.111 2.517 2.517 0 00-.577-.39.414.414 0 01-.177-.56.414.414 0 01.56-.176c.317.165.566.336.762.52.168.158.174.42.017.589a.431.431 0 01-.302.129zm-.168-6.027a.416.416 0 01-.056-.83 4.56 4.56 0 01.305-.036.411.411 0 01.437.384v.008a.414.414 0 01-.39.44c-.078.009-.16.02-.238.031-.02.003-.039.003-.058.003zm.638 6.7c.216.081.322.32.241.535-.117.303-.294.58-.515.815a.417.417 0 01-.586.053.417.417 0 01-.022-.619c.16-.173.277-.355.347-.54a.41.41 0 01.524-.247c.006.003.008.003.011.003zm-2.644-1.745a.4.4 0 01-.14-.025c-.26-.096-.521-.188-.773-.289a.417.417 0 01.302-.776c.247.098.499.19.754.28a.416.416 0 01.008.832.307.307 0 01-.151-.022zM11.2 20.58a.407.407 0 01.468.342v.009a.412.412 0 01-.347.47h-.003c-.28.042-.555.081-.818.112a.417.417 0 01-.462-.361.413.413 0 01.356-.462h.003c.263-.034.529-.068.803-.11zm2.356-.456a.416.416 0 01.202.807c-.266.067-.538.128-.81.184a.413.413 0 01-.49-.322.413.413 0 01.322-.49c.258-.056.518-.115.776-.18zm-.79-7.317a.42.42 0 01-.32-.683 3.21 3.21 0 01.707-.608.418.418 0 01.568.148.416.416 0 01-.114.547 2.361 2.361 0 00-.524.448.403.403 0 01-.317.148zM8.803 20.85a.414.414 0 01.445.378v.003a.412.412 0 01-.378.446h-.003c-.252.02-.504.036-.756.05h-.025c-.216 0-.429-.165-.446-.38-.02-.228.11-.421.334-.446l.09-.006c.114-.003.375-.017.739-.045zm4.227-5.902a.417.417 0 01-.264-.095 2.16 2.16 0 01-.616-.776.419.419 0 01.224-.543.412.412 0 01.53.199c.075.168.204.325.386.476a.414.414 0 01.059.582.395.395 0 01-.32.157z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouteRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.78 14.156c.47 0 .661-.194.661-.664 0-.474-.193-.664-.66-.664-.469 0-.662.193-.662.664 0 .47.19.664.661.664zm0-2.552c1.143 0 1.88.74 1.88 1.885 0 1.146-.74 1.885-1.88 1.885-1.143 0-1.88-.74-1.88-1.885 0-1.146.74-1.885 1.88-1.885zm11.77-2.132c.785-.977 2.065-2.888 2.068-4.025.005-1.373-.686-2.067-2.053-2.073h-.012c-.672 0-1.187.174-1.532.515-.347.345-.524.863-.524 1.544-.005 1.14 1.289 3.073 2.054 4.04zm.017-7.322c2.023.006 3.278 1.269 3.27 3.3-.006 2.056-2.485 5.01-2.86 5.386a.606.606 0 01-.858.003l-.003-.003a1.728 1.728 0 01-.134-.151.6.6 0 01-.56.546c-.025.003-.101.011-.213.028a.61.61 0 01-.174-1.207 6.1 6.1 0 01.317-.04c.033-.002.061.012.092.012-.854-1.112-2.168-3.106-2.165-4.597.003-1 .308-1.832.885-2.406.571-.571 1.398-.871 2.392-.871h.011zm-.01 3.557c.31 0 .439-.126.439-.44 0-.31-.126-.44-.44-.44-.31 0-.437.127-.437.44 0 .312.126.44.437.44zm0-1.694c.758 0 1.251.493 1.251 1.252 0 .762-.49 1.252-1.252 1.252-.759 0-1.25-.493-1.25-1.252 0-.76.491-1.252 1.25-1.252zm-.743 13.42c.316.12.473.47.356.787-.115.305-.3.597-.547.866a.607.607 0 01-.857.033l-.003-.003a.61.61 0 01-.03-.862c.14-.152.24-.309.3-.465a.608.608 0 01.78-.356zm-2.205 1.588a.61.61 0 11.533 1.098c-.247.12-.51.233-.788.333a.603.603 0 01-.778-.35c0-.002-.003-.005-.003-.008a.608.608 0 01.356-.784c.232-.084.46-.18.68-.289zm-1.425-3.224a.613.613 0 01-.317-.804.613.613 0 01.762-.333c.238.095.485.185.731.271a.611.611 0 01-.414 1.149c-.253-.092-.513-.185-.762-.283zm.61-3.986a.612.612 0 01-.608-.613c0-.26.168-.49.415-.575.272-.09.54-.17.801-.238a.607.607 0 01.745.434.608.608 0 01-.434.746 11.34 11.34 0 00-.725.218.732.732 0 01-.194.028zm-2.042 1.185a.608.608 0 01-.465-1.003 3.26 3.26 0 01.734-.636.61.61 0 11.67 1.023 2.177 2.177 0 00-.471.4.616.616 0 01-.468.216zm.258 2.095a.612.612 0 01-.387-.14 2.323 2.323 0 01-.658-.832.615.615 0 01.303-.81.613.613 0 01.806.306c.062.137.168.266.325.395.26.216.297.602.082.863a.625.625 0 01-.471.218zm3.336 1.56a.611.611 0 01.563-1.084c.328.171.586.348.793.544a.611.611 0 01-.838.89 2.407 2.407 0 00-.518-.35zm-5.16 3.552c.35-.039.645.18.692.513a.61.61 0 01-.512.694c-.28.042-.55.079-.807.11a.606.606 0 01-.678-.527v-.005a.61.61 0 01.53-.681c.249-.028.51-.065.775-.104zm2.289-.445a.607.607 0 01.737.44v.005a.61.61 0 01-.443.74c-.266.067-.532.129-.801.185a.61.61 0 01-.246-1.196c.252-.054.504-.113.753-.174zm-6.709.554c1.168-1.392 3.42-4.644 3.426-6.554.003-1.107-.288-1.964-.868-2.55-.577-.582-1.429-.879-2.535-.882h-.017c-2.219 0-3.395 1.18-3.403 3.412-.006 1.927 2.232 5.182 3.397 6.574zm2.087.152c.333-.02.622.23.656.563a.61.61 0 01-.56.655c-.368.028-.628.042-.746.05-.011.003-.022.003-.036.003a.644.644 0 01-.616-.476c-.16.19-.286.33-.356.398a.606.606 0 01-.857.006l-.006-.006c-.52-.524-4.19-4.944-4.182-7.924.008-2.9 1.737-4.628 4.622-4.628h.022c1.42.003 2.594.434 3.395 1.244.804.81 1.224 1.989 1.222 3.412-.009 2.17-1.995 5.126-3.255 6.75.117-.005.361-.02.697-.047z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouterFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.256 6.905c-.025-2.33-1.518-3.683-1.535-3.694a.603.603 0 01-.044-.86.62.62 0 01.868-.045c.078.07 1.908 1.731 1.938 4.569.006.098.104 2.89-1.913 4.672a.616.616 0 01-.868-.05.604.604 0 01.045-.855l.005-.006c1.574-1.389 1.504-3.708 1.504-3.73zm-2.59.026c-.017-1.362-.886-2.174-.894-2.182a.606.606 0 01-.05-.855l.005-.005a.62.62 0 01.868-.045c.054.047 1.283 1.162 1.303 3.053.003.059.07 1.927-1.286 3.123a.609.609 0 01-.409.154.612.612 0 01-.46-.204.603.603 0 01.051-.857c.905-.801.871-2.168.871-2.182zM7.846 18.53c.11-.11.171-.269.171-.485 0-.448-.263-.658-.67-.658-.405 0-.669.207-.669.658 0 .216.062.376.168.485.118.118.292.174.502.174.207 0 .38-.06.498-.174zm-2.437 0c.107-.11.169-.269.169-.485 0-.448-.264-.658-.67-.658s-.67.207-.67.658c0 .216.062.376.169.485.117.118.291.174.501.174.21 0 .384-.06.501-.174zm15.681-3.479c.493.51.745 1.24.745 2.185v1.622c0 .94-.252 1.678-.745 2.185-.515.526-1.277.795-2.269.795H5.164c-.992 0-1.753-.269-2.269-.795-.496-.51-.745-1.247-.745-2.188v-1.622c0-.941.25-1.675.745-2.185.516-.526 1.277-.795 2.269-.795H6.85v-7.33a.61.61 0 01.617-.609c.338 0 .616.272.616.608v7.33h10.745c.986.003 1.75.27 2.263.799z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouterLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.91 17.345c.405 0 .669.21.669.664 0 .219-.062.378-.168.49-.118.118-.289.177-.502.177-.21 0-.384-.056-.501-.177-.11-.109-.168-.271-.168-.49 0-.454.263-.664.67-.664zm2.436 0c.406 0 .67.21.67.664 0 .219-.062.378-.169.49-.117.118-.288.177-.498.177-.213 0-.384-.056-.502-.177-.109-.109-.168-.271-.168-.49-.002-.454.26-.664.667-.664zm13.67 1.482v-1.639c0-.733-.174-1.282-.516-1.638-.353-.367-.916-.552-1.675-.552H5.164c-.76 0-1.325.185-1.675.552-.342.356-.515.905-.515 1.638v1.64c0 .733.173 1.282.515 1.638.353.367.916.552 1.675.552h13.661c.76 0 1.322-.185 1.675-.552.342-.356.516-.905.516-1.639zm.075-3.846c.493.513.745 1.255.745 2.207v1.64c0 .951-.252 1.694-.745 2.206-.515.535-1.277.804-2.269.804H5.164c-.992 0-1.753-.269-2.269-.804-.496-.512-.745-1.255-.745-2.207v-1.639c0-.952.25-1.694.745-2.207.516-.532 1.277-.804 2.269-.804h1.888V6.771a.41.41 0 01.818 0v7.409h10.95c.994 0 1.756.269 2.271.801zm-7.633-8.238c-.025-2.42-1.585-3.866-1.6-3.88a.411.411 0 01.55-.61c.075.067 1.84 1.689 1.87 4.465.006.103.102 2.829-1.842 4.566a.41.41 0 01-.58-.034.41.41 0 01.033-.58c1.656-1.473 1.572-3.902 1.57-3.927zm-2.588.028c-.017-1.482-.952-2.339-.96-2.347a.41.41 0 01.548-.608c.05.045 1.213 1.112 1.233 2.933.002.061.064 1.854-1.216 3.002a.408.408 0 01-.577-.03l-.003-.003a.41.41 0 01.034-.58c.994-.888.94-2.353.94-2.367z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRouterRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.17 17.387c.47 0 .776.241.776.76 0 .249-.07.433-.197.56-.134.134-.336.198-.58.198-.243 0-.442-.061-.58-.196-.125-.126-.195-.31-.195-.56.002-.521.305-.762.776-.762zm2.823 0c.47 0 .776.241.776.76 0 .249-.07.433-.196.56-.134.134-.333.198-.58.198-.244 0-.442-.064-.58-.199-.126-.126-.196-.31-.196-.56 0-.518.306-.759.776-.759zm12.61 1.468v-1.622c0-.616-.134-1.067-.4-1.339-.274-.28-.74-.423-1.38-.423H5.163c-.644 0-1.106.143-1.38.423-.267.272-.402.723-.402 1.34v1.62c0 .617.135 1.068.401 1.34.275.28.737.423 1.381.423h13.661c.644 0 1.106-.143 1.381-.423.263-.272.4-.723.398-1.34zm.488-3.804c.493.507.745 1.244.745 2.185v1.622c0 .94-.252 1.678-.745 2.185-.515.529-1.277.795-2.269.795H5.164c-.992 0-1.753-.266-2.269-.795-.496-.51-.745-1.247-.745-2.188v-1.622c0-.941.25-1.675.745-2.185.516-.53 1.277-.795 2.269-.795h1.683v-7.33c0-.337.275-.611.617-.611.339 0 .616.274.616.61v7.333h10.745c.989 0 1.75.267 2.266.796zm-7.837-8.146c-.026-2.305-1.519-3.683-1.535-3.697a.604.604 0 01-.045-.854l.003-.003a.62.62 0 01.868-.045c.078.07 1.908 1.731 1.938 4.569.006.098.104 2.89-1.913 4.672a.624.624 0 01-.868-.048.606.606 0 01.042-.854c.003-.003.005-.003.005-.006 1.589-1.403 1.507-3.708 1.505-3.734zm-2.589.023c-.016-1.359-.885-2.171-.896-2.18a.603.603 0 01-.045-.86.62.62 0 01.869-.044c.053.047 1.28 1.162 1.302 3.056.003.056.07 1.927-1.286 3.123a.62.62 0 01-.868-.05.604.604 0 01.045-.855l.005-.005c.914-.804.874-2.171.874-2.185z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRulerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.545 18.025a1.17 1.17 0 00-.426-1.597 1.174 1.174 0 00-1.596.429 1.171 1.171 0 001.01 1.753 1.174 1.174 0 001.011-.585h.001zm-2.759-3.507a.424.424 0 00.605.005l1.303-1.28-.605-.605-1.297 1.275a.429.429 0 00-.006.605zm-2.521-1.067l2.32-2.323-.606-.605-2.319 2.323a.426.426 0 000 .605.426.426 0 00.605 0zm-1.415-3.009c.11 0 .216-.042.3-.123l1.322-1.3-.605-.605-1.316 1.294a.429.429 0 00.3.734zM8.982 9.285l2.378-2.38-.605-.606L8.377 8.68a.426.426 0 000 .605.426.426 0 00.605 0zM7.568 6.277c.109 0 .215-.04.3-.123L9.25 4.792l-.605-.605-1.378 1.356a.429.429 0 00.3.734zm14.01 10.291a1.298 1.298 0 01-.117 1.709l-3.185 3.188a1.293 1.293 0 01-.927.383c-.35 0-.678-.134-.924-.383L2.542 7.574a1.315 1.315 0 010-1.854L5.73 2.532c.493-.496 1.359-.496 1.852 0l.218.218.011-.008 13.796 13.801-.028.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRulerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.854 17.665a.451.451 0 000-.638l-3.47-3.474-1.502 1.474a.425.425 0 01-.602-.003l-.003-.003a.429.429 0 01.005-.605l1.496-1.47-1.507-1.51-2.263 2.26a.426.426 0 01-.605 0 .426.426 0 010-.605l2.26-2.263-1.504-1.504-1.333 1.313a.429.429 0 01-.602-.61l.002-.003 1.328-1.305-1.507-1.507-2.507 2.51a.426.426 0 01-.605 0 .426.426 0 010-.606l2.507-2.507L8.935 5.1l-1.25 1.23a.432.432 0 01-.607-.005.432.432 0 01.006-.608L8.33 4.492 6.971 3.133a.454.454 0 00-.638-.003l-.003.003-3.185 3.188a.455.455 0 000 .641l13.882 13.891a.457.457 0 00.64 0l3.187-3.188zm.605-1.249a1.308 1.308 0 010 1.854l-3.185 3.188a1.305 1.305 0 01-.927.384c-.35 0-.678-.135-.925-.384L2.54 7.568a1.288 1.288 0 01-.384-.925c0-.35.135-.678.384-.927l3.185-3.188c.493-.496 1.359-.496 1.851 0L21.46 16.416zm-3.47 1.28a.53.53 0 00-.194-.72.522.522 0 00-.714.19s0 .004-.003.004a.525.525 0 10.91.526zm.128-1.277c.56.322.754 1.036.434 1.596a1.172 1.172 0 01-1.596.435 1.166 1.166 0 01-.55-.715 1.168 1.168 0 011.711-1.317z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconRulerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.52 17.4a.237.237 0 000-.33l-3.25-3.249-1.32 1.3a.628.628 0 11-.882-.896l1.314-1.292-1.177-1.176-2.067 2.061a.625.625 0 01-.885.003l-.003-.003a.629.629 0 010-.89l2.065-2.065-1.18-1.176-1.156 1.137a.627.627 0 01-.886-.003l-.002-.003a.626.626 0 01.008-.888l1.149-1.13-1.178-1.178L8.766 9.93a.625.625 0 01-.885.003l-.003-.003a.629.629 0 010-.89l2.305-2.309-1.176-1.176-1.082 1.059a.625.625 0 01-.885-.006l-.003-.003a.629.629 0 01.009-.89l1.067-1.05-1.182-1.18a.233.233 0 00-.328 0l-3.12 3.12a.233.233 0 000 .328L17.07 20.52c.09.09.24.09.328 0 0 .002 3.12-3.118 3.12-3.118zm.887-1.218c.58.583.58 1.527 0 2.11l-3.117 3.117a1.485 1.485 0 01-1.054.437c-.38 0-.762-.145-1.056-.437L2.595 7.824a1.496 1.496 0 010-2.11l3.118-3.117a1.491 1.491 0 012.109 0l13.585 13.585zM17.77 17.53a.41.41 0 00-.146-.558s-.003 0-.003-.002a.409.409 0 00-.56.148.409.409 0 00.148.56.403.403 0 00.56-.148zm.271-1.286c.597.342.801 1.098.462 1.695l-.005.01a1.243 1.243 0 01-1.7.46c-.003 0-.003-.003-.006-.003a1.25 1.25 0 011.25-2.162z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSafetyBeltFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.445 17.064a.82.82 0 010 1.163l-3.24 3.246a.807.807 0 01-.58.241.807.807 0 01-.58-.24l-1.7-1.704-1.799-.106a.827.827 0 01-.532-.238l-2.46-2.462a.825.825 0 010-1.163l.376-.378-1.342-1.345a.82.82 0 01-.24-.582.83.83 0 01.24-.583l3.241-3.25a.817.817 0 011.16 0l1.341 1.345.376-.375a.817.817 0 011.16 0l2.456 2.462a.816.816 0 01.235.502l.168 1.747 1.72 1.72zm-9.535-8.51a.617.617 0 01-.042.045L7.67 12.804a.819.819 0 01-1.16 0l-2.321-2.328a.813.813 0 01-.238-.526l-.112-1.67-1.594-1.6a.825.825 0 010-1.165l3.24-3.249a.82.82 0 011.16 0l1.583 1.586 1.723.05c.21.006.409.092.554.24l2.322 2.329a.82.82 0 010 1.162l-.916.922z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSafetyBeltLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.04 20.852l2.81-2.81-1.717-1.717a.408.408 0 01-.118-.25l-.193-1.985-2.176-2.177-.709.709a.425.425 0 01-.583 0l-1.714-1.72-2.81 2.81 1.72 1.72c.16.16.16.42 0 .58l-.711.71 2.168 2.169 2.048.12c.1.006.196.048.266.12l1.72 1.72zm3.681-3.101c.16.16.16.42 0 .58l-3.386 3.389c-.16.16-.42.16-.583 0l-1.893-1.9-2.05-.12a.398.398 0 01-.267-.12l-2.569-2.572a.41.41 0 010-.58l.712-.71-1.72-1.72a.41.41 0 010-.58l3.39-3.39a.41.41 0 01.58 0l1.716 1.72.709-.709a.41.41 0 01.58 0l2.568 2.572c.068.067.11.157.118.252l.19 1.983 1.905 1.905zM11.097 7.698c.008-.012.02-.023.028-.034l.711-.712L9.814 4.93l-1.978-.059a.425.425 0 01-.28-.12L5.951 3.146 3.147 5.952l1.605 1.606a.41.41 0 01.118.263L5 9.734l2.028 2.028.706-.706 3.362-3.358zm.638.515c-.008.011-.02.022-.028.034L7.318 12.63a.407.407 0 01-.577.003l-.003-.003-2.426-2.425a.402.402 0 01-.117-.264L4.06 8.028 2.276 6.241a.41.41 0 010-.58l3.387-3.39a.421.421 0 01.58 0L8.02 4.054l1.978.06a.412.412 0 01.28.12l2.426 2.428c.16.16.16.42 0 .58l-.97.972z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSafetyBeltRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.765 20.258l2.467-2.468-1.54-1.54a.61.61 0 01-.174-.37l-.182-1.872-1.938-1.938-.552.552a.603.603 0 01-.857 0l-1.54-1.54-2.469 2.467 1.541 1.54a.605.605 0 010 .855l-.555.555 1.93 1.93 1.933.112a.599.599 0 01.39.176l1.546 1.54zm3.745-2.894a.604.604 0 010 .852l-3.32 3.322a.6.6 0 01-.851 0l-1.804-1.804-1.933-.112a.612.612 0 01-.392-.177l-2.518-2.518a.602.602 0 010-.851l.554-.555-1.54-1.54a.602.602 0 010-.852l3.32-3.32a.621.621 0 01.854 0l1.543 1.544.552-.552a.605.605 0 01.854 0l2.518 2.518a.61.61 0 01.174.367l.182 1.871 1.807 1.807zM10.846 7.482l.555-.555-1.782-1.781-1.857-.056a.594.594 0 01-.41-.177l-1.43-1.428-2.465 2.467 1.428 1.432a.61.61 0 01.177.386l.123 1.796 1.79 1.79.549-.55 3.283-3.28c.01-.016.025-.03.039-.044zm.893.815c-.01.014-.025.028-.039.042l-4.3 4.297a.604.604 0 01-.851 0l-2.378-2.378a.612.612 0 01-.177-.387l-.123-1.798-1.695-1.698a.605.605 0 010-.854l3.32-3.32a.602.602 0 01.851 0l1.69 1.687 1.857.056c.154.006.3.067.409.176L12.68 6.5a.604.604 0 010 .852l-.942.946z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchCloudFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.801 17.815a3.468 3.468 0 01-3.462-3.462 3.467 3.467 0 013.462-3.465 3.463 3.463 0 010 6.927zm4.62-1.6c2.428 0 5.265-1.372 5.265-5.24 0-3.521-2.33-4.975-4.655-5.19C15.787 2.187 11.745 2 10.92 2c-1.061 0-6.274.289-6.464 5.908C3.387 8.336 2 9.384 2 11.91c0 2.468 1.426 4.09 3.874 4.34l1.658-.004a4.635 4.635 0 004.241 2.788c1.022 0 1.97-.342 2.737-.908.005.006.008.017.014.022l3.336 3.365c.232.235.61.238.846.005l.005-.005a.609.609 0 000-.858l-3.33-3.364c.26-.325.479-.686.644-1.073l.395-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchCloudLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 18.51c-2.048 0-3.712-1.681-3.712-3.746 0-2.064 1.664-3.745 3.711-3.745 2.048 0 3.715 1.68 3.715 3.745 0 2.065-1.667 3.745-3.715 3.745zm-6.054-3.046c-1.353-.14-2.969-.843-2.969-3.397 0-1.734.745-2.827 2.21-3.247.177-.05.3-.213.297-.398l-.006-.114c0-4.944 4.275-5.328 5.583-5.328.742 0 4.485.17 5.378 3.526a.415.415 0 00.387.309c1.263.036 4.201.523 4.201 4.294 0 4.005-3.33 4.316-4.353 4.316h-.193a4.36 4.36 0 00.053-.664c0-2.526-2.028-4.574-4.532-4.574S7.47 12.235 7.47 14.758c0 .236.022.468.056.695l-1.58.011zm10.726.793c.862 0 5.17-.246 5.17-5.146 0-4.28-3.282-4.997-4.7-5.103-1.17-3.664-5.257-3.852-6.081-3.852-1.059 0-6.289.292-6.403 5.97-1.048.383-2.502 1.38-2.502 3.94 0 3.466 2.591 4.104 3.748 4.222l1.824-.003c.622 1.779 2.297 3.053 4.271 3.053a4.49 4.49 0 002.886-1.047l3.4 3.431c.16.16.417.163.577.003l.003-.003a.418.418 0 000-.585l-3.398-3.429a4.58 4.58 0 00.815-1.45h.39z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchCloudRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.773 17.815c-1.893 0-3.434-1.554-3.434-3.462 0-1.91 1.54-3.462 3.434-3.462 1.894 0 3.431 1.554 3.431 3.462.003 1.91-1.537 3.462-3.43 3.462zm-5.837-2.779c-1.244-.128-2.732-.775-2.732-3.126 0-1.596.678-2.602 2.017-2.983a.61.61 0 00.437-.585l-.005-.112c0-4.656 4.033-5.014 5.269-5.014.7 0 4.238.16 5.075 3.305.07.26.3.443.566.451 1.18.034 3.919.49 3.919 4.003 0 3.736-3.11 4.028-4.065 4.028h-.056c.028-.213.048-.429.048-.647 0-2.583-2.076-4.678-4.636-4.678s-4.639 2.095-4.639 4.678c0 .23.023.454.054.678l-1.252.002zm10.484 1.18c2.429 0 5.266-1.373 5.266-5.241 0-3.521-2.33-4.975-4.655-5.19C15.787 2.187 11.745 2 10.92 2c-1.061 0-6.274.289-6.464 5.908C3.387 8.336 2 9.384 2 11.91c0 2.468 1.426 4.09 3.874 4.34l1.658-.004a4.635 4.635 0 004.241 2.788c1.025 0 1.97-.34 2.737-.908.005.006.008.017.014.022l3.333 3.365a.6.6 0 00.852 0 .612.612 0 000-.86l-3.33-3.359c.26-.325.478-.686.643-1.073l.398-.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchDatabaseFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.36 5.505c-1.193-.35-1.919-.824-2.109-1.373 0-.008 0-.008-.011-.017.193-.546.919-1.03 2.1-1.38 1.258-.368 2.92-.575 4.681-.575 1.762 0 3.423.207 4.67.574 1.246.37 1.955.852 2.109 1.426 0 0-.008.008-.008.02-.21.529-.928.986-2.093 1.327-1.258.367-2.907.575-4.67.575-1.761 0-3.414-.208-4.669-.577zm3.05 7.347c0-.577-.142-1.115-.383-1.605a3.835 3.835 0 00-.507-.773c-.04-.048-.076-.096-.118-.138a3.078 3.078 0 00-.274-.266 3.528 3.528 0 00-.224-.182c-.087-.064-.168-.134-.26-.19a3.746 3.746 0 00-.525-.278c-.067-.03-.14-.05-.21-.078-.148-.056-.3-.1-.456-.14-.068-.017-.138-.03-.205-.045a3.99 3.99 0 00-.689-.067 3.984 3.984 0 00-1.375.258C6.74 9.89 5.71 11.252 5.71 12.852s1.031 2.96 2.474 3.504c.294.112.608.18.933.216.148.017.29.045.442.045a3.891 3.891 0 002.364-.815c.073-.057.149-.115.219-.177.084-.073.165-.151.24-.233.085-.086.158-.179.233-.274.056-.07.112-.134.163-.205.114-.168.21-.347.294-.532.03-.064.053-.131.078-.199.056-.148.107-.3.143-.453.017-.068.034-.132.048-.2.039-.223.07-.447.07-.677zm1.62-1.507c-.216 0-.423-.009-.633-.017.095.289.162.588.201.896.146.003.286.017.432.017 1.854 0 3.605-.215 4.938-.61.75-.216 1.395-.521 1.88-.888v3.983c-.23.42-.91.977-2.149 1.344-1.246.367-2.907.575-4.67.575-.72 0-1.417-.037-2.078-.104a5.27 5.27 0 01-1.134.756c.991.154 2.078.247 3.213.247 1.854 0 3.605-.216 4.938-.61.75-.217 1.395-.53 1.88-.897v3.543c0 .7-.726 1.275-2.157 1.695-1.258.367-2.919.574-4.67.574-1.753 0-3.411-.204-4.68-.574-1.432-.423-2.157-.997-2.157-1.695v-1.958a5.11 5.11 0 01-1.608-.756l-3.361 3.286a.626.626 0 01-.874 0 .592.592 0 010-.852l3.327-3.255a4.874 4.874 0 01-1.193-3.193c0-2.272 1.572-4.19 3.709-4.779V5.471c.46.358 1.092.664 1.91.896 1.34.395 3.093.61 4.936.61s3.596-.215 4.938-.61c.798-.232 1.42-.52 1.88-.876v3.943c-.23.42-.91.978-2.149 1.345-1.246.367-2.907.566-4.67.566z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchDatabaseLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.088 20.502c-1.132.339-2.62.524-4.19.524-1.57 0-3.06-.185-4.189-.524-1.282-.387-1.935-.91-1.935-1.555v-1.3a4.78 4.78 0 003.297-.815.411.411 0 00.16.062c.84.12 1.739.182 2.677.182 1.659 0 3.23-.196 4.426-.557.678-.202 1.25-.49 1.69-.827v3.255c-.004.647-.654 1.168-1.936 1.555zM9.328 8.773a4.05 4.05 0 014.045 4.045 4.05 4.05 0 01-4.045 4.045 4.05 4.05 0 01-4.044-4.045 4.05 4.05 0 014.044-4.045zM8.771 6.01c.415.327.983.605 1.712.826 1.198.359 2.77.557 4.423.557 1.655 0 3.226-.198 4.425-.557.726-.218 1.28-.485 1.69-.804v3.61c-.208.387-.81.903-1.925 1.239-1.123.339-2.61.524-4.199.524-.123-.003-.594 0-.921-.02a4.874 4.874 0 00-4.648-3.428c-.187 0-.375.014-.557.033V6.01zm1.936-2.504c1.12-.34 2.61-.524 4.187-.524 1.583 0 3.07.185 4.19.524 1.11.333 1.746.77 1.897 1.3-.003.008-.011.013-.017.024-.185.485-.834.908-1.874 1.222-1.123.336-2.61.524-4.187.524-1.577 0-3.065-.185-4.188-.524-1.067-.322-1.72-.76-1.888-1.26-.003-.01-.008-.015-.011-.023.17-.504.82-.941 1.89-1.263zm3.487 9.31c0-.204-.017-.406-.042-.605.297.009.616.012.748.012h.011c1.658 0 3.227-.2 4.426-.558.678-.204 1.252-.49 1.689-.826v3.658c-.207.384-.812.902-1.924 1.235-1.12.337-2.608.524-4.188.524a18.89 18.89 0 01-2.034-.117 4.888 4.888 0 001.314-3.323zm5.129-10.098c-1.193-.358-2.768-.557-4.429-.557-1.658 0-3.23.199-4.425.557-1.393.42-2.216 1.042-2.449 1.852v.003a1.775 1.775 0 00-.067.484v3.098a4.87 4.87 0 00-3.487 4.661c0 1.258.484 2.401 1.271 3.264l-3.462 3.46a.408.408 0 00.011.579.41.41 0 00.57 0l3.478-3.476c.482.378 1.03.664 1.62.837v1.468c0 1.05.845 1.838 2.517 2.342 1.208.358 2.779.557 4.426.557 1.65 0 3.221-.199 4.429-.56 1.672-.504 2.518-1.291 2.518-2.339V5.06c-.003-1.05-.849-1.837-2.521-2.342z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchDatabaseRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.885 20.132c-1.09.325-2.526.504-4.047.504-1.518 0-2.955-.18-4.045-.504-.798-.24-1.753-.667-1.753-1.33v-1.06c.114.009.226.017.344.017 1 0 1.93-.3 2.712-.812.033.011.064.03.103.037.832.12 1.723.182 2.653.182 1.641 0 3.202-.196 4.39-.555.531-.16 1-.373 1.397-.62v2.81c0 .664-.955 1.093-1.754 1.331zm-9.5-11.095a3.766 3.766 0 013.761 3.759 3.764 3.764 0 01-3.762 3.759 3.766 3.766 0 01-3.762-3.76c0-2.07 1.69-3.758 3.762-3.758zM9.04 6.516c.383.238.854.445 1.417.613 1.193.359 2.753.555 4.392.555 1.639 0 3.199-.196 4.392-.555a6.002 6.002 0 001.398-.596v3.103c-.199.325-.75.773-1.742 1.073-1.082.325-2.519.504-4.045.504-.101.006-.462 0-.77-.014a4.97 4.97 0 00-4.698-3.367c-.118 0-.23.009-.344.017V6.516zm1.753-2.65c1.078-.325 2.515-.504 4.045-.504 1.53 0 2.966.179 4.047.504.687.207 1.482.549 1.695 1.062-.174.397-.767.767-1.686 1.044-1.084.325-2.521.505-4.045.505-1.527 0-2.964-.18-4.045-.505-.94-.285-1.535-.664-1.694-1.073.182-.389.767-.756 1.683-1.033zm3.557 8.933c0-.13-.008-.258-.02-.387.233.006.446.006.522.006 1.639 0 3.199-.2 4.39-.558.531-.16 1-.372 1.397-.619v3.149c-.199.325-.75.773-1.742 1.073-1.082.324-2.516.504-4.045.504-.55 0-1.076-.031-1.588-.076A4.949 4.949 0 0014.35 12.8zm4.883-10.084c-1.19-.359-2.75-.555-4.395-.555-1.644 0-3.202.199-4.392.555-1.434.431-2.289 1.09-2.535 1.952v.003c-.048.17-.073.35-.073.526v2.888A4.974 4.974 0 004.42 12.8c0 1.215.44 2.327 1.168 3.193l-3.253 3.252a.602.602 0 10.852.852l3.283-3.289c.412.303.871.54 1.364.703v1.291c0 1.127.88 1.961 2.61 2.485 1.2.359 2.76.555 4.393.555s3.193-.196 4.395-.555c1.73-.521 2.61-1.358 2.61-2.485V5.194c0-1.124-.88-1.958-2.61-2.48z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchFileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.647 8.034v-.009c0-.014 0-.025-.003-.039v-.014l-.008-.05c-.003-.017-.009-.031-.011-.048 0-.006-.003-.008-.006-.014-.003-.011-.008-.022-.014-.036l-.006-.012c-.005-.017-.014-.03-.022-.045l-.025-.042-.009-.01-.022-.032-.008-.01a.426.426 0 00-.034-.037l-5.462-5.462c-.011-.012-.025-.023-.037-.034l-.01-.008-.032-.023-.01-.008-.043-.025c-.014-.009-.03-.014-.045-.023l-.01-.005c-.012-.006-.023-.009-.037-.014h-.012a.237.237 0 00-.047-.012l-.05-.008h-.015c-.014 0-.025-.003-.039-.003h-.008c-2.782-.003-5.927 0-6.51 0-.711 0-1.151.44-1.151 1.149v2.28a5.803 5.803 0 00-2.538 9.168L2.16 17.994a.562.562 0 00.806.779l3.25-3.375a5.776 5.776 0 001.748.988v4.115c0 .715.442 1.16 1.154 1.16h11.397c.684 0 1.13-.445 1.13-1.132.002-.442.002-8.235.002-12.495zm-1.913-.56h-1.378c-.653 0-1.2-.205-1.583-.589-.384-.384-.585-.933-.585-1.585V3.922l1.773 1.773 1.773 1.778zm-13.151.128a4.68 4.68 0 116.619 6.619 4.68 4.68 0 01-6.62-6.619z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchFileLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.65 2.157h1.408a.29.29 0 01.2.082l5.46 5.461a.277.277 0 01.082.199v13.028c0 .54-.311.851-.85.851H9.55c-.563 0-.874-.313-.874-.88v-4.772c0-.026.004-.051.01-.075A5.5 5.5 0 016.63 14.88l-3.991 4.123a.28.28 0 11-.4-.39l3.995-4.128a5.522 5.522 0 012.445-8.976V3.026c0-.55.319-.866.87-.869h5.103zm1.127.56H9.548c-.24 0-.31.07-.31.309v2.34a5.52 5.52 0 016.61 5.414 5.53 5.53 0 01-1.616 3.904 5.502 5.502 0 01-3.905 1.616c-.373 0-.737-.037-1.09-.107V20.9c0 .257.062.32.317.32h11.398c.224 0 .288-.068.291-.292V8.179h-2.454c-.88 0-1.633-.288-2.179-.831-.546-.543-.832-1.297-.832-2.18v-2.45zm-5.45 3.102a4.961 4.961 0 103.507 1.45 4.928 4.928 0 00-3.507-1.45zm6.011-2.704V5.17c0 1.487.961 2.45 2.451 2.45h2.056l-4.507-4.504z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchFileRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.625 2.008a.55.55 0 01.395.166l5.462 5.462a.55.55 0 01.165.395v12.496c0 .686-.445 1.128-1.129 1.131l-.454.003H9.118c-.712 0-1.154-.445-1.154-1.16v-4.115a5.791 5.791 0 01-1.749-.987l-3.249 3.374a.56.56 0 11-.807-.779l3.262-3.385A5.803 5.803 0 017.963 5.44V3.157c0-.706.443-1.146 1.152-1.149h6.51zm-.561 1.123h-5.98v2.037a5.8 5.8 0 014.91 9.846 5.759 5.759 0 01-4.1 1.7 5.85 5.85 0 01-.81-.056v3.883h11.44V8.593h-2.168c-.955 0-1.779-.316-2.376-.915-.596-.6-.916-1.42-.916-2.375V3.13zm-5.17 3.101a4.678 4.678 0 00-4.678 4.684 4.678 4.678 0 004.683 4.678 4.682 4.682 0 003.305-7.992 4.646 4.646 0 00-3.31-1.37zm6.29-2.308v1.379c0 .652.203 1.198.586 1.585.384.387.933.588 1.583.588h1.378L17.19 4.93l-1.005-1.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.417 4.39a7.845 7.845 0 01.378 10.497l5.704 5.704a.561.561 0 01-.793.793l-5.696-5.697a7.792 7.792 0 01-5.139 1.918A7.846 7.846 0 014.322 4.21a7.848 7.848 0 0111.095.18zM9.871 3.033a6.726 6.726 0 00-4.756 11.481 6.728 6.728 0 009.496.053.373.373 0 01.05-.055l.018-.016.128-.13a6.726 6.726 0 00-.143-9.328c-.011-.014-.025-.025-.037-.036a6.68 6.68 0 00-4.756-1.97zm-4 2.725a5.73 5.73 0 018.104 0 5.687 5.687 0 011.678 4.05 5.73 5.73 0 01-9.782 4.053 5.73 5.73 0 010-8.103z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.487 4.38a7.806 7.806 0 01.192 10.907l6.085 6.082a.28.28 0 01-.196.479.28.28 0 01-.199-.084l-6.087-6.084-.018.02a7.757 7.757 0 01-5.298 2.072 7.809 7.809 0 01-5.524-13.33 7.814 7.814 0 0111.045-.062zM9.966 2.716a7.248 7.248 0 105.123 2.123 7.196 7.196 0 00-5.123-2.123z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchMoneyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.392 4.388a7.845 7.845 0 01.378 10.497l5.703 5.705a.561.561 0 01-.792.792l-5.696-5.697a7.792 7.792 0 01-5.14 1.919A7.846 7.846 0 014.298 4.209a7.848 7.848 0 0111.095.179zM9.846 3.032A6.726 6.726 0 005.09 14.514a6.728 6.728 0 009.495.053.373.373 0 01.05-.056l.019-.015.128-.13a6.726 6.726 0 00-.143-9.328c-.012-.014-.026-.025-.037-.037a6.68 6.68 0 00-4.756-1.969zM5.555 5.466a6.145 6.145 0 118.688 8.689 6.145 6.145 0 01-8.688-8.689zm4.448-.185a.382.382 0 00-.381.381v.267c-1.224.112-2 .899-2 2.072 0 .765.35 1.72 2 1.964v2.129c-.432-.056-.863-.227-1.291-.513a.642.642 0 00-.342-.11.526.526 0 00-.532.522c0 .19.084.347.252.465.568.39 1.227.619 1.913.67v.523c0 .21.17.381.38.381a.38.38 0 00.379-.38v-.547c.557-.07 1.025-.26 1.372-.56.44-.378.673-.913.67-1.546 0-.78-.356-1.751-2.045-1.995V6.987c.291.06.574.163.835.308a.725.725 0 00.314.087.518.518 0 00.515-.515c0-.112-.04-.322-.303-.485-.378-.232-.851-.383-1.358-.442v-.278a.379.379 0 00-.378-.38zm.375 4.799c.863.185.992.566.992.958 0 .543-.37.921-.992 1.039zM9.62 6.96v1.927c-.824-.188-.947-.572-.947-.933 0-.552.35-.91.947-.995z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchMoneyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.484 4.429a7.808 7.808 0 01.193 10.87l6.087 6.085a.28.28 0 01-.196.479.28.28 0 01-.199-.084l-6.088-6.085-.02.02a7.747 7.747 0 01-5.295 2.074A7.809 7.809 0 014.442 4.457a7.808 7.808 0 0111.042-.028zM9.966 2.732a7.248 7.248 0 105.123 2.123 7.196 7.196 0 00-5.123-2.123zm.218 2.94a.28.28 0 01.28.28l.001.378c.525.047 1.01.198 1.397.438.16.098.25.235.25.387 0 .22-.18.397-.401.4a.547.547 0 01-.255-.073l-.003-.003a2.936 2.936 0 00-.988-.34v2.248l.211.032c.563.099 1 .292 1.304.576.342.32.515.753.515 1.286 0 1.134-.765 1.88-2.03 2.012v.649a.28.28 0 01-.28.28.28.28 0 01-.28-.28l-.002-.635-.104-.003a3.73 3.73 0 01-1.842-.648.434.434 0 01-.204-.375.414.414 0 01.42-.41c.1.003.196.034.28.09.481.32.968.502 1.45.543v-2.355l-.108-.014c-.885-.136-1.877-.576-1.877-1.849 0-1.136.773-1.89 1.985-1.966l.001-.367a.28.28 0 01.28-.28zm.282 4.556l-.002 2.263c.326-.044.6-.15.804-.314.264-.21.4-.507.4-.857 0-.434-.148-.9-1.202-1.092zm-1.722-1.99c0 .4.14.872 1.158 1.068l.001-2.186c-.719.06-1.159.477-1.159 1.119z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchMoneyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.417 4.39a7.845 7.845 0 01.378 10.497l5.704 5.704a.561.561 0 01-.793.793l-5.696-5.697a7.792 7.792 0 01-5.139 1.918A7.846 7.846 0 014.322 4.21a7.848 7.848 0 0111.095.18zM9.871 3.033a6.726 6.726 0 00-4.756 11.481 6.728 6.728 0 009.512-.036 6.724 6.724 0 000-9.473 6.672 6.672 0 00-4.756-1.972zm.154 2.252c.21 0 .381.17.381.38v.276a3.31 3.31 0 011.353.445c.263.162.303.372.303.484 0 .283-.23.513-.513.513a.693.693 0 01-.305-.084l-.009-.003a2.851 2.851 0 00-.83-.308v2.018l.111.018c1.589.27 1.93 1.214 1.93 1.975 0 .633-.233 1.17-.673 1.552-.341.296-.81.485-1.366.556v.547a.38.38 0 01-.382.379.378.378 0 01-.378-.379v-.525h-.015a3.836 3.836 0 01-1.898-.668.545.545 0 01-.252-.465.526.526 0 01.532-.52.64.64 0 01.342.108c.429.285.862.457 1.29.512V9.965L9.53 9.95c-1.554-.271-1.889-1.2-1.889-1.946 0-1.174.778-1.965 2.005-2.074l.001-.262c0-.21.17-.381.378-.381zm.38 4.794l.001 1.997c.62-.119.989-.495.989-1.04 0-.389-.128-.77-.99-.957zm-1.71-2.122c0 .361.122.746.95.934l.002-1.93c-.602.082-.952.44-.952.996z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSearchRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.417 4.39a7.845 7.845 0 01.378 10.497l5.704 5.704a.561.561 0 01-.793.793l-5.696-5.697a7.792 7.792 0 01-5.139 1.918A7.846 7.846 0 014.322 4.21a7.848 7.848 0 0111.095.18zM9.871 3.033a6.726 6.726 0 00-4.756 11.481 6.728 6.728 0 009.512-.036 6.724 6.724 0 000-9.473 6.672 6.672 0 00-4.756-1.972z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSegurityFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.738 2.02c2.656 0 4.815 2.028 4.815 4.52v2.552c.505.136.93.366 1.272.687.619.577.938 1.425.952 2.52v6.096c-.014 1.092-.336 1.941-.952 2.52-.591.556-1.431.836-2.499.836H7.934c-1.067 0-1.907-.283-2.496-.838-.616-.58-.93-1.431-.93-2.526l.003-5.645v-.197l-.002-.179v-.06c0-1.096.313-1.945.93-2.527a2.936 2.936 0 011.294-.695V6.541c0-2.493 2.16-4.521 4.815-4.521h.19zm-.09 12.515c-.52 0-.938.148-1.243.443-.317.305-.476.736-.476 1.28 0 .543.16.974.476 1.28.305.294.722.442 1.243.442.521 0 .939-.148 1.244-.442.32-.306.476-.737.476-1.28 0-.544-.157-.975-.476-1.28-.305-.295-.723-.443-1.244-.443zm.09-11.356h-.19c-2.017 0-3.656 1.507-3.656 3.362v2.4h7.503l-.002-2.4c0-1.852-1.64-3.362-3.656-3.362z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSegurityLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.1 2.156c2.587 0 4.694 1.944 4.694 4.33l-.001 2.85c.585.115 1.066.346 1.438.691.582.538.882 1.34.896 2.381v6.258c-.014 1.042-.314 1.843-.896 2.381-.558.513-1.362.776-2.392.776h-7.7c-1.032 0-1.835-.263-2.39-.779-.58-.54-.874-1.342-.874-2.384l.003-5.8a97.092 97.092 0 01-.002-.28l-.001-.169c0-1.042.294-1.843.874-2.384.375-.348.863-.58 1.46-.696V6.487c0-2.39 2.106-4.33 4.694-4.33h.196zm3.739 7.695h-7.7c-.875 0-1.541.207-1.984.619-.45.415-.68 1.07-.68 1.938v.044c0 .05.002.142.002.286v.121l-.003 5.801c0 .869.23 1.521.684 1.944.44.41 1.11.62 1.983.62h7.698c1.787 0 2.666-.838 2.689-2.564v-6.246c-.023-1.726-.902-2.563-2.69-2.563zm-3.832 4.84c1.053 0 1.658.605 1.658 1.659.003 1.053-.602 1.658-1.658 1.658-1.054 0-1.659-.605-1.659-1.658 0-1.054.605-1.659 1.659-1.659zm0 .6c-.723 0-1.06.336-1.06 1.059 0 .722.337 1.058 1.06 1.058.722 0 1.058-.336 1.058-1.058 0-.723-.336-1.06-1.058-1.06zm.092-12.572h-.196c-2.277 0-4.129 1.69-4.129 3.768V9.26a6.21 6.21 0 01.367-.011h7.698c.134 0 .264.004.39.013l-.001-2.775c0-2.076-1.852-3.768-4.129-3.768z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSendFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.378 11.205L3.336 2.235a.82.82 0 00-1.168.908l1.865 8.782-1.835 8.924a.823.823 0 001.177.9l18.008-9.074a.82.82 0 00-.005-1.47"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSendLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.704 4a.704.704 0 00-.687.851l1.611 7.59-1.584 7.712a.705.705 0 001.006.772l15.563-7.837a.707.707 0 00-.003-1.26L5.018 4.073A.706.706 0 004.704 4m0 .704l15.592 7.752-15.563 7.838 1.616-7.857-1.645-7.733"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsCloudFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.843 10.964c1.151 0 1.84.683 1.84 1.826 0 1.146-.686 1.826-1.84 1.826s-1.84-.683-1.84-1.826.689-1.826 1.84-1.826zm4.219 2.126v-.597a.699.699 0 00-.698-.695h-.484a3.197 3.197 0 00-.143-.456l.395-.392a.695.695 0 00.008-.984l-.006-.005-.437-.434a.712.712 0 00-.997 0l-.395.392a3.387 3.387 0 00-.462-.143v-.482a.695.695 0 00-.697-.692h-.597a.695.695 0 00-.697.692v.482a3.342 3.342 0 00-.463.143l-.395-.392a.702.702 0 00-.495-.205h-.003a.703.703 0 00-.499.205l-.442.431a.692.692 0 00-.006.983l.006.006.392.39a3.024 3.024 0 00-.14.461h-.485a.7.7 0 00-.7.695v.597a.697.697 0 00.7.692h.485c.03.137.075.305.14.462l-.392.39a.692.692 0 00-.006.982l.006.006.437.434c.134.132.31.205.498.205h.003a.697.697 0 00.496-.205l.395-.392c.143.056.3.106.462.143v.482a.695.695 0 00.697.691h.597a.696.696 0 00.698-.691v-.482c.162-.037.313-.084.462-.146l.395.395a.712.712 0 00.997 0l.437-.434a.696.696 0 00.003-.986l-.003-.003-.392-.392a3.1 3.1 0 00.143-.46h.484a.695.695 0 00.698-.691zm.927-3.964c1.417.106 4.697.812 4.697 5.028 0 4.82-4.305 5.067-5.17 5.067l-10.286.056C4.185 19.277 2 18.18 2 15.095c0-2.52 1.451-3.501 2.501-3.885.112-5.591 5.345-5.877 6.404-5.877.823 0 4.907.185 6.084 3.793z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsCloudLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.669 18.101c1.022 0 4.35-.305 4.35-4.252 0-3.709-2.936-4.193-4.199-4.227a.414.414 0 01-.386-.302c-.891-3.306-4.636-3.474-5.376-3.474-1.31 0-5.582.379-5.582 5.244l.005.112c0 .182-.12.345-.3.392-1.465.415-2.207 1.49-2.207 3.196 0 3.04 2.381 3.367 3.404 3.367l10.29-.056zm.476-9.277c1.417.106 4.698.812 4.698 5.028 0 4.824-4.309 5.067-5.171 5.067l-10.286.056c-2.045 0-4.23-1.098-4.23-4.182 0-2.52 1.451-3.504 2.502-3.885.112-5.591 5.344-5.877 6.403-5.877.824 0 4.908.188 6.084 3.793zm-5.146 4.779c.765 0 1.12-.353 1.12-1.112 0-.76-.355-1.115-1.12-1.115-.764 0-1.12.353-1.12 1.115 0 .756.356 1.112 1.12 1.112zm0-3.045c1.216 0 1.942.723 1.942 1.93 0 1.207-.726 1.93-1.942 1.93-1.215 0-1.94-.723-1.94-1.93 0-1.207.725-1.93 1.94-1.93zm2.785 2.207h.736l-.022-.574-.714.022a.41.41 0 01-.406-.344 2.486 2.486 0 00-.222-.715.405.405 0 01.079-.47l.546-.54-.437-.412-.524.54a.418.418 0 01-.473.079 2.422 2.422 0 00-.723-.222.41.41 0 01-.347-.403v-.731l-.577.022.02.712a.407.407 0 01-.348.403 2.525 2.525 0 00-.72.219.41.41 0 01-.473-.079l-.547-.54-.414.434.543.518c.132.129.16.33.068.49-.079.143-.166.423-.21.7a.407.407 0 01-.407.342h-.736l.02.574.713-.02a.41.41 0 01.407.345c.044.275.128.558.21.7a.41.41 0 01-.068.49l-.543.541.437.412.521-.54a.414.414 0 01.473-.079c.21.104.451.18.72.221a.41.41 0 01.348.404v.73l.557-.019v-.72a.41.41 0 01.347-.403c.272-.042.502-.115.723-.221a.42.42 0 01.474.078l.546.54.414-.433-.546-.521a.405.405 0 01-.078-.471c.103-.205.176-.445.22-.714a.42.42 0 01.413-.345zm.736-1.37c.443 0 .802.356.802.796v.594c0 .44-.359.795-.802.795h-.403c-.03.115-.064.227-.106.33l.347.345a.797.797 0 010 1.132l-.437.434a.808.808 0 01-1.14 0l-.347-.344a3.087 3.087 0 01-.334.106v.398c0 .44-.358.795-.8.795h-.598a.798.798 0 01-.8-.795v-.4a3.863 3.863 0 01-.334-.104l-.347.344a.799.799 0 01-.569.235h-.003a.798.798 0 01-.571-.235l-.437-.434a.797.797 0 01.003-1.134l.341-.342a3 3 0 01-.1-.336H8.48a.8.8 0 01-.8-.796v-.594a.8.8 0 01.8-.795h.404c.025-.104.058-.221.1-.336l-.344-.342a.797.797 0 010-1.132l.437-.434a.805.805 0 01.571-.235h.003c.216 0 .417.084.569.235l.347.345a3.08 3.08 0 01.333-.104v-.4a.8.8 0 01.801-.796h.597c.443 0 .801.356.801.795v.401c.115.03.227.064.334.106l.347-.344a.808.808 0 011.14 0l.437.434a.797.797 0 010 1.132l-.347.344c.039.107.075.219.106.33h.403v.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsCloudRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.409 18.022c.955 0 4.056-.283 4.056-3.924 0-3.423-2.734-3.868-3.91-3.902a.606.606 0 01-.566-.44c-.835-3.067-4.364-3.221-5.062-3.221-1.235 0-5.258.353-5.258 4.888l.006.095a.593.593 0 01-.44.583c-1.336.375-2.014 1.353-2.014 2.907 0 2.768 2.188 3.068 3.13 3.068l10.058-.054zm.613-8.988c2.323.212 4.647 1.63 4.647 5.064 0 3.773-2.831 5.112-5.257 5.112l-10.06.056c-2.097 0-4.338-1.118-4.338-4.255 0-2.465 1.381-3.484 2.451-3.905.193-5.479 5.398-5.761 6.457-5.761.823 0 4.857.182 6.1 3.689zm-5.179 4.781c.72 0 1.056-.33 1.056-1.04 0-.708-.333-1.038-1.056-1.038-.72 0-1.056.33-1.056 1.039 0 .709.336 1.04 1.056 1.04zm0-2.95c1.216 0 1.941.715 1.941 1.91 0 1.197-.725 1.911-1.94 1.911-1.217 0-1.94-.714-1.94-1.91s.723-1.91 1.94-1.91zm3.342 2.099v-.379h-.62a.482.482 0 01-.475-.397 2.418 2.418 0 00-.21-.675.468.468 0 01.09-.547l.464-.459-.291-.286-.465.457a.48.48 0 01-.577.078c-.132-.073-.404-.151-.661-.193a.478.478 0 01-.406-.47v-.611h-.384v.61a.48.48 0 01-.406.471c-.258.04-.533.12-.661.193a.48.48 0 01-.577-.078l-.465-.457-.292.286.465.46a.47.47 0 01.09.546c-.098.196-.168.42-.207.672-.04.23-.241.4-.477.4h-.619v.379h.62a.48.48 0 01.476.4c.042.255.109.47.21.675a.47.47 0 01-.093.544l-.465.459.292.286.465-.46a.495.495 0 01.557-.09c.196.096.423.166.68.208a.476.476 0 01.407.47v.611h.384v-.61a.48.48 0 01.406-.471c.255-.04.484-.11.683-.207a.49.49 0 01.558.09l.465.459.291-.286-.465-.46a.47.47 0 01-.092-.543c.1-.207.168-.423.21-.675.039-.23.24-.4.476-.4h.619zm.1-1.328c.477 0 .863.38.863.851v.577a.857.857 0 01-.862.852h-.33a3.262 3.262 0 01-.074.224l.306.3a.847.847 0 010 1.21l-.426.42a.903.903 0 01-1.23 0l-.305-.3c-.073.026-.149.05-.227.07v.328c0 .47-.387.852-.863.852h-.585a.857.857 0 01-.863-.852v-.328a4.342 4.342 0 01-.227-.07l-.302.3a.903.903 0 01-1.23 0l-.429-.42a.847.847 0 010-1.21l.303-.3a4.21 4.21 0 01-.073-.224h-.333a.857.857 0 01-.863-.852v-.577c0-.47.387-.851.863-.851h.333c.023-.076.045-.149.073-.224l-.305-.3a.843.843 0 01-.253-.605c0-.23.09-.445.255-.605l.429-.42a.903.903 0 011.23 0l.302.297a4.16 4.16 0 01.23-.068v-.327c0-.47.386-.852.863-.852h.585c.476 0 .863.381.863.852v.327c.073.02.151.043.23.068l.302-.297a.903.903 0 011.23 0l.425.42a.839.839 0 01.255.605c0 .23-.09.443-.255.605l-.302.297c.025.073.05.146.073.224h.325v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.695 10.11h-1.852A7.354 7.354 0 0018.19 8l1.37-1.37a.997.997 0 000-1.406l-1.1-1.098a.997.997 0 00-1.407 0l-1.37 1.37a7.307 7.307 0 00-2.109-.653V2.99c0-.54-.44-.98-.98-.98H11.09a.98.98 0 00-.98.98v1.854A7.354 7.354 0 008 5.496l-1.37-1.37a.997.997 0 00-1.406 0L4.126 5.224a.997.997 0 000 1.406l1.367 1.367c-.317.56-.543 1.465-.65 2.112H2.99c-.54 0-.98.44-.98.98v1.505c0 .54.44.98.98.98h1.854c.107.65.333 1.552.65 2.112l-1.367 1.367a.997.997 0 000 1.406l1.098 1.098a.997.997 0 001.406 0L8 18.187a7.354 7.354 0 002.11.653v1.855c0 .54.439.98.98.98h1.504c.54 0 .98-.44.98-.98V18.84a7.307 7.307 0 002.11-.652l1.37 1.37a.997.997 0 001.405 0l1.098-1.099a.997.997 0 000-1.406l-1.367-1.367a7.354 7.354 0 00.653-2.109h1.854a.98.98 0 00.98-.98v-1.505a.984.984 0 00-.982-.983zm-8.852-.998c1.863 0 2.731.868 2.731 2.731s-.868 2.731-2.73 2.731c-1.864 0-2.732-.868-2.732-2.73 0-1.864.868-2.732 2.731-2.732z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.778 2.156c.395 0 .714.32.714.715V4.9c.003.087.098.152.194.168h.002a7.21 7.21 0 012.18.673c.047.022.162.067.24-.006l.003-.003 1.48-1.479a.729.729 0 011.027 0l1.135 1.135a.729.729 0 010 1.028L18.27 7.899c-.056.061-.045.162-.008.235l.002.003c.323.635.547 1.37.673 2.185.014.095.084.193.17.193h2.026c.395 0 .714.32.714.714v1.552c0 .395-.32.714-.714.714h-2.025c-.09 0-.157.098-.171.193a7.37 7.37 0 01-.673 2.185l-.002.003c-.04.073-.05.174.008.235l.003.003 1.479 1.48a.729.729 0 010 1.027l-1.135 1.135a.729.729 0 01-1.028 0l-1.479-1.48-.002-.005c-.079-.073-.194-.028-.241-.006a7.284 7.284 0 01-2.18.673h-.002c-.093.014-.19.081-.194.168v2.03a.714.714 0 01-.714.71h-1.552a.714.714 0 01-.714-.715v-2.025c0-.09-.098-.157-.193-.171a7.37 7.37 0 01-2.185-.672l-.003-.003c-.073-.04-.174-.05-.235.008l-.003.003-1.479 1.482a.729.729 0 01-1.028 0L4.25 18.618a.729.729 0 010-1.028l1.48-1.479.005-.002c.067-.073.042-.18.017-.219-.227-.37-.527-1.193-.684-2.204-.014-.09-.086-.19-.168-.194H2.87a.717.717 0 01-.715-.714v-1.552c0-.395.32-.714.715-.714h2.028c.08-.003.154-.104.168-.193.112-.729.37-1.692.683-2.205.022-.039.05-.145-.017-.218L4.251 6.414a.729.729 0 010-1.028L5.386 4.25a.729.729 0 011.028 0l1.482 1.482c.061.06.162.045.235.009l.003-.003a7.37 7.37 0 012.185-.672c.095-.014.193-.084.193-.171V2.87c0-.395.32-.712.714-.715h1.552zm.003.555h-1.552a.157.157 0 00-.154.154V4.89c0 .361-.28.667-.67.726-.756.117-1.434.325-2.016.619-.308.16-.667.115-.891-.112l-.006-.006-1.47-1.473a.17.17 0 00-.238 0L4.649 5.778a.17.17 0 000 .238l1.48 1.48a.745.745 0 01.1.91c-.235.38-.485 1.201-.608 1.997-.05.322-.322.666-.725.666H2.87a.157.157 0 00-.155.154v1.552c0 .084.07.152.155.154h2.025c.302 0 .658.236.725.667.123.796.373 1.62.608 1.997a.745.745 0 01-.1.91l-1.48 1.48a.17.17 0 000 .238l1.135 1.134a.17.17 0 00.238 0L7.5 17.876c.221-.227.58-.272.888-.112.582.294 1.26.501 2.017.62.386.058.669.363.669.725v2.025c0 .084.07.151.154.154h1.552c.084 0 .151-.07.154-.154v-2.025c0-.359.28-.664.664-.726h.003a6.814 6.814 0 002.02-.619c.249-.123.615-.16.887.115l.006.006 1.473 1.47a.17.17 0 00.238 0l1.135-1.134a.17.17 0 000-.238l-1.474-1.474-.005-.005c-.227-.227-.272-.586-.112-.891.294-.583.501-1.26.619-2.017.059-.387.364-.67.725-.67h2.025c.084 0 .152-.07.155-.154v-1.551a.157.157 0 00-.155-.154h-2.025c-.361 0-.666-.28-.725-.67-.118-.756-.325-1.434-.62-2.017-.159-.308-.114-.664.113-.89l.005-.006 1.474-1.47a.17.17 0 000-.239l-1.135-1.134a.17.17 0 00-.238 0L16.51 6.12c-.272.274-.638.238-.888.115a6.757 6.757 0 00-2.02-.62H13.6c-.387-.061-.664-.364-.664-.725V2.865a.157.157 0 00-.154-.154zm-.779 5.613c1.165 0 2.076.306 2.698.905.647.625.974 1.555.974 2.77 0 1.216-.327 2.146-.974 2.77-.625.603-1.533.905-2.698.905-1.168 0-2.075-.305-2.697-.904-.647-.625-.975-1.555-.975-2.77 0-1.216.328-2.146.975-2.77.624-.6 1.532-.906 2.697-.906zm0 .563c-1.017 0-1.795.252-2.31.748-.533.516-.805 1.311-.805 2.367s.272 1.852.804 2.367c.516.496 1.292.748 2.311.748 1.02 0 1.796-.252 2.311-.748.532-.515.804-1.31.804-2.367 0-1.056-.269-1.851-.804-2.364-.518-.499-1.294-.75-2.31-.75z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.594 2.008c.54 0 .98.44.98.98v1.855a7.307 7.307 0 012.11.653l1.37-1.37a.997.997 0 011.405 0l1.098 1.098a.997.997 0 010 1.406L18.19 8c.309.619.527 1.328.653 2.11h1.854a.98.98 0 01.98.98v1.504a.98.98 0 01-.98.98h-1.854a7.354 7.354 0 01-.653 2.11l1.37 1.37a.997.997 0 010 1.405l-1.098 1.098a.997.997 0 01-1.406 0l-1.373-1.37a7.307 7.307 0 01-2.109.653v1.855c0 .543-.437.98-.98.98H11.09a.98.98 0 01-.98-.98V18.84A7.354 7.354 0 018 18.188l-1.37 1.37a.997.997 0 01-1.406 0l-1.098-1.101a.997.997 0 010-1.407l1.367-1.367c-.317-.56-.543-1.465-.65-2.112H2.99c-.54 0-.98-.44-.98-.98v-1.504c0-.54.44-.98.98-.98h1.854c.107-.65.333-1.552.65-2.113L4.126 6.627a.997.997 0 010-1.406l1.098-1.098a.997.997 0 011.406 0L8 5.493a7.354 7.354 0 012.11-.653V2.99c0-.54.439-.98.98-.98h1.504zm-.14 1.12H11.23v1.824c0 .493-.376.91-.894.99-.703.108-1.33.299-1.865.57a1.02 1.02 0 01-1.2-.162l-.008-.008-1.336-1.336-.921.921 1.336 1.336.008.009c.367.367.347.902.14 1.238-.204.333-.437 1.103-.549 1.829-.078.507-.504.89-.989.89H3.13v1.225h1.823c.485 0 .91.384.99.89.111.726.344 1.496.548 1.83.207.339.227.87-.14 1.238l-1.344 1.344.921.922 1.345-1.345c.308-.308.79-.372 1.199-.162.537.272 1.165.462 1.868.571.518.079.893.496.893.99l-.002 1.823h1.224V18.73c0-.493.375-.91.893-.989h.003a6.232 6.232 0 001.871-.574c.418-.207.885-.143 1.194.165l.008.009 1.336 1.336.922-.922-1.336-1.336-.009-.008c-.308-.308-.372-.79-.162-1.2.271-.537.462-1.164.571-1.867.079-.519.496-.894.989-.894h1.823v-1.224h-1.823c-.493 0-.91-.375-.989-.894-.11-.703-.3-1.33-.571-1.865-.21-.41-.146-.891.162-1.2l.009-.007 1.336-1.337-.922-.921-1.336 1.339-.008.008c-.309.308-.776.373-1.194.165a6.248 6.248 0 00-1.87-.574h-.004c-.518-.078-.893-.496-.893-.989V3.13zm-.61 4.864c2.484 0 3.85 1.367 3.85 3.851 0 2.485-1.37 3.852-3.85 3.852-2.485 0-3.852-1.367-3.852-3.852 0-2.484 1.367-3.851 3.851-3.851zm0 1.12c-1.864 0-2.732.868-2.732 2.731s.868 2.731 2.731 2.731 2.731-.868 2.731-2.73c0-1.864-.868-2.732-2.73-2.732z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsWebFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.843 14.884c1.053 0 1.658-.583 1.658-1.597s-.605-1.594-1.658-1.594-1.658.58-1.658 1.594c0 1.014.605 1.597 1.658 1.597zm3.577-2.56c.387 0 .698.3.698.672v.585c0 .37-.311.673-.698.673h-.501c-.04.165-.09.319-.151.464l.406.393c.266.252.274.67.025.935l-.025.025-.446.429a.725.725 0 01-.994 0l-.406-.395a3.53 3.53 0 01-.485.149v.481c0 .37-.314.673-.697.673h-.608a.685.685 0 01-.698-.673v-.481a3.228 3.228 0 01-.484-.149l-.406.395a.742.742 0 01-.995 0l-.445-.431a.666.666 0 01-.02-.939l.02-.02.403-.386a3.06 3.06 0 01-.148-.47h-.502a.685.685 0 01-.697-.673v-.585c0-.37.31-.672.697-.672h.502c.033-.138.08-.309.148-.471l-.403-.39a.654.654 0 01-.205-.478c0-.185.073-.356.208-.482l.442-.429a.742.742 0 01.995 0l.406.392c.151-.058.313-.106.484-.145v-.482c0-.37.314-.672.698-.672h.608c.386 0 .697.302.697.672v.482c.171.039.328.084.485.148l.406-.395a.72.72 0 01.994 0l.446.429c.263.252.274.67.022.935-.008.009-.014.017-.022.023l-.41.392c.062.146.113.302.152.468.003.003.504.003.504.003zm4.838 5.803a.22.22 0 00.224-.215V8.248H3.204v9.664c0 .117.101.215.225.215h16.829zM5.19 6.732a.545.545 0 00-.554-.537h-.003a.55.55 0 00-.56.535v.002c0 .297.25.538.557.538.311 0 .56-.24.56-.538zm1.678 0a.548.548 0 00-.557-.537h-.003a.548.548 0 00-.557.537c0 .297.249.538.557.538a.548.548 0 00.56-.538zm1.678 0a.548.548 0 00-.557-.537.55.55 0 00-.56.535v.002c0 .297.249.538.557.538a.548.548 0 00.56-.538zm11.712-2.207c.787 0 1.428.62 1.428 1.378v12.009c0 .759-.641 1.378-1.428 1.378H3.428c-.79 0-1.428-.616-1.428-1.375V5.903c0-.759.639-1.378 1.429-1.378h16.829z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsWebLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.588 18.623a.428.428 0 00.434-.42v-9.53H2.977v9.53c0 .232.193.42.434.42h17.177zM3.41 5.452a.43.43 0 00-.434.42V7.88h18.045V5.872a.426.426 0 00-.434-.42H3.41zm17.177-.796c.691 0 1.255.546 1.255 1.216v12.333c0 .67-.564 1.216-1.255 1.216H3.41c-.692 0-1.255-.546-1.255-1.216V5.872c0-.67.563-1.216 1.255-1.216h17.177zM6.347 7.278a.563.563 0 01-.572-.552c0-.305.255-.554.572-.554.316 0 .571.246.571.554a.563.563 0 01-.571.552zm1.714 0a.56.56 0 01-.569-.552c0-.305.255-.554.569-.554a.56.56 0 01.571.554.565.565 0 01-.571.552zm-3.426 0a.563.563 0 01-.571-.552c0-.305.255-.554.571-.554.317 0 .569.246.569.554a.56.56 0 01-.569.552zm7.317 7.448c.762 0 1.117-.344 1.117-1.084 0-.74-.355-1.084-1.117-1.084s-1.118.345-1.118 1.084c0 .74.353 1.084 1.118 1.084zm0-2.963c1.215 0 1.938.703 1.938 1.88 0 1.176-.725 1.879-1.938 1.879-1.216 0-1.939-.703-1.939-1.88 0-1.176.723-1.88 1.939-1.88zm2.778 2.148h.737l-.022-.557-.715.02a.41.41 0 01-.406-.337 2.427 2.427 0 00-.221-.697.389.389 0 01.078-.46l.544-.526-.437-.4-.521.526a.418.418 0 01-.47.075 2.592 2.592 0 00-.723-.215.4.4 0 01-.345-.392v-.712l-.577.02.02.692a.4.4 0 01-.345.392 2.58 2.58 0 00-.72.215.418.418 0 01-.473-.075l-.544-.527-.414.423.543.504c.132.126.16.322.068.477-.082.14-.166.411-.21.68a.405.405 0 01-.407.334h-.734l.02.557.714-.02a.41.41 0 01.406.334c.045.269.13.543.21.68a.383.383 0 01-.067.477l-.543.526.437.4.52-.526a.423.423 0 01.474-.076c.208.101.448.174.72.216a.4.4 0 01.345.392v.712l.554-.02v-.692a.4.4 0 01.345-.392c.272-.042.501-.112.723-.216a.428.428 0 01.47.076l.544.527.414-.423-.543-.504a.392.392 0 01-.079-.46c.104-.202.177-.437.222-.697a.413.413 0 01.408-.33zm.737-1.333c.443 0 .801.347.801.776v.58a.789.789 0 01-.8.775h-.404a3.09 3.09 0 01-.107.325l.348.337a.759.759 0 01.235.551.77.77 0 01-.235.552l-.437.423a.824.824 0 01-1.14 0l-.348-.336a3.6 3.6 0 01-.333.104v.389a.789.789 0 01-.801.776h-.594a.79.79 0 01-.801-.776v-.39a3.075 3.075 0 01-.333-.1l-.348.336a.805.805 0 01-.568.23h-.003a.805.805 0 01-.569-.23l-.437-.423a.77.77 0 01-.235-.552.77.77 0 01.235-.552l.345-.333a2.845 2.845 0 01-.101-.325h-.4a.79.79 0 01-.802-.776v-.58a.79.79 0 01.801-.776h.4c.026-.1.06-.215.102-.325l-.345-.333a.77.77 0 01-.235-.552.77.77 0 01.235-.551l.437-.423a.805.805 0 01.569-.23h.003c.215 0 .417.081.568.23l.348.336c.106-.04.218-.073.333-.101v-.39c0-.428.358-.775.801-.775h.597c.442 0 .8.347.8.775v.39c.116.028.228.061.334.103l.347-.336a.824.824 0 011.14 0l.438.423a.759.759 0 01.235.552.77.77 0 01-.235.552l-.348.336c.04.104.076.213.107.325h.4v-.011z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSettingsWebRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.157 7.183a.558.558 0 01-.569-.549c0-.305.255-.549.569-.549.316 0 .568.247.568.55a.558.558 0 01-.568.548zm1.709 0a.558.558 0 01-.57-.549.56.56 0 01.57-.549c.316 0 .568.247.568.55a.556.556 0 01-.568.548zm-3.418 0a.558.558 0 01-.568-.549c0-.305.254-.549.568-.549a.56.56 0 01.569.55.56.56 0 01-.569.548zm7.291 7.138c.606 0 .863-.25.863-.83 0-.582-.257-.831-.863-.831-.605 0-.862.249-.862.832 0 .58.26.829.862.829zm0-2.608c1.14 0 1.846.68 1.846 1.779 0 1.095-.705 1.776-1.846 1.776-1.14 0-1.845-.681-1.845-1.776 0-1.098.708-1.78 1.845-1.78zm3.41 1.963v-.375h-.634a.484.484 0 01-.484-.398 2.263 2.263 0 00-.213-.67.466.466 0 01.092-.545l.474-.457-.297-.286-.476.457a.509.509 0 01-.563.09 2.534 2.534 0 00-.698-.208.48.48 0 01-.414-.467v-.608h-.393v.608a.478.478 0 01-.411.467 2.59 2.59 0 00-.698.205.503.503 0 01-.566-.09l-.476-.456-.297.285.474.457a.46.46 0 01.08.569c-.075.126-.156.392-.198.65a.487.487 0 01-.487.397H8.33v.375h.633a.49.49 0 01.487.398c.042.255.123.521.199.647a.46.46 0 01-.081.569l-.474.456.297.286.476-.456a.514.514 0 01.566-.09c.202.095.434.165.695.204a.48.48 0 01.414.468v.608h.393v-.608a.48.48 0 01.414-.468c.263-.042.485-.106.698-.207a.513.513 0 01.563.09l.476.456.297-.285-.474-.457a.461.461 0 01-.092-.546c.1-.196.17-.42.213-.67a.486.486 0 01.484-.397h.633v.002zm.1-1.322c.488 0 .88.381.88.846v.575c0 .467-.395.845-.88.845h-.339a2.559 2.559 0 01-.072.222l.31.297a.829.829 0 01.003 1.207l-.437.42a.9.9 0 01-.627.25h-.003a.905.905 0 01-.627-.25l-.309-.297c-.075.025-.15.05-.23.07v.325c0 .468-.394.846-.879.846h-.596c-.485 0-.88-.38-.88-.846v-.325a3.114 3.114 0 01-.23-.07l-.31.3a.912.912 0 01-1.253 0l-.437-.42a.827.827 0 010-1.205l.306-.297a2.558 2.558 0 01-.07-.224h-.34c-.484 0-.879-.38-.879-.846v-.574c0-.468.395-.846.88-.846h.339a3.8 3.8 0 01.07-.224l-.306-.297a.827.827 0 010-1.204l.437-.42a.909.909 0 011.252 0l.311.296c.076-.025.152-.047.23-.07v-.327c0-.468.395-.846.88-.846h.596c.488 0 .88.38.88.846v.327c.078.02.157.045.23.07l.31-.3a.893.893 0 01.625-.249h.003c.238 0 .46.09.627.25l.434.42a.832.832 0 01.003 1.204l-.313.3c.028.073.05.146.072.221h.34zm4.98 5.751a.222.222 0 00.228-.218V8.845H3.23v9.042c0 .12.103.218.227.218H20.23zM3.46 5.707a.222.222 0 00-.227.219v1.73H20.46V5.93c0-.12-.1-.219-.227-.219H3.46v-.003zm16.77-1.182c.805 0 1.457.63 1.457 1.404v11.958c0 .773-.652 1.403-1.456 1.403H3.46c-.805 0-1.46-.63-1.46-1.403V5.929c0-.774.653-1.404 1.46-1.404h16.77z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSharedDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.905 5.48c-.563-.644-1.404-.972-2.505-.972H5.291c-1.098 0-1.94.328-2.504.972C2.267 6.08 2 6.948 2 8.063v4.938c0 1.115.266 1.984.787 2.583.563.644 1.403.972 2.504.972h13.11c1.098 0 1.94-.328 2.504-.97.523-.599.787-1.467.787-2.582V8.063c0-1.115-.266-1.983-.787-2.583zm.753 12.698c0 .308-.252.56-.56.56H2.594a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504c.308 0 .56.252.56.56 0 .003 0 .003 0 0zm-8.672-8.9l-1.98.992c.02.166.02.33 0 .496l1.977.989.073-.076c.24-.227.574-.344.994-.344.42 0 .754.115.995.344.255.241.384.591.384 1.04 0 .428-.12.77-.356 1.008s-.591.372-1.023.372c-.431 0-.784-.128-1.022-.372s-.353-.58-.353-1.009c0-.061.003-.12.008-.176l-2.02-1.011c-.237.24-.587.367-1.016.367-.429 0-.784-.13-1.022-.373-.238-.244-.356-.58-.356-1.008 0-.448.129-.799.384-1.04.24-.226.574-.344.994-.344.42 0 .754.115.994.345l.026.025 2.016-1.009a1.875 1.875 0 01-.008-.179c0-.448.129-.798.384-1.04.24-.226.574-.344.994-.344.42 0 .754.115.995.345.254.24.383.59.383 1.04 0 .428-.12.77-.355 1.007-.236.239-.591.373-1.023.373-.431 0-.784-.129-1.022-.373-.02-.014-.031-.03-.045-.044z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSharedDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <g fill={fillColor}>
                <path d="M9.766 11.116a.287.287 0 01-.128-.544l4.476-2.25a.285.285 0 01.382.132c.068.14.011.31-.125.38l-4.477 2.253a.297.297 0 01-.128.029z" />
                <path d="M14.24 13.442a.292.292 0 01-.128-.031l-4.477-2.25a.289.289 0 01-.125-.386.283.283 0 01.378-.126l4.477 2.25c.14.071.199.243.128.383a.276.276 0 01-.253.16zm0-6.027c-.72 0-1.187.381-1.187 1.2 0 .392.108.683.299.88.207.216.512.319.885.319s.68-.103.885-.318c.19-.198.299-.49.299-.882.005-.818-.461-1.199-1.181-1.199z" />
                <path d="M14.24 11.917c-.72 0-1.187.38-1.187 1.2 0 .391.108.683.299.88.207.215.512.318.885.318s.68-.103.885-.317c.19-.198.299-.49.299-.882.005-.818-.461-1.199-1.181-1.199zm-4.474-2.25c-.72 0-1.187.381-1.187 1.2 0 .392.109.684.3.881.207.215.511.318.884.318s.68-.103.885-.318c.19-.197.3-.49.3-.881.002-.819-.465-1.2-1.182-1.2z" />
                <path d="M18.94 16.733H5.069c-1.03 0-1.813-.3-2.328-.892-.487-.561-.731-1.386-.731-2.453V8.343c0-1.068.244-1.892.73-2.45C3.256 5.3 4.039 5 5.069 5H18.94c1.03 0 1.813.3 2.328.893.483.558.731 1.382.731 2.45v5.045c0 1.067-.245 1.892-.731 2.45-.515.595-1.298.895-2.328.895zM5.069 5.573c-1.7 0-2.49.88-2.49 2.772v5.046c0 1.892.79 2.773 2.49 2.773H18.94c1.699 0 2.49-.881 2.49-2.773V8.343c0-1.892-.791-2.77-2.49-2.77H5.068zM21.707 19H2.285a.286.286 0 010-.572h19.422a.286.286 0 010 .572z" />
            </g>
        </svg>
    );
};

export const IconSharedDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.098 17.62a.561.561 0 010 1.12H2.594a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504zM18.4 4.508c1.099 0 1.942.328 2.505.972.523.6.787 1.468.787 2.583v4.938c0 1.115-.266 1.984-.787 2.583-.563.644-1.406.972-2.505.972H5.291c-1.098 0-1.94-.328-2.504-.97-.52-.601-.787-1.47-.787-2.585V8.063c0-1.115.266-1.983.787-2.583.563-.644 1.403-.972 2.504-.972h13.11zm0 1.12l-13.109.004c-.773 0-1.313.193-1.658.588-.339.386-.513 1.008-.513 1.843v4.938c0 .835.174 1.457.513 1.846.345.395.888.589 1.658.589h13.11c.77 0 1.313-.194 1.658-.589.339-.39.512-1.01.512-1.846V8.063c0-.835-.173-1.457-.512-1.846-.345-.395-.888-.588-1.659-.588zm-4.35 1.303c.42 0 .751.115.995.345.255.24.384.59.384 1.04 0 .428-.12.77-.356 1.007-.236.239-.594.373-1.025.373-.432 0-.785-.129-1.023-.373l-.038-.044-1.979.99a2.069 2.069 0 010 .495l1.98.989a.908.908 0 01.068-.071c.24-.227.574-.345.994-.345.42 0 .754.115.995.345.255.24.384.591.384 1.04 0 .428-.12.77-.356 1.008s-.594.372-1.025.372c-.432 0-.785-.129-1.023-.372-.238-.244-.353-.58-.353-1.009 0-.061.003-.12.007-.179l-2.021-1.01-.085.078c-.232.185-.554.288-.929.288-.431 0-.784-.13-1.022-.373-.238-.244-.356-.58-.356-1.008 0-.448.129-.799.384-1.04.24-.226.574-.344.994-.344.42 0 .754.115.995.345l.022.023 2.018-1.007a2.177 2.177 0 01-.007-.179c0-.448.13-.798.384-1.04.24-.226.574-.344.994-.344z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSharedMobileDataFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.501 7.256c.715 0 1.241.18 1.611.546.373.37.555.9.552 1.62v8.207c0 1.417-.748 2.165-2.165 2.165h-4.404c-1.398 0-2.165-.77-2.165-2.165v-2.264l1.496-.005a.499.499 0 00.395-.168.516.516 0 00.126-.384l-.003-1.098a.508.508 0 00-.555-.513l-1.456-.002v-1.367l.003-.042.677-.505c.003.003.006.003.009.003v-.005l1.263-.942a.41.41 0 00.171-.33.41.41 0 00-.17-.33l-1.73-1.295a.586.586 0 01.08-.257c.344-.577.971-.869 1.862-.869zM17.3 17.19c-.294 0-.488.154-.488.49 0 .163.045.28.124.362.084.086.21.128.364.128s.28-.042.364-.128c.081-.079.123-.2.123-.362 0-.333-.19-.49-.487-.49zM8.585 4.519c1.398 0 2.166.77 2.166 2.166v2.02a.578.578 0 01-.045.22l-1.373.004a.508.508 0 00-.555.513l-.005 1.094a.52.52 0 00.126.384.49.49 0 00.395.168l1.457.006v1.328a.57.57 0 01-.012.103l-.605.454a.45.45 0 01-.103-.02l-.003.101-1.188.89a.41.41 0 00-.17.331c0 .13.061.25.17.331l1.61 1.199a.564.564 0 01-.077.496c-.365.504-.947.75-1.788.75H4.182c-.714 0-1.24-.176-1.61-.543-.373-.37-.555-.9-.555-1.62v-8.21c0-1.417.748-2.164 2.165-2.164zm2.63 8.477l-.008.636c0 .07.056.126.123.126l2.872.002c.106-.016.187.076.185.163l.002.703c.014.115-.075.193-.162.188l-2.857.008a.132.132 0 00-.13.126l-.008.591c0 .07-.047.093-.103.05l-1.675-1.246c-.056-.042-.056-.11 0-.151l1.664-1.247c.056-.042.1-.02.098.05zm-4.8 1.473c-.295 0-.488.154-.488.49 0 .163.045.28.123.362.084.087.21.129.365.129.154 0 .28-.042.364-.13.08-.08.123-.198.123-.36 0-.334-.19-.49-.487-.49zm6.095-5.748c-.003-.07.042-.092.098-.05l1.664 1.246c.056.042.056.11 0 .152l-1.675 1.246c-.056.042-.104.02-.104-.05l-.008-.591a.132.132 0 00-.13-.126L9.5 10.539c-.09.009-.177-.07-.163-.187l.003-.704a.162.162 0 01.185-.162l2.87-.003a.125.125 0 00.124-.126z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSharedMobileDataLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <g fill={fillColor}>
                <path d="M6.443 13.779c.302 0 .496.154.496.481a.483.483 0 01-.125.355c-.086.086-.214.127-.371.127s-.285-.041-.371-.127c-.08-.08-.126-.195-.126-.355-.003-.327.194-.481.497-.481zm11.12 2.674c.302 0 .496.154.496.481a.483.483 0 01-.125.355c-.086.085-.214.127-.371.127s-.286-.042-.371-.127c-.08-.08-.126-.195-.126-.355-.003-.33.194-.481.497-.481zm-5.142-4.919a.36.36 0 01-.36-.368l-.011-.693-2.677-.011h-.025a.516.516 0 01-.377-.165.495.495 0 01-.128-.377l.002-1.079a.49.49 0 01.149-.354.522.522 0 01.416-.149l2.68-.003-.009-.69a.362.362 0 01.109-.278.35.35 0 01.245-.1.44.44 0 01.246.083l2.385 1.725a.4.4 0 01.174.325.399.399 0 01-.174.324l-2.405 1.725a.398.398 0 01-.24.085zM9.416 9.911l2.737.011a.467.467 0 01.468.449l.005.423 1.94-1.391-1.905-1.381.005.41a.426.426 0 01-.134.319.488.488 0 01-.33.134l-2.783.003-.003 1.023zm2.146 5.818a.417.417 0 01-.245-.082L8.91 13.922a.399.399 0 01-.174-.325.4.4 0 01.174-.324l2.386-1.725a.417.417 0 01.245-.082.35.35 0 01.245.099c.052.05.112.137.109.277l-.009.69 2.68.004a.516.516 0 01.565.503l.003 1.078a.495.495 0 01-.129.377.517.517 0 01-.402.165l-2.677.011-.011.693a.35.35 0 01-.354.366zm-2.146-2.132l1.94 1.392.006-.423a.466.466 0 01.465-.449l2.737-.01-.003-1.021-2.782-.003a.473.473 0 01-.331-.132.441.441 0 01-.134-.32l.005-.409-1.903 1.375z" />
                <path d="M8.788 16.312H4.092c-1.407 0-2.092-.66-2.092-2.016v-8.28C2 4.66 2.685 4 4.092 4h4.7c1.389 0 2.09.68 2.09 2.016v2.597a.281.281 0 01-.284.275.281.281 0 01-.286-.275V6.016c0-1.028-.454-1.466-1.52-1.466h-4.7c-.551 0-.933.113-1.17.341-.237.229-.351.597-.351 1.125v8.277c0 1.057.428 1.467 1.52 1.467h4.7c.945 0 1.378-.303 1.493-1.04a.283.283 0 01.325-.231.276.276 0 01.24.313c-.16 1.018-.834 1.51-2.06 1.51z" />
                <path d="M10.598 12.673a.281.281 0 01-.286-.275V10.19c0-.151.129-.275.286-.275.156 0 .285.124.285.275v2.21a.28.28 0 01-.285.274zM19.911 19h-4.7c-1.406 0-2.091-.66-2.091-2.016v-2.597c0-.151.128-.275.285-.275.157 0 .286.124.286.275v2.597c0 1.056.428 1.466 1.52 1.466h4.7c1.096 0 1.521-.413 1.521-1.466v-8.28c0-1.029-.454-1.466-1.52-1.466h-4.7c-1.173 0-1.413.528-1.493 1.045a.283.283 0 01-.325.231.276.276 0 01-.24-.314c.08-.508.297-.896.645-1.147.343-.244.802-.365 1.41-.365h4.7c1.389 0 2.091.679 2.091 2.016v8.277C22.003 18.34 21.318 19 19.911 19z" />
                <path d="M13.405 13.083a.281.281 0 01-.285-.275v-2.234c0-.15.128-.275.285-.275.157 0 .286.124.286.275v2.234a.28.28 0 01-.286.275z" />
            </g>
        </svg>
    );
};

export const IconSharedMobileDataRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.585 4.522c1.395 0 2.166.768 2.166 2.166l-.001 1.938h1.23l-.008-.574a.534.534 0 01.148-.392.485.485 0 01.345-.143c.115 0 .23.039.33.117l.512.383L13.32 8c.358-.492.956-.74 1.778-.74h4.403c.715 0 1.241.18 1.611.543.373.37.555.9.555 1.62v8.21c0 1.417-.748 2.165-2.166 2.165h-4.403c-1.395 0-2.165-.768-2.165-2.165v-1.888c0-.032.002-.063.007-.093l-1.19.006-.01.622c-.006.297-.219.523-.5.523a.55.55 0 01-.33-.114l-.524-.391a.575.575 0 01-.01.015c-.365.502-.95.748-1.788.748H4.182c-.714 0-1.24-.18-1.61-.543-.373-.373-.555-.902-.555-1.622V6.688c0-1.418.748-2.166 2.165-2.166h4.403zM19.5 8.377h-4.401c-.678 0-.835.215-.894.312l1.177.881a.567.567 0 01.232.454.57.57 0 01-.235.454l-1.414 1.053c.056.087.09.191.09.302l-.001 1.072.418.001a.676.676 0 01.73.675l.003 1.34a.678.678 0 01-.165.5.649.649 0 01-.52.222l-.475.002a.558.558 0 01.01.099v1.888c0 .781.262 1.044 1.044 1.044h4.403c.398 0 .673-.075.821-.224.149-.148.221-.423.221-.82v-8.21c0-.802-.243-1.045-1.044-1.045zm-2.2 8.815c.298 0 .488.157.488.49 0 .16-.045.28-.123.361-.084.087-.21.13-.364.13s-.28-.043-.364-.13c-.079-.08-.124-.199-.124-.361 0-.336.194-.49.488-.49zM8.586 5.642H4.182c-.398 0-.672.076-.82.225-.15.148-.222.423-.222.82v8.21c0 .802.244 1.046 1.045 1.046h4.403c.672 0 .827-.213.877-.283l.025-.03-1.182-.88a.566.566 0 01-.235-.455c0-.176.084-.344.232-.453l1.44-1.079a.557.557 0 01-.115-.339V11.37h-.492a.656.656 0 01-.491-.225.678.678 0 01-.165-.501l.003-1.34a.672.672 0 01.193-.475.654.654 0 01.538-.2h.414v-1.94c0-.782-.263-1.045-1.045-1.045zm2.278 7.334L9.1 14.296l1.81 1.347.002-.213a.624.624 0 01.614-.61l2.834-.015-.003-1.059-2.885-.002a.612.612 0 01-.613-.622l.003-.146zm-4.48 1.493c.298 0 .488.157.488.49 0 .16-.045.28-.123.362-.084.087-.21.129-.364.129s-.28-.042-.364-.13c-.079-.08-.124-.198-.124-.36 0-.334.194-.49.488-.49zm4.367-3.094v.635l.14-.104a.55.55 0 01.331-.115c.132 0 .255.05.345.143a.534.534 0 01.148.392l-.008.577h1.226v-.606l-.159.119a.552.552 0 01-.328.112c-.28 0-.495-.227-.498-.524l-.011-.622-1.186-.007zm2.073-2.673l.003.145a.614.614 0 01-.613.622l-2.885.003-.006 1.059 2.835.014a.623.623 0 01.616.613l.003.21 1.81-1.347-1.763-1.32z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShareFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.843 2.02c-6.232 0-9.826 3.103-9.826 9.823 0 6.72 3.594 9.826 9.826 9.826 6.233 0 9.826-3.106 9.826-9.826 0-6.72-3.596-9.823-9.826-9.823zm-1.342 9.823c0 .216-.02.417-.053.608l2.644 1.322c.07-.092.146-.182.23-.26.417-.395 1.014-.605 1.723-.605.708 0 1.308.21 1.722.605.449.425.676 1.033.676 1.803 0 .74-.21 1.328-.625 1.751-.42.432-1.034.658-1.776.658s-1.356-.226-1.776-.658c-.415-.423-.625-1.014-.625-1.75 0-.174.012-.34.037-.496l-2.695-1.348c-.033.042-.07.084-.11.124-.42.431-1.033.658-1.775.658s-1.356-.227-1.776-.658c-.414-.423-.625-1.014-.625-1.751 0-.77.227-1.378.676-1.804.417-.395 1.014-.605 1.722-.605.709 0 1.308.21 1.723.605.059.056.115.115.165.18l2.692-1.345a3.577 3.577 0 01-.036-.502c0-.77.227-1.378.675-1.804.417-.395 1.014-.605 1.722-.605.709 0 1.308.21 1.723.605.448.426.675 1.034.675 1.804 0 .74-.21 1.328-.625 1.751-.42.431-1.033.658-1.775.658-.743 0-1.356-.227-1.776-.658a2.393 2.393 0 01-.174-.204l-2.647 1.324c.048.185.064.384.064.597z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShareLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <g fill={fillColor}>
                <path d="M15.68 13.512c-.664 0-1.19.182-1.568.54a1.755 1.755 0 00-.334.438l-3.165-1.583c.067-.235.1-.496.1-.784a2.94 2.94 0 00-.097-.779l3.168-1.582c.078.142.174.271.286.386.38.39.921.586 1.613.586s1.233-.197 1.614-.586c.37-.378.557-.916.557-1.594 0-.708-.202-1.26-.602-1.638-.378-.359-.905-.541-1.569-.541-.664 0-1.19.182-1.569.54-.4.382-.602.933-.602 1.64 0 .246.025.47.073.68l-3.19 1.597a1.675 1.675 0 00-.28-.345c-.379-.358-.905-.54-1.57-.54-.663 0-1.19.182-1.568.54-.4.381-.602.933-.602 1.639 0 .678.188 1.215.557 1.594.381.389.922.585 1.614.585.692 0 1.232-.196 1.613-.585a1.82 1.82 0 00.233-.295l3.193 1.597a2.98 2.98 0 00-.073.672c0 .678.188 1.216.558 1.594.38.39.921.586 1.613.586s1.233-.196 1.614-.586c.37-.378.557-.916.557-1.594 0-.708-.202-1.26-.602-1.638-.381-.362-.908-.544-1.572-.544zm0-6.577c1.07 0 1.611.546 1.611 1.62 0 .526-.134.932-.398 1.201-.272.277-.678.417-1.213.417s-.94-.14-1.213-.417c-.263-.272-.397-.675-.397-1.202 0-1.073.543-1.619 1.61-1.619zm-7.137 6.81c-.535 0-.941-.14-1.213-.418-.263-.271-.398-.675-.398-1.201 0-1.076.541-1.62 1.611-1.62.731 0 1.216.256 1.448.763a.316.316 0 00.023.067l.016.028c.082.215.124.47.124.765 0 .308-.045.57-.138.795l-.002.006c-.006.014-.012.025-.017.039-.062.14-.143.263-.244.364-.269.272-.675.412-1.21.412zm8.35 3.151c-.272.277-.678.417-1.213.417s-.94-.14-1.213-.417c-.263-.272-.397-.675-.397-1.202 0-.269.033-.504.1-.708.006-.014.012-.026.015-.04.21-.58.711-.874 1.495-.874 1.07 0 1.611.547 1.611 1.62 0 .529-.134.932-.398 1.204z" />
                <path d="M11.815 21.619c-3.14 0-5.569-.807-7.221-2.398C2.88 17.57 2.01 15.078 2.01 11.815c0-3.26.869-5.753 2.583-7.406 1.65-1.591 4.081-2.398 7.221-2.398 3.14 0 5.569.807 7.221 2.398 1.715 1.653 2.583 4.143 2.583 7.406s-.868 5.754-2.583 7.406c-1.652 1.591-4.08 2.398-7.22 2.398zm0-19.048c-2.991 0-5.288.754-6.832 2.241-1.6 1.54-2.412 3.9-2.412 7.003 0 3.104.813 5.462 2.412 7.003 1.544 1.487 3.843 2.24 6.832 2.24s5.289-.753 6.832-2.24c1.6-1.54 2.412-3.9 2.412-7.003 0-3.104-.813-5.462-2.412-7.003-1.543-1.484-3.843-2.24-6.832-2.24z" />
            </g>
        </svg>
    );
};

export const IconShareRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.843 2.014c3.135 0 5.563.812 7.227 2.415 1.726 1.663 2.602 4.156 2.602 7.414s-.876 5.75-2.602 7.415c-1.664 1.602-4.095 2.414-7.227 2.414-3.132 0-5.563-.812-7.227-2.414-1.725-1.664-2.602-4.157-2.602-7.415 0-3.255.874-5.75 2.602-7.414 1.661-1.603 4.093-2.415 7.227-2.415zm0 1.123c-2.832 0-5.003.706-6.448 2.101-1.499 1.443-2.258 3.667-2.258 6.608s.76 5.162 2.258 6.608c1.445 1.395 3.616 2.1 6.448 2.1 2.832 0 5.003-.705 6.448-2.1 1.499-1.443 2.258-3.667 2.258-6.608s-.76-5.163-2.258-6.608c-1.445-1.395-3.616-2.1-6.448-2.1zm3.207 2.824c.71 0 1.306.21 1.723.605.448.426.675 1.033.675 1.804 0 .736-.21 1.327-.624 1.75-.42.432-1.034.659-1.776.659-.743 0-1.356-.227-1.776-.659a2.028 2.028 0 01-.174-.204l-2.647 1.325c.036.188.053.39.053.602 0 .216-.017.418-.053.608l2.644 1.322c.067-.092.146-.18.23-.26.414-.395 1.011-.605 1.723-.605.711 0 1.308.21 1.734.599.448.426.675 1.034.675 1.804 0 .737-.21 1.328-.625 1.75-.42.432-1.034.659-1.776.659s-1.356-.227-1.776-.658c-.414-.423-.625-1.012-.625-1.751 0-.174.014-.339.037-.496l-2.695-1.347c-.036.042-.07.084-.109.123-.42.431-1.034.658-1.776.658s-1.356-.227-1.776-.658c-.414-.423-.625-1.011-.625-1.75 0-.771.227-1.379.676-1.805.414-.395 1.014-.605 1.722-.605.709 0 1.306.21 1.723.605.059.056.115.118.165.18L12.69 8.87a3.2 3.2 0 01-.036-.501c0-.77.227-1.378.675-1.804.414-.395 1.01-.605 1.722-.605zm-.002 8.067c-.874 0-1.28.409-1.28 1.289 0 .437.103.761.305.969.207.213.535.319.975.319.44 0 .767-.106.974-.32.202-.207.306-.531.306-.968 0-.88-.406-1.289-1.28-1.289zM8.1 10.555c-.874 0-1.28.409-1.28 1.288 0 .437.103.762.305.97.207.212.535.319.975.319.44 0 .767-.107.975-.32a.923.923 0 00.176-.263.322.322 0 01.023-.05c.07-.18.106-.398.106-.656 0-.246-.03-.454-.095-.627l-.009-.014a.43.43 0 01-.03-.076c-.185-.387-.56-.571-1.146-.571zm6.947-3.471c-.874 0-1.28.409-1.28 1.289 0 .437.103.761.305.969.207.213.535.32.975.32.44 0 .767-.107.974-.32.202-.208.306-.535.306-.97 0-.879-.406-1.288-1.28-1.288z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldAntivirusFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.905 5.148c0 .27.017 6.608-.448 9.35-.611 3.552-7.163 6.774-7.905 7.13a.6.6 0 01-.518 0c-.745-.356-7.289-3.578-7.9-7.13-.473-2.742-.456-9.08-.456-9.35a.61.61 0 01.756-.593c1.608.26 2.454-.317 3.53-1.037C9.022 2.804 10.224 2 12.289 2h.005c2.065.003 3.266.807 4.325 1.518 1.076.72 1.927 1.292 3.552 1.034a.645.645 0 01.504.137c.14.112.221.28.23.46zm-8.614 9.653c-1.563 0-1.988-.583-1.988-2.711 0-1.328.184-2.042.624-2.381.286-.222.734-.33 1.367-.33.625 0 1.07.106 1.359.324.442.339.63 1.053.63 2.387-.003 2.128-.429 2.711-1.992 2.711zm.003-7.042c1.333 0 1.333.275 1.333.656l-.002.02a4.106 4.106 0 00-1.336-.2c-.516 0-.953.07-1.328.196l-.003-.016c.003-.381.003-.656 1.336-.656zm2.868.003l.042.779-.462.142c.011-.09.023-.176.023-.271 0-1.04-.577-1.47-1.208-1.659a.568.568 0 00-.061-.72.561.561 0 00-.793-.008l-.008.009-.395.4c-.009.009-.011.02-.023.031-.008-.011-.01-.022-.02-.03l-.397-.401a.561.561 0 00-.793-.009l-.008.009a.565.565 0 00-.053.728c-.617.193-1.174.625-1.174 1.647 0 .098.011.19.022.28l-.495-.154.042-.779a.572.572 0 00-.535-.602c-.309.006-.58.227-.597.543l-.065 1.227a.575.575 0 00.401.58l.908.28c-.171.41-.26.869-.303 1.336h-.68a.571.571 0 00-.57.572v.815c0 .317.256.574.57.574a.57.57 0 00.565-.574v-.24h.079c.005.579.053 1.142.182 1.646l-.751.233a.574.574 0 00-.4.577l.064 1.227a.571.571 0 00.566.543h.03a.57.57 0 00.536-.602l-.042-.779.484-.148c.457.599 1.21.98 2.451.98 1.235 0 1.989-.378 2.448-.975l.465.143-.042.779a.572.572 0 00.535.602h.031a.571.571 0 00.566-.543l.064-1.227a.57.57 0 00-.4-.577l-.731-.224c.131-.505.179-1.07.185-1.656h.078v.241c0 .317.255.574.566.574a.571.571 0 00.568-.571v-.818a.571.571 0 00-.565-.574h-.687c-.044-.47-.131-.933-.305-1.342l.888-.275a.569.569 0 00.4-.58l-.064-1.226c-.017-.317-.277-.54-.597-.544a.583.583 0 00-.535.61zm-2.901 2.45a.567.567 0 00-.566.572v3.054c0 .316.252.571.566.571a.57.57 0 00.565-.571v-3.054a.573.573 0 00-.565-.571z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldAntivirusLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.631 14.378c.392-2.294.44-7.364.445-8.913-1.806.148-2.888-.569-3.93-1.266-1.01-.678-2.058-1.375-3.865-1.378h-.006c-1.81 0-2.854.7-3.868 1.378-1.05.7-2.132 1.414-3.93 1.272.006 1.557.053 6.616.454 8.91.496 2.882 6.263 5.896 7.344 6.44 1.087-.544 6.86-3.56 7.356-6.443zm1.26-9.375c0 .274.017 6.734-.456 9.518-.616 3.583-7.68 6.983-7.98 7.126a.398.398 0 01-.348 0c-.302-.143-7.358-3.546-7.975-7.126-.484-2.784-.467-9.244-.465-9.518a.409.409 0 01.496-.398c1.754.269 2.703-.359 3.799-1.09C9.023 2.804 10.225 2 12.275 2h.006c2.05.003 3.255.807 4.314 1.515 1.095.731 2.036 1.367 3.792 1.09a.433.433 0 01.504.398zm-8.613 10.003c1.538 0 1.98-.594 1.98-2.65 0-1.289-.193-1.983-.638-2.322-.292-.219-.731-.328-1.342-.328-.616 0-1.059.11-1.35.333-.443.342-.63 1.037-.63 2.317 0 2.056.442 2.65 1.98 2.65zm.003-6.807c-1.37 0-1.37.339-1.37.734 0 .073.006.131.014.185.37-.152.812-.233 1.353-.233.543 0 .989.081 1.359.233.008-.054.014-.115.014-.188 0-.392 0-.731-1.37-.731zm3.515 3.38a.41.41 0 01.406.41v.759a.407.407 0 11-.812 0v-.35h-.316c-.003.664-.065 1.25-.21 1.745l.806.246c.18.056.297.227.286.415l-.059 1.143a.407.407 0 01-.406.39h-.022a.414.414 0 01-.387-.432l.045-.824-.605-.185c-.412.589-1.104.928-2.244.928-1.143 0-1.837-.342-2.246-.933l-.622.19.042.824a.411.411 0 01-.384.431h-.022a.407.407 0 01-.407-.39l-.058-1.142a.41.41 0 01.288-.415l.826-.252c-.145-.496-.204-1.075-.207-1.74h-.316v.35a.407.407 0 11-.813 0v-.758c0-.227.182-.41.406-.41h.751c.037-.515.137-1.016.342-1.445l-.986-.302a.41.41 0 01-.289-.415l.056-1.142a.406.406 0 11.813.042l-.042.82.74.227a1.901 1.901 0 01-.051-.437c0-.975.577-1.336 1.185-1.473l-.07-.073a.41.41 0 010-.58.402.402 0 01.568-.005l.006.005.372.373c.05.056.087.123.101.196h.009a.4.4 0 01.1-.196l.37-.373a.4.4 0 01.569-.005c.003.002.005.002.005.005.16.16.16.42 0 .58l-.067.067c.616.129 1.216.488 1.216 1.48 0 .156-.02.293-.05.425l.711-.219-.042-.82a.411.411 0 01.384-.432.401.401 0 01.426.376v.01l.061 1.144a.408.408 0 01-.286.414l-.969.297c.208.429.306.933.345 1.448.003.009.753.009.753.009zm-3.549-.848a.41.41 0 01.406.41v2.842a.407.407 0 11-.812 0v-2.84a.41.41 0 01.406-.412z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldAntivirusRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.258 14.288c.361-2.126.423-6.714.428-8.45-1.675.08-2.725-.617-3.74-1.295-1.005-.675-1.954-1.31-3.655-1.313h-.005c-1.7 0-2.65.636-3.659 1.313-1.01.678-2.044 1.39-3.736 1.295.008 1.736.07 6.327.437 8.45.409 2.373 4.935 5.093 6.96 6.104 2.029-1.014 6.564-3.731 6.97-6.104zm1.647-9.14c0 .27.02 6.608-.448 9.35-.611 3.552-7.16 6.774-7.905 7.13a.597.597 0 01-.518 0c-.746-.356-7.286-3.578-7.897-7.13-.473-2.742-.456-9.08-.456-9.35a.61.61 0 01.756-.593c1.608.257 2.454-.317 3.53-1.04C9.024 2.804 10.23 2 12.293 2h.006c2.064.003 3.266.807 4.325 1.518 1.075.72 1.927 1.292 3.551 1.034a.634.634 0 01.505.137.65.65 0 01.224.46zm-8.614 9.653c1.563 0 1.99-.583 1.99-2.711 0-1.334-.189-2.048-.634-2.387-.288-.218-.731-.325-1.359-.325-.63 0-1.078.11-1.364.33-.437.34-.624 1.051-.624 2.382.003 2.128.428 2.711 1.991 2.711zm.003-7.042c-1.333 0-1.333.275-1.333.656 0 .005.003.01.003.016a4.08 4.08 0 011.327-.196c.521 0 .958.07 1.336.2 0-.01.003-.012.003-.02-.003-.381-.003-.656-1.336-.656zm2.868.003a.568.568 0 01.535-.602c.32.002.58.224.597.543l.065 1.227a.575.575 0 01-.401.58l-.888.274c.17.41.26.871.305 1.342h.681c.314 0 .569.258.569.574v.815a.572.572 0 01-.569.575.57.57 0 01-.566-.575v-.24h-.078c-.006.582-.05 1.148-.185 1.655l.731.224c.25.078.415.317.4.58l-.064 1.227a.571.571 0 01-.566.543h-.03a.568.568 0 01-.536-.602l.042-.779-.465-.143c-.456.597-1.212.975-2.448.975-1.24 0-1.994-.38-2.45-.98l-.485.148.042.779a.57.57 0 01-.535.602h-.031a.571.571 0 01-.566-.543l-.064-1.227a.575.575 0 01.4-.58l.75-.23c-.13-.504-.176-1.067-.181-1.647h-.079v.241a.571.571 0 01-.565.574.572.572 0 01-.569-.574v-.815c0-.316.255-.574.569-.574h.68c.045-.47.132-.927.303-1.336l-.908-.28a.575.575 0 01-.4-.58l.064-1.227c.017-.317.289-.535.597-.544a.57.57 0 01.535.603l-.042.778.496.154c-.009-.09-.023-.182-.023-.28 0-1.022.558-1.453 1.177-1.647a.572.572 0 01.053-.728.561.561 0 01.8 0l.399.4c.008.009.01.023.02.031.008-.01.01-.022.022-.03l.397-.401a.561.561 0 01.802 0 .572.572 0 01.061.72c.63.185 1.207.616 1.207 1.655 0 .096-.01.182-.022.272l.465-.143-.048-.784zm-2.904 2.45a.57.57 0 01.566.575v3.053a.57.57 0 01-.566.575.57.57 0 01-.566-.575v-3.053c0-.316.255-.574.566-.574z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCheckedOkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.603 5.14c0 .269.016 6.616-.449 9.361-.621 3.611-7.613 6.986-7.91 7.126a.601.601 0 01-.51 0c-.297-.142-7.28-3.518-7.902-7.128-.476-2.746-.459-9.093-.456-9.362a.595.595 0 01.74-.583c1.613.256 2.464-.319 3.543-1.041C8.72 2.807 9.922 2 11.986 2h.006c2.064.003 3.263.807 4.325 1.518 1.078.723 1.933 1.294 3.566 1.037a.62.62 0 01.711.51l.009.075zm-10.101 8.585l-2.006-2.028a.592.592 0 00-.835-.008l-.008.008a.607.607 0 000 .852l2.429 2.457c.23.232.607.232.837.002l.003-.002 5.406-5.468a.607.607 0 000-.852.592.592 0 00-.835-.008l-.008.008c-.003-.003-4.983 5.04-4.983 5.04z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCheckedOkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.342 14.537c.392-2.294.44-7.367.442-8.916-1.812.157-2.888-.568-3.93-1.263-1.011-.678-2.059-1.378-3.865-1.378h-.006c-1.807 0-2.854.7-3.868 1.378-1.05.697-2.149 1.412-3.927 1.269.005 1.557.056 6.619.45 8.907.496 2.886 6.267 5.897 7.348 6.44 1.081-.54 6.857-3.554 7.356-6.437zm1.257-9.378c0 .275.017 6.734-.456 9.518-.617 3.583-7.68 6.983-7.98 7.126a.398.398 0 01-.348 0c-.303-.143-7.359-3.543-7.975-7.126-.484-2.784-.465-9.243-.465-9.518a.41.41 0 01.504-.395c1.746.275 2.692-.358 3.79-1.092 1.06-.712 2.26-1.516 4.314-1.516h.006c2.053.003 3.255.807 4.316 1.516 1.095.73 2.042 1.367 3.793 1.092a.455.455 0 01.342.09.428.428 0 01.16.305zm-4.893 3.76a.403.403 0 01.571-.004l.003.003c.16.16.16.42 0 .58l-5.532 5.583a.403.403 0 01-.572.002l-.002-.002-2.485-2.507a.41.41 0 010-.58.403.403 0 01.571-.003l.003.003 2.196 2.215 5.247-5.29z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCheckedOkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.28 14.294c.364-2.134.423-6.75.431-8.479-1.68.081-2.733-.613-3.75-1.294-1.009-.675-1.961-1.314-3.667-1.317h-.006c-1.705 0-2.658.64-3.669 1.317-1.014.678-2.056 1.373-3.748 1.294.009 1.728.067 6.345.437 8.48.412 2.386 4.958 5.108 6.983 6.12 2.028-1.012 6.58-3.74 6.99-6.12zm1.625-9.154c0 .269.02 6.616-.448 9.361-.622 3.611-7.611 6.986-7.908 7.13a.582.582 0 01-.51-.004c-.297-.14-7.28-3.518-7.902-7.126-.476-2.745-.46-9.092-.456-9.361a.597.597 0 01.74-.583c1.613.255 2.464-.319 3.543-1.042C9.025 2.804 10.227 2 12.29 2h.009c2.064.003 3.263.807 4.325 1.518 1.078.723 1.932 1.294 3.565 1.04a.615.615 0 01.715.582zm-10.101 8.585l4.983-5.042a.592.592 0 01.843 0 .607.607 0 010 .852l-5.403 5.468a.591.591 0 01-.84 0L7.96 12.546a.607.607 0 010-.851.592.592 0 01.843 0l2 2.03z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCrossFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.434 4.56c1.602.258 2.454-.322 3.527-1.053C8.913 2.86 9.983 2.143 11.683 2v9.045H3.81c-.14-2.76-.132-5.703-.132-5.885 0-.19.087-.37.232-.49a.616.616 0 01.524-.11zm16.47.602c0 .183.01 3.127-.128 5.886h-7.877V2c1.7.143 2.77.86 3.723 1.507 1.075.731 1.933 1.303 3.552 1.048a.636.636 0 01.725.529c0 .028.003.053.006.078zM12.9 21.686v-9.395h7.804c-.062.891-.14 1.715-.246 2.345v.003c-.558 3.271-6.014 6.263-7.558 7.047zm-8.762-7.05c-.109-.63-.187-1.454-.252-2.347h7.801v9.394c-1.543-.781-6.994-3.773-7.549-7.047z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCrossLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.434 20.744V12.14h7.174c-.062.92-.143 1.765-.252 2.393-.448 2.613-5.238 5.33-6.922 6.212M4.69 14.532c-.109-.63-.19-1.474-.255-2.393h7.171v8.605c-1.683-.882-6.465-3.599-6.916-6.212M8.157 4.366c.93-.622 1.896-1.255 3.448-1.355v8.29H4.381c-.117-2.22-.14-4.655-.145-5.66 1.784.154 2.873-.572 3.921-1.275m11.647 1.27c-.003 1-.025 3.442-.143 5.666h-7.227V3.013c1.552.098 2.519.734 3.446 1.356 1.042.695 2.12 1.412 3.924 1.266m.83-.47a.433.433 0 00-.163-.311.448.448 0 00-.35-.093c-1.745.278-2.69-.358-3.782-1.09-1.059-.708-2.263-1.512-4.316-1.515h-.006c-2.053 0-3.255.804-4.316 1.516-1.096.73-2.04 1.37-3.788 1.086a.414.414 0 00-.35.082.428.428 0 00-.157.325c0 .274-.016 6.73.465 9.512.617 3.583 7.67 6.983 7.97 7.126.002.003.005 0 .008.003a.39.39 0 00.339 0c.003-.003.003 0 .006-.003.302-.143 7.364-3.543 7.98-7.126.476-2.784.46-9.24.46-9.512"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldCrossRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.9 20.073v-7.888h6.587c-.058.807-.131 1.543-.227 2.103-.372 2.16-4.156 4.6-6.36 5.785m-7.57-5.785a22.452 22.452 0 01-.232-2.103h6.585v7.888c-2.201-1.185-5.98-3.625-6.352-5.785m3.302-9.747c.88-.591 1.717-1.152 3.053-1.283v7.697h-6.66a121.92 121.92 0 01-.132-5.12c1.677.087 2.728-.617 3.739-1.294m11.056 1.294a118.903 118.903 0 01-.129 5.12H12.9V3.258c1.332.131 2.17.694 3.052 1.283 1.009.677 2.05 1.383 3.737 1.294m1.216-.687a.618.618 0 00-.23-.459.642.642 0 00-.504-.137c-1.622.255-2.476-.314-3.552-1.037C15.56 2.804 14.359 2 12.294 2h-.008c-2.065 0-3.266.804-4.328 1.515-1.076.723-1.924 1.292-3.527 1.04a.611.611 0 00-.52.109.632.632 0 00-.236.482c0 .269-.017 6.61.457 9.35.61 3.552 7.15 6.773 7.896 7.129.003.002.006 0 .008.002a.57.57 0 00.496 0c.003-.002.009 0 .011-.002.745-.356 7.294-3.577 7.905-7.13.474-2.739.457-9.078.457-9.347"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.291 21.686a.597.597 0 01-.257-.059c-.745-.355-7.286-3.577-7.897-7.128-.473-2.743-.456-9.082-.456-9.35 0-.191.087-.367.235-.485a.611.611 0 01.521-.11c1.602.258 2.448-.316 3.524-1.039C9.022 2.804 10.224 2 12.289 2h.008c2.064.003 3.266.807 4.325 1.518 1.075.723 1.927 1.289 3.552 1.034a.625.625 0 01.501.137.639.639 0 01.23.462c0 .27.017 6.608-.448 9.35-.611 3.552-7.16 6.774-7.905 7.13a.66.66 0 01-.26.055z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.499 5.485c.005 1.565.053 6.607.45 8.89.497 2.877 6.242 5.883 7.331 6.426 1.09-.546 6.843-3.552 7.34-6.426.389-2.288.436-7.341.442-8.899-1.818.143-2.883-.571-3.922-1.263-1.008-.675-2.056-1.373-3.857-1.375h-.005c-1.804 0-2.85.697-3.86 1.375-1.05.7-2.135 1.42-3.92 1.272zm7.781 16.201a.44.44 0 01-.179-.039c-.297-.143-7.35-3.543-7.97-7.126-.484-2.782-.464-9.238-.464-9.513a.414.414 0 01.515-.406c1.74.278 2.684-.356 3.779-1.087C9.023 2.804 10.224 2 12.278 2h.008c2.053.003 3.255.807 4.314 1.515 1.092.731 2.033 1.362 3.784 1.09a.438.438 0 01.51.403c0 .275.017 6.731-.457 9.513-.616 3.585-7.678 6.983-7.977 7.126a.45.45 0 01-.18.04z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShieldRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.588 5.835c.008 1.736.07 6.327.437 8.45.409 2.376 4.936 5.093 6.96 6.102 2.026-1.012 6.561-3.729 6.97-6.101.361-2.126.42-6.717.429-8.454-1.673.084-2.726-.616-3.737-1.294-1.006-.675-1.955-1.311-3.656-1.314h-.005c-1.698 0-2.65.639-3.656 1.314-1.014.68-2.067 1.398-3.742 1.297zm7.398 15.851a.597.597 0 01-.258-.059c-.745-.355-7.286-3.577-7.896-7.128-.474-2.743-.457-9.082-.457-9.35 0-.191.087-.367.235-.485a.611.611 0 01.521-.11c1.603.258 2.449-.316 3.524-1.039C8.717 2.804 9.92 2 11.983 2h.008c2.065.003 3.266.807 4.325 1.518 1.076.723 1.927 1.289 3.552 1.034a.625.625 0 01.502.137.625.625 0 01.226.462c0 .27.017 6.608-.448 9.35-.61 3.552-7.16 6.773-7.905 7.13a.637.637 0 01-.257.055z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShopFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.406 13.064c.65.365 1.448.566 2.275.566.647 0 1.243-.131 1.773-.342v6.788c0 .888-.68 1.61-1.516 1.61h-4.467v-5.644c0-.68-.493-1.233-1.098-1.233h-3.037c-.608 0-1.098.552-1.098 1.233v5.644H4.745c-.837 0-1.515-.722-1.515-1.61v-6.788c.53.213 1.126.342 1.773.342.835 0 1.638-.204 2.288-.574.65.367 1.454.574 2.289.574.622 0 1.235-.115 1.781-.33.174-.07.34-.149.493-.236.65.365 1.448.566 2.278.566.829 0 1.627-.201 2.274-.566zm4.768-3.593c.327.333.512.756.512 1.198 0 1.2-1.32 2.14-3.003 2.14-.888 0-1.711-.271-2.274-.733-.56.462-1.387.734-2.277.734-.888 0-1.712-.272-2.275-.734a3 3 0 01-.798.462c-.446.18-.958.272-1.476.272-.897 0-1.723-.272-2.289-.746-.56.471-1.392.746-2.288.746-1.684 0-3.003-.942-3.003-2.14 0-.426.19-.726.344-.967.062-.098.126-.196.174-.308.098-.227.857-2.684 1.415-4.479.274-.885.529-1.709.703-2.26a.903.903 0 01.851-.62L18.188 2h.002c.395 0 .737.25.858.622l1.26 4.003c.05.154.126.434.216.759.168.61.518 1.88.65 2.087z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShopLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.208 12.178c1.422 0 2.622-.726 2.622-1.584 0-.342-.199-.615-.364-.786l-.003-.003c-.218-.23-.42-.82-.988-2.878a26.277 26.277 0 00-.252-.89l-1.513-4.8a.098.098 0 00-.09-.064l-15.238.043a.095.095 0 00-.09.06c-.205.653-.511 1.641-.84 2.7-.935 3.015-1.607 5.173-1.735 5.472-.08.178-.175.346-.282.508-.165.262-.26.417-.26.632 0 .86 1.2 1.583 2.623 1.583.954 0 1.838-.326 2.305-.847l.148-.165.293-.033c.168 0 .326.07.44.198.467.524 1.351.847 2.306.847.945 0 1.825-.32 2.296-.837l.148-.161.289-.03c.165 0 .32.07.43.19.47.519 1.351.838 2.296.838.944 0 1.825-.32 2.296-.837l.144-.158.286-.034h.003c.162 0 .32.068.43.189.474.524 1.355.843 2.3.847zm1.143 9.875v-9.035a5.07 5.07 0 01-1.147.141c-1.065 0-2.053-.326-2.73-.88-.675.557-1.666.88-2.732.88-1.065 0-2.054-.323-2.73-.88-.672.557-1.663.88-2.732.88-1.072 0-2.07-.33-2.746-.894-.676.565-1.67.894-2.746.894-.404 0-.784-.057-1.147-.141v9.032c0 .427.377.776.837.776h5.388v-5.993c0-.702.592-1.274 1.318-1.274h3.65c.73 0 1.322.572 1.322 1.274v5.993h5.36c.461 0 .838-.346.835-.773zm-7.18.773v-5.993c0-.161-.152-.292-.336-.292H10.19c-.185 0-.336.13-.336.292v5.993h4.316zm9.64-12.235c0 .867-.578 1.614-1.476 2.077v9.385c0 .968-.816 1.758-1.818 1.758H3.482c-1.005 0-1.822-.79-1.822-1.758v-9.385c-.894-.46-1.472-1.21-1.472-2.077 0-.51.228-.87.41-1.16.074-.117.15-.235.208-.37.118-.272 1.032-3.22 1.697-5.374.33-1.066.636-2.05.844-2.713.148-.443.558-.74 1.025-.743l15.24-.043a1.08 1.08 0 011.033.75l1.512 4.803c.06.188.155.527.262.927.199.716.605 2.195.767 2.474.41.427.625.925.625 1.45z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShoppingCartFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.552 6.849a.557.557 0 00-.443-.216H7.056c-.23-1.288-.4-2.501-.403-2.53-.219-1.218-1.367-2.1-2.737-2.1H2.56a.562.562 0 00-.56.56c0 .308.252.56.56.56h1.356c.812 0 1.513.507 1.633 1.177.23 1.285 1.507 8.708 1.636 9.535.162 1.025.543 1.829 1.137 2.389.566.535 1.311.815 2.149.815h6.008c.83 0 1.532-.283 2.092-.84.53-.53.886-1.294 1.182-2.308.132-.451 1.729-5.941 1.902-6.558a.547.547 0 00-.103-.484zM10.47 21.683c-.502 0-.902-.142-1.194-.423-.305-.294-.46-.705-.46-1.23 0-.523.155-.935.46-1.229.292-.28.695-.423 1.194-.423.498 0 .902.143 1.193.423.305.294.46.706.46 1.23s-.155.935-.46 1.23c-.291.28-.692.422-1.193.422zm5.462 0c-.502 0-.902-.142-1.194-.423-.305-.294-.459-.705-.459-1.23 0-.523.154-.935.46-1.229.29-.28.694-.423 1.193-.423.498 0 .902.143 1.193.423.303.294.46.706.46 1.23s-.155.935-.46 1.23c-.291.28-.692.422-1.193.422z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShoppingCartLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.184 16.918H10.63c-.765 0-1.443-.255-1.956-.74-.546-.515-.899-1.263-1.053-2.226-.087-.558-.633-3.852-1.075-6.493a.276.276 0 01-.02-.107v-.016c-.263-1.57-.482-2.88-.543-3.213a1.622 1.622 0 00-.64-.998 2.12 2.12 0 00-1.268-.409H2.436a.28.28 0 01-.28-.28.28.28 0 01.28-.28h1.639c.588 0 1.16.185 1.608.524.456.342.759.82.851 1.345.056.319.267 1.554.516 3.047h14.504a.28.28 0 01.272.35c-.154.611-.446 1.785-.757 3.028a616.616 616.616 0 01-.882 3.53c-.252.975-.616 1.689-1.106 2.182-.507.501-1.143.756-1.897.756zM7.145 7.632c.431 2.594.947 5.692 1.03 6.23.253 1.608 1.124 2.496 2.455 2.496h6.554c.608 0 1.098-.196 1.499-.597.414-.414.737-1.061.96-1.924.118-.451.505-2.014.883-3.524.258-1.036.504-2.028.67-2.68H7.144zm3.485 14.202c-.872 0-1.373-.501-1.373-1.372 0-.872.501-1.373 1.373-1.373.87 0 1.372.501 1.372 1.373 0 .87-.501 1.372-1.372 1.372zm0-2.185c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813zm5.462 2.185c-.871 0-1.373-.501-1.373-1.372 0-.872.502-1.373 1.373-1.373s1.372.501 1.372 1.373c0 .87-.501 1.372-1.372 1.372zm0-2.185c-.563 0-.813.25-.813.813s.25.812.813.812.812-.25.812-.812c0-.563-.25-.813-.812-.813z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShoppingCartRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.479 17.042h-6.008c-.838 0-1.58-.283-2.149-.815-.59-.558-.975-1.361-1.137-2.39-.135-.851-1.454-8.523-1.636-9.54-.12-.672-.82-1.177-1.633-1.177H2.563a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h1.353c1.367 0 2.518.882 2.737 2.1.058.323.23 1.309.44 2.536h14.025a.56.56 0 01.537.72c-.462 1.552-1.703 5.764-1.901 6.535-.267 1.025-.653 1.778-1.183 2.308-.56.56-1.263.843-2.092.843zM7.286 7.756c.428 2.496.927 5.4 1.005 5.908.124.776.39 1.361.799 1.748.361.339.823.51 1.38.51h6.009c.683 0 1.653-.239 2.188-2.311.187-.723 1.179-4.096 1.7-5.855H7.286zm3.185 13.93c-.502 0-.902-.143-1.194-.423-.305-.294-.46-.706-.46-1.23 0-.523.155-.935.46-1.23.292-.28.695-.422 1.194-.422.498 0 .902.143 1.193.423.305.294.46.706.46 1.23 0 .523-.155.935-.46 1.23-.291.28-.692.422-1.193.422zm0-2.185c-.41 0-.533.124-.533.533 0 .409.124.532.533.532.409 0 .532-.123.532-.532 0-.41-.126-.533-.532-.533zm5.462 2.185c-.502 0-.902-.143-1.194-.423-.305-.294-.459-.706-.459-1.23 0-.523.154-.935.46-1.23.29-.28.694-.422 1.193-.422.498 0 .902.143 1.193.423.303.294.46.706.46 1.23 0 .523-.155.935-.46 1.23-.291.28-.692.422-1.193.422zm0-2.185c-.41 0-.532.124-.532.533 0 .409.123.532.532.532.409 0 .532-.123.532-.532 0-.41-.126-.533-.532-.533z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShopRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.077 2.5a.75.75 0 01.695.467l2.275 5.594.04.049c1.136 1.485.488 3.025-1.157 3.789l-.079.035v7.805c0 .934-.718 1.7-1.633 1.774l-.146.006h-4.859l-4.867.032v-.032H5.101a1.78 1.78 0 01-1.773-1.634l-.006-.146v-7.812l-.103-.043C1.55 11.619.929 10.03 2.094 8.578l.031-.037 2.258-5.573a.75.75 0 01.582-.46l.113-.008zm-6.962 9.677l-.122.079c-1.348.796-3.386.732-4.557-.015l-.055-.037-.135.082c-.72.404-1.576.569-2.423.506v7.447a.28.28 0 00.215.273l.064.007h4.243l.001-4.246c0-.91.7-1.681 1.593-1.756l.142-.006h2.026c.958 0 1.735.777 1.735 1.735v4.273h4.23a.28.28 0 00.273-.215l.007-.065v-7.412c-.953.094-1.897-.1-2.6-.6l-.05-.039-.093.056c-1.391.795-2.784.76-4.03.179l-.187-.091a5.183 5.183 0 01-.176-.096l-.101-.059zm.992 3.834h-2.026c-.118 0-.235.12-.235.262v4.246h2.495l.001-4.273a.235.235 0 00-.116-.203l-.057-.024-.062-.008zm5.465-12.012H5.583L3.471 9.214a.75.75 0 01-.082.15l-.142.174c-.464.6-.245 1.096.597 1.482 1.025.469 2.336.356 3.068-.335a.75.75 0 011.13.117l.066.079c.57.581 2.641.665 3.437-.16a.75.75 0 011.038-.04c.076.066.248.19.496.317 1.003.516 2.09.515 3.25-.365a.75.75 0 011.044.136l.088.099c.538.537 1.715.64 2.725.22.986-.41 1.224-.964.637-1.656a.75.75 0 01-.123-.203L18.572 4z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShowerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M3.678 12.078h16.386c.224 0 .569.264.569.589 0 .325-.345.588-.569.588H3.678c-.224 0-.538-.263-.538-.588 0-.325.314-.589.538-.589zm9.358-1.22c.138-.119.446-.127.563-.107a.607.607 0 00.474-.124.617.617 0 00.238-.425c.03-.32.148-.404.188-.432.201-.143.568-.098.677-.075.21.05.437-.009.591-.166.373-.372.634-.358.715-.347.39.03.756.423.86.569a.611.611 0 00.571.257c.518-.053.902.031 1.149.247.29.258.347.66.358.801h-6.476c.022-.132.073-.182.092-.199zM8.316 6.24a.87.87 0 011.706 0H8.317zm13.398 6.454c0-.695-.44-1.286-1.059-1.524.003-.017.012-.034.012-.05.002-.11-.009-1.085-.762-1.765-.451-.406-1.053-.608-1.77-.589a.025.025 0 01-.02-.008c-.292-.305-.824-.74-1.527-.798-.358-.028-.899.036-1.462.49-.345-.03-.885-.003-1.342.314-.201.143-.44.378-.585.764-.303.034-.667.135-.97.393-.223.19-.476.54-.518 1.109a.03.03 0 01-.028.028H5.09a.031.031 0 01-.031-.031V5.076c0-.79.493-1.541 1.26-1.754a1.753 1.753 0 012.132 1.084.03.03 0 01-.02.04A2.089 2.089 0 007.06 6.394v.227a.85.85 0 00.854.846h2.507c.47 0 .854-.381.854-.846v-.227c0-.952-.652-1.75-1.535-2a.034.034 0 01-.02-.02 2.99 2.99 0 00-3.316-2.322c-1.52.202-2.59 1.6-2.59 3.12v5.889h-.045c-.802 0-1.555.523-1.712 1.305-.12.605.098 1.157.496 1.524a.025.025 0 01.008.02v2.546c0 2.364 2.336 4.257 4.658 4.669.174.345.527.588.942.588.372 0 .686-.201.874-.49.005-.008.014-.011.025-.011h5.557c.009 0 .02.003.023.011.19.289.504.49.874.49.411 0 .761-.24.938-.58 2.339-.392 4.711-2.297 4.711-4.677l-.005-2.541a.03.03 0 01.008-.02 1.59 1.59 0 00.55-1.201z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShowerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.313 20.476a.843.843 0 00-.661-.328.843.843 0 00-.692.375H8.943a.847.847 0 00-.692-.375.84.84 0 00-.65.316c-1.89-.305-3.868-1.829-3.868-3.672v-2.639h16.538l.003 2.64c-.006 1.87-2.045 3.41-3.96 3.683m-12.768-8.26H20.45a.56.56 0 01.563.556c0 .306-.252.56-.563.56H3.546a.562.562 0 01-.563-.56c0-.308.254-.557.563-.557M13.7 11.11c.179-.154.526-.149.633-.132a.42.42 0 00.316-.081.41.41 0 00.16-.283c.022-.241.1-.406.235-.502.23-.165.614-.12.74-.09a.419.419 0 00.395-.108c.263-.264.523-.381.77-.359.412.034.784.431.894.58.084.123.23.185.38.17.513-.05.905.037 1.163.264.302.272.361.68.375.826h-6.19c.022-.185.098-.26.129-.285m-3.152-4.731l-2.039.03v-.03c0-.558.457-1.012 1.02-1.012s1.02.454 1.02 1.012m11.294 6.394c0-.714-.552-1.296-1.255-1.364-.009-.201-.079-.932-.642-1.442-.395-.356-.927-.527-1.585-.496-.233-.255-.715-.683-1.342-.737-.448-.045-.874.112-1.272.451-.285-.03-.776-.03-1.182.255a1.35 1.35 0 00-.51.714c-.266.017-.613.093-.896.331-.18.154-.384.443-.417.91H4.98V5.03c0-1.129.927-2.05 2.067-2.05.983 0 1.818.7 2.017 1.63a1.83 1.83 0 00-1.381 1.765v.199c0 .358.297.652.658.652h2.375a.656.656 0 00.659-.652v-.2c0-.884-.636-1.627-1.482-1.795a2.895 2.895 0 00-2.846-2.423c-1.597 0-2.894 1.286-2.894 2.869v6.364h-.607c-.768 0-1.39.616-1.39 1.378 0 .535.308.991.757 1.221-.003.017-.012.034-.012.05v2.746c0 2.283 2.292 4.106 4.547 4.479a.848.848 0 001.58.073h5.845a.859.859 0 00.779.504c.37 0 .68-.238.801-.563 2.286-.336 4.644-2.177 4.644-4.496l-.002-2.801c.44-.219.748-.675.748-1.208"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconShowerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.252 19.89a1.065 1.065 0 00-.756-.313c-.322 0-.602.151-.799.378H8.936a1.053 1.053 0 00-.799-.378c-.291 0-.554.118-.748.305-1.773-.33-3.613-1.787-3.613-3.456v-2.124h16.123l.003 2.124c.006 1.683-1.866 3.148-3.65 3.465zM3.65 12.264h16.386a.407.407 0 110 .813H3.65a.407.407 0 110-.813zm9.361-1.434c.137-.118.446-.123.563-.106a.596.596 0 00.474-.124.603.603 0 00.235-.425c.03-.32.151-.404.19-.432.202-.143.569-.098.678-.075a.63.63 0 00.591-.163c.373-.372.633-.358.715-.347.389.03.753.423.86.568a.617.617 0 00.57.258c.52-.053.903.031 1.15.247.29.257.347.66.358.8h-6.476c.022-.136.07-.184.092-.2zm-4.72-4.616a.87.87 0 011.706 0H8.291zm13.395 6.454c0-.695-.44-1.286-1.056-1.521.003-.017.011-.034.011-.05.003-.11-.008-1.088-.761-1.765-.454-.407-1.062-.611-1.785-.589-.288-.305-.823-.748-1.532-.806-.359-.028-.9.036-1.462.49-.345-.031-.885-.003-1.342.313a1.6 1.6 0 00-.585.765c-.303.034-.667.135-.97.392-.226.194-.484.552-.518 1.138H5.031V4.966c0-.958.787-1.736 1.75-1.736.762 0 1.418.493 1.653 1.179a2.086 2.086 0 00-1.4 1.96v.228c0 .467.383.846.857.846h2.507a.85.85 0 00.854-.846V6.37a2.09 2.09 0 00-1.549-2.006A2.993 2.993 0 006.784 2c-1.65 0-2.991 1.33-2.991 2.966v6.068h-.14c-.91 0-1.65.73-1.65 1.635 0 .477.21.905.54 1.202v2.558c0 2.364 2.337 4.26 4.659 4.672.173.344.526.588.94.588.379 0 .696-.207.886-.501h5.588c.188.294.504.501.883.501.411 0 .761-.24.938-.58 2.339-.392 4.711-2.294 4.711-4.68l-.002-2.552a1.65 1.65 0 00.54-1.21z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSkullFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.88 13.95l-.134.002h-.1c-1.334-.02-2.888-.812-2.888-2.986 0-.131.005-.257.016-.378.169-1.893 1.642-2.58 2.855-2.59.073 0 .168 0 .243.002 1.247.028 2.653.706 2.86 2.515a4.1 4.1 0 01.026.468c.005 2.149-1.55 2.941-2.877 2.967m-2.465 2.66a.653.653 0 01-.854-.344l-.365-.857a.644.644 0 01.348-.846.656.656 0 01.854.345l.361.857a.642.642 0 01-.344.846m-1.854-1.202l-.365.854a.651.651 0 01-.854.345.646.646 0 01-.35-.843v-.003l.364-.857a.66.66 0 01.854-.345c.337.143.49.521.35.849m-3.476-1.46l-.134.003h-.098c-1.333-.02-2.888-.812-2.888-2.986 0-.131.006-.257.017-.378.168-1.893 1.644-2.58 2.854-2.59.081-.004.171 0 .244.002 1.246.028 2.652.706 2.863 2.515a4.1 4.1 0 01.025.468c0 2.149-1.552 2.941-2.883 2.967m4.16-11.939C11.973 2 11.665 2 11.385 2c-1.81.008-8.543.63-8.543 8.922 0 4.184 1.734 6.428 3.68 7.613v.647c0 .82.241 1.462.723 1.88.454.411 1.118.621 1.966.621h5.337c.845 0 1.501-.21 1.955-.621.47-.42.703-1.06.703-1.883v-.652c1.947-1.194 3.68-3.42 3.68-7.558 0-8.224-6.88-8.921-8.64-8.958"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSkullLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.72 13.03c.58-.011 1.932-.227 1.932-2.017 0-.128-.005-.252-.02-.364-.167-1.465-1.403-1.652-1.927-1.664l-.218-.002c-.527.005-1.765.182-1.902 1.717a3.36 3.36 0 00-.011.3c0 1.806 1.353 2.025 1.935 2.033l.21-.003zm2.775-2.482a4 4 0 01.026.463c0 2.09-1.502 2.857-2.79 2.88H7.49c-1.35-.02-2.793-.794-2.793-2.894 0-.132.006-.255.017-.376.162-1.829 1.532-2.493 2.759-2.504l.25.003c1.21.028 2.57.68 2.772 2.428zm5.944 2.482c.577-.011 1.933-.227 1.933-2.017 0-.128-.008-.252-.022-.367-.168-1.462-1.404-1.65-1.927-1.66l-.219-.003h-.003c-.524.005-1.764.182-1.899 1.717a3.315 3.315 0 00-.014.3c0 1.806 1.353 2.025 1.936 2.033l.215-.003zm2.776-2.482c.017.149.025.3.025.463 0 2.09-1.5 2.857-2.79 2.88h-.24c-1.35-.02-2.793-.794-2.793-2.894 0-.132.006-.255.017-.376.162-1.832 1.532-2.493 2.759-2.504l.25.003c1.21.028 2.57.68 2.772 2.428zm-7.874 4.37a.43.43 0 01.233.563l-.364.855a.438.438 0 01-.58.207.432.432 0 01-.221-.54l.364-.855a.438.438 0 01.568-.23zm1.608.23l.364.854a.43.43 0 01-.23.563h-.002a.437.437 0 01-.569-.23l-.364-.854a.432.432 0 01.23-.566s.003 0 .003-.002a.443.443 0 01.568.235zm3.927 2.804c2.168-1.33 3.27-3.628 3.27-6.824 0-7.358-5.964-8.059-7.793-8.098-.261-.008-.547-.008-.807-.008h-.028c-.77.003-2.745.131-4.493 1.221-2.115 1.32-3.188 3.62-3.188 6.835 0 3.246 1.098 5.56 3.266 6.88l.415.251v1.13c0 .57.143.985.428 1.232.373.339.961.406 1.392.406h5.337c.619 0 1.08-.134 1.367-.395.282-.252.42-.67.42-1.246v-1.138c.003.006.414-.246.414-.246zM12.372 2.165c1.765.036 8.644.734 8.644 8.96 0 4.138-1.734 6.365-3.68 7.558v.655c0 .821-.23 1.463-.703 1.88-.454.412-1.11.622-1.956.622H9.336c-.849 0-1.513-.21-1.967-.622-.481-.42-.722-1.059-.722-1.882v-.648c-1.944-1.182-3.678-3.425-3.678-7.61 0-8.291 6.734-8.913 8.546-8.922.277 0 .588 0 .857.009z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSkullRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.091 12.686c.602-.01 1.608-.243 1.608-1.678 0-.112-.006-.218-.02-.319-.134-1.162-1.059-1.358-1.596-1.37l-.2-.002h-.002c-.538.005-1.46.196-1.569 1.411a2.703 2.703 0 00-.01.266c0 1.381.87 1.681 1.599 1.692h.19zm2.913-1.678c0 2.152-1.554 2.947-2.882 2.97l-.135.002H7.89c-1.333-.02-2.888-.812-2.888-2.986 0-.131.006-.257.017-.378.168-1.893 1.644-2.58 2.855-2.59.08-.004.17 0 .243.002 1.247.03 2.653.706 2.863 2.515.014.143.025.3.025.465zm4.883 1.678c.602-.01 1.607-.243 1.607-1.678 0-.112-.005-.218-.02-.319-.134-1.162-1.058-1.358-1.596-1.37l-.199-.002h-.003c-.537.005-1.459.196-1.568 1.411a2.703 2.703 0 00-.011.266c0 1.381.87 1.681 1.6 1.692h.19zm2.885-2.145c.017.145.028.302.028.467 0 2.152-1.555 2.947-2.883 2.97l-.134.002h-.098c-1.333-.02-2.888-.812-2.888-2.986 0-.131.006-.257.017-.378.168-1.893 1.644-2.58 2.854-2.59.073 0 .168 0 .244.002 1.243.028 2.65.703 2.86 2.513zm-7.474 4.05c.334.14.488.518.348.846l-.364.857a.654.654 0 01-.852.345.643.643 0 01-.347-.846l.364-.857a.657.657 0 01.851-.345zm1.723.345l.364.854a.643.643 0 01-.6.896.655.655 0 01-.602-.395l-.364-.854a.643.643 0 01.348-.846.655.655 0 01.854.345zm3.499 2.52c2.033-1.246 3.061-3.42 3.061-6.456 0-3.025-1.025-5.196-3.047-6.454-1.684-1.047-3.58-1.196-4.32-1.215-.255-.009-.53-.009-.781-.009h-.042c-2.182.011-7.247.779-7.247 7.63 0 3.087 1.028 5.278 3.06 6.513l.62.378v1.373c0 .305.049.708.281.91.219.199.605.297 1.104.297h5.336c.35 0 .818-.048 1.075-.28.233-.207.28-.62.28-.927v-1.381l.62-.378zm-4.275-15.42c1.762.04 8.642.737 8.642 8.961 0 4.137-1.734 6.364-3.681 7.558v.655c0 .82-.233 1.462-.703 1.882-.454.41-1.11.62-1.955.62H9.21c-.848 0-1.512-.21-1.966-.62-.482-.42-.723-1.061-.723-1.882v-.647c-1.946-1.185-3.68-3.429-3.68-7.616 0-8.294 6.734-8.913 8.546-8.922.277.003.588.003.857.011z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmartWifiFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.677 18.439c-.415 0-.664.252-.664.67 0 .204.056.366.17.487.118.12.286.182.49.182a.668.668 0 00.491-.182c.115-.118.174-.283.174-.488.002-.42-.244-.67-.661-.67m3.316.813v-7.868c0-.493-.104-.838-.314-1.05-.21-.213-.551-.317-1.044-.317H4.72c-.484 0-.826.106-1.042.325-.212.215-.316.557-.316 1.039v7.868c0 .499.104.843.314 1.054.21.21.551.31 1.044.31h3.914c.493 0 .834-.1 1.042-.31.212-.208.316-.552.316-1.05zM21.438 8.845c.393.4.505.97.292 1.479-.233.54-.77.89-1.362.882h-.249v5.334c0 .773-.655 1.403-1.462 1.403h-7.451v1.308c0 .84-.218 1.468-.675 1.919-.445.448-1.067.664-1.896.664H4.72c-.829 0-1.45-.219-1.899-.664-.45-.451-.672-1.079-.672-1.919v-7.868c0-.82.218-1.443.667-1.9.453-.462 1.075-.686 1.902-.686h2.389l6.076-6.224c.551-.563 1.588-.566 2.137 0l6.117 6.272zm-6.986 3.384h-.061c-.485.003-.975.32-.975 1.014s.493 1.011 1.048 1.017c.484-.012.972-.328.972-1.014 0-.687-.49-1.003-.984-1.017zm-.064-4.838c-2.412.025-3.706 1.432-3.759 1.49a.407.407 0 00.597.552l.002-.003c.045-.05 1.124-1.201 3.19-1.224.015 0 1.956-.09 3.203 1.311a.4.4 0 00.568.034l.003-.003a.407.407 0 00.03-.574C16.71 7.27 14.465 7.386 14.389 7.39zm.006 1.61c-1.824.02-2.891 1.191-2.936 1.239a.405.405 0 00.602.543c.009-.008.885-.955 2.356-.969.02-.011 1.482-.053 2.375.953a.404.404 0 00.572.03.407.407 0 00.03-.574c-1.145-1.288-2.93-1.221-3-1.221zm.01 1.648a2.819 2.819 0 00-1.966.832.407.407 0 00.603.546 2.004 2.004 0 011.386-.566c.009-.01.874-.022 1.387.552.148.168.406.18.571.034a.41.41 0 00.034-.575c-.779-.868-1.983-.826-2.014-.823z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmartWifiLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.988 9.892a.332.332 0 00-.081-.38L14.66 3.107c-.176-.182-.532-.182-.708 0L8.257 8.943h.314c.793 0 1.38.204 1.798.627.418.423.62 1.011.62 1.804v5.661h7.814c.255 0 .462-.176.462-.392v-6.07c0-.23.185-.415.412-.415h.874c.244-.002.384-.14.437-.266zm-10.823 9.516v-8.034c0-.56-.126-.958-.381-1.218-.255-.258-.653-.384-1.213-.384H4.576c-.554 0-.95.129-1.21.392-.257.263-.383.658-.383 1.207v8.037c0 .565.126.966.383 1.224.255.252.65.378 1.21.378h3.995c.56 0 .955-.123 1.21-.378.258-.258.384-.659.384-1.224zm11.33-10.48c.342.35.44.844.255 1.286a1.282 1.282 0 01-1.199.773h-.46v5.656c0 .675-.576 1.224-1.288 1.224h-7.815v1.543c0 .799-.204 1.393-.627 1.813-.418.417-1.006.619-1.793.619H4.576c-.79 0-1.375-.202-1.792-.62-.42-.42-.628-1.013-.628-1.812v-8.033c0-.782.205-1.367.622-1.79.423-.431 1.011-.642 1.798-.642h2.53c.003-.002.005-.008.011-.014l6.25-6.403c.484-.496 1.403-.496 1.887 0l6.241 6.4zM6.574 19.047c.425 0 .677.255.677.684 0 .21-.058.375-.176.496-.118.123-.291.187-.501.187-.208 0-.381-.064-.499-.187-.118-.12-.176-.289-.176-.496-.003-.426.249-.684.675-.684zm7.888-5.411c.226-.006.226-.107.226-.205 0-.095 0-.204-.187-.207h-.048c-.162 0-.176.081-.176.204 0 .12.014.205.185.208zm.067-1.241c.484.008.986.333.986 1.036 0 .7-.499 1.025-.995 1.034-.568-.006-1.07-.33-1.07-1.04 0-.708.502-1.03.998-1.033.008.003.072 0 .08.003zm-.081-4.942c.08-.005 2.37-.123 3.913 1.617a.416.416 0 01-.308.692.42.42 0 01-.309-.138c-1.271-1.428-3.254-1.339-3.268-1.339-2.107.023-3.21 1.202-3.255 1.25a.41.41 0 01-.583.025.415.415 0 01-.028-.586c.053-.061 1.373-1.495 3.838-1.52zm.002 1.645c.07 0 1.894-.068 3.065 1.249a.416.416 0 01-.034.585.41.41 0 01-.582-.033c-.908-1.023-2.41-.975-2.426-.972-1.502.017-2.398.98-2.406.991a.41.41 0 01-.306.135.42.42 0 01-.277-.107.418.418 0 01-.03-.585c.044-.048 1.134-1.24 2.996-1.263zm.009 1.683c.036-.005 1.263-.047 2.053.84a.416.416 0 01-.034.586.412.412 0 01-.582-.034c-.521-.585-1.398-.571-1.415-.563a2.047 2.047 0 00-1.414.577.41.41 0 01-.306.135.42.42 0 01-.277-.107.415.415 0 01-.028-.585c.028-.034.762-.835 2.003-.849z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmartWifiRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.61 9.852c.022-.056.013-.101-.037-.152l-6.118-6.27c-.098-.101-.308-.101-.403 0L8.8 8.812c.748.028 1.322.241 1.742.664.448.454.667 1.079.667 1.91v5.34h7.454c.148 0 .249-.096.249-.182V10.6a.61.61 0 01.608-.611h.854c.168-.003.224-.107.235-.137zM9.992 19.249v-7.868c0-.493-.104-.837-.314-1.05-.21-.213-.551-.317-1.044-.317H4.72c-.484 0-.826.107-1.042.325-.212.216-.316.557-.316 1.04v7.868c0 .498.104.843.314 1.053.21.21.551.31 1.044.31h3.914c.493 0 .834-.1 1.042-.31.212-.207.316-.552.316-1.05zM21.438 8.843c.393.4.505.97.292 1.48-.224.534-.76.882-1.359.882h-.249v5.333c0 .773-.655 1.403-1.462 1.403h-7.454v1.308c0 .84-.221 1.468-.675 1.922-.445.448-1.067.664-1.896.664H4.72c-.829 0-1.45-.216-1.899-.664-.454-.451-.672-1.078-.672-1.919v-7.868c0-.82.218-1.443.667-1.9.453-.461 1.078-.686 1.904-.686h2.39l6.073-6.224c.551-.565 1.588-.565 2.137 0l6.117 6.27zM6.677 18.437c.414 0 .663.252.663.67a.678.678 0 01-.173.487c-.115.12-.286.182-.49.182a.673.673 0 01-.49-.182c-.115-.118-.174-.283-.174-.487.003-.42.249-.67.664-.67zm7.725-4.994c.224-.003.224-.104.224-.202 0-.098 0-.199-.185-.204h-.045c-.16 0-.17.08-.17.198-.003.124.01.208.176.208zm.05-1.216c.496.014.984.333.984 1.017 0 .686-.488 1.003-.972 1.014-.555-.006-1.048-.322-1.048-1.017 0-.695.49-1.011.975-1.014h.062zm-.064-4.838c.076-.005 2.322-.12 3.832 1.58a.407.407 0 01-.605.544c-1.244-1.398-3.188-1.311-3.202-1.311-2.064.022-3.145 1.176-3.187 1.224a.406.406 0 01-.6-.546c.059-.062 1.35-1.465 3.762-1.49zM14.394 9c.073 0 1.857-.067 3 1.221a.407.407 0 01-.034.575.404.404 0 01-.571-.034c-.894-1.003-2.356-.96-2.376-.95-1.47.017-2.347.961-2.355.97a.396.396 0 01-.3.131.406.406 0 01-.303-.675c.048-.047 1.115-1.218 2.939-1.238zm.01 1.647c.034-.005 1.239-.047 2.01.824a.407.407 0 01-.034.574.404.404 0 01-.572-.034c-.512-.574-1.378-.563-1.384-.551-.865.008-1.364.543-1.386.565a.41.41 0 01-.571.028.406.406 0 01-.028-.571c.028-.036.747-.82 1.966-.835z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileyHappyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 2c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84C2 5.14 5.622 2 11.84 2zM17 13.613c-.02.02-1.927 2.076-5.123 2.11-.031 0-3.236.115-5.188-2.07a.613.613 0 10-.916.818c2.09 2.339 5.247 2.481 5.983 2.481.087 0 .14-.002.154-.002 3.734-.042 5.914-2.415 6.003-2.516a.615.615 0 00-.913-.82zm-8.143-3.22c.356 0 .653-.113.86-.323.205-.207.305-.493.305-.846 0-.723-.448-1.17-1.165-1.17-.72 0-1.165.447-1.165 1.17 0 .353.104.639.305.846.207.207.504.322.86.322zm5.972 0c.356 0 .653-.113.86-.326.202-.207.305-.493.305-.846 0-.722-.448-1.17-1.165-1.17-.72 0-1.165.448-1.165 1.17 0 .353.104.639.308.846.204.21.501.325.857.325z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileyHappyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.308 13.907a.411.411 0 01.61.549c-.09.098-2.207 2.406-5.854 2.448-.05.003-.101.003-.151.003-.726 0-3.799-.14-5.832-2.415a.412.412 0 01.613-.546c2.017 2.258 5.314 2.143 5.347 2.137 3.286-.036 5.247-2.156 5.267-2.176zm-5.311 7.115c5.988 0 9.025-3.034 9.025-9.02 0-5.989-3.037-9.025-9.025-9.025-5.986 0-9.02 3.036-9.02 9.025 0 5.986 3.034 9.02 9.02 9.02zm0-18.866c6.218 0 9.846 3.14 9.846 9.846 0 6.706-3.628 9.84-9.846 9.84-6.219 0-9.84-3.134-9.84-9.84 0-6.706 3.621-9.846 9.84-9.846zm-2.984 8.289c-.327 0-.599-.101-.787-.292-.185-.187-.277-.448-.277-.775 0-.667.398-1.068 1.064-1.068.667 0 1.065.4 1.065 1.068 0 .327-.093.585-.277.775-.188.19-.46.292-.788.292zm5.972 0c-.327 0-.6-.101-.787-.292-.185-.187-.277-.448-.277-.775 0-.667.398-1.068 1.064-1.068.667 0 1.065.4 1.065 1.068 0 .327-.093.585-.278.775-.187.19-.459.292-.787.292z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileyHappyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17 13.613a.614.614 0 01.913.824c-.092.1-2.269 2.473-6.003 2.515-.014 0-.067.003-.154.003-.736 0-3.893-.143-5.983-2.482a.613.613 0 11.916-.818c1.952 2.183 5.157 2.07 5.188 2.07 3.196-.039 5.103-2.092 5.123-2.112zm-5.16 6.844c5.796 0 8.617-2.818 8.617-8.611 0-5.796-2.818-8.614-8.617-8.614-5.792 0-8.61 2.818-8.61 8.614 0 5.793 2.818 8.61 8.61 8.61zM11.84 2c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84C2 5.14 5.622 2 11.84 2zm-2.983 8.392c-.356 0-.653-.112-.86-.322-.204-.207-.305-.493-.305-.846 0-.723.448-1.17 1.165-1.17.72 0 1.165.447 1.165 1.17 0 .356-.103.639-.305.846-.207.207-.504.322-.86.322zm5.972 0c-.356 0-.653-.112-.86-.322-.204-.207-.308-.493-.308-.846 0-.723.448-1.17 1.165-1.17.72 0 1.166.447 1.166 1.17 0 .353-.104.639-.306.846-.204.207-.501.322-.857.322z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileySadFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 2c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84C2 5.14 5.622 2 11.84 2zm.09 11.415c-.154-.006-3.824-.135-6.157 2.478a.613.613 0 00.05.869.613.613 0 00.869-.05c1.941-2.171 5.157-2.065 5.207-2.07 3.177.033 5.084 2.089 5.104 2.109a.61.61 0 00.456.201.612.612 0 00.457-1.025c-.093-.1-2.272-2.473-5.986-2.512zm-3.073-3.023c.356 0 .653-.112.86-.322.202-.207.305-.493.305-.846 0-.723-.448-1.17-1.165-1.17-.72 0-1.165.447-1.165 1.17 0 .353.103.639.305.846.207.21.504.322.86.322zm5.972 0c.356 0 .653-.112.86-.322.204-.207.308-.493.308-.846 0-.723-.448-1.17-1.165-1.17-.72 0-1.165.447-1.165 1.17 0 .353.103.639.305.846.202.21.499.322.857.322z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileySadLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.078 13.772c3.633.04 5.75 2.35 5.84 2.449a.411.411 0 01-.61.549c-.02-.02-1.98-2.14-5.253-2.177-.044.003-3.353-.109-5.36 2.137a.411.411 0 01-.614-.546c2.271-2.54 5.848-2.409 5.997-2.412zm-.081 7.25c5.988 0 9.025-3.034 9.025-9.02 0-5.989-3.037-9.025-9.025-9.025-5.986 0-9.02 3.036-9.02 9.025 0 5.986 3.034 9.02 9.02 9.02zm0-18.866c6.218 0 9.846 3.14 9.846 9.846 0 6.706-3.628 9.84-9.846 9.84-6.219 0-9.84-3.134-9.84-9.84 0-6.706 3.621-9.846 9.84-9.846zm-2.984 8.289c-.327 0-.599-.101-.787-.292-.185-.187-.277-.448-.277-.775 0-.67.398-1.068 1.064-1.068.667 0 1.065.4 1.065 1.068 0 .327-.093.588-.277.775-.188.19-.46.292-.788.292zm5.972 0c-.327 0-.6-.101-.787-.292-.185-.187-.277-.448-.277-.775 0-.67.398-1.068 1.064-1.068.667 0 1.065.4 1.065 1.068 0 .327-.093.588-.278.775-.187.19-.459.292-.787.292z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmileySadRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.93 13.415c3.714.039 5.894 2.414 5.986 2.515a.615.615 0 01-.913.824c-.02-.02-1.927-2.076-5.104-2.11-.05.006-3.266-.1-5.207 2.07a.616.616 0 01-.919-.818c2.333-2.616 6.003-2.487 6.157-2.481zm-.09 7.042c5.796 0 8.617-2.818 8.617-8.611 0-5.796-2.818-8.616-8.617-8.616-5.792 0-8.61 2.818-8.61 8.616 0 5.793 2.818 8.61 8.61 8.61zM11.84 2c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84C2 5.14 5.622 2 11.84 2zm-2.983 8.392c-.356 0-.653-.112-.86-.322-.204-.207-.305-.493-.305-.846 0-.723.448-1.17 1.165-1.17.72 0 1.165.447 1.165 1.17 0 .353-.103.639-.305.846-.207.21-.504.322-.86.322zm5.972 0c-.356 0-.653-.112-.86-.322-.204-.21-.305-.496-.305-.846 0-.723.448-1.17 1.165-1.17.72 0 1.165.447 1.165 1.17 0 .353-.103.639-.308.846-.204.21-.501.322-.857.322z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.565 2.97c1.804 0 3.271 1.415 3.271 3.154v8.765c0 1.74-1.467 3.154-3.271 3.154H8.95l-1.888 2.333c-.22.286-.63.639-1.29.639-.852 0-1.57-.68-1.57-1.485v-1.686a3.113 3.113 0 01-2.053-2.955V6.124c0-1.74 1.468-3.154 3.275-3.154h13.14zM6.85 9.945c-.697-.27-.983-.423-.983-.863 0-.188 0-.577.905-.577.364 0 .65.064.882.132a.403.403 0 00.502-.28l.053-.205a.385.385 0 00-.277-.465c-1.06-.3-2.04-.224-2.589.247-.33.28-.504.689-.504 1.179 0 1.14.922 1.496 1.591 1.756.723.28 1.017.44 1.017.919 0 .3-.118.442-.221.507-.11.073-.34.16-.804.16a3.67 3.67 0 01-1.081-.166.399.399 0 00-.32.034.39.39 0 00-.193.246l-.053.21a.384.384 0 00.246.454c.3.11.85.222 1.407.222 1.305 0 2.056-.611 2.056-1.675 0-1.205-.944-1.57-1.634-1.835zm7.334-2.342h-.21a.406.406 0 00-.356.207l-1.63 2.986L10.4 7.81a.4.4 0 00-.356-.21h-.227c-.221 0-.4.174-.4.39v4.972c0 .212.179.389.4.389h.213c.221 0 .4-.174.4-.39v-2.943l1.076 2.025a.4.4 0 00.356.21h.227a.406.406 0 00.355-.207l1.13-2.068v2.984c0 .215.178.389.4.389h.21c.221 0 .4-.174.4-.39V7.993a.395.395 0 00-.4-.389zm3.403 2.342c-.697-.27-.98-.423-.98-.863 0-.188 0-.577.905-.577.364 0 .65.064.882.132a.41.41 0 00.314-.037.391.391 0 00.187-.243l.054-.205a.385.385 0 00-.278-.465c-1.059-.3-2.039-.224-2.588.247-.33.28-.504.689-.504 1.179 0 1.14.921 1.496 1.59 1.756.723.28 1.018.44 1.018.919 0 .3-.118.442-.224.507-.11.073-.34.16-.804.16-.362 0-.726-.056-1.082-.166a.399.399 0 00-.319.034.39.39 0 00-.193.246l-.053.21a.384.384 0 00.246.454c.3.11.849.222 1.406.222 1.306 0 2.056-.611 2.056-1.675 0-1.205-.944-1.57-1.633-1.835z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSmsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.02 14.955v-8.96c0-1.23-1.04-2.232-2.318-2.232H5.288c-1.278 0-2.32 1-2.32 2.233v8.96c0 1.078.729 1.98 1.77 2.185a.403.403 0 01.329.39v2.168c0 .271.28.526.574.526.098 0 .3 0 .504-.263l2.118-2.622a.412.412 0 01.322-.152h10.112c1.283-.002 2.322-1.003 2.322-2.233zM18.701 2.97c1.729 0 3.138 1.356 3.138 3.026v8.96c0 1.67-1.41 3.025-3.138 3.025H8.79L6.8 20.444a1.403 1.403 0 01-1.156.577c-.757 0-1.396-.605-1.396-1.32v-1.863a2.994 2.994 0 01-2.098-2.883v-8.96c0-1.669 1.41-3.025 3.138-3.025h13.414zM6.896 10.148c.714.277 1.605.619 1.605 1.779 0 1.025-.728 1.614-1.994 1.614a4.466 4.466 0 01-1.398-.219.294.294 0 01-.188-.347l.053-.216a.294.294 0 01.149-.188.31.31 0 01.243-.025c.76.233 1.664.221 2.012-.008.104-.065.272-.23.272-.6 0-.577-.398-.76-1.104-1.03-.695-.27-1.558-.606-1.558-1.702 0-.47.165-.862.48-1.131.531-.457 1.5-.527 2.546-.233a.296.296 0 01.213.359l-.053.207a.301.301 0 01-.146.185.32.32 0 01-.238.028 3.366 3.366 0 00-.93-.137c-1.029 0-1.029.484-1.029.689 0 .535.387.711 1.065.975zm7.335-2.387a.303.303 0 01.308.297v5.08a.301.301 0 01-.308.296h-.216a.303.303 0 01-.308-.297V9.691l-1.345 2.468a.314.314 0 01-.272.16h-.23a.312.312 0 01-.274-.162l-1.292-2.435v3.418a.301.301 0 01-.308.297H9.77a.303.303 0 01-.308-.297V8.06c0-.165.138-.296.308-.296h.233a.31.31 0 01.275.162l1.709 3.222 1.756-3.227a.316.316 0 01.275-.16h.213zm3.247 2.387c.714.277 1.605.619 1.605 1.779 0 1.025-.728 1.614-1.995 1.614a4.466 4.466 0 01-1.398-.219.294.294 0 01-.187-.347l.053-.216a.294.294 0 01.148-.188.31.31 0 01.244-.025c.76.233 1.664.221 2.012-.008.103-.065.271-.23.271-.6 0-.577-.397-.76-1.103-1.03-.695-.27-1.56-.606-1.56-1.702 0-.47.164-.862.481-1.131.532-.457 1.502-.527 2.547-.233a.298.298 0 01.213.359l-.054.207a.301.301 0 01-.145.185.321.321 0 01-.238.028 3.362 3.362 0 00-.928-.137c-1.028 0-1.028.484-1.028.689-.006.535.381.711 1.062.975z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSniperScopeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.47 18.907v-2.39a.41.41 0 00-.412-.408.41.41 0 00-.412.409v2.395c-1.574-.037-6.184-.65-6.546-6.28h2.412a.41.41 0 00.412-.41.41.41 0 00-.412-.408H5.069c.065-6.241 5.014-6.802 6.577-6.821V7.48a.41.41 0 00.412.41.41.41 0 00.412-.41V5.002c1.664.062 6.485.773 6.574 6.81h-2.546a.412.412 0 00-.412.409.41.41 0 00.412.409h2.521c-.345 5.607-4.966 6.235-6.549 6.277m8.966-7.095h-1.571c-.095-6.947-5.992-7.577-7.398-7.63V2.564a.41.41 0 00-.412-.409.41.41 0 00-.411.41v1.607c-1.264.011-7.33.462-7.4 7.639H2.567a.412.412 0 00-.412.409c0 .224.185.409.412.409h1.706c.39 6.535 6.048 7.067 7.367 7.1v1.7a.41.41 0 00.412.41.41.41 0 00.411-.41v-1.705c1.323-.037 7-.586 7.37-7.098h1.597a.41.41 0 00.412-.41.403.403 0 00-.407-.405"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSniperScopeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.527 18.403V16.27a.604.604 0 00-.605-.602.604.604 0 00-.605.602v2.137c-1.636-.084-5.575-.815-6-5.742h2.15a.604.604 0 00.606-.602.604.604 0 00-.605-.603h-2.18c.163-5.495 4.387-6.21 6.031-6.274v2.232c0 .334.272.603.605.603a.604.604 0 00.605-.603V5.2c1.726.115 5.844.958 6.026 6.26h-2.28a.604.604 0 00-.606.603c0 .333.272.602.605.602h2.258c-.414 4.902-4.364 5.647-6.005 5.74m8.582-6.945h-1.347c-.199-6.493-5.544-7.358-7.235-7.465V2.602A.604.604 0 0011.922 2a.604.604 0 00-.605.602V3.98c-1.58.062-7.065.765-7.239 7.48H2.63a.604.604 0 00-.605.602c0 .333.272.602.605.602h1.48c.461 6.112 5.596 6.868 7.207 6.947v1.473c0 .333.271.602.605.602a.604.604 0 00.605-.602v-1.476c1.61-.087 6.761-.857 7.207-6.944h1.375a.602.602 0 100-1.204"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSnowflakeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.49 12.38h.304a.439.439 0 100-.879h-.187l1.112-1.112a.436.436 0 000-.622.441.441 0 00-.622 0l-1.737 1.737h-1.165l.585-.586a.441.441 0 000-.621.441.441 0 00-.621 0l-1.208 1.207h-3.837l3.678-3.678h2.266a.439.439 0 100-.88h-1.384l.092-.092a.436.436 0 000-.622.436.436 0 00-.621 0l-.02.02V5.014a.439.439 0 10-.88 0v2.12l-3.8 3.79V7.159l1.288-1.288a.441.441 0 000-.622.441.441 0 00-.622 0l-.667.667v-1.21L14.24 2.91a.436.436 0 000-.622.441.441 0 00-.622 0l-1.17 1.171v-.305a.439.439 0 10-.88 0v.305l-1.171-1.17a.441.441 0 00-.622 0 .441.441 0 000 .621l1.795 1.796v1.092l-.549-.55a.441.441 0 00-.622 0 .441.441 0 000 .623l1.171 1.173v3.838L7.892 7.204V5.011a.439.439 0 10-.88 0v1.31l-.091-.092a.436.436 0 00-.622 0 .441.441 0 000 .622l.092.093h-1.31a.439.439 0 100 .88h2.192l3.678 3.677H7.178l-1.207-1.207a.441.441 0 00-.622 0 .436.436 0 000 .622l.586.585H4.652L2.915 9.764a.441.441 0 00-.622 0 .436.436 0 000 .622l1.112 1.112h-.188a.439.439 0 100 .88h.303l-1.23 1.23a.44.44 0 00.311.753.432.432 0 00.311-.129l1.854-1.851h1.21l-.63.63a.436.436 0 000 .622.437.437 0 00.622 0L7.22 12.38h3.765l-3.796 3.795H5.07a.439.439 0 100 .88h1.238l-.02.02a.441.441 0 00.311.75.432.432 0 00.311-.129l.093-.092v1.383a.439.439 0 10.88 0v-2.266l3.677-3.678v3.838l-1.17 1.17a.441.441 0 000 .623c.17.173.45.173.621 0l.55-.55v1.166l-1.796 1.795a.441.441 0 000 .622.44.44 0 00.621 0l1.171-1.17v.187a.439.439 0 10.88 0v-.188l1.17 1.171a.449.449 0 00.312.13.432.432 0 00.31-.13.436.436 0 000-.622l-1.795-1.795v-1.283l.667.664a.437.437 0 00.622 0 .441.441 0 000-.622l-1.289-1.288v-3.765l3.796 3.795v2.19a.439.439 0 10.88 0v-1.31l.019.02a.437.437 0 00.622 0 .436.436 0 000-.622l-.02-.02h1.311a.439.439 0 100-.88h-2.19l-3.782-3.79h3.837l1.253 1.253a.437.437 0 00.621 0 .441.441 0 000-.622l-.63-.63h1.093l1.851 1.854a.437.437 0 00.622 0 .44.44 0 000-.625l-1.227-1.23z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSnowflakeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.783 12.554a.64.64 0 00.462-.608.647.647 0 00-.372-.583l.784-.784a.646.646 0 00-.913-.913L19.108 11.3h-.53l.205-.204a.646.646 0 00-.913-.913L16.752 11.3H13.61l3.165-3.165H18.9a.647.647 0 000-1.294h-.955a.634.634 0 00-.154-.636.637.637 0 00-.566-.168v-.871a.647.647 0 00-1.294 0V7.15l-3.28 3.28V7.357l1.196-1.198a.646.646 0 00-.913-.914l-.283.283v-.574l1.691-1.692a.646.646 0 00-.913-.913l-.815.818a.64.64 0 00-.608-.462.634.634 0 00-.608.462l-.815-.818a.646.646 0 00-.913.913l1.692 1.692v.46l-.17-.169a.646.646 0 00-.914.914l1.084 1.084v3.142L8.198 7.22V5.164a.647.647 0 00-1.294 0v.885a.641.641 0 00-.636.154.635.635 0 00-.154.636h-.885a.647.647 0 000 1.294h2.056L10.45 11.3H7.369L6.25 10.18a.646.646 0 00-.913.913l.204.205h-.644L3.262 9.663a.646.646 0 00-.913.913l.787.784a.634.634 0 00.087 1.19l-.874.875a.646.646 0 00.913.913L5.01 12.59h.574l-.249.25a.646.646 0 00.913.912l1.163-1.162h3.073L7.2 15.873H5.217a.647.647 0 000 1.294h.872a.639.639 0 00.168.566c.126.126.291.19.456.19.062 0 .12-.017.18-.036v.958a.647.647 0 001.294 0v-2.126l3.165-3.165v3.142l-1.084 1.084a.646.646 0 00.913.914l.17-.168v.529L9.66 20.747a.646.646 0 00.913.913l.843-.843a.644.644 0 00.583.372.643.643 0 00.58-.372l.843.843a.645.645 0 10.913-.913l-1.692-1.692v-.644l.283.283a.645.645 0 10.913-.914l-1.196-1.198v-3.079l3.28 3.283v2.056a.647.647 0 001.294 0v-.944c.037.006.073.023.11.023a.631.631 0 00.625-.756h.94a.646.646 0 00.648-.648.646.646 0 00-.648-.647H16.84l-3.283-3.283H16.7l1.163 1.163a.642.642 0 00.456.187.646.646 0 00.457-1.1l-.25-.25h.46l1.748 1.748a.645.645 0 10.913-.913l-.863-.868z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSportBallFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.381 19.23c-1.118-1.734-1.82-4.143-1.947-6.717h5.252c-.173 2.67-1.417 5.039-3.305 6.717zm-5.782 2.445v-9.162h2.39c.137 2.89.944 5.627 2.246 7.593a9.708 9.708 0 01-4.636 1.57zM12.6 2a9.75 9.75 0 014.519 1.504c-1.272 2.003-2.034 4.695-2.13 7.563H12.6V2zm9.087 9.067h-5.252c.095-2.524.762-4.952 1.84-6.706a9.847 9.847 0 013.412 6.706zm-10.532 0H8.658c-.095-2.86-.848-5.549-2.109-7.543a9.733 9.733 0 014.605-1.521v9.064zm0 10.62a9.914 9.914 0 01-4.75-1.609c1.319-1.986 2.111-4.663 2.246-7.565h2.504v9.173zM2 12.512h5.204c-.123 2.543-.826 4.944-1.935 6.677A9.899 9.899 0 012 12.513zm3.392-8.124c1.079 1.762 1.726 4.135 1.82 6.678h-5.2a9.824 9.824 0 013.38-6.678z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSportBallLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.767 18.93c-1.149-1.634-1.863-4.037-1.936-6.572h5.185a9.03 9.03 0 01-3.25 6.571zm-5.359 2.083v-8.652h2.6c.073 2.706.846 5.291 2.109 7.061a8.954 8.954 0 01-4.709 1.591zm0-18.028a8.907 8.907 0 014.594 1.51c-1.221 1.82-1.935 4.348-1.991 7.045h-2.603V2.985zm8.605 8.555h-5.182c.056-2.518.723-4.871 1.83-6.555a9.014 9.014 0 013.352 6.555zm-9.423 0H8.932c-.047-2.68-.753-5.207-1.969-7.03a8.995 8.995 0 014.627-1.525v8.555zm0 9.473a8.978 8.978 0 01-4.75-1.616c1.238-1.773 2.003-4.347 2.09-7.04h2.658v8.656h.002zm-8.607-8.652h5.126c-.082 2.51-.787 4.904-1.92 6.538a9.034 9.034 0 01-3.206-6.538zm3.316-7.35C7.414 6.7 8.064 9.039 8.111 11.54H2.985A9.043 9.043 0 016.3 5.01zM12 2.156c-5.431 0-9.843 4.412-9.843 9.843 0 5.429 4.412 9.844 9.843 9.844 5.432 0 9.844-4.415 9.844-9.844 0-5.431-4.412-9.843-9.844-9.843z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSportBallRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.524 18.269c-.972-1.507-1.583-3.602-1.692-5.838h4.566a8.546 8.546 0 01-2.874 5.838m-5.028 2.126v-7.966h2.075c.118 2.512.821 4.89 1.953 6.602a8.416 8.416 0 01-4.028 1.364m-3.434-7.966h2.179v7.974a8.602 8.602 0 01-4.129-1.397c1.146-1.726 1.832-4.054 1.95-6.577m-5.78 0h4.522c-.107 2.212-.72 4.296-1.684 5.803a8.597 8.597 0 01-2.837-5.803m2.947-7.06c.938 1.533 1.501 3.595 1.582 5.805h-4.52A8.547 8.547 0 016.23 5.37m5.01-2.079v7.883H9.07c-.084-2.488-.74-4.824-1.835-6.56a8.441 8.441 0 014.006-1.323m3.333 7.883H12.5V3.29a8.47 8.47 0 013.926 1.31c-1.107 1.74-1.768 4.079-1.852 6.575m5.824 0h-4.566c.084-2.196.664-4.306 1.602-5.83a8.575 8.575 0 012.964 5.83M11.843 2C6.415 2 2 6.423 2 11.843c0 5.429 4.415 9.843 9.843 9.843 5.429 0 9.843-4.414 9.843-9.843 0-5.42-4.414-9.843-9.843-9.843"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStarFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.613 21.664a2.07 2.07 0 01-1.005-.26l-3.56-1.953c-.138-.064-.252-.081-.39.008l-3.546 1.944a2.079 2.079 0 01-2.216-.128 2.218 2.218 0 01-.899-2.191l.664-4.028c.064-.317.011-.392-.18-.591L2.67 11.608a2.234 2.234 0 01-.52-2.291 2.152 2.152 0 011.714-1.468l3.896-.591c.238-.045.308-.079.457-.381L9.938 3.24a2.111 2.111 0 011.922-1.238c.826 0 1.563.476 1.924 1.238l1.731 3.655c.14.264.185.322.49.367l3.858.586c.795.12 1.45.683 1.714 1.468.272.8.07 1.689-.521 2.29l-2.711 2.732c-.311.31-.323.339-.272.714l.65 4.031a2.223 2.223 0 01-.9 2.19c-.352.253-.775.39-1.21.39z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStarLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.892 21.834a1.86 1.86 0 01-.905-.238l-3.837-2.104a.317.317 0 00-.309 0l-3.837 2.104a1.839 1.839 0 01-1.983-.115 2 2 0 01-.813-1.98l.734-4.454a.388.388 0 00-.103-.33l-3.104-3.155a2.023 2.023 0 01-.47-2.072c.238-.718.815-1.213 1.54-1.323l4.291-.65a.336.336 0 00.255-.193l1.92-4.053a1.9 1.9 0 011.725-1.115c.739 0 1.4.429 1.728 1.115l1.919 4.053c.05.107.145.18.257.196l4.289.65c.725.11 1.302.605 1.54 1.322a2.03 2.03 0 01-.47 2.073l-3.107 3.151a.378.378 0 00-.1.331l.733 4.454a1.998 1.998 0 01-.812 1.98 1.865 1.865 0 01-1.081.353zm-4.896-2.941c.145 0 .29.036.423.11l3.837 2.103c.451.246.972.216 1.392-.081.451-.32.675-.869.583-1.435l-.734-4.453a.937.937 0 01.255-.813l3.106-3.154a1.47 1.47 0 00.34-1.504c-.172-.513-.58-.865-1.093-.944l-4.292-.65a.896.896 0 01-.677-.512l-1.92-4.05c-.234-.5-.691-.796-1.22-.796-.53 0-.986.297-1.222.795L8.855 7.562a.9.9 0 01-.675.51l-4.29.65c-.514.079-.922.431-1.093.944a1.475 1.475 0 00.339 1.504l3.103 3.152c.21.215.306.52.255.815L5.76 19.59a1.456 1.456 0 00.583 1.435c.42.297.941.327 1.39.08l3.837-2.103a.892.892 0 01.426-.11z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStarRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.583 21.658c-.345 0-.69-.087-1.006-.26l-3.728-2.042a.042.042 0 00-.037 0l-3.728 2.042a2.08 2.08 0 01-2.216-.13 2.213 2.213 0 01-.899-2.19l.712-4.325a.105.105 0 00-.026-.086l-3.014-3.062a2.234 2.234 0 01-.52-2.291 2.148 2.148 0 011.714-1.465L8 7.219a.062.062 0 00.045-.034c0-.003 0-.003.003-.006L9.91 3.244a2.112 2.112 0 011.922-1.241 2.12 2.12 0 011.924 1.238l1.863 3.935c0 .003 0 .003.003.006.008.017.025.03.045.034l4.165.63a2.15 2.15 0 011.714 1.468 2.24 2.24 0 01-.524 2.291l-3.014 3.062a.096.096 0 00-.025.086l.712 4.328a2.223 2.223 0 01-.9 2.19 2.093 2.093 0 01-1.212.387zm-4.751-3.395c.188 0 .372.048.543.14l3.726 2.042a.982.982 0 001.064-.061c.278-.196.54-.594.454-1.126l-.711-4.325c-.062-.37.056-.754.319-1.023l.003-.002 3.016-3.065c.365-.37.376-.854.267-1.185-.135-.4-.449-.675-.844-.734l-4.168-.633h-.005a1.144 1.144 0 01-.86-.65L12.773 3.71c-.182-.387-.535-.617-.941-.617-.406 0-.756.23-.938.617L9.03 7.64a1.149 1.149 0 01-.86.65h-.006l-4.168.63a1.048 1.048 0 00-.843.734 1.16 1.16 0 00.266 1.185l3.014 3.065.003.003c.263.268.38.652.32 1.025l-.712 4.325c-.087.53.176.93.454 1.126a.98.98 0 001.064.061l3.728-2.042c.168-.092.353-.14.54-.14z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStatusChartFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.776 4.522a1.94 1.94 0 00-1.941 1.936c0 .468.173.894.453 1.227l-2.392 4a1.87 1.87 0 00-.448-.056c-.563 0-1.067.246-1.42.63l-4.129-1.81c.003-.053.017-.103.017-.16a1.94 1.94 0 00-3.882 0c0 .477.187.925.495 1.275l-2.204 3.891a1.922 1.922 0 00-.359-.036 1.94 1.94 0 00-1.94 1.935 1.943 1.943 0 003.884 0c0-.493-.19-.935-.495-1.277l2.21-3.896c.114.022.232.044.35.044.563 0 1.067-.246 1.423-.63l4.126 1.807c-.003.053-.017.104-.017.16a1.94 1.94 0 003.88.002v-.002c0-.457-.166-.872-.432-1.202l2.398-4.014c.134.03.274.05.42.05 1.07 0 1.936-.865 1.938-1.935a1.935 1.935 0 00-1.935-1.939"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStatusChartLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.089 4.854a.938.938 0 010-1.875c.515 0 .933.42.933.94 0 .517-.42.935-.933.935m-4.43 7.33a.938.938 0 010-1.874.938.938 0 010 1.875m-7.65-3.377a.933.933 0 01-.933-.933v-.006a.932.932 0 111.863 0 .935.935 0 01-.93.939m-4.102 7.288a.935.935 0 010-1.872.937.937 0 010 1.872M20.086 2.15c-.967 0-1.754.793-1.754 1.765 0 .485.196.925.513 1.247l-2.623 4.422a1.629 1.629 0 00-.566-.101c-.569 0-1.068.277-1.39.698l-4.54-2.004c.02-.1.032-.204.032-.308a1.76 1.76 0 00-1.755-1.763 1.76 1.76 0 00-1.193 3.05L4.383 13.47a1.729 1.729 0 00-.479-.075 1.76 1.76 0 00-1.754 1.762c0 .972.787 1.765 1.754 1.765a1.762 1.762 0 001.194-3.045l2.426-4.313c.157.045.317.07.482.07.566 0 1.068-.277 1.387-.697l4.54 2.003c-.02.1-.031.205-.031.308 0 .973.787 1.766 1.754 1.766a1.76 1.76 0 001.26-2.982l2.635-4.447c.17.056.347.093.535.093.97 0 1.754-.79 1.754-1.763a1.76 1.76 0 00-1.754-1.765"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStatusChartRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.776 7.141a.685.685 0 11-.003-1.37.685.685 0 01.003 1.37M7.975 10.973a.685.685 0 11.047-1.37.685.685 0 01-.047 1.37m11.8-6.45a1.94 1.94 0 00-1.94 1.935c0 .468.173.89.45 1.224l-2.389 4a1.87 1.87 0 00-.448-.056 1.93 1.93 0 00-1.423.63L9.9 10.45c.006-.054.017-.104.017-.16a1.94 1.94 0 00-3.88 0c0 .479.188.927.496 1.274l-2.207 3.891a1.922 1.922 0 00-.359-.036 1.94 1.94 0 00-1.94 1.935 1.943 1.943 0 003.884 0c0-.493-.19-.935-.495-1.277l2.21-3.896c.117.022.232.044.353.044.563 0 1.067-.243 1.423-.63l4.126 1.807c-.003.053-.017.104-.017.16a1.94 1.94 0 003.879.002v-.002c0-.457-.165-.872-.431-1.205l2.398-4.014c.137.03.274.05.423.05 1.07 0 1.935-.865 1.938-1.935a1.943 1.943 0 00-1.941-1.936"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStethoscopeMedicoFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.563 13.633h-.05c-.112-.003-.53-.042-.53-.549s.415-.543.524-.543h.053c.11.002.53.044.53.549.002.501-.42.54-.527.543m.566-2.627v-1.74c0-2.302-1.672-3.162-3.11-3.196-.08 0-.176 0-.266-.003-1.425.011-3.086.852-3.086 3.2l.002 8.218c0 2.647-2.014 2.972-2.882 2.986-.092.002-.207.002-.31.002-.866-.014-2.878-.33-2.878-3.01v-1.858h.27c.285 0 .526-.252.526-.549v-1.185c2.244-.54 3.462-2.398 3.462-5.378a.406.406 0 00-.409-.403h-.123V4.742c.003-.134.025-1.327-.664-2.03a1.66 1.66 0 00-1.213-.496c-.011 0-.02.005-.033.005C9.22 2.022 8.944 2 8.84 2h-.078c-.16.003-.784.064-.784.81 0 .745.624.803.781.806h.076c.098-.003.355-.025.549-.201.022.002.042.014.064.014.143 0 .241.036.328.123.28.283.325.941.32 1.168v3.372a.406.406 0 00-.39.401c0 2.022-1.238 3.608-2.82 3.608-1.567 0-2.704-1.518-2.704-3.608a.403.403 0 00-.361-.395V4.703c-.006-.207.042-.865.32-1.148a.42.42 0 01.327-.126c.022 0 .042-.012.064-.014.193.176.448.198.546.201h.076c.157-.003.782-.061.782-.806 0-.746-.625-.807-.788-.81H5.07c-.104.003-.38.022-.574.221-.011 0-.023-.005-.034-.005-.476 0-.893.17-1.213.495-.68.704-.66 1.9-.658 2.012V8.09h-.182A.405.405 0 002 8.493c0 3.03 1.26 4.902 3.58 5.403v1.157c0 .3.24.55.526.55h.264v1.86c0 3.072 2.112 4.195 4.09 4.223h.131c.078 0 .157 0 .221-.003 1.885-.033 4.087-1.154 4.087-4.198V9.322l-.003-.073c0-1.7 1.171-1.963 1.872-1.969l.226.003c.712.017 1.908.3 1.908 1.983v1.72c-.644.132-1.577.583-1.577 2.095 0 2 1.644 2.157 2.081 2.163h.073c.045 0 .087 0 .126-.003.415-.006 2.081-.163 2.081-2.149 0-1.467-.91-1.938-1.557-2.086"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStethoscopeMedicoLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.742 14.688c.848-.016 1.28-.473 1.28-1.358 0-.888-.434-1.35-1.292-1.37l-.142-.003h-.037c-.835.009-1.257.463-1.257 1.359 0 .9.428 1.358 1.274 1.372h.174zm-13.185-.42v.787h1.176v-.798a7.146 7.146 0 01-1.176.011zm-3.572-5.19c.115 2.916 1.493 4.392 4.101 4.392 2.605 0 3.983-1.476 4.101-4.392h-.798c-.126 2.216-1.317 3.479-3.303 3.479-1.989 0-3.173-1.26-3.302-3.48h-.799zm17.096 2.098c.635.095 1.762.496 1.762 2.157 0 2.014-1.667 2.17-2.082 2.179h-.201c-.437-.006-2.082-.165-2.082-2.193 0-1.712 1.157-2.082 1.782-2.157V9.448c0-1.956-1.473-2.202-2.107-2.216-.072-.003-.16 0-.232-.003-.625.006-2.073.233-2.073 2.205l.003.078v8.275c0 3.79-3.235 4.042-3.885 4.053-.065.003-.143.003-.219.003h-.129c-1.88-.028-3.888-1.115-3.888-4.079V15.88h-.467c-.286 0-.527-.255-.527-.555v-1.173c-2.316-.513-3.58-2.412-3.58-5.485a.41.41 0 01.41-.409h.386V4.84c-.003-.112-.023-1.247.608-1.897a1.445 1.445 0 011.058-.44c.16-.313.505-.347.617-.347h.07c.145.003.711.062.711.745 0 .684-.566.74-.708.74H5.24c-.109-.003-.437-.034-.608-.322-.002 0-.005.003-.01.003a.62.62 0 00-.477.19c-.328.347-.38 1.084-.373 1.314v3.428h.41a.41.41 0 01.408.41c0 1.4.432 3.066 2.496 3.066 2.062 0 2.496-1.669 2.496-3.067a.41.41 0 01.409-.409h.465V4.84c.008-.264-.048-.986-.378-1.328a.617.617 0 00-.476-.188l-.012-.002c-.168.285-.495.319-.605.319h-.067c-.14-.003-.709-.056-.709-.74 0-.686.566-.742.712-.745h.07c.112 0 .457.034.619.348a1.45 1.45 0 011.059.44c.63.652.61 1.784.608 1.91v3.4h.327a.41.41 0 01.41.41c0 3.022-1.22 4.907-3.46 5.453v1.205c0 .3-.24.554-.527.554h-.476v1.885c0 2.9 2.151 3.244 3.079 3.258.106.003.22 0 .319-.003.723-.014 3.081-.286 3.081-3.232l-.003-8.342c0-2.221 1.49-3.022 2.886-3.034.084.003.184 0 .263.003 1.403.034 2.905.849 2.905 3.037v1.728zm-.365 1.594c.11.002.53.045.53.554 0 .513-.423.552-.527.555h-.05c-.112-.003-.53-.042-.53-.557 0-.513.415-.552.524-.552h.053z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStethoscopeMedicoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.51 14.395c.624-.011.94-.345.94-.989 0-.647-.318-.983-.951-.994l-.138-.003c-.921.011-.921.745-.921.989 0 .655.316.989.938 1 .003-.003.132-.003.132-.003zm-12.272-.062c-.118 0-.227-.008-.342-.014v.636h.768v-.638a6.846 6.846 0 01-.426.016zM3.252 9.064c.165 2.723 1.473 4.048 3.989 4.048 2.512 0 3.818-1.325 3.986-4.048H10.8c-.196 2.213-1.498 3.513-3.56 3.513-2.065 0-3.364-1.3-3.563-3.513h-.426zm16.894 2.219c.804.218 1.54.849 1.54 2.12 0 1.603-1.16 2.194-2.154 2.21h-.168c-.994-.014-2.154-.605-2.154-2.218 0-1.378.84-2.003 1.703-2.163V9.496c0-1.639-1.16-1.91-1.851-1.927l-.222-.003c-.678.005-1.812.263-1.812 1.916l.003.075v7.995c0 2.994-2.16 4.098-4.011 4.131-.073 0-.157.003-.241.003h-.107c-1.94-.028-4.014-1.134-4.014-4.154v-1.358h-.26c-.404 0-.734-.353-.734-.79v-1.236C3.289 13.574 2 11.605 2 8.454c0-.336.277-.61.616-.61h.182V4.66c-.002-.115-.025-1.316.67-2.022.31-.32.72-.488 1.185-.496A.88.88 0 015.126 2h.076c.16.003.776.067.776.804 0 .74-.62.795-.774.798h-.072c-.101 0-.376-.025-.569-.218a.378.378 0 00-.21.106c-.263.266-.328.89-.322 1.151v3.205h.238c.342 0 .616.274.616.61 0 1.928.793 2.905 2.353 2.905s2.353-.977 2.353-2.904c0-.337.277-.611.616-.611h.255V4.66c.006-.227-.042-.89-.322-1.174a.412.412 0 00-.302-.12c-.194.207-.477.235-.58.235h-.073c-.154-.003-.77-.061-.77-.798 0-.737.616-.798.773-.801h.075c.087 0 .303.022.485.154.022-.003.042-.014.064-.014.477 0 .9.17 1.219.498.692.706.672 1.908.666 2.042v3.163h.163c.342 0 .616.274.616.61 0 3.113-1.255 5.076-3.577 5.676v1.255c0 .437-.328.79-.734.79h-.277v1.352c0 2.614 1.958 2.922 2.798 2.936.104.003.216 0 .308-.003.84-.017 2.799-.33 2.799-2.913V9.493c0-2.305 1.636-3.134 3.033-3.148.084 0 .182 0 .264.002 1.409.034 3.056.877 3.056 3.149v1.787zm-.628 1.658c.084.003.406.037.406.423 0 .387-.325.417-.406.42h-.039c-.087 0-.406-.03-.406-.423 0-.389.316-.417.4-.417l.045-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStomachFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.468 21.686c-.894 0-1.74-.162-2.507-.498-.588-.26-1.023-.762-1.294-1.493-.224-.608-.286-1.308-.177-2.084.093-.65.006-1.009-.252-1.073-.146-.037-.26.022-.465.131l-.123.068c-.661.339-1.09.955-1.544 1.605-.1.145-.201.291-.308.437-.73 1.008-1.526.846-2.064.532-.868-.504-.79-1.33-.625-1.695a6.342 6.342 0 013.303-3.577 6.244 6.244 0 012.958-.566c.664-.03 1.725.124 2.423.28.19.05.355.099.507.146.918.031 1.199-.143 1.294-.246.151-.168.098-.538.042-.933-.048-.342-.104-.726-.04-1.095a3.658 3.658 0 01.051-.605c.157-1.18.563-2.115 1.205-2.785a7.05 7.05 0 01-.255-.423 6.42 6.42 0 01-.519-4.888c.188-.54.846-1.176 1.93-.806.538.185.774.498.874.73.182.415.062.807.017.93a3.466 3.466 0 00.283 2.606c.135.243.294.47.473.666.359-.016.664.009.869.034.131.02.26.042.37.05 2.103.348 4.17 1.877 3.742 5.143a6.86 6.86 0 01-.174.874l-.008.031c-.392 2.384-1.748 4.577-3.821 6.182-1.992 1.516-4.185 2.322-6.165 2.322"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStomachLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.3 15.821c.09 0 .185.011.286.034.518.126 1.092.577.89 2.02-.089.632-.044 1.192.132 1.666.188.507.47.849.84 1.011 2.188.96 5.183.297 7.816-1.728 1.919-1.482 3.165-3.507 3.51-5.7a.46.46 0 01.036-.12c.062-.253.104-.477.132-.701.428-3.258-1.964-4.014-3.012-4.188a6.486 6.486 0 01-.378-.05 4.612 4.612 0 00-.885-.014.423.423 0 01-.328-.118 4.174 4.174 0 01-.756-1.003 4.31 4.31 0 01-.347-3.269l.017-.044a.413.413 0 00-.003-.289c-.062-.134-.235-.216-.373-.263-.652-.224-.826.179-.854.263a5.551 5.551 0 00.863 4.86.43.43 0 01-.07.58c-.642.535-1.045 1.384-1.196 2.515a3.756 3.756 0 00-.048.558c-.048.31-.006.61.036.902.076.543.166 1.16-.249 1.621-.356.401-.997.572-2.011.527a.417.417 0 01-.118-.022 6.858 6.858 0 00-.496-.146c-.65-.146-1.619-.28-2.193-.258-.022 0-.042 0-.064-.003H8.44a5.367 5.367 0 00-2.535.493 5.515 5.515 0 00-2.874 3.126c-.053.132-.115.415.266.636.39.224.64.149.964-.297.1-.14.202-.282.3-.423.493-.708 1.003-1.44 1.851-1.873l.104-.057c.202-.106.456-.246.784-.246m4.32 6.014c-.894 0-1.74-.162-2.507-.499-.589-.26-1.023-.762-1.295-1.493-.224-.607-.285-1.308-.176-2.084.092-.65.006-1.008-.252-1.072-.146-.037-.26.022-.465.131l-.123.067c-.661.34-1.09.956-1.544 1.605-.1.146-.201.292-.308.437-.731 1.009-1.527.846-2.064.533-.869-.505-.79-1.33-.625-1.695a6.342 6.342 0 013.303-3.577 6.244 6.244 0 012.958-.566c.663-.03 1.725.123 2.422.28.19.05.356.098.507.146.92.03 1.202-.143 1.295-.247.15-.168.098-.537.042-.932-.048-.342-.104-.726-.04-1.096a3.658 3.658 0 01.05-.605c.158-1.179.564-2.115 1.205-2.784a7.05 7.05 0 01-.255-.423 6.42 6.42 0 01-.518-4.888c.188-.54.846-1.176 1.93-.807.538.185.773.499.874.731.182.415.062.807.017.93a3.466 3.466 0 00.283 2.605c.134.244.294.471.473.667.359-.017.664.009.869.034.131.02.26.042.37.05 2.103.348 4.17 1.877 3.742 5.143a6.86 6.86 0 01-.174.874l-.008.03c-.393 2.385-1.748 4.578-3.821 6.183-1.992 1.515-4.185 2.322-6.165 2.322"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStomachRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.272 15.412c.103 0 .213.01.327.039.482.118 1.26.56 1.028 2.207-.08.583-.042 1.098.118 1.53.163.442.403.736.712.87 2.07.908 4.924.27 7.445-1.666 1.837-1.42 3.028-3.353 3.358-5.445a.613.613 0 01.04-.14c.053-.213.098-.434.126-.659.395-3.008-1.81-3.705-2.776-3.865-.087-.009-.235-.03-.37-.05a4.14 4.14 0 00-.818-.015.62.62 0 01-.479-.17 4.422 4.422 0 01-1.137-4.392l.02-.062c.008-.028.02-.087.002-.12-.016-.037-.09-.096-.24-.15-.113-.035-.457-.153-.583.144a5.207 5.207 0 00.44 3.941c.114.213.246.415.386.608a.628.628 0 01-.104.851c-.588.49-.955 1.275-1.098 2.33-.03.194-.044.368-.044.52a.656.656 0 01-.009.106c-.033.198.006.476.042.747.076.55.174 1.23-.297 1.757-.395.44-1.073.622-2.131.582a.616.616 0 01-.174-.033 8.5 8.5 0 00-.473-.14c-.6-.132-1.544-.266-2.084-.244-.026.003-.05 0-.076 0-.014.003-.028 0-.042 0a5 5 0 00-2.387.465 5.188 5.188 0 00-2.703 2.941c-.084.224.087.322.168.37.247.143.384.165.673-.233.098-.134.193-.271.288-.409.499-.714 1.011-1.453 1.89-1.904l.099-.05c.204-.104.493-.261.863-.261m4.23 6.302c-.903 0-1.763-.165-2.536-.507-.621-.274-1.098-.82-1.378-1.58-.232-.63-.294-1.35-.185-2.142.062-.454.026-.79-.09-.818-.064-.014-.114.002-.31.112l-.126.067c-.602.31-.992.865-1.44 1.507-.098.143-.199.286-.303.428-.848 1.171-1.803.863-2.294.58-.907-.526-.913-1.44-.697-1.927a6.395 6.395 0 013.336-3.605 6.325 6.325 0 012.964-.577h.02c.694-.025 1.722.126 2.414.28.187.05.344.093.484.137.883.026 1.06-.15 1.079-.173.081-.093.028-.468-.011-.743-.048-.33-.101-.705-.048-1.08.003-.2.025-.42.059-.648.148-1.126.526-2.036 1.123-2.714a6.484 6.484 0 01-.695-5.235c.216-.617.956-1.34 2.154-.928.6.205.863.563.978.83.204.467.081.899.025 1.058a3.165 3.165 0 00.633 2.925c.322-.009.594.014.787.036.132.02.255.04.359.05 2.168.356 4.286 1.925 3.846 5.267-.04.3-.098.6-.174.882-.003.008-.003.014-.005.022-.395 2.381-1.748 4.57-3.818 6.169-1.975 1.523-4.168 2.327-6.152 2.327"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStormFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.898 15.27l-6.325 4.897 1.45-3.334c.018-.05.065-.103.035-.126-.068-.042-3.062-.705-3.062-.705a.404.404 0 01-.289-.283.414.414 0 01.09-.407l5.938-6.59a.398.398 0 01.507-.076.435.435 0 01.168.507s-1.82 4.58-1.778 4.711c.033.104 3.061.706 3.061.706.146.037.26.149.3.291a.44.44 0 01-.095.41m1.283-9.258C15.937 2.34 11.892 2.15 11.07 2.15c-1.064 0-6.277.291-6.47 6.04-1.073.442-2.451 1.506-2.451 4.089 0 3.291 1.96 4.342 4.347 4.484l3.547.28-1.827 4.205a.422.422 0 00.112.499.42.42 0 00.252.09.357.357 0 00.233-.082l6.776-5.062.975-.008c2.434 0 5.268-1.406 5.268-5.361.003-3.597-2.327-5.084-4.652-5.311"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStormLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.667 15.46l-1.053.005.367-.386a.417.417 0 00-.205-.692l-3.127-.707 1.81-4.721a.418.418 0 00-.165-.504.41.41 0 00-.521.07l-6.067 6.598a.417.417 0 00-.092.39l-1.236.006c-1.022 0-3.404-.334-3.404-3.427 0-1.738.742-2.833 2.208-3.254.176-.05.3-.215.3-.4l-.006-.115c0-4.954 4.273-5.34 5.582-5.34.742 0 4.486.17 5.377 3.535.047.18.204.303.387.309 1.26.036 4.2.526 4.2 4.304-.003 4.018-3.332 4.329-4.355 4.329zm-4.96.846a.423.423 0 00-.022-.345.407.407 0 00-.271-.207l-2.618-.594 4.12-4.483-1.208 3.152a.412.412 0 00.02.345.411.411 0 00.271.21l2.878.65-4.433 4.651 1.264-3.379zm5.437-10.295c-1.177-3.673-5.262-3.861-6.086-3.861-1.06 0-6.294.291-6.406 5.985-1.05.387-2.502 1.387-2.502 3.954 0 3.141 2.186 4.259 4.228 4.259l3.76-.017c.015 0 .026-.005.037-.008l.594.134-1.793 4.82a.417.417 0 00.384.563.42.42 0 00.297-.126l5.158-5.414 1.852-.01c.863 0 5.173-.25 5.173-5.162.003-4.287-3.278-5.007-4.696-5.117z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconStormRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.565 15.18l-.555.004.028-.031a.613.613 0 00-.303-1.02l-2.831-.641 1.689-4.404a.616.616 0 00-.244-.74.601.601 0 00-.762.102l-5.941 6.462a.59.59 0 00-.146.316l-1.008.003c-.941 0-3.132-.308-3.132-3.151 0-1.6.678-2.605 2.014-2.989a.61.61 0 00.44-.588l-.006-.112c0-4.661 4.031-5.025 5.266-5.025.7 0 4.236.16 5.073 3.31.07.261.3.446.566.454 1.18.034 3.916.49 3.916 4.012 0 3.747-3.106 4.039-4.064 4.039m-4.7.596a.614.614 0 00-.401-.305l-2.219-.504 3.081-3.35-.803 2.095a.613.613 0 00.43.818l2.472.557-3.415 3.58.888-2.386a.61.61 0 00-.034-.505m5.317-9.834C15.934 2.34 11.895 2.15 11.07 2.15c-1.061 0-6.274.291-6.467 5.922-1.07.43-2.454 1.479-2.454 4.014 0 3.224 2.244 4.372 4.345 4.372l3.683-.017c.008 0 .014-.002.025-.005l.322.073-1.675 4.498a.612.612 0 00.566.826c.16 0 .32-.064.434-.187l4.992-5.238 1.728-.009c2.432 0 5.266-1.375 5.266-5.255 0-3.526-2.327-4.983-4.655-5.201"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSunFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.214 11.335h-2.467c-.05 0-.09.017-.132.025-.134-1.675-.658-2.882-1.37-3.748.025-.017.042-.025.059-.042l1.773-1.765a.606.606 0 00.017-.857l-.017-.016a.611.611 0 00-.865-.014l-.014.014-1.774 1.764c-.016.017-.025.042-.042.065-1.333-1.04-2.924-1.294-3.77-1.353V2.769a.621.621 0 00-1.244-.003v2.636c-.86.05-2.428.289-3.745 1.311-.016-.017-.025-.048-.05-.064L5.85 4.932a.611.611 0 00-.865-.014l-.014.014a.624.624 0 000 .873L6.693 7.52c.026.017.05.025.076.05-.695.869-1.21 2.09-1.325 3.787-.042-.008-.073-.022-.115-.022H2.772a.623.623 0 00-.622.619c0 .336.283.616.622.616h2.56c.034 0 .064-.017.098-.017.076 1.709.524 2.961 1.177 3.871-.017.017-.042.023-.065.048l-1.709 1.7a.607.607 0 00-.014.86c.006.006.009.012.014.014a.593.593 0 00.77.073.582.582 0 00.25-.148l1.566-1.552c.017-.025.025-.05.05-.073 1.334 1.146 2.992 1.42 3.902 1.476v2.392c0 .348.275.62.622.62a.622.622 0 00.622-.62V18.84c0-.008-.008-.008-.008-.017.876-.05 2.602-.313 3.986-1.484.016.025.025.058.05.08l1.557 1.553c.124.123.28.179.44.179a.594.594 0 00.44-.18.606.606 0 00.017-.856l-.017-.017-1.56-1.55c-.034-.033-.073-.05-.118-.075.68-.916 1.16-2.188 1.227-3.927.042.008.076.025.115.025h2.468a.625.625 0 00.621-.619.619.619 0 00-.619-.616"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSunLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.334 18.143h-.594c-1.696-.025-5.625-.655-5.625-6.044 0-5.378 3.896-5.995 5.574-6.012h.118c.168 0 .34 0 .49.009 1.704.042 5.659.709 5.659 6.036.002 5.328-3.93 5.978-5.622 6.011m9.088-6.619h-2.514c-.042 0-.084.017-.128.025-.11-1.922-.712-3.27-1.542-4.198a.171.171 0 00.042-.025l1.822-1.805a.435.435 0 000-.6.423.423 0 00-.603 0l-1.821 1.805c-.009.017-.017.034-.026.042-1.516-1.264-3.413-1.482-4.228-1.516V2.57A.422.422 0 0012 2.15a.419.419 0 00-.423.42v2.682c-.838.017-2.71.21-4.2 1.474-.017-.016-.026-.033-.043-.05L5.572 4.922a.413.413 0 00-.594 0 .42.42 0 000 .6L6.74 7.275a.15.15 0 01.05.033c-.803.928-1.398 2.284-1.498 4.243-.034-.008-.068-.025-.101-.025H2.573a.422.422 0 00-.423.42c0 .238.188.42.423.42h2.618c.033 0 .058-.008.086-.016.05 1.973.592 3.354 1.357 4.332a.176.176 0 00-.05.034l-1.755 1.735a.43.43 0 000 .6.424.424 0 00.297.125.45.45 0 00.272-.1.461.461 0 00.177-.101l1.6-1.592c.017-.017.025-.042.042-.067 1.507 1.39 3.472 1.633 4.36 1.667v2.438a.424.424 0 00.847 0v-2.438c.832-.025 2.872-.252 4.422-1.679.017.026.033.06.059.085l1.591 1.586a.41.41 0 00.298.117c.109 0 .22-.033.305-.117a.435.435 0 000-.6l-1.6-1.586a.21.21 0 00-.104-.067c.796-.978 1.356-2.377 1.399-4.375.033.008.067.017.109.017h2.514a.417.417 0 00.423-.42.416.416 0 00-.418-.42"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSunRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.307 17.607h-.563c-4.6-.065-5.095-3.877-5.095-5.513 0-1.625.49-5.42 5.036-5.462h.588c1.54.042 5.137.652 5.137 5.504 0 4.852-3.568 5.437-5.103 5.47m8.907-6.271h-2.467c-.05 0-.093.017-.132.025-.132-1.675-.655-2.88-1.367-3.745.025-.017.042-.025.059-.042l1.773-1.768a.604.604 0 000-.873.615.615 0 00-.88 0l-1.773 1.764c-.017.017-.025.042-.042.067-1.333-1.039-2.924-1.294-3.77-1.353V2.77a.625.625 0 00-.622-.619.62.62 0 00-.622.619V5.4c-.862.05-2.428.289-3.745 1.311-.017-.017-.025-.05-.05-.064L5.853 4.929a.616.616 0 00-.88 0 .619.619 0 000 .874L6.697 7.52c.025.017.05.025.076.05-.695.866-1.21 2.087-1.325 3.787-.042-.008-.076-.025-.115-.025h-2.56a.625.625 0 00-.622.62c0 .338.283.618.622.618h2.56c.034 0 .067-.017.098-.017.076 1.709.521 2.964 1.177 3.869-.017.016-.042.025-.068.05l-1.706 1.7a.604.604 0 000 .874.592.592 0 00.77.076.611.611 0 00.25-.148l1.566-1.552c.017-.026.025-.048.05-.076 1.334 1.146 2.992 1.42 3.902 1.476v2.392c0 .348.275.62.622.62a.62.62 0 00.622-.62V18.84c0-.008-.008-.008-.008-.017.88-.047 2.602-.313 3.986-1.484.016.025.025.056.05.08l1.557 1.553a.62.62 0 00.44.182.576.576 0 00.437-.182.604.604 0 000-.874l-1.557-1.552c-.034-.034-.076-.05-.115-.076.68-.916 1.16-2.187 1.227-3.927.042.009.075.025.115.025h2.467c.34 0 .622-.28.622-.619a.624.624 0 00-.622-.613"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupermarketFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.528 2.993a.412.412 0 01-.395-.428.41.41 0 01.4-.415h.37c.41 0 .757.289.869.72.036.14.087.398.143.697h2.865a.39.39 0 01.32.168.444.444 0 01.064.37s-.28 1.037-.431 1.574c-.146.53-.502.846-.947.846h-1.373c-.582 0-.921-.549-.994-1.058a99.949 99.949 0 00-.233-1.39c-.002-.008-.002-.017-.005-.028a16.997 16.997 0 00-.188-.96c-.025-.093-.084-.099-.098-.099-.196.006-.367.003-.367.003zm1.939 3.902h.028c.075.003.37.034.37.406 0 .376-.295.406-.368.406h-.036c-.079-.002-.367-.03-.367-.409 0-.375.288-.403.364-.406h.009v.003zm1.232 0h.028c.076.003.37.034.37.406 0 .376-.294.406-.367.406h-.034c-.078-.002-.367-.03-.367-.409 0-.375.289-.403.364-.406h.006v.003zm5.95 13.628h1.986v-7.74h-1.986v7.74zm-4.166.014V16.36h-4.73v4.196l4.73-.02zm-3.154-9.272c-.17.173-.257.473-.257.888 0 .414.086.708.257.882.166.171.443.255.824.255.38 0 .658-.084.826-.255.171-.174.258-.468.258-.882 0-.415-.087-.712-.258-.885-.168-.171-.445-.258-.826-.258-.381 0-.658.087-.824.255zm-7.975 9.258H5.34v-7.74H3.354v7.74zm17.883-9.006c.33 0 .602.283.602.633v9.006c0 .35-.272.677-.605.677h-5.95l-.201.003H9.147c-.025 0-.042-.011-.067-.014l-3.493.014h-.003l-.37-.003H2.752c-.33 0-.602-.327-.602-.677V12.15c0-.35.269-.633.602-.633H5.56V9.144c0-.619.605-1.16 1.291-1.16h10.504c.69 0 1.292.544 1.292 1.163v2.373h2.59v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupermarketLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.981 13.155c.177-.174.264-.476.264-.894 0-.417-.09-.72-.267-.896-.17-.171-.453-.258-.843-.258-.387 0-.672.084-.84.258-.174.176-.264.479-.264.896 0 .418.09.717.26.894.169.17.455.258.844.258.39 0 .675-.087.846-.258zm-.846-2.9c.608 0 1.082.168 1.41.499.341.342.515.852.515 1.507 0 .659-.174 1.166-.518 1.507-.328.328-.802.494-1.41.494-.608 0-1.081-.169-1.409-.494-.339-.344-.513-.848-.513-1.507 0-.655.171-1.165.513-1.507.33-.33.807-.499 1.412-.499zm1.138-5.819H11.04c.084.485.148.9.157.936.01.062.08.35.204.35h1.4c.09 0 .15-.132.18-.244.081-.285.2-.706.292-1.042zm-3.8-1.434a.417.417 0 01-.403-.432c.003-.235.151-.412.415-.42h.37c.417 0 .773.291.888.728.036.143.09.404.145.704h2.925c.13 0 .25.061.328.168a.435.435 0 01.067.375s-.285 1.045-.44 1.589c-.148.535-.512.857-.963.857h-1.401c-.594 0-.942-.555-1.014-1.07a87.571 87.571 0 00-.238-1.404c-.003-.008-.003-.017-.006-.028-.076-.42-.149-.801-.193-.97-.026-.1-.107-.1-.101-.1-.2.006-.378.003-.378.003zm1.984 3.947c.011 0 .02.003.03.003.077.003.38.034.38.41 0 .377-.3.408-.376.408h-.04c-.078-.003-.375-.03-.375-.412 0-.378.294-.406.373-.409h.008zm1.258 0c.011 0 .02.003.03.003.076.003.38.034.38.41 0 .377-.3.408-.376.408h-.034c-.081-.003-.375-.03-.375-.412 0-.378.294-.406.372-.409h.003zm5.867 13.989h2.437v-8.251h-2.437v8.25zm-.816 0V9.22c-.014-.005-.142-.109-.294-.109H6.742c-.151 0-.283.101-.303.143l.006 11.725 2.233-.009v-5.099c0-.235.182-.425.409-.425h6.063c.227 0 .409.19.409.425v5.077l2.207-.011zm-3.028.014v-4.65h-5.24v4.667l5.24-.017zm-11.77-.014h2.438v-8.251H2.968v8.25zm18.463-9.103c.227 0 .409.19.409.426v9.103c0 .235-.185.476-.412.476H2.56c-.227 0-.409-.24-.409-.476V12.26c0-.238.182-.426.409-.426h3.07V9.221c0-.512.522-.96 1.116-.96h10.727c.594 0 1.115.448 1.115.96v2.612h2.844v.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupermarketRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.587 11.567c-.087.087-.134.3-.134.583s.047.493.134.583c.084.084.283.134.546.134.263 0 .462-.05.55-.137.086-.087.134-.297.134-.58s-.05-.493-.138-.58c-.086-.09-.285-.137-.546-.137-.26 0-.462.048-.546.134zm.546 2.566c-.594 0-1.061-.162-1.38-.49-.334-.336-.502-.838-.502-1.49 0-.65.168-1.154.501-1.49.32-.328.787-.493 1.381-.493s1.059.165 1.381.493c.336.339.504.84.504 1.49 0 .652-.17 1.154-.504 1.49-.322.325-.787.49-1.38.49zm1.112-9.722h-2.187l.154.927c.008.061.078.347.201.347h1.373c.09 0 .143-.132.176-.244.076-.28.19-.697.283-1.03zM9.523 2.993a.412.412 0 01-.395-.428.41.41 0 01.4-.415h.37c.409 0 .756.289.868.72.037.143.087.398.143.695h2.868a.39.39 0 01.32.168c.075.106.1.24.064.37 0 0-.28 1.033-.434 1.574-.146.529-.501.848-.944.848H11.41c-.582 0-.921-.551-.991-1.058-.048-.292-.14-.866-.233-1.39-.002-.008-.002-.017-.005-.028a16.769 16.769 0 00-.188-.958c-.025-.092-.084-.098-.098-.098-.199.003-.372 0-.372 0zm1.944 3.902h.028c.075.003.37.034.37.406 0 .376-.295.406-.368.406h-.033c-.079-.002-.367-.03-.367-.409 0-.375.288-.403.364-.406h.006v.003zm1.232 0h.028c.076.003.37.034.37.406 0 .376-.294.406-.367.406h-.037c-.078-.002-.367-.03-.367-.409 0-.375.289-.403.367-.406h.006v.003zm5.947 13.628h1.989v-7.74h-1.99v7.74zm-8.897.03l4.734-.016v-4.18H9.75v4.196zM6.761 9.27v11.295l1.784-.006v-4.835c0-.35.269-.633.602-.633h5.936c.33 0 .602.283.602.633v4.807l1.762-.006V9.27a.235.235 0 00-.09-.022H6.85a.222.222 0 00-.09.022zM3.35 20.523h1.99v-7.74H3.35v7.74zm17.883-9.006c.333 0 .602.283.602.633v9.006c0 .347-.274.68-.605.68H2.755c-.33 0-.605-.333-.605-.68V12.15c0-.35.269-.633.602-.633H5.56V9.144c0-.619.605-1.16 1.291-1.16h10.507c.69 0 1.292.544 1.292 1.163v2.373h2.585v-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupportAgentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.127 14.02c1.827 0 3.328.554 4.34 1.605.93.966 1.42 2.305 1.42 3.87v1.64c0 .31-.25.56-.56.56H3.393a.562.562 0 01-.56-.56v-1.64c0-1.565.49-2.904 1.42-3.87 1.01-1.05 2.512-1.605 4.338-1.605h6.535zM11.87 4.188c2.837 0 4.4 1.563 4.4 4.4 0 .149-.005.294-.014.437h-2.23c-.263-.238-.618-.367-1.03-.367-.437 0-.807.143-1.081.415-.275.272-.418.644-.418 1.078 0 .429.143.799.41 1.07.274.278.649.423 1.089.423.414 0 .776-.131 1.042-.38H15.6c-.712 1.128-1.978 1.725-3.731 1.725-2.838 0-4.4-1.563-4.4-4.4 0-2.838 1.562-4.401 4.4-4.401zM11.864 2c1.992 0 3.546.524 4.616 1.557 1.112 1.073 1.678 2.667 1.67 4.743v.008l-.009.544c0 .565-.176 1.039-.504 1.364-.328.325-.778.49-1.339.49H13.78a.702.702 0 01-.098.123c-.162.168-.403.255-.689.255-.286 0-.527-.09-.69-.255-.162-.165-.246-.395-.246-.678 0-.574.362-.933.939-.933.353 0 .624.135.781.367h2.53c.252 0 .44-.056.552-.168.14-.143.17-.389.17-.574v-.008l.009-.544c-.003-1.753-.451-3.075-1.34-3.927-.856-.826-2.148-1.244-3.84-1.244-1.529 0-2.736.345-3.582 1.017C7.419 4.824 6.9 5.88 6.74 7.283a.56.56 0 01-1.112-.129c.196-1.706.851-3.017 1.952-3.893C8.631 2.423 10.074 2 11.864 2z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupportAgentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.264 14.716c1.748 0 3.18.527 4.137 1.521.88.914 1.342 2.185 1.342 3.678v1.639a.28.28 0 01-.28.28H3.53a.28.28 0 01-.28-.28v-1.639c0-1.493.465-2.764 1.342-3.678.958-.994 2.386-1.52 4.137-1.52h6.535zm0 .563H8.729c-1.616 0-2.871.454-3.734 1.348-.776.807-1.185 1.944-1.185 3.288v1.359h16.373v-1.359c0-1.344-.41-2.481-1.185-3.288-.863-.894-2.118-1.348-3.734-1.348zM11.97 2.156c1.919 0 3.406.499 4.423 1.48 1.056 1.016 1.59 2.543 1.59 4.537v.006l-.008.546c0 .498-.142.893-.42 1.168-.277.274-.66.409-1.145.409l-.366.001a3.472 3.472 0 01-.797 1.195c-.745.717-1.832 1.081-3.232 1.081-1.398 0-2.488-.364-3.233-1.084-.773-.745-1.165-1.863-1.165-3.316 0-1.454.392-2.572 1.165-3.317.748-.717 1.835-1.081 3.233-1.081 1.397 0 2.487.364 3.232 1.084.773.748 1.165 1.863 1.165 3.316a6.2 6.2 0 01-.182 1.56h.18c.33 0 .582-.083.75-.249.168-.165.255-.428.255-.773v-.005l.009-.547c0-3.616-1.835-5.45-5.454-5.45-3.247 0-5.062 1.484-5.398 4.408a.28.28 0 01-.554-.064c.184-1.63.806-2.88 1.845-3.706 1-.795 2.381-1.199 4.107-1.199zm2.818 8.147a.524.524 0 01-.123.203c-.115.115-.283.171-.49.171-.208 0-.376-.056-.49-.17-.107-.107-.166-.267-.166-.48 0-.445.26-.652.658-.652.3 0 .52.117.609.365l.863.003a5.47 5.47 0 00.203-1.562c0-1.296-.336-2.277-.994-2.913-.636-.616-1.594-.927-2.843-.927-1.25 0-2.205.311-2.843.927-.661.636-.995 1.617-.995 2.913 0 1.297.336 2.278.995 2.914.638.616 1.593.927 2.843.927 1.249 0 2.204-.311 2.843-.927a2.82 2.82 0 00.573-.793z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSupportAgentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.127 14.02c1.827 0 3.328.554 4.34 1.605.93.966 1.42 2.305 1.42 3.87v1.64c0 .31-.25.56-.56.56H3.393a.562.562 0 01-.56-.56v-1.64c0-1.565.49-2.904 1.42-3.87 1.01-1.05 2.512-1.605 4.338-1.605h6.535zm0 1.12H8.595c-1.538 0-2.725.426-3.532 1.263-.725.751-1.11 1.821-1.11 3.093v1.078h15.813v-1.078c0-1.272-.384-2.342-1.106-3.093-.807-.837-1.995-1.263-3.533-1.263zM11.864 2c1.992 0 3.546.524 4.616 1.557 1.112 1.073 1.675 2.667 1.675 4.74v.008l-.008.544c0 .568-.176 1.039-.504 1.364-.328.325-.779.493-1.34.493h-.414c-.622 1.487-1.997 2.283-4.022 2.283-2.838 0-4.4-1.563-4.4-4.4 0-2.838 1.565-4.401 4.4-4.401 2.835 0 4.4 1.563 4.4 4.4 0 .353-.024.685-.071.998h.108c.255 0 .44-.057.552-.169.143-.14.17-.389.17-.571v-.008l.009-.544c0-1.756-.448-3.078-1.33-3.93-.858-.826-2.149-1.244-3.84-1.244-1.53 0-2.738.342-3.584 1.017-.86.684-1.375 1.743-1.535 3.146a.563.563 0 01-.621.493.563.563 0 01-.493-.622c.196-1.709.851-3.017 1.95-3.894C8.631 2.423 10.073 2 11.863 2zm1.826 8.83c-.162.164-.409.254-.694.254-.286 0-.527-.087-.69-.255-.162-.168-.246-.392-.246-.678 0-.574.359-.933.939-.933.352 0 .623.133.78.366l1.28.002c.059-.302.088-.634.088-.995 0-1.126-.28-1.966-.838-2.501-.535-.521-1.355-.782-2.442-.782-1.084 0-1.905.263-2.443.782-.554.535-.837 1.375-.837 2.501s.28 1.966.837 2.501c.538.519 1.359.782 2.443.782s1.905-.263 2.442-.782a2.26 2.26 0 00.32-.386h-.84a.79.79 0 01-.099.123z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSyringeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.658 7.25l-1.173-1.183 2.224-2.24 1.173 1.181-2.224 2.241zM15.19 8.481a.51.51 0 01-.378.157.566.566 0 01-.378-.149l-1.706-1.703.754-.759 1.706 1.695a.536.536 0 01.002.759zm-1.1 2.983a.576.576 0 01-.379.157.549.549 0 01-.378-.157L10.71 8.821l.753-.76 2.625 2.645a.544.544 0 01.003.759zm-2.863 1.165a.518.518 0 01-.378.165.576.576 0 01-.378-.156l-1.782-1.785.756-.759 1.782 1.776a.538.538 0 010 .76zm-1.118 2.406a.521.521 0 01-.375.157.537.537 0 01-.378-.157l-2.412-2.423.753-.761 2.412 2.43a.52.52 0 010 .754zm-2.313 1.48l-.625.627-.566-.572.625-.635c.008-.009.008-.017.016-.026l.575.586c-.009.011-.017.011-.025.02zm13.711-11.63l-2.658-2.679a.622.622 0 00-.877 0 .622.622 0 00-.106.712l-2.247 2.274-1.1-1.106a.6.6 0 00-.872 0 .627.627 0 000 .877l.157.156-.608.611v.008l-6.54 6.58-1.051 1.068a.617.617 0 00-.18.437c0 .165.065.322.18.436l.779.785c-.009.008-.017.008-.025.017l-1.06 1.075a.612.612 0 000 .877l.247.25-3.361 3.391a.612.612 0 000 .877.58.58 0 00.434.182.607.607 0 00.434-.182l3.364-3.398.32.323a.611.611 0 00.868 0l1.059-1.068c.008-.008.008-.016.017-.025l.927.933c.123.115.28.182.434.182a.61.61 0 00.434-.182l8.205-8.266.179.182c.123.115.28.182.434.182a.641.641 0 00.434-.182.627.627 0 000-.877L18.524 8.12l2.246-2.266a.59.59 0 00.289.082.61.61 0 00.442-.183.612.612 0 00.006-.868z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSyringeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.943 7.576L16.45 6.074l2.565-2.59 1.493 1.51-2.565 2.582zm-7.779 9.944L6.66 13.99l.585-.59 2.011 2.033a.426.426 0 00.303.126c.11 0 .21-.042.294-.126a.42.42 0 000-.6l-2.022-2.025 1.476-1.484 1.384 1.367a.408.408 0 00.294.126.426.426 0 00.302-.126.427.427 0 00-.008-.6l-1.376-1.37 1.477-1.484c.008.008.016.025.025.033l2.204 2.219a.408.408 0 00.294.126c.11 0 .219-.042.303-.126a.435.435 0 000-.6l-2.213-2.22a.116.116 0 00-.034-.026l1.485-1.485 1.3 1.292a.426.426 0 00.597-.008.417.417 0 00-.009-.592l-1.3-1.283.863-.868 3.504 3.53-8.235 8.29zm-2.936.16l-.88-.877.956-.972.88.885-.956.963zM21.721 5.01l-2.717-2.734a.428.428 0 00-.594 0 .42.42 0 000 .6l.009.016-2.566 2.583-1.274-1.283a.42.42 0 00-.585.6l.31.313-8.535 8.583a.435.435 0 000 .6l.947.954-1.255 1.255a.45.45 0 00-.126.306c0 .109.05.218.126.294l.403.406-3.588 3.622a.42.42 0 00.291.717c.11 0 .219-.042.303-.126l3.588-3.614.47.474a.413.413 0 00.303.126c.11 0 .219-.042.294-.126l1.258-1.258 1.09 1.098a.408.408 0 00.294.126.426.426 0 00.302-.126l8.524-8.594.336.34a.408.408 0 00.588 0 .42.42 0 000-.6l-1.375-1.384 2.566-2.591.025.025a.408.408 0 00.294.126c.11 0 .219-.042.303-.126a.447.447 0 00-.009-.602z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconSyringeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.661 7.25l-1.174-1.183 2.224-2.24 1.174 1.181-2.224 2.241zm-7.613 9.736l-3.135-3.165.616-.628 1.832 1.843a.523.523 0 00.378.157c.14 0 .272-.05.379-.157a.54.54 0 000-.753L8.286 12.44l.986-1 1.207 1.199a.575.575 0 00.375.157c.14 0 .28-.06.378-.166a.538.538 0 000-.759l-1.207-1.19 1.272-1.272 2.034 2.059a.576.576 0 00.378.157c.14 0 .28-.06.378-.157a.53.53 0 000-.76L12.042 8.65l1.272-1.28 1.123 1.123a.566.566 0 00.378.148c.14 0 .28-.05.378-.156a.542.542 0 000-.762l-1.126-1.107.608-.619 3.143 3.165-7.77 7.824zm-2.25-.47l-.622.627-.565-.572.624-.635c.009-.009.009-.017.017-.026l.574.586c-.01.011-.02.011-.028.02zm13.703-11.63l-2.658-2.679a.612.612 0 00-.868 0 .618.618 0 00-.107.712L15.62 5.193l-1.1-1.106a.6.6 0 00-.872 0 .627.627 0 000 .877l.157.156-8.196 8.267a.612.612 0 000 .876l.779.785c-.009.008-.017.008-.026.016L5.303 16.14a.612.612 0 000 .877l.246.25-3.37 3.388a.627.627 0 000 .877.611.611 0 00.869 0l3.372-3.398.32.323a.6.6 0 00.436.182c.157 0 .311-.06.435-.182l1.058-1.068c.009-.008.009-.016.017-.025l.927.933a.65.65 0 00.437.182c.157 0 .32-.067.435-.182l8.204-8.266.18.182c.123.115.28.182.433.182a.65.65 0 00.435-.182.627.627 0 000-.877L18.532 8.12l2.25-2.266a.588.588 0 00.722-.1.605.605 0 00-.003-.869z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTabletFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.61 3.58c-.22.134-.88.546-.88 2.042v11.157H18.1c0-4.238-.006-11.168-.006-11.168 0-.037.003-.073.005-.112 0 0 .062-1.014-.512-1.653-.367-.406-.97-.614-1.793-.614l-7.75.003c-.029 0-.054-.003-.082-.003H7.92c-.18-.002-.793.023-1.31.348zm12.67 2.028s.006 8.507.006 12.434c0 3.426-2.675 3.644-3.358 3.644-.101 0-.157-.003-.157-.003s-3.757.003-7.715.003c-3.958 0-3.52-3.638-3.52-3.638V5.628c0-3.43 2.756-3.622 3.378-3.622.078 0 .123.002.123.002l7.75-.002c3.807-.003 3.493 3.602 3.493 3.602zm-7.375 12.798c-.512 0-.82.308-.82.82 0 .25.07.452.212.597.146.146.356.225.608.225s.462-.079.608-.225c.143-.145.213-.347.213-.596 0-.513-.308-.82-.82-.82z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTabletLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.933 21.021c.958 0 2.563-.367 2.563-2.824v-.152H5.33v.155c0 .033-.003.067-.006.1 0 .006-.117 1.166.552 1.94.449.518 1.183.778 2.183.778l7.717-.003c.02 0 .042 0 .061.003.006.003.04.003.096.003zM6.4 3.377c-.72.449-1.07 1.233-1.07 2.396v11.451h13.166c0-4.202-.005-11.462-.005-11.462 0-.026 0-.05.003-.073 0-.006.08-1.188-.614-1.964-.446-.5-1.146-.751-2.088-.751l-7.752.003c-.02 0-.037 0-.054-.003h-.07c-.201-.003-.905.025-1.516.403zM19.284 5.76s.005 8.51.005 12.438c0 3.426-2.676 3.645-3.36 3.645-.1 0-.156-.006-.156-.006s-3.758.003-7.717.003c-3.959 0-3.522-3.64-3.522-3.64v-.526c-.003-.014-.008-.025-.008-.04 0-.013.005-.025.008-.039V5.773c0-3.43 2.757-3.623 3.38-3.623.078 0 .123.003.123.003s3.948-.003 7.755-.003c3.806.003 3.492 3.609 3.492 3.609zm-7.378 13.1c.457 0 .732.283.732.76 0 .232-.065.417-.191.551-.129.137-.317.207-.54.207-.225 0-.413-.07-.542-.207-.126-.134-.19-.32-.19-.552 0-.476.272-.76.731-.76z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTabletRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.931 20.457c.99 0 2.168-.42 2.168-2.415v-.034H5.73v.034c0 .05-.002.1-.008.151 0 0-.092.989.457 1.62.37.422 1.003.638 1.882.638l7.714-.003c.031 0 .062 0 .096.003l.061.006zM6.61 3.58c-.218.134-.88.546-.88 2.042v11.157H18.1c0-4.236-.005-11.168-.005-11.168 0-.037.003-.073.005-.112 0 0 .062-1.014-.512-1.653-.37-.406-.975-.614-1.796-.614h-7.75L7.96 3.23h-.042c-.176 0-.79.025-1.308.35zm12.672 2.028s.006 8.507.006 12.431c0 3.426-2.675 3.644-3.358 3.644-.101 0-.157-.002-.157-.002s-3.757.002-7.715.002c-3.958 0-3.52-3.641-3.52-3.641V5.622C4.538 2.193 7.292 2 7.914 2c.078 0 .123.003.123.003L15.788 2c3.81.003 3.493 3.608 3.493 3.608zm-7.375 12.896c.457 0 .731.283.731.76 0 .232-.064.417-.19.551-.13.135-.314.207-.54.207-.228 0-.413-.07-.541-.207-.127-.134-.19-.32-.19-.552 0-.476.274-.759.73-.759z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTachometerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.595 14.445l-6.375 1.832a1.25 1.25 0 01-1.227.972 1.243 1.243 0 01-1.255-1.232c0-.68.563-1.23 1.255-1.23.345 0 .656.135.882.356l6.381-1.835a.602.602 0 01.748.4.59.59 0 01-.409.737zM7.971 10.986a.61.61 0 01-.855 0l-.577-.566a.585.585 0 010-.837.61.61 0 01.855 0l.577.565a.58.58 0 010 .838zM5.95 14.93h-.818a.597.597 0 01-.602-.591.6.6 0 01.602-.591h.818c.333 0 .602.266.602.59a.597.597 0 01-.602.592zm5.426-6.532c0-.328.272-.591.602-.591.333 0 .602.266.602.59V9.2a.597.597 0 01-.602.59.597.597 0 01-.602-.59v-.801zm4.605 1.753l.577-.566a.61.61 0 01.854 0 .585.585 0 010 .838l-.577.566a.61.61 0 01-.851 0 .583.583 0 01-.003-.838zM11.99 5.333c-6.437 0-9.84 3.34-9.84 9.653 0 1.44.182 2.742.54 3.874a.603.603 0 00.578.414H20.71a.6.6 0 00.54-.33l.02-.042a.807.807 0 00.037-.087c.35-1.12.53-2.409.53-3.829 0-6.314-3.404-9.653-9.847-9.653z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTachometerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.736 18.184c.285-1.004.43-2.151.43-3.414 0-5.942-3.085-8.954-9.166-8.954S2.837 8.828 2.837 14.77c0 1.263.145 2.41.427 3.414h17.472zM11.997 5C18.54 5 22 8.378 22 14.77c0 1.449-.182 2.762-.538 3.898a.365.365 0 01-.023.06l-.022.044a.419.419 0 01-.376.228H2.951a.418.418 0 01-.399-.287C2.185 17.566 2 16.238 2 14.77 2 8.38 5.458 5 11.997 5zM12 16.702a.867.867 0 00.848-.689l-.691.197a.42.42 0 01-.518-.275.41.41 0 01.281-.507h.003l.703-.202a.876.876 0 00-.626-.253.875.875 0 00-.885.863c0 .478.396.866.885.866zm0-2.542c.603 0 1.164.315 1.474.83l6.118-1.755c.22-.065.45.056.516.272v.003a.403.403 0 01-.28.504h-.005l-6.116 1.752c0 .022.009.045.009.07 0 .925-.771 1.68-1.719 1.68-.947 0-1.716-.752-1.716-1.677s.771-1.68 1.719-1.68zm-.014-5.78a.414.414 0 01-.419-.407v-.827c0-.225.188-.408.416-.408.23 0 .418.183.418.408v.827a.41.41 0 01-.415.407zm-5.282.526l.6.585a.4.4 0 01.006.571l-.006.006a.426.426 0 01-.589 0l-.6-.585a.4.4 0 01-.006-.571l.006-.006a.426.426 0 01.589 0zM4.9 13.693c.23 0 .415.183.415.408a.413.413 0 01-.415.408h-.848a.413.413 0 01-.416-.408c0-.225.188-.408.416-.408H4.9zm12.134-3.468a.428.428 0 01-.296-.118.401.401 0 01-.003-.573l.003-.003.6-.585a.42.42 0 01.59 0c.162.154.165.41.005.57l-.005.006-.598.585a.446.446 0 01-.296.118z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTachometerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.231 18.084c.244-.919.367-1.96.367-3.1 0-5.611-2.902-8.457-8.622-8.457S3.357 9.37 3.357 14.983c0 1.143.124 2.185.364 3.101h16.51zm-8.257-12.74c6.43 0 9.829 3.334 9.829 9.64 0 1.417-.177 2.702-.53 3.823a.474.474 0 01-.036.087l-.02.042a.602.602 0 01-.54.33H3.265a.602.602 0 01-.577-.414c-.356-1.132-.538-2.432-.538-3.869 0-6.305 3.398-9.638 9.824-9.638zm.002 9.44c.345 0 .653.138.88.356l6.372-1.832a.602.602 0 01.748.4c.09.312-.09.64-.4.732l-.009.003-6.364 1.829a1.248 1.248 0 01-1.224.972 1.24 1.24 0 01-1.252-1.23c-.003-.678.557-1.227 1.25-1.23zm-.014-4.991a.595.595 0 01-.602-.591v-.799c0-.325.269-.59.602-.59.334 0 .603.265.603.59v.799a.595.595 0 01-.603.59zm-4.577-.205l.577.566c.23.224.236.591.014.824l-.014.014a.607.607 0 01-.851 0l-.58-.569a.583.583 0 01-.011-.824l.011-.01a.616.616 0 01.854 0zm-1.44 4.157c.334 0 .603.263.603.591a.597.597 0 01-.602.591H5.13a.597.597 0 01-.602-.59c0-.329.27-.592.602-.592h.816zm10.437-2.583a.602.602 0 01-.425-.173.586.586 0 01-.014-.824l.014-.014.577-.566a.612.612 0 01.851 0c.23.225.236.594.011.824l-.01.011-.578.566a.593.593 0 01-.426.176z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTagFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.686 3.339A1.349 1.349 0 0020.344 2H12a2.13 2.13 0 00-1.062.597l-8.336 8.327a1.553 1.553 0 00-.291 2.157l8.288 8.27c.219.218.519.338.83.33.09.008.182.008.274 0a2.012 2.012 0 001.062-.661l8.327-8.27c.309-.296.513-.68.589-1.1V3.342h.005v-.003zm-6.571 3.308c.03-.42.227-.815.546-1.092.28-.325.68-.519 1.11-.538.436.028.845.227 1.134.554.33.289.532.695.563 1.132-.025.42-.219.81-.538 1.084a1.605 1.605 0 01-1.118.546 1.648 1.648 0 01-1.134-.546 1.646 1.646 0 01-.563-1.118v-.022z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTagLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.843 3.498h-.008v8.32c-.076.42-.28.803-.588 1.1l-8.328 8.277a1.977 1.977 0 01-1.334.645 1.151 1.151 0 01-.829-.314l-8.288-8.277a1.555 1.555 0 01.291-2.163l8.336-8.35a2.082 2.082 0 011.062-.58H20.5c.74 0 1.342.6 1.342 1.342zm-.829 8.196V3.498a.513.513 0 00-.513-.513h-8.196c-.238.054-.453.18-.622.356l-8.36 8.32c-.365.364-.449.82-.284.983l8.289 8.28c.165.165.638.073.994-.28l8.345-8.328c.179-.165.3-.384.347-.622zm-4.076-7.353c.645.05 1.247.35 1.673.838.493.437.79 1.05.829 1.706a2.388 2.388 0 01-.787 1.714c-.429.47-1.023.75-1.659.787a2.49 2.49 0 01-1.717-.83 2.494 2.494 0 01-.829-1.713 2.4 2.4 0 01.787-1.715 2.44 2.44 0 011.703-.787zm1.152 3.61c.316-.274.51-.666.53-1.083a1.661 1.661 0 00-.564-1.135 1.665 1.665 0 00-1.126-.563c-.429.025-.83.222-1.112.546-.322.28-.518.676-.546 1.101.03.437.232.846.563 1.135.291.325.7.52 1.134.546.429-.04.827-.233 1.12-.546z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTagRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.146 11.989c.15-.152.254-.328.277-.476l-.009-.185.009-7.796a.27.27 0 00-.272-.269h-8.008c-.11.026-.294.132-.443.283L3.555 11.69c-.292.291-.314.594-.28.644l8.075 8.073c.056.042.367.011.65-.274l8.146-8.143zm1.54-8.454l-.005 7.776.005.21c0 .028-.005.12-.008.148-.079.463-.3.888-.636 1.213l-8.148 8.143c-.435.434-.97.661-1.463.661a1.35 1.35 0 01-.974-.386L2.38 13.227c-.314-.314-.443-.779-.353-1.275.078-.414.3-.826.63-1.157l8.149-8.142c.336-.336.745-.56 1.157-.636a.952.952 0 01.126-.014L20.15 2c.846 0 1.532.69 1.535 1.535zm-4.053 4.227c.625-.625.619-1.238-.017-1.877-.322-.322-.638-.484-.952-.484-.308 0-.616.156-.925.465-.624.624-.619 1.238.017 1.876.636.639 1.25.647 1.877.02zm-2.79-2.787c1.123-1.123 2.53-1.118 3.664.02 1.137 1.137 1.143 2.54.02 3.663-.56.56-1.188.84-1.818.84-.639 0-1.275-.285-1.846-.857-1.138-1.137-1.146-2.543-.02-3.666z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTalkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.006 15.941c1.339 0 2.372.359 3.075 1.067.703.71 1.06 1.746 1.06 3.09v1.04a.56.56 0 01-.561.56H2.56a.562.562 0 01-.56-.56v-1.04c0-1.344.356-2.384 1.059-3.09.703-.705 1.74-1.067 3.075-1.067h4.872zM8.57 7.647c1.216 0 2.163.353 2.818 1.045.617.653.93 1.563.93 2.703s-.313 2.05-.93 2.703c-.655.692-1.605 1.045-2.818 1.045-1.215 0-2.162-.35-2.817-1.045-.62-.653-.93-1.563-.93-2.703s.313-2.05.93-2.703c.655-.695 1.602-1.045 2.817-1.045zM20.154 2a1.52 1.52 0 011.507 1.31c.02.103.03.209.03.317V7.53c0 .891-.722 1.614-1.613 1.614H16.79c-.314.496-.978 1.54-1.11 1.74-.29.445-.705.714-1.08.714a.754.754 0 01-.113-.009c-.414-.064-.75-.462-.75-.888V9.143h-.11c-.87 0-1.529-.695-1.529-1.614V3.627c0-.89.723-1.613 1.613-1.613h.232c.067-.01.136-.014.205-.014zM14.71 5.025a.547.547 0 10.001 1.094.547.547 0 00-.001-1.094zm2.185 0a.547.547 0 10.001 1.094.547.547 0 00-.001-1.094zm2.184 0a.547.547 0 10.002 1.094.547.547 0 00-.002-1.094z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTalkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.232 16.635c1.26 0 2.23.33 2.877.986.647.656.977 1.625.977 2.894v1.042a.28.28 0 01-.28.277H2.436a.28.28 0 01-.28-.28v-1.042c0-1.266.328-2.24.978-2.894.65-.652 1.616-.983 2.877-.983h5.22zm0 .56H6.01c-1.107 0-1.942.275-2.482.818-.54.544-.813 1.387-.813 2.499v.762h11.81v-.762c0-1.115-.275-1.955-.812-2.499-.538-.543-1.376-.818-2.482-.818zm-2.61-8.484c1.134 0 2.013.322 2.613.958.566.6.854 1.445.854 2.512 0 1.068-.288 1.91-.854 2.513-.6.633-1.48.955-2.614.955s-2.014-.322-2.613-.958c-.569-.6-.855-1.442-.855-2.51 0-1.067.289-1.91.855-2.512.6-.636 1.479-.958 2.613-.958zm0 .56c-2.404 0-2.908 1.583-2.908 2.91 0 2.404 1.582 2.908 2.907 2.908 2.404 0 2.908-1.583 2.908-2.908 0-1.324-.504-2.91-2.908-2.91zM20.5 2.156c.736 0 1.333.597 1.333 1.334v3.902c0 .736-.597 1.333-1.333 1.333h-4.258l-.146.219c-.344.513-.828 1.24-.86 1.29-.078.118-.268.412-.577.412a.516.516 0 01-.092-.008c-.395-.07-.395-.434-.395-.555V8.725h-.39c-.71 0-1.249-.574-1.249-1.333V3.49c0-.737.6-1.334 1.334-1.334H20.5zm0 .56h-6.633a.773.773 0 00-.773.774v3.902c0 .456.283.773.689.773h.67a.28.28 0 01.28.28v1.532l.03-.045c.053-.084 1.053-1.58 1.095-1.641a.273.273 0 01.233-.124H20.5a.775.775 0 00.773-.773V3.49a.775.775 0 00-.773-.774zm-5.502 1.905a.826.826 0 110 1.652.826.826 0 010-1.652zm2.185 0a.826.826 0 110 1.652.826.826 0 010-1.652zm2.185 0a.826.826 0 110 1.652.826.826 0 010-1.652z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTalkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.006 15.927c1.339 0 2.372.359 3.075 1.067.703.71 1.059 1.745 1.059 3.09v1.04c0 .31-.25.56-.56.56H2.56a.562.562 0 01-.56-.56v-1.04c0-1.345.356-2.384 1.059-3.09s1.74-1.067 3.075-1.067h4.872zm.002 1.12H6.134c-1.028 0-1.795.247-2.28.737-.484.49-.734 1.264-.734 2.3v.479h10.9v-.479c0-1.036-.247-1.812-.732-2.3-.484-.487-1.252-.736-2.28-.736zM8.571 7.63c1.216 0 2.163.353 2.818 1.045.617.653.93 1.563.93 2.703s-.313 2.05-.93 2.703c-.655.698-1.605 1.048-2.818 1.048-1.215 0-2.162-.35-2.818-1.045-.619-.653-.93-1.563-.93-2.703s.314-2.05.93-2.703C6.41 7.983 7.356 7.63 8.571 7.63zm0 1.12c-1.745 0-2.627.886-2.627 2.628s.885 2.628 2.627 2.628c1.743 0 2.628-.886 2.628-2.628s-.885-2.627-2.628-2.627zM20.078 2c.891 0 1.614.723 1.614 1.613v3.902c0 .891-.723 1.614-1.614 1.614H16.79c-.314.496-.978 1.54-1.11 1.74-.29.445-.705.714-1.08.714a.754.754 0 01-.113-.009c-.414-.061-.75-.462-.75-.888v-1.56h-.11c-.87 0-1.529-.695-1.529-1.613v-3.9c0-.89.723-1.613 1.613-1.613h6.367zm0 1.12h-6.367a.494.494 0 00-.493.493v3.902c0 .247.127.493.41.493h.669c.308 0 .56.252.56.56v1.51c.328-.51 1.143-1.795 1.151-1.81a.56.56 0 01.474-.26h3.596a.494.494 0 00.493-.493V3.613a.494.494 0 00-.493-.493zm-5.37 1.611a.826.826 0 11.001 1.652.826.826 0 010-1.652zm2.186 0a.826.826 0 110 1.652.826.826 0 010-1.652zm2.184 0a.826.826 0 110 1.652.826.826 0 010-1.652z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTargetFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.888 12.476a.598.598 0 110-1.199h.462c-.272-5.056-4.182-5.918-5.905-6.047v.6a.598.598 0 01-.6.599.593.593 0 01-.599-.6v-.616c-1.56.04-5.781.689-6.039 6.064h.594c.336 0 .6.264.6.6a.6.6 0 01-.6.6h-.585c.344 5.15 4.431 5.845 6.03 5.918v-.48a.598.598 0 111.2 0v.466c1.688-.104 5.576-.919 5.896-5.902h-.454v-.003zm3.199-1.202c.336 0 .6.264.6.6a.6.6 0 01-.6.6h-1.544c-.344 6.159-5.414 7-7.095 7.103v1.535a.6.6 0 01-.6.6.593.593 0 01-.599-.6v-1.521c-1.518-.064-6.854-.75-7.232-7.12H2.602a.598.598 0 110-1.199h1.406C4.288 4.655 9.793 4.048 11.246 4V2.625a.598.598 0 111.2 0v1.4c1.72.12 6.806 1.025 7.103 7.247h1.538v.002zm-7.185-1.59c0 .703-.193 1.24-.569 1.599-.367.344-.888.52-1.56.52s-1.193-.176-1.552-.52c-.375-.361-.568-.896-.568-1.6 0-.694.193-1.232.568-1.59.362-.354.88-.527 1.552-.527s1.193.176 1.56.526c.378.359.569.897.569 1.591zm1.647 5.406v.711a.246.246 0 01-.25.238H8.247a.246.246 0 01-.24-.238v-.711c0-.673.207-1.247.607-1.664.432-.454 1.082-.687 1.863-.687h2.591c.785 0 1.432.233 1.863.687.403.417.619.994.619 1.664z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTargetLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.395 18.87c1.646-.062 6.203-.763 6.444-6.456h-.678a.41.41 0 010-.819h.684c-.188-5.76-4.76-6.52-6.45-6.596v.83c0 .227-.182.41-.41.41a.408.408 0 01-.409-.41v-.847h-.045c-1.511.014-6.377.547-6.545 6.613h.821a.41.41 0 010 .819h-.813c.27 5.88 5.065 6.442 6.582 6.464v-.698a.409.409 0 11.819 0v.69zm9.036-7.275a.41.41 0 010 .819h-1.776c-.26 6.576-5.824 7.221-7.263 7.275v1.76c0 .228-.182.41-.41.41a.408.408 0 01-.409-.41v-1.755h-.003c-1.205-.014-7.1-.471-7.39-7.28H2.54a.408.408 0 010-.816h1.627c.18-6.994 6.141-7.42 7.359-7.429h.05V2.56c0-.227.182-.409.41-.409.227 0 .409.182.409.41v1.62c1.489.068 7.067.777 7.269 7.415h1.767zM10.895 8.723c-.22.214-.329.564-.329 1.046 0 .483.11.833.329 1.044.21.204.555.305 1.018.305.468 0 .813-.103 1.026-.308.219-.21.328-.561.328-1.04 0-.483-.11-.833-.328-1.044-.213-.204-.558-.311-1.024-.311-.465 0-.81.107-1.02.308zm1.018 3.214c-.685 0-1.218-.18-1.588-.535-.384-.37-.577-.917-.577-1.63 0-.712.193-1.262.577-1.635.37-.356.903-.538 1.588-.538.687 0 1.22.18 1.592.538.385.373.58.923.58 1.632 0 .71-.195 1.26-.58 1.633-.37.356-.905.535-1.592.535zm3.04 3.509v-.152c0-.33-.07-.796-.396-1.136-.365-.375-.92-.454-1.32-.454h-2.643c-.4 0-.956.079-1.315.454-.325.34-.395.808-.395 1.136v.152h6.068zm-1.717-2.56c.805 0 1.464.243 1.91.706.41.426.625 1.015.625 1.702v.72a.246.246 0 01-.246.248H8.312a.245.245 0 01-.247-.247v-.724c0-.687.216-1.276.622-1.702.444-.463 1.103-.707 1.905-.707l2.644.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTargetRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.473 18.373c1.692-.11 5.597-.922 5.92-5.928h-.457a.602.602 0 010-1.204h.462c-.275-5.067-4.194-5.936-5.925-6.062v.603a.598.598 0 01-.633.568.6.6 0 01-.568-.568v-.625c-1.566.047-5.801.692-6.06 6.087h.598a.602.602 0 010 1.204h-.59c.348 5.171 4.448 5.869 6.05 5.936v-.476a.598.598 0 01.634-.57.6.6 0 01.568.57v.465zm8.67-7.132a.602.602 0 010 1.204H19.59c-.345 6.177-5.429 7.028-7.118 7.132v1.538a.598.598 0 01-.633.568.6.6 0 01-.568-.568v-1.53c-1.527-.061-6.877-.756-7.25-7.14H2.6a.602.602 0 010-1.204h1.41c.277-6.633 5.8-7.247 7.26-7.289v-1.38a.598.598 0 01.633-.57.6.6 0 01.569.57v1.403c1.728.12 6.831 1.028 7.126 7.269l1.546-.003zM10.969 8.798c-.204.2-.25.575-.25.852 0 .28.043.653.247.849.202.193.566.235.835.235.272 0 .636-.042.84-.235.166-.16.25-.446.25-.85 0-.405-.084-.691-.252-.85-.202-.197-.569-.239-.838-.239s-.63.042-.832.238zm.832 2.978c-.672 0-1.196-.177-1.557-.524-.378-.364-.569-.902-.569-1.602 0-.7.19-1.238.569-1.602.361-.35.888-.53 1.557-.53.672 0 1.196.18 1.563.53.378.364.572.904.572 1.602 0 .7-.19 1.238-.572 1.602-.364.347-.89.524-1.563.524zM9.07 14.98h5.47c-.01-.269-.08-.607-.319-.854-.297-.308-.773-.375-1.12-.375h-2.594c-.347 0-.82.064-1.118.372-.238.247-.308.588-.319.857zm4.028-2.271c.79 0 1.437.238 1.874.692.4.417.613.994.613 1.672v.708a.24.24 0 01-.24.241H8.266a.24.24 0 01-.24-.24v-.71c0-.677.21-1.254.607-1.671.437-.454 1.084-.695 1.871-.695l2.594.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.139 2.15a6.313 6.313 0 00-1.079.11c-.812.15-1.44.442-1.862.865-.426.426-.72 1.064-.871 1.89a6.328 6.328 0 00-.101 1.029.334.334 0 01-.023.056l-8.106 8.106a.334.334 0 01-.056.022 6.336 6.336 0 00-1.056.107c-.815.151-1.44.442-1.863.865-.426.426-.72 1.065-.871 1.891-.064.347-.098.7-.101 1.053-.003.202.05.398.151.572.168.28.471.45.796.45.188 0 .47-.055.74-.327l.669-.67.692.099.098.691-.667.67c-.112.11-.199.238-.258.38a.936.936 0 00.502 1.22c.143.061.297.092.45.09h.006a6.59 6.59 0 001.076-.107c.815-.152 1.44-.443 1.863-.866.426-.426.72-1.064.87-1.89a6.24 6.24 0 00.102-1.029.334.334 0 01.022-.056l8.107-8.106a.334.334 0 01.056-.023 6.336 6.336 0 001.056-.106c.812-.151 1.44-.443 1.862-.866.426-.425.72-1.064.872-1.89.064-.348.098-.7.1-1.054a1.082 1.082 0 00-.154-.571.928.928 0 00-.795-.45c-.188 0-.47.055-.74.327l-.67.67-.691-.099-.098-.692.672-.67a1.12 1.12 0 00.258-.38.936.936 0 00-.502-1.219 1.09 1.09 0 00-.45-.09l-.006-.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceInternetFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.248 19.132H2.744a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504c.308 0 .56.252.56.56 0 .308-.252.56-.56.56zm.594-10.677v4.938c0 1.115-.266 1.983-.787 2.583-.563.644-1.404.972-2.504.972H5.44c-1.098 0-1.94-.328-2.504-.97-.52-.602-.787-1.47-.787-2.585V8.455c0-1.115.266-1.984.787-2.583C3.5 5.228 4.34 4.9 5.441 4.9h13.11c1.098 0 1.94.328 2.504.972.52.6.787 1.468.787 2.583zm-11.67 4.403a.616.616 0 01.27-.297l3.82-1.781a.614.614 0 01.4-.017s.914.336 1.482.073c.566-.264.897-1.183.897-1.183.039-.112-.014-.162-.124-.112l-.551.258a.488.488 0 01-.387-.011l-.552-.294a.304.304 0 01-.145-.314l.128-.61a.493.493 0 01.241-.303l.552-.258c.11-.05.107-.126-.008-.165 0 0-.913-.336-1.482-.073s-.896 1.182-.896 1.182a.598.598 0 01-.27.294L9.725 11.03a.614.614 0 01-.4.017s-.914-.336-1.482-.073c-.569.263-.896 1.182-.896 1.182-.04.112.014.162.123.112l.552-.258a.488.488 0 01.386.011l.55.295c.108.064.167.19.145.313l-.129.61a.493.493 0 01-.24.303l-.553.258c-.109.05-.106.126.009.168 0 0 .913.336 1.481.073.57-.263.902-1.182.902-1.182z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceInternetLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.548 18.043a.28.28 0 01.28.28.28.28 0 01-.28.28H2.43a.28.28 0 01-.28-.28.28.28 0 01.28-.28h19.118zM18.825 4.9c1.014 0 1.784.294 2.291.874.477.546.72 1.353.72 2.398v4.938c0 1.045-.24 1.852-.72 2.398-.507.582-1.277.877-2.29.877H5.17c-1.014 0-1.785-.295-2.292-.874-.479-.55-.72-1.356-.72-2.4V8.17c0-1.044.241-1.85.72-2.397.507-.58 1.278-.874 2.292-.874h13.655zm0 .56H5.17c-1.673 0-2.451.863-2.451 2.715v4.938c0 1.851.778 2.714 2.45 2.714h13.656c1.672 0 2.451-.863 2.451-2.714V8.172c0-1.852-.779-2.712-2.45-2.712zm-3.574 1.4c.557 0 1.081.188 1.137.208.266.098.44.322.451.583.011.26-.143.498-.4.619l-.493.23-.073.35.313.168.493-.23a.713.713 0 01.311-.073c.202 0 .392.095.51.26a.672.672 0 01.067.622 3.62 3.62 0 01-.28.586c-.26.448-.566.756-.907.916a1.84 1.84 0 01-.77.154c-.516 0-1-.157-1.118-.199h-.011l-3.782 1.762-.008.008a3.723 3.723 0 01-.272.563c-.26.449-.566.757-.908.916a1.83 1.83 0 01-.77.154 3.65 3.65 0 01-1.14-.207c-.266-.098-.443-.322-.451-.582a.664.664 0 01.403-.62l.493-.23.073-.35-.314-.167-.493.23a.713.713 0 01-.31.072.617.617 0 01-.51-.26.672.672 0 01-.067-.622 3.62 3.62 0 01.28-.586c.26-.448.565-.756.907-.916.219-.1.48-.154.77-.154.516 0 1 .157 1.118.2h.011l3.78-1.763.007-.008c.076-.196.166-.384.272-.563.263-.448.569-.756.91-.916.219-.101.477-.154.77-.154zm0 .561c-.188 0-.376.028-.535.1-.566.267-.897 1.183-.897 1.183a.592.592 0 01-.268.297L9.73 10.785a.627.627 0 01-.227.042.525.525 0 01-.174-.028s-.47-.174-.947-.174a1.27 1.27 0 00-.535.101c-.565.266-.896 1.182-.896 1.182-.028.082-.005.132.05.132a.154.154 0 00.073-.02l.552-.257a.437.437 0 01.18-.037.447.447 0 01.207.045l.549.294a.306.306 0 01.145.314l-.128.61a.49.49 0 01-.241.303l-.552.258c-.107.053-.104.126.008.168l.044.015c.128.042.513.159.903.159.188 0 .375-.026.535-.101.566-.266.896-1.182.896-1.182a.598.598 0 01.27-.294l3.82-1.788a.627.627 0 01.227-.042c.059 0 .118.009.174.028 0 0 .47.174.946.174.188 0 .376-.025.535-.1.566-.267.897-1.183.897-1.183.028-.081.005-.131-.05-.131a.166.166 0 00-.073.02l-.552.257a.437.437 0 01-.18.036.447.447 0 01-.207-.045l-.549-.294a.31.31 0 01-.146-.313l.13-.611a.489.489 0 01.24-.305l.552-.258c.106-.05.104-.123-.008-.165l-.012-.004-.084-.028a3.054 3.054 0 00-.851-.142z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceInternetRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.248 18.012c.308 0 .56.252.56.56 0 .308-.252.56-.56.56H2.744a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h18.504zM18.551 4.9c1.098 0 1.94.328 2.504.972.524.6.787 1.468.787 2.583v4.938c0 1.115-.266 1.983-.787 2.583-.563.644-1.406.972-2.504.972H5.44c-1.098 0-1.94-.328-2.504-.97-.52-.602-.787-1.47-.787-2.585V8.455c0-1.115.266-1.984.787-2.583C3.5 5.228 4.34 4.9 5.441 4.9h13.11zm0 1.12l-13.11.003c-.773 0-1.313.194-1.658.588-.339.387-.513 1.009-.513 1.844v4.938c0 .835.174 1.457.513 1.846.345.395.888.588 1.658.588h13.11c.77 0 1.313-.193 1.658-.588.339-.39.512-1.011.512-1.846V8.455c0-.835-.173-1.457-.512-1.846-.345-.395-.888-.589-1.658-.589zm-3.3 1.09c.56 0 1.081.185 1.14.202.269.1.44.322.45.582.012.26-.142.499-.4.62l-.493.23-.073.35.314.167.493-.23a.713.713 0 01.311-.072.617.617 0 01.51.26c.123.174.146.4.067.622a3.62 3.62 0 01-.28.586c-.26.448-.566.756-.908.916-.218.1-.476.154-.77.154-.515 0-1-.157-1.117-.2h-.012l-3.781 1.763-.009.008a3.723 3.723 0 01-.271.563c-.264.448-.569.756-.908.922-.218.1-.479.154-.77.154a3.65 3.65 0 01-1.14-.208c-.266-.098-.443-.322-.451-.582a.664.664 0 01.403-.62l.493-.229.073-.35-.314-.168-.493.23a.713.713 0 01-.31.072.617.617 0 01-.51-.26.672.672 0 01-.068-.622c.076-.204.171-.398.28-.585.26-.449.566-.757.908-.916a1.83 1.83 0 01.77-.154c.516 0 1 .156 1.118.198h.011l3.779-1.761.008-.009c.076-.196.166-.384.272-.563.26-.448.566-.756.908-.916.218-.1.476-.154.77-.154zm0 .56c-.188 0-.376.028-.535.101-.566.266-.897 1.182-.897 1.182a.598.598 0 01-.268.294L9.73 11.032a.627.627 0 01-.227.042.525.525 0 01-.174-.028s-.47-.174-.947-.174a1.27 1.27 0 00-.535.1c-.565.267-.896 1.183-.896 1.183-.028.081-.005.132.05.132a.166.166 0 00.073-.02l.552-.258a.437.437 0 01.18-.036.447.447 0 01.207.045l.549.294a.31.31 0 01.145.313l-.128.611a.49.49 0 01-.241.303l-.552.257c-.107.054-.104.126.008.168l.012.004.084.028c.161.05.505.142.851.142.188 0 .375-.025.535-.1.566-.267.896-1.183.896-1.183a.598.598 0 01.27-.294l3.82-1.787a.627.627 0 01.227-.042c.059 0 .118.008.174.028l.043.015c.128.042.514.159.903.159.188 0 .376-.026.535-.101.566-.266.897-1.182.897-1.182.028-.082.005-.132-.05-.132a.166.166 0 00-.074.02l-.551.257a.437.437 0 01-.18.037.447.447 0 01-.207-.045l-.549-.294a.306.306 0 01-.146-.314l.13-.61a.49.49 0 01.24-.303l.552-.258c.106-.05.104-.123-.008-.165 0 0-.471-.174-.947-.174z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceLandlineFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.035 2.15c.86 0 1.717.415 2.535 1.235.305.297.568.633.787 1 .431.695.585 1.41.465 2.126-.12.717-.524 1.42-1.193 2.093a5.01 5.01 0 01-.499.445c-.09.151.025.591.496 1.275.19.278.421.572.67.865l4.442-4.442c.011-.317.045-.628.1-.939.158-.857.468-1.524.922-1.977.451-.449 1.107-.757 1.947-.913a6.44 6.44 0 011.087-.11c.552 0 1.014.294 1.207.765.193.47.073 1.006-.314 1.392l-.526.527.04.271.268.037.53-.527c.26-.263.593-.406.932-.406.42 0 .812.221 1.031.583.129.215.196.462.193.711a6.456 6.456 0 01-.103 1.065c-.154.857-.465 1.523-.92 1.977-.45.451-1.103.76-1.946.916a6.58 6.58 0 01-.966.107l-4.446 4.45c.173.147.338.28.493.401.925.714 1.37.82 1.555.82a.202.202 0 00.12-.027 5.04 5.04 0 01.446-.502c.818-.817 1.68-1.235 2.56-1.235.56 0 1.118.171 1.658.504a4.86 4.86 0 011 .787c.804.804 1.219 1.64 1.233 2.485.017.877-.395 1.762-1.227 2.63-.292.306-.698.597-.832.695l-.017.014-.025.017c-.56.386-1.266.582-2.101.582-1.28 0-2.82-.473-4.457-1.366-1.178-.644-2.374-1.483-3.577-2.507a6.14 6.14 0 01-.092.803c-.157.855-.468 1.521-.922 1.975-.45.451-1.103.76-1.946.916a6.443 6.443 0 01-1.09.11c-.552 0-1.014-.295-1.207-.765-.194-.47-.073-1.006.313-1.392l.527-.53-.04-.272-.27-.039-.527.527a1.318 1.318 0 01-.933.406c-.423 0-.815-.221-1.034-.583a1.34 1.34 0 01-.19-.708c.005-.356.039-.715.103-1.065.154-.857.465-1.524.92-1.977.447-.449 1.103-.757 1.943-.913a6.66 6.66 0 01.97-.107l-.12.007c-1.474-1.74-2.57-3.473-3.217-5.091-.835-2.09-.854-3.874-.059-5.028l.017-.025.014-.017c.095-.134.39-.54.695-.832.849-.812 1.717-1.224 2.577-1.224zm11.762 1.779c-.054 0-1.555.008-2.244.694-.634.634-.69 1.958-.694 2.204v.04a.951.951 0 01-.242.586l-7.784 7.781a.967.967 0 01-.585.24c-.054 0-1.555.007-2.244.696-.634.633-.69 1.957-.694 2.203v.04c0 .115.041.177.103.177.04 0 .09-.025.14-.076l.683-.68a.794.794 0 01.513-.2.59.59 0 01.07.006l.978.14a.49.49 0 01.39.39l.14.977a.767.767 0 01-.194.583l-.68.68c-.135.132-.088.244.1.244.05 0 1.552-.005 2.24-.695.634-.633.69-1.957.695-2.203v-.04c0-.188.107-.451.241-.586l7.788-7.781a.953.953 0 01.582-.241h.06c.286-.008 1.564-.075 2.184-.695.633-.633.69-1.957.694-2.203v-.04c0-.115-.041-.177-.103-.177-.04 0-.09.023-.14.076l-.68.68a.794.794 0 01-.513.2.59.59 0 01-.07-.006l-.978-.14a.49.49 0 01-.39-.39l-.14-.977a.767.767 0 01.194-.583l.68-.68c.135-.135.087-.244-.1-.244z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceLandlineLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.408 3.334c.297.291.554.62.767.975 1.042 1.675.19 3.098-.708 3.994a4.72 4.72 0 01-.519.457c-.257.307-.167 1.094 1.635 3.085l4.04-4.035a.438.438 0 00.079-.19c.003-.322.033-.644.092-.96.135-.743.392-1.309.765-1.682.367-.367.924-.621 1.653-.759.325-.061.652-.095.983-.1.325 0 .582.156.689.417.106.26.034.554-.193.781l-.678.678a.293.293 0 00-.04.118l.13.896.896.13a.293.293 0 00.117-.04l.681-.675c.199-.2.4-.241.535-.241.328 0 .661.252.664.734a5.526 5.526 0 01-.092.96c-.135.743-.393 1.309-.765 1.681-.367.367-.925.622-1.653.76a6.125 6.125 0 01-.986.097.455.455 0 00-.193.079l-4.042 4.04.125.113c1.902 1.696 2.661 1.777 2.962 1.525.14-.182.294-.356.46-.518.895-.897 2.318-1.748 3.993-.71.356.214.684.471.975.768 1.577 1.58 1.58 3.216.003 4.866a6.335 6.335 0 01-.815.68l-.022.017-.014.012c-.53.358-1.21.54-2.003.54-.715 0-1.518-.148-2.384-.445-1.926-.659-4.073-2.015-6.208-3.919l-.814.815a.438.438 0 00-.079.19 5.526 5.526 0 01-.092.961c-.135.743-.392 1.309-.765 1.681-.367.367-.924.622-1.653.76a6.125 6.125 0 01-.986.097c-.325-.003-.582-.16-.689-.42-.106-.26-.033-.555.194-.781l.675-.676a.255.255 0 00.039-.117l-.129-.897-.894-.128a.293.293 0 00-.117.039l-.678.678a.748.748 0 01-.535.24c-.328 0-.661-.254-.664-.739.003-.322.034-.644.092-.96.135-.743.393-1.309.765-1.681.367-.367.925-.622 1.653-.76.325-.058.655-.092.986-.097a.455.455 0 00.193-.079l.813-.812-.251-.284c-1.767-2.036-3.03-4.069-3.663-5.904s-.6-3.398.095-4.403a.061.061 0 01.012-.014l.016-.023c.255-.355.485-.63.681-.818 1.65-1.577 3.286-1.574 4.866.003zm8.787 1.345c-.05 0-1.552.008-2.244.692-.633.633-.69 1.957-.694 2.203v.04a.951.951 0 01-.241.586l-7.782 7.784a.967.967 0 01-.585.24c-.056 0-1.558.007-2.247.696-.633.633-.69 1.957-.694 2.203v.04c0 .115.041.177.103.177.04 0 .087-.025.14-.076l.684-.68a.794.794 0 01.512-.2.59.59 0 01.07.006l.978.14a.49.49 0 01.39.39l.14.977a.767.767 0 01-.194.583l-.68.68c-.135.132-.088.244.1.244.05 0 1.552-.005 2.241-.694.634-.634.69-1.958.694-2.204v-.04c0-.188.107-.451.242-.586l7.784-7.781a.967.967 0 01.585-.241h.06c.286-.008 1.564-.075 2.184-.695.634-.633.69-1.957.694-2.203v-.04c0-.115-.041-.177-.103-.177-.04 0-.09.023-.14.076l-.68.68a.794.794 0 01-.513.2.59.59 0 01-.07-.006l-.978-.14a.49.49 0 01-.39-.39l-.14-.977a.767.767 0 01.194-.583l.68-.68c.135-.135.087-.244-.1-.244zm-5.326 10.254l-2.135 2.133.296.26c1.974 1.706 3.936 2.923 5.697 3.526 1.65.566 3.028.555 3.88-.028l.036-.025c.328-.235.574-.442.737-.61.703-.737 1.039-1.426 1.028-2.107-.012-.653-.348-1.3-1.023-1.975a4.22 4.22 0 00-.862-.68l-.009-.006c-.535-.333-1.078-.457-1.61-.367-.564.095-1.132.429-1.698.994a4.721 4.721 0 00-.429.488c-.008.011-.02.022-.03.033-.41.379-1.014.356-1.801-.064-.564-.304-1.246-.816-2.077-1.572zM6.038 2.703c-.68-.013-1.37.323-2.106 1.029a5.409 5.409 0 00-.64.779c-.585.857-.593 2.24-.022 3.896.635 1.844 1.941 3.906 3.778 5.973l2.142-2.14-.182-.201c-.658-.743-1.115-1.36-1.392-1.88-.42-.784-.44-1.386-.064-1.795a.157.157 0 01.033-.03 4.44 4.44 0 00.488-.43c.563-.562.899-1.134.994-1.697.09-.532-.034-1.073-.367-1.61l-.006-.009a4.22 4.22 0 00-.68-.863c-.675-.675-1.322-1.01-1.975-1.022z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceLandlineRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.103 2.15c.849.017 1.69.432 2.496 1.239.305.3.569.635.79 1.002.431.698.588 1.418.468 2.138-.12.72-.527 1.428-1.2 2.1a4.76 4.76 0 01-.498.443c-.073.123.017.443.23.83.203.363.512.79.938 1.293l4.429-4.428c.011-.317.045-.628.1-.939.158-.857.469-1.523.922-1.977.451-.451 1.104-.76 1.947-.916a6.44 6.44 0 011.087-.11c.552.003 1.014.297 1.207.768.193.47.073 1.006-.314 1.392l-.526.527.04.269.27.039.527-.532c.26-.264.594-.406.933-.406.42 0 .813.22 1.031.582.129.216.196.462.193.712a6.444 6.444 0 01-.103 1.064c-.154.857-.465 1.524-.92 1.978-.45.448-1.103.756-1.946.913a6.58 6.58 0 01-.966.106l-4.436 4.439c.532.453.98.776 1.357.981.37.202.678.283.799.213a5.09 5.09 0 01.442-.498c.672-.673 1.381-1.079 2.101-1.2.72-.12 1.44.034 2.137.469.367.218.703.484 1.003.787.807.807 1.224 1.644 1.238 2.496.017.88-.398 1.77-1.23 2.641-.29.305-.7.6-.831.695l-.017.01c-.009.007-.017.012-.025.02-.541.373-1.219.57-2.014.583-.037.003-.068.003-.101.003-.74 0-1.563-.154-2.449-.462-1.748-.606-3.668-1.781-5.596-3.417a6.27 6.27 0 01-.093.792c-.156.854-.467 1.521-.921 1.975-.451.45-1.104.759-1.947.916a6.443 6.443 0 01-1.09.11c-.551 0-1.014-.295-1.207-.766-.193-.47-.073-1.002.314-1.389l.532-.527-.04-.271-.27-.04-.527.527c-.26.263-.594.406-.933.406-.423 0-.815-.22-1.034-.582a1.343 1.343 0 01-.193-.709c.006-.356.04-.714.104-1.064.154-.858.465-1.524.918-1.978.451-.448 1.107-.756 1.947-.913a6.71 6.71 0 01.97-.107l-.136.009c-1.631-1.927-2.802-3.849-3.405-5.594-.317-.919-.468-1.77-.454-2.53.017-.792.213-1.467.583-2.005l.016-.025.012-.017c.098-.135.392-.54.697-.832.874-.835 1.765-1.25 2.644-1.233zm11.58 13.13c-.487.083-.989.38-1.496.887-.143.14-.274.292-.395.448l-.058.065c-.197.18-.538.384-1.065.328-.314-.034-.658-.154-1.048-.365-.46-.25-.992-.636-1.615-1.172l-1.67 1.669c1.822 1.548 3.623 2.653 5.243 3.215 1.527.53 2.785.538 3.544.02l.033-.023a5.04 5.04 0 00.678-.56c.622-.65.93-1.272.922-1.846-.011-.557-.308-1.12-.91-1.723a3.85 3.85 0 00-.78-.616l-.016-.008c-.468-.292-.913-.395-1.367-.32zm.132-11.334h-.057c-.289.008-1.567.075-2.19.695-.7.7-.694 2.243-.694 2.243a.951.951 0 01-.241.586L6.85 15.254a.967.967 0 01-.585.241h-.062c-.286.008-1.565.075-2.185.695-.7.7-.694 2.243-.694 2.243 0 .115.042.177.103.177.04 0 .09-.025.14-.076l.684-.683a.794.794 0 01.512-.2.59.59 0 01.07.006l.978.14a.49.49 0 01.39.39l.14.977a.767.767 0 01-.194.583l-.68.68c-.135.132-.087.244.1.244.05 0 1.552-.005 2.241-.694.634-.634.69-1.958.694-2.204v-.04c0-.188.107-.45.242-.585l7.79-7.782a.953.953 0 01.582-.24h.021c.18-.003 1.568-.04 2.223-.695.634-.634.69-1.958.694-2.204v-.04c0-.115-.041-.177-.103-.177-.04 0-.09.023-.14.076l-.68.68a.794.794 0 01-.513.2.59.59 0 01-.07-.006l-.978-.14a.49.49 0 01-.39-.39l-.14-.977a.767.767 0 01.194-.583l.68-.68c.135-.135.087-.244-.1-.244zM6.084 3.271c-.575-.011-1.196.3-1.846.922a5.04 5.04 0 00-.56.677l-.026.034c-.512.756-.51 2.006.014 3.527.556 1.614 1.655 3.41 3.195 5.228l1.672-1.67c-.506-.593-.877-1.102-1.122-1.544-.22-.398-.347-.748-.386-1.068-.065-.537.143-.888.325-1.086a.422.422 0 01.064-.06 4.2 4.2 0 00.451-.394c.507-.507.804-1.009.888-1.496.076-.451-.028-.9-.32-1.367l-.008-.017a3.85 3.85 0 00-.616-.779c-.605-.599-1.168-.896-1.725-.907z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.34 2.727c.205 0 .253.12.11.263l-.734.734a.842.842 0 00-.21.628l.151 1.053c.028.202.218.39.42.42l1.053.151c.026.003.05.006.076.006.19 0 .426-.087.552-.216l.734-.734c.056-.056.106-.084.151-.084.067 0 .112.068.112.19 0 0 .006 1.665-.748 2.418-.742.742-2.361.748-2.417.748h-.003c-.205 0-.487.118-.63.26L8.565 16.96c-.143.142-.26.428-.26.633 0 0 .005 1.663-.749 2.417-.742.742-2.361.748-2.417.748h-.003c-.204 0-.252-.12-.11-.263l.737-.734a.842.842 0 00.21-.628l-.15-1.053a.53.53 0 00-.418-.42l-1.053-.151a.687.687 0 00-.076-.006.842.842 0 00-.552.216l-.736.736c-.056.056-.107.084-.152.084-.067 0-.112-.067-.112-.19 0 0-.005-1.664.748-2.42.742-.745 2.361-.751 2.417-.751h.003c.205 0 .488-.118.63-.26l8.393-8.39a1.04 1.04 0 00.26-.633s-.005-1.664.748-2.417c.745-.745 2.364-.751 2.417-.751m0-.577a6.336 6.336 0 00-1.056.106c-.781.146-1.375.42-1.767.813-.398.398-.672 1.003-.818 1.798a6.393 6.393 0 00-.1 1.03.486.486 0 01-.093.222l-8.39 8.39a.533.533 0 01-.22.092h-.004a6.336 6.336 0 00-1.056.106c-.781.146-1.375.42-1.767.813-.398.398-.673 1.003-.818 1.798a6.393 6.393 0 00-.101 1.03c.003.505.347.768.69.768.14 0 .35-.044.56-.252l.73-.73a.3.3 0 01.146-.048l.986.14.14.988a.31.31 0 01-.048.146l-.73.731c-.239.238-.314.544-.202.813.112.268.38.434.717.434h.003a6.336 6.336 0 001.056-.107c.781-.145 1.375-.42 1.767-.812.398-.398.672-1.003.818-1.798.062-.342.095-.687.1-1.031a.486.486 0 01.093-.222l8.39-8.389a.533.533 0 01.221-.092h.003a6.336 6.336 0 001.056-.107c.781-.145 1.375-.42 1.767-.812.398-.398.673-1.003.818-1.798.062-.342.095-.687.101-1.031-.003-.504-.347-.768-.689-.768-.14 0-.35.045-.56.252l-.731.731a.32.32 0 01-.143.048l-.986-.14-.14-.986a.31.31 0 01.047-.146l.731-.73c.239-.239.314-.544.202-.813-.112-.269-.38-.437-.717-.437h-.006z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceMobileFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.604 2.15H11.42c-1.107 0-1.91.272-2.454.832-.535.549-.796 1.353-.796 2.46v4.733l-2.717 2.717a3.026 3.026 0 00-3.202 3.793.839.839 0 001.407.375l.655-.652.311.045.045.31-.656.656a.84.84 0 00.379 1.406 3.017 3.017 0 003.776-2.499v2.225c0 2.215 1.061 3.29 3.249 3.29h7.185c2.187 0 3.249-1.075 3.249-3.29V5.44c.003-2.185-1.09-3.291-3.247-3.291zm-6.064 7.933L8.173 14.45H8.17v.003l-.885.885a2.182 2.182 0 01-2.675 2.675l.952-.953-.193-1.353-1.353-.193-.952.953a2.182 2.182 0 012.675-2.676l5.252-5.254a2.186 2.186 0 012.675-2.678l-.952.952.193 1.353 1.353.193.952-.952a2.182 2.182 0 01-1.543 2.675c-.367.104-.76.104-1.129.003zm3.196 9.039c-.168.17-.412.252-.714.252-.303 0-.546-.081-.714-.252-.155-.157-.241-.392-.241-.706 0-.655.375-.958.955-.958s.955.305.955.958c0 .317-.087.55-.24.706z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceMobileLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.055 2.15c1.998 0 2.97.986 2.97 3.011v13.656c0 1.039-.236 1.784-.723 2.277-.487.493-1.221.734-2.247.734h-7.184c-1.026 0-1.762-.241-2.25-.734-.487-.493-.722-1.238-.722-2.277l-.001-3.584-.282.284c.038.287.033.575-.017.859l-.045.211a2.746 2.746 0 01-3.37 1.964.56.56 0 01-.252-.939l.754-.753-.093-.659-.658-.095-.753.754a.56.56 0 01-.939-.252 2.746 2.746 0 013.034-3.426L7.9 10.555V5.161c0-2.053.944-3.011 2.97-3.011h7.184zm-.002.56H10.87c-1.712 0-2.41.709-2.41 2.451v4.834l1.645-1.643a2.825 2.825 0 01.016-.859l.046-.211a2.746 2.746 0 013.37-1.961.56.56 0 01.251.938l-.753.754.092.658.659.092.753-.753a.56.56 0 01.938.252 2.746 2.746 0 01-3.034 3.426l-3.986 3.985v4.144c0 .885.183 1.501.561 1.885.378.384.98.568 1.849.568h7.185c.868 0 1.473-.184 1.848-.568.376-.384.56-1 .56-1.885V5.16c0-1.717-.72-2.45-2.408-2.45zm-3.591 15.11c.504 0 .832.266.832.834 0 .275-.076.476-.21.614-.146.148-.36.22-.622.22-.264 0-.477-.072-.622-.22-.135-.138-.21-.342-.21-.614.003-.568.33-.835.832-.835zM12.826 5.785a2.182 2.182 0 00-2.112 2.75L5.459 13.79a2.186 2.186 0 00-2.675 2.678l.952-.952 1.353.193.193 1.35-.952.953a2.186 2.186 0 002.675-2.678l5.258-5.252a2.186 2.186 0 002.675-2.678l-.953.952-1.352-.193-.194-1.353.953-.952a2.272 2.272 0 00-.566-.073z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceMobileRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.604 2.15c2.157 0 3.25 1.106 3.25 3.291v13.11c0 2.215-1.062 3.29-3.25 3.29H11.42c-2.188 0-3.25-1.075-3.25-3.29l.002-2.236a3.029 3.029 0 01-3.78 2.51.84.84 0 01-.378-1.406l.655-.656-.045-.31-.31-.045-.656.65a.839.839 0 01-1.406-.375 3.03 3.03 0 013.204-3.793l2.714-2.717V5.441c0-1.106.26-1.91.796-2.46.543-.56 1.347-.831 2.454-.831h7.184zm0 1.12H11.42c-.79 0-1.33.163-1.653.493-.322.331-.476.88-.476 1.678L9.29 9.052l.802-.801a3.08 3.08 0 01.039-.832l.045-.205a3.03 3.03 0 012.93-2.266c.263 0 .526.034.781.107a.84.84 0 01.378 1.406l-.655.655.045.311.31.045.656-.655a.839.839 0 011.406.375 3.02 3.02 0 01-3.202 3.793L9.29 14.52v4.03c0 .807.158 1.36.48 1.687.322.328.86.484 1.65.484h7.184c.79 0 1.328-.16 1.65-.484.322-.325.48-.88.48-1.686V5.44c0-1.563-.597-2.17-2.13-2.17zm-3.582 14.188c.577 0 .955.305.955.958 0 .314-.087.546-.24.706-.169.17-.413.252-.715.252-.303 0-.546-.081-.714-.252-.155-.157-.241-.392-.241-.706.002-.655.378-.958.955-.958zm-1.916-11.67a2.188 2.188 0 00-2.112 2.751l-5.252 5.255a2.182 2.182 0 00-2.675 2.675l.952-.952 1.353.193.193 1.353-.952.953a2.186 2.186 0 002.675-2.678l.882-.884v-.004l.005-.001 4.368-4.366c.308.084.632.098.945.042l.187-.042a2.182 2.182 0 001.543-2.675l-.952.952-1.353-.193-.194-1.353.953-.953a2.272 2.272 0 00-.566-.072z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.422 3.27c.196 0 .246.115.106.255l-.711.712a.813.813 0 00-.205.61l.146 1.023c.028.196.21.378.406.406l1.023.146a.63.63 0 00.075.005.825.825 0 00.535-.207l.712-.711c.053-.054.103-.082.145-.082.065 0 .11.065.11.185 0 0 .005 1.614-.726 2.348-.72.72-2.291.725-2.344.725h-.003a.993.993 0 00-.61.252l-8.14 8.14a.994.994 0 00-.253.614s.006 1.613-.726 2.347c-.72.72-2.29.725-2.344.725h-.003c-.196 0-.244-.114-.106-.254l.711-.712a.813.813 0 00.205-.61l-.146-1.023a.507.507 0 00-.406-.406l-1.023-.146a.687.687 0 00-.075-.005.825.825 0 00-.535.207l-.712.711c-.053.054-.103.082-.145.082-.065 0-.11-.065-.11-.185 0 0-.005-1.614.726-2.348.72-.72 2.291-.725 2.344-.725h.003c.196 0 .47-.112.61-.252l8.14-8.14a.994.994 0 00.253-.614s-.006-1.613.726-2.347c.722-.72 2.294-.726 2.347-.726m.003-1.12a6.59 6.59 0 00-1.13.112c-.87.163-1.545.479-2.008.944-.467.468-.787 1.154-.95 2.04a6.577 6.577 0 00-.103.994L6.24 14.23a6.635 6.635 0 00-1.025.112c-.872.163-1.547.48-2.009.941-.468.468-.787 1.154-.95 2.04a6.7 6.7 0 00-.106 1.103 1.38 1.38 0 00.193.717c.219.365.611.586 1.037.586.342 0 .675-.146.938-.41l.572-.57.347.05.05.347-.571.572c-.39.386-.513.921-.317 1.395.197.473.659.767 1.21.77h.006a6.646 6.646 0 001.129-.112c.871-.163 1.546-.48 2.008-.944.468-.468.788-1.154.95-2.04.059-.327.095-.66.104-.994l7.991-7.991a6.635 6.635 0 001.025-.112c.872-.163 1.547-.48 2.009-.942.468-.467.787-1.154.947-2.039a6.7 6.7 0 00.106-1.103 1.38 1.38 0 00-.193-.718 1.206 1.206 0 00-1.037-.585c-.341 0-.675.146-.938.409l-.569.569-.347-.05-.05-.348.571-.569c.39-.39.513-.927.317-1.397-.197-.471-.656-.765-1.208-.768h-.005z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceTvFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.002 19.132H8.993a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h6.009c.308 0 .56.252.56.56 0 .308-.252.56-.56.56zm6.84-10.677v4.938c0 1.115-.266 1.983-.787 2.583-.563.644-1.404.972-2.504.972H5.44c-1.098 0-1.94-.328-2.504-.97-.52-.602-.787-1.47-.787-2.585V8.455c0-1.115.266-1.984.787-2.583C3.5 5.228 4.34 4.9 5.441 4.9h13.11c1.098 0 1.94.328 2.504.972.52.6.787 1.468.787 2.583zm-11.67 4.403a.616.616 0 01.27-.297l3.82-1.781a.614.614 0 01.4-.017s.914.336 1.482.073c.566-.264.897-1.183.897-1.183.039-.112-.014-.162-.124-.112l-.551.258a.488.488 0 01-.387-.011l-.552-.294a.304.304 0 01-.145-.314l.128-.61a.493.493 0 01.241-.303l.552-.258c.11-.05.107-.126-.008-.165 0 0-.913-.336-1.482-.073s-.896 1.182-.896 1.182a.598.598 0 01-.27.294L9.725 11.03a.614.614 0 01-.4.017s-.914-.336-1.482-.073c-.569.263-.896 1.182-.896 1.182-.04.112.014.162.123.112l.552-.258a.488.488 0 01.386.011l.55.295c.108.064.167.19.145.313l-.129.61a.493.493 0 01-.24.303l-.553.258c-.109.05-.106.126.009.168 0 0 .913.336 1.481.073.57-.263.902-1.182.902-1.182z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceTvLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.993 18.043a.28.28 0 01.28.28.28.28 0 01-.28.28H8.985a.28.28 0 01-.28-.28.28.28 0 01.28-.28h6.008zM18.817 4.9c1.014 0 1.784.294 2.291.874.476.546.72 1.353.72 2.398v4.938c0 1.045-.241 1.852-.72 2.398-.504.582-1.277.877-2.291.877H5.16c-1.014 0-1.784-.295-2.291-.874-.476-.55-.72-1.356-.72-2.4V8.17c0-1.044.24-1.85.72-2.397.507-.58 1.277-.874 2.291-.874h13.656zm0 .56H5.16c-1.672 0-2.45.863-2.45 2.715v4.938c0 1.851.778 2.714 2.45 2.714h13.656c1.672 0 2.45-.863 2.45-2.714V8.172c0-1.852-.778-2.712-2.45-2.712zm-3.575 1.404c.56-.003 1.084.184 1.138.201.266.098.44.322.45.583.012.26-.142.498-.4.619l-.493.23-.073.35.314.168.496-.23a.713.713 0 01.31-.073.617.617 0 01.51.26.674.674 0 01.068.623 3.83 3.83 0 01-.28.585c-.26.448-.566.756-.908.916-.218.1-.476.154-.77.154-.516 0-1-.157-1.118-.199h-.011l-3.782 1.762-.008.009a3.723 3.723 0 01-.272.563c-.26.448-.566.756-.907.916-.219.1-.48.154-.77.154a3.65 3.65 0 01-1.14-.208c-.267-.098-.443-.325-.452-.582-.008-.258.146-.496.404-.617l.493-.23.073-.35-.314-.167-.493.23a.713.713 0 01-.311.072.617.617 0 01-.51-.26.672.672 0 01-.067-.622c.076-.205.17-.398.28-.586.26-.448.566-.756.908-.916.218-.1.479-.154.77-.154.515 0 1 .157 1.118.2h.01l3.78-1.763.008-.008c.075-.196.165-.384.272-.563.263-.448.568-.756.907-.913.219-.101.476-.154.77-.154zm0 .557c-.187.003-.375.03-.532.104-.566.266-.896 1.182-.896 1.182a.592.592 0 01-.269.297l-3.82 1.781a.627.627 0 01-.228.042.525.525 0 01-.173-.028l-.012-.004-.084-.028a3.054 3.054 0 00-.851-.142c-.188 0-.375.026-.535.101-.566.266-.896 1.182-.896 1.182-.028.082-.006.132.05.132a.16.16 0 00.073-.02l.552-.257a.437.437 0 01.179-.037.447.447 0 01.207.045l.55.294a.31.31 0 01.145.314l-.129.608a.49.49 0 01-.24.302l-.553.258c-.106.053-.103.126.009.168 0 0 .47.174.946.174.188 0 .376-.025.535-.101.566-.266.897-1.182.897-1.182a.598.598 0 01.269-.294l3.82-1.785a.627.627 0 01.227-.042c.06 0 .118.009.174.028 0 0 .47.174.947.174.187 0 .375-.025.535-.1.566-.267.896-1.183.896-1.183.028-.081.006-.131-.05-.131a.166.166 0 00-.073.02l-.552.257a.437.437 0 01-.18.036.44.44 0 01-.206-.045l-.55-.294a.308.308 0 01-.148-.313l.129-.611a.489.489 0 01.24-.305l.553-.258c.106-.05.103-.123-.009-.165 0 0-.47-.174-.947-.174z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTechServiceTvRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.002 18.012c.308 0 .56.252.56.56 0 .308-.252.56-.56.56H8.993a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56h6.009zM18.55 4.9c1.098 0 1.94.328 2.504.972.524.6.787 1.468.787 2.583v4.938c0 1.115-.266 1.983-.787 2.583-.563.644-1.406.972-2.504.972H5.44c-1.098 0-1.94-.328-2.504-.97-.52-.602-.787-1.47-.787-2.585V8.455c0-1.115.266-1.984.787-2.583C3.5 5.228 4.34 4.9 5.441 4.9h13.11zm0 1.12l-13.11.003c-.773 0-1.313.194-1.658.588-.339.387-.513 1.009-.513 1.844v4.938c0 .835.174 1.457.513 1.846.345.395.888.588 1.658.588h13.11c.77 0 1.313-.193 1.658-.588.339-.39.512-1.011.512-1.846V8.455c0-.835-.173-1.457-.512-1.846-.345-.395-.888-.589-1.658-.589zm-3.3 1.09c.56 0 1.081.185 1.14.202.269.098.44.322.45.582.012.26-.142.499-.4.62l-.493.23-.073.35.314.167.493-.23a.713.713 0 01.311-.072.617.617 0 01.51.26c.123.174.146.4.067.622a3.62 3.62 0 01-.28.586c-.26.448-.566.756-.908.916-.218.1-.476.154-.77.154-.515 0-1-.157-1.117-.2h-.012l-3.781 1.763-.009.008a3.723 3.723 0 01-.271.563c-.264.448-.569.756-.908.919-.218.1-.479.154-.77.154a3.65 3.65 0 01-1.14-.207c-.266-.098-.443-.325-.451-.583-.009-.258.145-.496.403-.616l.493-.23.073-.35-.314-.168-.493.23a.713.713 0 01-.31.072.617.617 0 01-.51-.26.672.672 0 01-.068-.622c.076-.204.171-.398.28-.585.26-.449.566-.757.908-.916a1.83 1.83 0 01.77-.154c.516 0 1 .156 1.118.198h.011l3.779-1.761.008-.009c.076-.196.166-.384.272-.563.26-.448.566-.756.908-.916.218-.1.476-.154.77-.154zm0 .56c-.188 0-.376.028-.535.101-.566.266-.897 1.182-.897 1.182a.598.598 0 01-.268.294l-3.82 1.785a.627.627 0 01-.227.042.525.525 0 01-.174-.028s-.47-.174-.947-.174a1.27 1.27 0 00-.535.1c-.565.267-.896 1.183-.896 1.183-.028.081-.005.132.05.132a.166.166 0 00.073-.02l.552-.258a.437.437 0 01.18-.036.447.447 0 01.207.045l.549.294a.31.31 0 01.145.313l-.128.611a.49.49 0 01-.241.303l-.552.257c-.107.054-.104.126.008.168l.012.004.084.028c.161.05.505.142.851.142.188 0 .375-.025.535-.1.566-.267.896-1.183.896-1.183a.598.598 0 01.27-.294l3.82-1.787a.627.627 0 01.227-.042c.059 0 .118.008.174.028l.043.015c.128.042.514.159.903.159.188 0 .376-.026.535-.101.566-.266.897-1.182.897-1.182.028-.082.005-.132-.05-.132a.166.166 0 00-.074.02l-.551.257a.437.437 0 01-.18.037.447.447 0 01-.207-.045l-.549-.294a.306.306 0 01-.146-.314l.13-.61a.49.49 0 01.24-.303l.552-.258c.106-.05.104-.123-.008-.165 0 0-.471-.174-.947-.174z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTeddyBearFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.183 7.238c-.117-.109-.173-.266-.173-.473 0-.21.059-.37.173-.476.113-.104.275-.157.482-.157.208 0 .37.05.482.157.115.11.177.269.177.476 0 .207-.062.367-.177.473-.112.104-.274.157-.482.157-.207 0-.37-.053-.482-.157zm11.06 10.519a1.02 1.02 0 00-.306-.888c-.199-.185-.521-.283-.952-.283-.432 0-.751.095-.953.283-.207.193-.314.507-.314.938 0 .014-.008.028-.008.045l-.176 1.678c.002.367.092.641.271.806.174.16.46.244.843.244.381 0 .664-.084.84-.244a.917.917 0 00.11-.142c0-.003.569-1.816.644-2.437zM6.258 20.334c.18-.166.266-.437.272-.807l-.177-1.678c0-.014-.008-.028-.008-.045 0-.428-.107-.745-.311-.938-.204-.188-.524-.283-.955-.283-.432 0-.75.095-.953.283a1.03 1.03 0 00-.305.888c.073.624.644 2.434.644 2.434a.556.556 0 00.11.143c.176.16.456.244.84.244.384.005.667-.079.843-.241zM4.44 12.535c-1.092 1.236-.386 2.154.132 2.591l.162.135c.028.022.073.053.112.078.023 0 .048-.005.07-.005-.014-.196-.039-.387-.039-.591 0-1.138.207-2.124.574-2.978-.367.216-.764.496-1.01.77zm1.74-7.204a4.58 4.58 0 011.15-1.76c-.394-.156-.78-.036-1.145.376-.442.504-.434.967-.005 1.384zm5.35-1.91c-1.429 0-2.527.35-3.266 1.039C7.5 5.17 7.11 6.258 7.11 7.687c0 1.428.389 2.51 1.154 3.218.619.574 1.507.896 2.616.992V8.765a1.375 1.375 0 01-.412-.255 1.096 1.096 0 01-.314-.484s-.044-.152-.044-.267c0-.098.056-.238.056-.238.072-.148.148-.255.266-.367.271-.249.641-.378 1.095-.386.457.008.826.137 1.095.386.12.11.196.219.266.367 0 0 .056.143.056.238 0 .112-.042.267-.042.267a1.08 1.08 0 01-.313.484 1.32 1.32 0 01-.412.255v3.132c1.11-.093 1.997-.415 2.619-.992.765-.709 1.151-1.793 1.151-3.218 0-1.429-.386-2.516-1.151-3.227-.74-.69-1.838-1.04-3.266-1.04zm5.344.526c-.364-.412-.75-.532-1.145-.375.51.482.896 1.067 1.154 1.759.428-.417.437-.88-.009-1.384zm1.745 8.588c-.243-.274-.641-.554-1.01-.767.366.854.57 1.84.57 2.977 0 .205-.025.395-.039.591.023 0 .048.006.07.006a1.8 1.8 0 00.113-.078l.165-.135c.518-.44 1.224-1.358.131-2.594zm1.23 3.426c.451.42.684.96.703 1.7 0 .031-.005.149-.017.219a6.184 6.184 0 01-.042.269l-.65 2.456c-.005.028-.025.05-.036.079-.005.02-.005.039-.017.056-.005.011-.016.02-.022.03-.02.029-.037.054-.062.076-.09.143-.185.286-.308.4-.428.396-1.017.597-1.753.597-.737 0-1.328-.201-1.754-.596a2.032 2.032 0 01-.571-.975c-.995.546-2.23.818-3.743.818-.02 0-.03-.003-.05-.003-.017 0-.034.003-.05.003-1.513 0-2.746-.272-3.743-.818a2.011 2.011 0 01-.568.975c-.432.395-1.023.596-1.754.596-.737 0-1.325-.201-1.753-.596a1.968 1.968 0 01-.311-.4c-.02-.023-.042-.048-.06-.076-.007-.012-.019-.02-.024-.031-.009-.017-.009-.04-.017-.056-.011-.028-.028-.05-.037-.079l-.65-2.456s-.033-.188-.044-.27a1.881 1.881 0 01-.017-.218c.022-.736.25-1.277.703-1.7.065-.059.137-.104.21-.154-.916-.96-1.386-2.504.023-4.092.605-.684 1.913-1.457 2.641-1.563.053-.009.076-.028.134-.04-.01-.022 0 0-.008-.022-.269-.698-.412-1.496-.412-2.403 0-.35.037-.678.079-.998-.02-.01-.045-.005-.065-.016a2.568 2.568 0 01-.28-.194l-.14-.112c-.81-.683-1.347-1.94-.199-3.235 1.14-1.286 2.496-.986 3.322-.336.84-.41 1.84-.636 3.023-.636 1.182 0 2.182.227 3.022.636.827-.65 2.185-.95 3.322.336 1.149 1.294.611 2.552-.201 3.235l-.138.112a3.123 3.123 0 01-.282.194c-.02.01-.043.008-.068.016.042.323.079.647.079.998 0 .907-.143 1.705-.412 2.403l-.008.022c.056.012.078.031.131.04.728.106 2.037.88 2.644 1.563 1.407 1.588.936 3.128.02 4.092.07.048.146.095.21.154zm-5.454-8.566c-.207 0-.37-.053-.481-.157-.118-.106-.177-.266-.177-.473 0-.207.059-.37.177-.473.112-.107.277-.16.481-.16.208 0 .37.053.482.16.118.106.174.266.174.473 0 .207-.059.367-.174.473-.112.104-.274.157-.482.157z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTeddyBearLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.105 7.126c-.118-.109-.18-.271-.18-.484 0-.213.06-.378.18-.488.115-.106.28-.16.496-.16.213 0 .38.054.496.16.117.11.179.275.179.488 0 .213-.062.375-.18.484-.114.107-.282.16-.495.16-.213 0-.378-.056-.496-.16zm6.339.16c-.213 0-.381-.053-.496-.16-.12-.109-.18-.271-.18-.484 0-.213.06-.376.18-.485.115-.106.283-.162.496-.162.213 0 .38.053.496.162.12.11.179.272.179.485 0 .213-.062.375-.18.484-.117.107-.285.16-.495.16zm5.19 10.602a.907.907 0 00-.002-.157c-.034-.42-.149-.697-.378-.91-.25-.232-.63-.347-1.132-.347-.502 0-.885.117-1.135.35-.184.17-.302.412-.355.717l-.023.221c-.005.06-.014.112-.014.174 0 .02-.011.04-.014.059l-.179 1.692c.003.442.118.776.35.986.221.204.569.31 1.023.31.453 0 .795-.103 1.016-.31a.943.943 0 00.166-.213s.465-1.796.638-2.406a.573.573 0 00.04-.166zm-3.84-.683c.104-.4.289-.742.572-1.003a2.16 2.16 0 01.773-.445c.033-.306.061-.62.061-.953 0-1.546-.375-2.778-1.109-3.678-.146.185-.283.373-.457.535-.966.891-2.347 1.342-4.09 1.35v.003l-.022-.002-.02.002v-.002c-1.747-.009-3.122-.46-4.092-1.35-.17-.16-.31-.35-.456-.536-.734.9-1.11 2.132-1.11 3.678 0 .334.026.647.062.953.3.098.558.249.773.445.283.26.465.602.569 1.003a.38.38 0 01.045.134l.005.048c.012.05.012.106.02.16l.151 1.445c.933.815 2.25 1.218 4.028 1.218h.006v-.002h.042v.002h.005c1.78 0 3.096-.403 4.028-1.218l.154-1.445c.009-.054.009-.11.02-.16l.006-.048a.284.284 0 01.036-.134zM6.29 20.673c.23-.21.347-.544.35-.986l-.182-1.692c-.003-.02-.011-.04-.011-.06 0-.06-.009-.117-.014-.173l-.023-.221c-.056-.305-.17-.546-.355-.717-.252-.233-.633-.35-1.135-.35-.501 0-.882.117-1.131.347-.23.213-.345.493-.379.91-.002.026-.008.101-.002.157a.788.788 0 00.036.163c.17.61.639 2.406.639 2.406a.9.9 0 00.165.213c.224.207.566.31 1.02.31.453 0 .798-.103 1.022-.307zm-2.193-8.264c-1.297 1.457-.322 2.547.157 2.95.061.05.123.1.176.14.042.036.112.084.19.134.101-.008.194-.022.297-.022.028 0 .05.006.079.006-.023-.267-.05-.53-.05-.813 0-1.437.31-2.638.893-3.608-.577.292-1.375.802-1.742 1.213zm2.08-6.82c.25-.821.65-1.521 1.233-2.062.068-.062.154-.106.227-.165-.386-.27-1.053-.505-1.745.277-.765.857-.272 1.496.09 1.798l.115.096.08.056zm5.345-2.563c-1.512.005-2.686.38-3.487 1.12-.83.77-1.252 1.93-1.252 3.451 0 1.521.423 2.678 1.252 3.445.72.664 1.762 1.017 3.07 1.084V8.771a1.415 1.415 0 01-.644-.33 1.156 1.156 0 01-.345-.547 1.13 1.13 0 01-.025-.235c-.003-.104.022-.154.045-.205.07-.151.162-.288.286-.4.268-.247.635-.373 1.08-.39V6.66l.02.002.023-.002v.005c.442.017.81.14 1.081.39.123.114.213.249.286.4.022.05.047.101.045.205a1.13 1.13 0 01-.026.235c-.058.216-.182.4-.341.546a1.415 1.415 0 01-.645.33v3.356c1.306-.07 2.35-.423 3.068-1.084.832-.767 1.255-1.924 1.255-3.445s-.423-2.68-1.255-3.451c-.804-.74-1.978-1.118-3.49-1.12zm5.633.61c-.694-.781-1.358-.546-1.745-.277.073.059.157.104.224.165.583.54.984 1.241 1.233 2.062.028-.02.062-.042.084-.056l.115-.095c.358-.3.854-.939.09-1.799zm1.79 8.773c-.364-.411-1.162-.921-1.74-1.21.586.97.894 2.171.894 3.608 0 .283-.028.546-.053.812.028 0 .05-.005.079-.005.106 0 .199.014.297.022.075-.05.145-.098.19-.134l.18-.14c.478-.406 1.45-1.499.153-2.953zm1.594 5.4s0 .062.003.062c0 0-.003.085-.014.138-.011.078-.05.23-.053.249l-.661 2.482c-.003.008-.011.014-.014.022-.009.023-.009.048-.023.07a1.74 1.74 0 01-.355.46c-.398.367-.95.551-1.645.551-.697 0-1.249-.184-1.647-.549-.322-.294-.518-.691-.59-1.179v-.003c-1.029.642-2.343.961-3.992.961h-.054c-1.65 0-2.96-.32-3.991-.96v.002c-.076.485-.27.883-.594 1.18-.395.364-.95.548-1.644.548-.695 0-1.25-.184-1.645-.551a1.787 1.787 0 01-.355-.46c-.014-.022-.014-.047-.023-.07-.003-.008-.014-.014-.014-.022l-.66-2.482a4.506 4.506 0 01-.054-.25 1.052 1.052 0 01-.014-.137v-.061c.014-.709.232-1.21.655-1.608.124-.112.261-.204.412-.286-1.033-.924-1.6-2.448-.157-4.067.603-.675 2.18-1.585 2.852-1.723.02-.002.087-.022.087-.022-.3-.714-.468-1.555-.468-2.507 0-.415.034-.801.09-1.17-.054-.006-.11-.012-.157-.037-.025-.014-.073-.04-.093-.056a2.361 2.361 0 01-.199-.14l-.137-.112C4.63 5.449 4.13 4.28 5.2 3.076c1.076-1.207 2.35-.916 3.118-.303a.455.455 0 01.067.082c.849-.449 1.888-.687 3.115-.692V2.16h.042v.003c1.227.005 2.263.246 3.115.692.02-.028.04-.06.067-.082.768-.613 2.042-.902 3.118.303 1.073 1.204.571 2.37-.182 3.006l-.138.112a1.909 1.909 0 01-.288.196c-.048.022-.104.028-.157.036.056.37.09.756.09 1.171 0 .952-.171 1.793-.468 2.507 0 0 .064.02.087.022.67.14 2.249 1.048 2.851 1.723 1.443 1.62.877 3.143-.157 4.067.149.082.292.174.412.286.418.398.633.902.647 1.608z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTeddyBearRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M8.18 7.238c-.117-.109-.173-.266-.173-.473 0-.21.056-.37.174-.479.112-.104.274-.157.481-.157.208 0 .37.053.482.157.115.11.177.269.177.476 0 .208-.062.367-.177.474-.112.103-.277.156-.482.156-.207.003-.366-.05-.481-.154zm11.057 10.513a1.012 1.012 0 00-.306-.885c-.199-.185-.518-.28-.95-.28-.43 0-.75.095-.952.283-.207.193-.313.507-.313.935 0 .014-.009.028-.009.045l-.176 1.675c.003.37.092.642.272.807.173.16.459.244.843.244.38 0 .664-.082.84-.244.042-.042.076-.093.11-.143-.004-.003.565-1.812.64-2.437zm-3.751-.653c.104-.459.308-.846.63-1.142.2-.185.434-.32.695-.423.025-.255.05-.513.05-.79 0-1.345-.308-2.426-.885-3.247-.092.104-.165.224-.269.32-.991.918-2.397 1.383-4.179 1.383-1.779 0-3.188-.465-4.176-1.384-.104-.095-.18-.212-.272-.319-.574.82-.885 1.9-.885 3.247 0 .277.025.535.05.79.26.103.496.24.695.423.32.296.526.683.63 1.142.011.034.03.065.034.101l.002.028c.006.037.009.079.012.115l.145 1.384c.863.728 2.07 1.092 3.715 1.092.016 0 .033-.003.05-.003.02 0 .03.003.05.003 1.642 0 2.852-.367 3.712-1.092l.146-1.384c.005-.036.008-.078.014-.115l.002-.028c.003-.036.023-.064.034-.1zm-9.23 3.233c.18-.165.266-.437.272-.807l-.176-1.675c0-.014-.012-.03-.012-.045 0-.428-.106-.745-.31-.935-.205-.188-.524-.283-.956-.283-.431 0-.75.095-.95.28-.198.185-.35.487-.305.885.076.625.645 2.434.645 2.434.03.053.064.104.109.143.176.16.456.244.84.244.387.003.67-.081.843-.241zm-1.815-7.798c-1.092 1.235-.386 2.154.132 2.59l.162.135c.028.022.076.053.112.078a.59.59 0 01.07-.005c-.01-.199-.039-.384-.039-.591 0-1.14.207-2.123.574-2.978-.367.213-.764.496-1.01.77zm1.74-7.202a4.532 4.532 0 011.148-1.756c-.395-.157-.781-.037-1.146.375-.44.499-.434.964-.002 1.38zm5.347-1.91c-1.429 0-2.527.347-3.266 1.039-.765.711-1.154 1.798-1.154 3.227 0 1.428.39 2.51 1.154 3.218.619.574 1.504.896 2.616.989V8.762a1.375 1.375 0 01-.412-.255 1.096 1.096 0 01-.313-.484s-.045-.152-.045-.266c0-.098.056-.238.056-.238.073-.149.148-.255.266-.367.272-.25.641-.379 1.095-.387.457.008.827.137 1.095.387.12.109.197.218.27.367 0 0 .055.14.055.238 0 .112-.042.266-.042.266a1.08 1.08 0 01-.313.484c-.118.11-.258.19-.412.255v3.132c1.11-.093 1.997-.415 2.616-.989.765-.709 1.151-1.79 1.151-3.218 0-1.429-.386-2.516-1.15-3.227-.74-.69-1.838-1.04-3.267-1.04zm5.345.526c-.365-.412-.751-.53-1.146-.375.51.479.896 1.067 1.151 1.756.429-.414.437-.88-.005-1.38zm1.742 8.586c-.244-.275-.642-.555-1.011-.768.367.854.571 1.838.571 2.978 0 .204-.025.392-.04.59a.59.59 0 01.07.006 1.8 1.8 0 00.113-.078l.165-.135c.518-.442 1.224-1.358.132-2.593zm1.23 3.423c.453.42.683.96.703 1.697 0 .03-.006.148-.017.218-.009.079-.042.27-.042.27l-.65 2.456c-.006.028-.025.05-.036.078-.006.02-.006.04-.017.056-.009.012-.02.02-.023.031a.52.52 0 01-.061.076c-.09.143-.185.286-.308.4-.429.395-1.017.597-1.754.597-.734 0-1.328-.202-1.753-.597a2.02 2.02 0 01-.572-.974c-.994.546-2.23.818-3.74.818-.019 0-.03-.003-.05-.003-.017 0-.03.003-.05.003-1.513 0-2.745-.272-3.743-.818-.106.386-.288.717-.568.974-.432.395-1.02.597-1.754.597s-1.325-.202-1.753-.597a1.894 1.894 0 01-.311-.4c-.02-.025-.042-.048-.059-.076-.005-.011-.02-.02-.025-.03-.008-.02-.008-.04-.017-.057-.011-.028-.028-.05-.036-.078l-.647-2.457s-.037-.187-.045-.269a1.881 1.881 0 01-.017-.218c.022-.737.25-1.277.703-1.697.065-.06.137-.107.207-.155-.916-.96-1.386-2.5.023-4.09.605-.683 1.913-1.456 2.638-1.562.054-.009.076-.028.135-.04l-.009-.022c-.268-.697-.414-1.496-.414-2.4 0-.353.036-.675.078-.998-.02-.01-.044-.005-.064-.016a2.568 2.568 0 01-.28-.194l-.14-.112c-.81-.683-1.348-1.94-.2-3.235 1.14-1.286 2.497-.986 3.323-.336.84-.41 1.84-.636 3.022-.636 1.182 0 2.182.227 3.023.636.826-.65 2.182-.95 3.32.336 1.145 1.294.61 2.552-.2 3.235l-.137.112a3.036 3.036 0 01-.283.194c-.02.01-.042.008-.064.016.039.323.078.645.078.998 0 .907-.143 1.703-.412 2.4l-.008.023c.056.01.078.03.132.039.728.106 2.036.88 2.641 1.563 1.406 1.588.936 3.129.02 4.09.072.05.148.095.213.154zm-5.451-8.564c-.208 0-.37-.053-.482-.156-.118-.107-.177-.266-.177-.477 0-.207.06-.367.177-.473.112-.106.277-.16.482-.16.207 0 .37.054.481.16.118.106.174.266.174.476 0 .208-.056.367-.174.474-.112.106-.274.156-.481.156z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTheaterFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.016 13.457a1.35 1.35 0 00.117-.274c-.79.52-2.201 1.199-4.213 1.131.437.328 1.19.592 2.406.255.844-.235 1.412-.61 1.69-1.112zm.66-1.574a.427.427 0 01.306.291c.011.034.238.846-.233 1.692-.392.706-1.131 1.216-2.196 1.516-.481.134-.91.193-1.29.193-2.007 0-2.654-1.58-2.662-1.6a.424.424 0 01.059-.414.415.415 0 01.386-.16c3.449.451 5.21-1.378 5.227-1.397a.42.42 0 01.404-.12zm-6.282-.594c.131 0 .274-.008.411-.025.46-.05.894-.21.894-.21s.305-.162.034-.39c0 0-.286-.33-.762-.33-.278 0-.616.11-1.006.46-.414.37-.064.495.429.495zm1.594.558a5.16 5.16 0 01-1.087.257c-.177.02-.348.031-.507.031-.74 0-1.208-.24-1.387-.714-.078-.202-.19-.723.398-1.255.499-.448 1.025-.675 1.566-.675.6 0 1.09.297 1.353.571.263.247.392.572.358.902-.045.415-.336.706-.594.84l-.1.043zm1.991-2.05c-.199.35-.07.475.193.475.213 0 .516-.08.796-.196.437-.173.81-.456.81-.456s.249-.25-.099-.423c0 0-.26-.182-.61-.182-.328 0-.737.16-1.09.781zm.193 1.319c-.621 0-.902-.365-.991-.521-.143-.247-.247-.656.07-1.216.594-1.05 1.398-1.207 1.82-1.207.5 0 .88.201 1.034.294.437.238.558.596.588.792.084.51-.224.863-.319.958a1.13 1.13 0 01-.09.079 4.793 4.793 0 01-1.002.566c-.294.115-.723.255-1.11.255zm10.647 2.322c.13-.236.113-.504-.047-.745-.177-.303-.658-.76-1.493-.76-.252 0-.521.043-.798.127-.715.215-.74.68-.732.818.042.669.97.854 1.32.924.428.084.849.092.893.092h.009c.028 0 .053 0 .081-.002.339-.031.627-.202.767-.454zm-2.607 4.131a1.64 1.64 0 00.12-1.378c-.204-.563-.714-1.039-1.513-1.414-.958-.454-1.759-.48-2.372-.322a3.263 3.263 0 01-.84 1.294c2.8.21 3.846 1.74 3.888 1.8a.434.434 0 00.31.188.418.418 0 00.406-.168zm-7.765-1.19c2.812-.787 4-1.83 3.137-5.614-.53-2.319-1.395-4.036-1.902-4.904-.613 1.078-1.714 1.916-3.235 2.448-.824.286-2.661.386-4.443-.4.042 1.153.208 3.52.863 5.28 1.112 2.974 2.832 3.955 5.58 3.19zm4.188-5.896c-.098-.003-.171.014-.252.022.005.025.014.048.016.076.157.683.241 1.282.275 1.829.426.21.849.344.899.358a1.58 1.58 0 00.291.051c.34.022.65-.073.855-.255a.68.68 0 00.218-.667c-.061-.473-.554-1.308-2.061-1.403a2.141 2.141 0 00-.241-.011zm7.969-.972a.425.425 0 01.232.38c0 .107-.03 2.659-1.434 5.877-1.14 2.62-2.412 3.55-3.989 3.55-.79 0-1.655-.233-2.619-.606-1.269-.487-2.137-1.157-2.678-2.022-.437.187-.918.353-1.445.501a6.922 6.922 0 01-1.868.28c-2.171 0-3.723-1.316-4.72-3.986-.95-2.549-.933-6.123-.933-6.274a.428.428 0 01.21-.364.412.412 0 01.417 0c1.79 1.033 3.732.89 4.393.66 1.117-.389 2.554-1.17 3.05-2.669a.418.418 0 01.737-.115c.05.068.95 1.32 1.74 3.471a22.55 22.55 0 01.963-1.426.41.41 0 01.437-.154.42.42 0 01.314.345c.173 1.137 1.787 2.563 2.747 2.933.992.38 2.936.476 4.003-.34a.422.422 0 01.443-.041z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTheaterLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.019 13.456c.053-.093.09-.185.12-.275-.79.521-2.188 1.205-4.213 1.132.437.33 1.19.594 2.406.255.84-.235 1.41-.61 1.687-1.112zm.66-1.574a.427.427 0 01.306.29c.011.034.238.847-.232 1.693-.392.706-1.132 1.216-2.196 1.512-.482.135-.91.194-1.292.194-2.006 0-2.653-1.58-2.661-1.6a.424.424 0 01.059-.414.412.412 0 01.386-.16c3.446.454 5.21-1.381 5.228-1.398a.43.43 0 01.403-.117zm-6.285-.594c.132 0 .274-.009.414-.026.46-.053.891-.21.891-.21s.306-.162.034-.389c0 0-.286-.33-.765-.33-.277 0-.616.109-1.003.459-.409.37-.059.496.429.496zm1.597.557c-.054.02-.544.196-1.087.258-.177.02-.348.03-.507.03-.74 0-1.205-.24-1.387-.716-.076-.2-.19-.723.398-1.255.496-.446 1.022-.673 1.566-.673.6 0 1.09.297 1.353.572.263.246.395.571.358.899-.045.415-.336.706-.59.84l-.104.045zm1.991-2.05c-.199.35-.067.476.194.476.212 0 .515-.084.798-.196.437-.174.81-.457.81-.457s.249-.25-.099-.423c0 0-.26-.182-.613-.182-.328 0-.74.163-1.09.782zm.194 1.319c-.622 0-.902-.364-.992-.521-.143-.247-.247-.658.07-1.216.594-1.05 1.395-1.207 1.82-1.207.5 0 .88.202 1.034.294.44.238.558.597.589.793.084.51-.222.863-.32.958a1.197 1.197 0 01-.09.078 4.793 4.793 0 01-1.002.566c-.294.115-.723.255-1.11.255zm4.053 4.112c1.608.095 2.7.72 3.336 1.236-.1-.426-.431-.933-1.35-1.286-.941-.364-1.58-.205-1.986.05zm6.41.202c.887-2.04 1.198-3.818 1.305-4.782-1.353.58-3.104.412-4.082.034-.96-.37-2.372-1.513-2.992-2.743-.22.328-.501.762-.792 1.255-.009.014-.023.023-.034.037.104.336.199.692.289 1.061.095-.025.187-.053.308-.061.087-.006.168-.011.25-.011 1.526 0 2.078 1.042 2.167 1.65a1.06 1.06 0 01-.179.88 1.05 1.05 0 01-.849.4c-.115 0-.196-.014-.196-.014l-.098-.023a5.567 5.567 0 01-1.034-.442c-.005-.003-.005-.009-.01-.012a5.15 5.15 0 01-.169 1.547c.54-.135 1.202-.118 1.992.185.863.33 1.445.829 1.731 1.482.375.86.07 1.658.059 1.691a.418.418 0 01-.34.264c-.016.003-.033.003-.05.003a.417.417 0 01-.341-.177c-.05-.073-1.33-1.793-4.272-1.574-.023.003-.042-.011-.065-.014a4.334 4.334 0 01-.364.244c.448.675 1.165 1.21 2.224 1.616 2.586.994 4.073.871 5.541-2.496zm-10.189.95c2.813-.788 4-1.83 3.137-5.611-.529-2.32-1.395-4.037-1.902-4.905C10.072 6.94 8.971 7.778 7.45 8.31c-.82.288-2.658.39-4.443-.4.042 1.153.208 3.52.863 5.28 1.112 2.972 2.832 3.952 5.58 3.188zm4.062-5.275c.03.157.056.31.078.46.143.125.33.254.533.369.409.232.857.37.857.37a.5.5 0 00.056.003c.095 0 .266-.031.201-.283 0 0-.095-.958-1.341-.958a2.2 2.2 0 00-.188.008.775.775 0 00-.196.03zm8.095-1.594a.425.425 0 01.233.38c0 .107-.03 2.66-1.434 5.878-1.14 2.619-2.412 3.549-3.99 3.549-.79 0-1.655-.232-2.618-.605-1.27-.487-2.138-1.157-2.678-2.023-.437.188-.916.353-1.446.502a6.926 6.926 0 01-1.871.28c-2.171 0-3.723-1.317-4.72-3.986-.953-2.55-.933-6.12-.933-6.272a.428.428 0 01.21-.364.431.431 0 01.42 0c1.79 1.033 3.732.89 4.39.66 1.118-.389 2.555-1.17 3.05-2.669a.422.422 0 01.334-.283.41.41 0 01.403.168c.05.068.95 1.32 1.74 3.471a22.97 22.97 0 01.963-1.426.423.423 0 01.437-.157c.163.042.289.18.314.345.174 1.137 1.787 2.563 2.748 2.933.995.38 2.939.476 4.003-.34a.428.428 0 01.445-.041zm-2.686 3.602s-.221-.515-.9-.515c-.17 0-.369.03-.601.112-.575.202-.012.454.557.585.398.09.801.096.801.096s.3-.031.143-.278zm-1.779-1.199c.306-.106.6-.16.877-.16.919 0 1.448.575 1.642.959.173.305.193.647.05.944-.151.32-.468.532-.846.574-.03.003-.059.006-.09.006h-.008c-.05 0-.51-.009-.98-.118-.384-.09-1.404-.322-1.449-1.168-.008-.177.023-.765.804-1.037z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTheaterRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.033 13.42c.05-.09.087-.179.117-.266-.773.504-2.134 1.174-4.126 1.101.429.322 1.166.577 2.356.247.826-.23 1.381-.594 1.653-1.082zm.947-1.249c.01.034.232.824-.227 1.647-.384.686-1.107 1.182-2.152 1.474a4.71 4.71 0 01-1.263.187c-1.963 0-2.6-1.538-2.605-1.554a.411.411 0 01.059-.404.397.397 0 01.378-.154c3.373.443 5.1-1.342 5.118-1.361a.421.421 0 01.395-.118.405.405 0 01.297.283zm-6.454-.86c.129 0 .269-.008.406-.025.448-.05.874-.205.874-.205s.3-.156.034-.378c0 0-.28-.322-.748-.322-.272 0-.603.107-.984.446-.403.364-.061.484.418.484zm1.563.54c-.053.02-.532.191-1.065.25a4.48 4.48 0 01-.495.03c-.723 0-1.182-.234-1.356-.697-.076-.193-.188-.703.39-1.218.487-.434 1.002-.656 1.531-.656a1.9 1.9 0 011.325.555c.258.238.387.555.35.877-.044.403-.327.686-.58.818a.971.971 0 01-.1.042zm1.95-1.99c-.194.34-.068.464.19.464.21 0 .504-.081.781-.19.426-.171.793-.446.793-.446s.244-.243-.095-.409c0 0-.255-.176-.6-.176-.324-.003-.725.154-1.07.756zm.19 1.282c-.61 0-.882-.356-.972-.507-.14-.24-.241-.639.067-1.182.583-1.022 1.367-1.176 1.782-1.176.487 0 .86.196 1.01.288.43.233.547.58.578.77.081.493-.219.838-.311.933a1.046 1.046 0 01-.087.076 4.716 4.716 0 01-.983.549c-.286.115-.706.25-1.084.25zm10.053 4.112a16.39 16.39 0 001.221-4.258c-1.325.437-2.907.264-3.82-.086-.894-.342-2.174-1.345-2.869-2.468-.17.26-.367.568-.568.905.092.302.176.621.257.95.034-.004.065-.012.101-.015.084-.005.165-.011.244-.011 1.496 0 2.034 1.014 2.123 1.605.093.423-.067.714-.176.854-.19.25-.493.39-.83.39-.114 0-.193-.014-.193-.014l-.098-.023a5.912 5.912 0 01-.815-.33 5.18 5.18 0 01-.157 1.361c.488-.078 1.062-.045 1.734.213.846.322 1.415.81 1.695 1.44.37.837.07 1.613.056 1.644a.406.406 0 01-.333.255c-.017.003-.034.003-.05.003a.407.407 0 01-.334-.174c-.048-.067-1.238-1.627-3.933-1.53a4.26 4.26 0 01-.378.28c.423.539 1.059.978 1.963 1.326 2.454.938 3.782.826 5.16-2.317zm-9.84.81c2.68-.745 3.74-1.675 2.927-5.216-.46-2-1.174-3.524-1.67-4.417-.647.946-1.697 1.689-3.092 2.173-.79.275-2.493.381-4.199-.271.059 1.187.244 3.218.82 4.753 1.057 2.81 2.617 3.7 5.214 2.978zm3.86-.978c-.014.02-.026.042-.037.062 1.538.106 2.586.7 3.2 1.196-.099-.415-.421-.908-1.32-1.25-.849-.327-1.446-.224-1.843-.008zm.479-3.333c.092.064.187.126.288.182.4.227.84.358.84.358a.5.5 0 00.057.003c.092 0 .26-.03.196-.274 0 0-.093-.933-1.314-.933-.056 0-.112.003-.17.005.041.23.075.451.103.659zm7.711-2.356c.21.104.342.32.342.555 0 .106-.034 2.627-1.42 5.795-1.157 2.639-2.49 3.569-4.101 3.569-.804 0-1.675-.23-2.63-.594-1.216-.465-2.065-1.098-2.625-1.908a11.65 11.65 0 01-1.283.435 7.204 7.204 0 01-1.907.282c-2.205 0-3.782-1.327-4.793-4.014-.944-2.515-.927-6.028-.925-6.176a.62.62 0 01.925-.53c1.692.97 3.512.844 4.129.628 1.05-.364 2.4-1.09 2.857-2.468a.62.62 0 01.49-.414.614.614 0 01.594.246c.045.062.837 1.16 1.582 3.045.41-.627.715-1.036.734-1.059a.615.615 0 011.101.277c.154 1.006 1.661 2.348 2.56 2.692.905.348 2.751.437 3.72-.302a.626.626 0 01.65-.059zm-2.723 3.686s-.215-.501-.882-.501c-.168 0-.361.03-.588.11-.563.195-.011.442.546.57.39.087.784.093.784.093s.295-.03.14-.272zM17.03 11.92c.297-.104.585-.154.857-.154.9 0 1.417.557 1.608.933a.984.984 0 01.05.918c-.148.311-.459.519-.829.56-.028.003-.059.003-.087.003h-.008c-.05 0-.499-.008-.96-.112-.376-.086-1.373-.313-1.418-1.137-.009-.173.02-.748.787-1.011z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThrowLightFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M2.72 21.849a.56.56 0 01-.395-.958l4.633-4.633a.561.561 0 01.793.793l-4.636 4.633a.55.55 0 01-.395.165zm5.037.003a.56.56 0 01-.4-.953l2.293-2.35a.562.562 0 01.827.76c-.009.008-.014.016-.023.022L8.16 21.684a.561.561 0 01-.403.168zM2.77 16.866a.56.56 0 01-.4-.953l2.293-2.35a.561.561 0 01.801.785l-2.294 2.35a.55.55 0 01-.4.168zM20.46 2.16h-7.586a1.401 1.401 0 00-.991 2.392l.697.698-6.221 6.22a1.402 1.402 0 000 1.981l4.196 4.2a1.402 1.402 0 001.98 0l6.222-6.225.708.712c.26.263.617.411.99.411.772 0 1.4-.627 1.402-1.4V3.56c0-.774-.624-1.401-1.397-1.401z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThrowLightLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.327 17.294a.837.837 0 01-.594-.244l-3.8-3.801a.84.84 0 010-1.188l7.652-7.655-1.294-1.292a.561.561 0 01.395-.958h7.585c.308 0 .56.252.56.56v7.586c0 .308-.252.56-.56.56a.55.55 0 01-.395-.165l-1.305-1.305-7.65 7.658a.83.83 0 01-.594.244zm2.361-14.575l1.292 1.292a.561.561 0 010 .792l-7.653 7.653a.279.279 0 000 .395l3.801 3.801c.11.11.286.11.395 0l7.653-7.653a.55.55 0 01.79 0l1.302 1.303V2.719h-7.58zM2.436 21.823a.28.28 0 01-.199-.48l4.916-4.915a.282.282 0 01.395.006.282.282 0 010 .389l-4.913 4.919a.29.29 0 01-.199.08zm5.037.003a.28.28 0 01-.2-.48c1.046-1.044 2.558-2.613 2.575-2.63a.28.28 0 11.417.373c-.005.006-.008.011-.014.014-.014.017-1.532 1.588-2.58 2.639a.285.285 0 01-.198.084zM2.487 16.84a.28.28 0 01-.2-.48c1.046-1.044 2.558-2.616 2.575-2.63a.28.28 0 01.4.39c-.013.017-1.532 1.588-2.58 2.638a.278.278 0 01-.195.082z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThrowLightRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.456 3.28a.28.28 0 01.28.28v7.586a.28.28 0 01-.28.28h-.003a.274.274 0 01-.196-.084l-1.292-1.291-.204-.205c-.07.062-.14.124-.204.194l-6.816 6.817a.279.279 0 01-.395 0L7.148 12.66a.279.279 0 010-.395l6.815-6.815a.279.279 0 000-.395L12.67 3.762a.279.279 0 01.2-.476h7.585m0-1.126H12.87a1.401 1.401 0 00-.991 2.392l.697.698-6.221 6.22a1.402 1.402 0 000 1.981l4.196 4.2a1.402 1.402 0 001.98 0l6.222-6.225.708.712c.26.263.617.411.99.411.772 0 1.4-.627 1.402-1.4V3.56c0-.774-.624-1.401-1.397-1.401zM2.716 21.849a.56.56 0 01-.395-.958l4.633-4.633a.561.561 0 01.807.779l-.014.014-4.636 4.633a.55.55 0 01-.395.165zm5.037.003a.562.562 0 01-.56-.56.55.55 0 01.165-.395c1.042-1.042 2.271-2.328 2.285-2.342a.562.562 0 01.821.765 164.002 164.002 0 01-2.31 2.37.583.583 0 01-.401.162zm-4.986-4.986a.562.562 0 01-.398-.955c1.042-1.042 2.272-2.328 2.286-2.342a.562.562 0 11.812.776c-.011.014-1.252 1.308-2.303 2.358a.571.571 0 01-.397.163z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThumbDownFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.255 11.104c.241-.221.362-.538.362-.938 0-.432-.225-.804-.664-1.104a.616.616 0 01-.118-.908c.168-.196.255-.507.255-.902 0-.563-.496-.888-.91-1.061a.604.604 0 01-.342-.362.609.609 0 01.04-.498c.083-.151.164-.395.08-.941-.249-.664-.462-.998-3.902-.998-2.08 0-2.907.244-3.638.457l-.216.062c-.409.117-.734.21-1.062.21l-2.476.033v7.524c0 .017-.003.031-.005.048v.008c.759.392 2.367 1.432 2.54 3.25.118 1.21.101 2.694.076 3.851a.544.544 0 01-.006.067c-.005.098-.014.18-.022.264l-.017.19c-.028.409.053.72.244.924.26.278.703.337 1.028.337.89 0 1.269-.39 1.269-1.365l-.006-.12v-.034c0-1.823-.008-4.22-.008-4.22 0-.334.263-.609.596-.617l2.687-.081h3.395c.358-.02 1.19-.168 1.19-1.118 0-.476-.123-.84-.359-1.05a.607.607 0 01-.201-.454.586.586 0 01.19-.454M4.888 9.533c-.448 0-.762.313-.762.761 0 .449.314.762.762.762s.76-.31.76-.762c0-.448-.312-.761-.76-.761m16.577 2.025c.213.344.381.832.381 1.504 0 1.53-1.179 2.28-2.383 2.347H16.05l-2.07.062c.003.826.005 2.353.005 3.613l.006.132.003.098c0 1.585-.933 2.535-2.499 2.535-.818 0-1.484-.252-1.927-.728-.294-.32-.636-.9-.569-1.849l.02-.23c.008-.08.017-.157.02-.257l.002-.042c.026-1.112.04-2.516-.07-3.639-.117-1.233-1.336-1.992-1.885-2.275-.246.19-.552.309-.885.309H3.617a1.458 1.458 0 01-1.457-1.46V4.082c0-.804.653-1.457 1.457-1.457h2.59c.354 0 .676.132.928.342.064-.014.123-.04.19-.04l2.807-.036c.162 0 .415-.07.731-.165l.21-.059c.77-.224 1.728-.507 3.983-.507 3.611 0 4.513.33 5.076 1.857a.797.797 0 01.03.11c.076.456.082.848.012 1.195.737.463 1.148 1.143 1.148 1.93 0 .49-.095.874-.22 1.169.487.484.747 1.09.747 1.747-.003.603-.17 1.056-.384 1.39"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThumbDownLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.725 11.022c.45 0 .767-.314.767-.768 0-.453-.313-.767-.767-.767-.451 0-.768.316-.768.767s.314.768.768.768zm15.863.218a.411.411 0 00-.023.58l.023.023c.285.26.437.689.437 1.238 0 1.193-1.09 1.344-1.426 1.364h-3.482l-2.74.081a.407.407 0 00-.394.409c0 1.445.002 2.89.008 4.339l.006.123c0 1.135-.482 1.63-1.519 1.63-.54 0-.96-.142-1.213-.414-.238-.255-.341-.628-.305-1.112l.017-.205c.011-.087.017-.168.022-.269a.309.309 0 00.006-.05c.025-1.174.042-2.68-.073-3.91-.18-1.86-1.927-2.88-2.6-3.208v-.123c0-.017.006-.03.006-.048v-7.81a.26.26 0 00-.005-.047v-.075l2.753-.037c.303 0 .622-.09 1.02-.204l.224-.065c.762-.224 1.625-.476 3.787-.476 3.768 0 3.919.406 4.219 1.219.067.445.036.804-.118 1.09a.41.41 0 00.168.554l.034.017c.487.204 1.067.59 1.067 1.291 0 .457-.107.826-.314 1.064a.405.405 0 00.042.575c.011.01.025.02.036.028.353.24.774.666.774 1.313.002.471-.143.846-.437 1.115zM6.095 3.448c.23 0 .414.182.425.409v7.857a.427.427 0 01-.425.406H3.4a.43.43 0 01-.429-.432v-7.81c0-.237.194-.43.429-.43h2.695zm15.313 8.095c.233-.317.435-.779.435-1.42 0-.659-.286-1.266-.813-1.737.151-.289.275-.692.275-1.241 0-.781-.426-1.434-1.205-1.866.104-.364.11-.778.023-1.29-.524-1.438-1.238-1.833-5.003-1.833-2.283 0-3.244.283-4.017.51l-.21.062c-.359.1-.614.173-.81.173l-2.865.04a.685.685 0 00-.25.053 1.234 1.234 0 00-.873-.362H3.4c-.686 0-1.244.558-1.244 1.247v7.81c0 .686.558 1.246 1.244 1.246h2.695c.336 0 .638-.134.862-.35.521.252 2.026 1.1 2.166 2.56.112 1.168.098 2.613.072 3.756a2.907 2.907 0 01-.025.311l-.02.233c-.05.706.132 1.302.524 1.722.41.443 1.037.676 1.807.676 1.482 0 2.334-.866 2.334-2.37l-.003-.095-.003-.135c0-1.406-.006-3.143-.006-3.913l2.33-.07h3.494c1.036-.056 2.218-.661 2.218-2.18-.002-.72-.204-1.212-.437-1.537z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconThumbDownRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M4.888 11.056c.448 0 .762-.313.762-.762 0-.448-.314-.761-.762-.761s-.762.313-.762.761c0 .451.311.762.762.762zm15.367.048a.62.62 0 00-.03.874l.033.034c.233.212.359.577.359 1.05 0 .95-.832 1.098-1.19 1.118h-3.393l-2.686.078a.613.613 0 00-.597.62c0 1.416.003 2.837.008 4.254l.006.12c.003.975-.378 1.365-1.269 1.365-.328 0-.77-.056-1.028-.337-.19-.204-.272-.515-.244-.927l.017-.19c.009-.084.017-.165.023-.264.002-.022.005-.044.005-.067.025-1.157.042-2.641-.073-3.851-.173-1.821-1.781-2.86-2.54-3.25v-.008c0-.017.005-.03.005-.048v-7.52l2.477-.034c.327 0 .652-.093 1.061-.21l.216-.062c.731-.213 1.557-.457 3.639-.457 3.44 0 3.655.334 3.902.998.084.546.002.79-.082.94a.617.617 0 00.303.864c.414.17.91.498.91 1.061 0 .395-.09.706-.255.902a.62.62 0 00-.143.48c.023.17.118.327.26.428.44.302.665.675.665 1.103.005.398-.118.712-.359.936zm-14.05-7.25a.23.23 0 01.224.216v7.62a.225.225 0 01-.224.215H3.614a.228.228 0 01-.227-.23v-7.59c0-.127.104-.228.227-.228l2.59-.002zm15.26 7.704c.213-.334.381-.787.381-1.392 0-.656-.263-1.264-.748-1.748.126-.294.222-.678.222-1.168 0-.787-.412-1.468-1.149-1.93.07-.348.065-.74-.011-1.196a.487.487 0 00-.03-.11c-.564-1.523-1.463-1.854-5.076-1.854-2.258 0-3.216.28-3.986.507l-.208.059c-.316.092-.571.165-.73.165l-2.805.037c-.067 0-.129.025-.193.039a1.461 1.461 0 00-.927-.342H3.614c-.801 0-1.454.653-1.454 1.457v7.593c0 .804.653 1.457 1.454 1.457h2.59c.334 0 .64-.118.886-.308.549.28 1.767 1.042 1.885 2.274.11 1.124.095 2.527.07 3.639l-.003.042a2.3 2.3 0 01-.02.26l-.019.23c-.067.95.275 1.53.569 1.849.442.476 1.109.728 1.927.728 1.563 0 2.499-.947 2.499-2.535l-.003-.098-.006-.131c0-1.258-.003-2.788-.005-3.614l2.07-.062h3.411c1.205-.064 2.384-.817 2.384-2.347-.003-.67-.174-1.154-.384-1.501z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTicketsFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.28 10.448l4.373 7.521-.006-9.933-4.367 2.412zM17.543 2h2.238c1.05 0 1.905.852 1.905 1.9v14.248c0 1.048-.854 1.9-1.905 1.9h-2.254a1.01 1.01 0 01-.99-.816.898.898 0 00-.882-.722.898.898 0 00-.882.722 1.01 1.01 0 01-.989.816h-.82a.91.91 0 01-.373.434l-1.753.983a1.722 1.722 0 01-.85.221 1.73 1.73 0 01-1.521-.885L2.23 9.737a1.735 1.735 0 01.664-2.364L4.63 6.4a.944.944 0 011.213.249.757.757 0 001.305-.731.933.933 0 01.418-1.163l1.737-.972c.109-.061.23-.098.35-.134a1.898 1.898 0 011.88-1.647h2.237c.504 0 .925.364.997.865a.906.906 0 00.891.768c.446 0 .83-.33.894-.768A.993.993 0 0117.543 2zm-5.4 3.647a.414.414 0 00-.415.415v9.972c0 .23.185.414.415.414h7.143c.23 0 .414-.185.414-.414V6.059a.414.414 0 00-.414-.415h-7.143v.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTicketsLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.01 18.305V4.055c0-.59-.482-1.07-1.076-1.07h-2.238a.174.174 0 00-.173.157 1.738 1.738 0 01-1.715 1.476 1.74 1.74 0 01-1.714-1.476.178.178 0 00-.174-.16h-2.238c-.59 0-1.072.482-1.072 1.07v14.25c0 .59.481 1.07 1.072 1.07h2.255a.18.18 0 00.174-.149 1.733 1.733 0 013.395 0 .185.185 0 00.176.149h2.255a1.065 1.065 0 001.073-1.067zm-10.426 2.594l1.241-.695h-.143a1.901 1.901 0 01-1.876-1.622c-.04.011-.076.03-.118.03a.418.418 0 01-.361-.21L4.96 10.659a.412.412 0 01.154-.563s.003 0 .003-.003l4.658-2.61V4.704l-1.653.927c-.05.028-.073.09-.048.14a1.59 1.59 0 01-.703 1.95 1.602 1.602 0 01-2.036-.414.114.114 0 00-.148-.034l-1.737.972a.89.89 0 00-.429.549.897.897 0 00.081.689l6.239 11.064c.12.21.313.362.549.429a.91.91 0 00.694-.078zM5.887 10.61l3.89 6.896V8.431l-3.89 2.179zm14.05-8.454c1.05 0 1.902.849 1.905 1.9v14.249a1.9 1.9 0 01-1.905 1.896h-2.255c-.481 0-.896-.342-.988-.815a.9.9 0 00-1.765 0 1.008 1.008 0 01-.989.815h-.82a.91.91 0 01-.373.434l-1.754.983c-.403.227-.88.286-1.322.16a1.73 1.73 0 01-1.047-.82L2.38 9.892a1.735 1.735 0 01.664-2.364l1.74-.972a.947.947 0 011.212.25.756.756 0 101.305-.732.933.933 0 01.418-1.162l1.736-.972c.11-.062.23-.098.35-.135a1.902 1.902 0 011.88-1.65h2.235c.505 0 .925.364.998.869a.906.906 0 00.89.767c.443 0 .83-.33.894-.767.073-.505.493-.869.997-.869h2.238zm-7.224 13.62h6.311V6.63h-6.31v9.145zm6.726-9.973c.23 0 .414.185.414.415v9.972c0 .23-.187.414-.414.414h-7.143a.414.414 0 01-.415-.414V6.215c0-.227.185-.414.415-.414h7.143v.002z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTicketsRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.493 18.017V4.062a.85.85 0 00-.849-.846h-2.19c-.107.902-.913 1.6-1.852 1.6a1.908 1.908 0 01-1.88-1.62l-2.162.02a.85.85 0 00-.849.846v3.885c.003.033 0 .064 0 .098v9.969c0 .468.381.846.85.846h2.21c.145-.863.926-1.507 1.831-1.507.905 0 1.686.641 1.863 1.527l2.18-.02a.843.843 0 00.848-.843zM10.387 20.38l.666-.375a2.058 2.058 0 01-1.56-1.992v-.059a.581.581 0 01-.188-.19l-3.977-7.05a.606.606 0 01.23-.827h.002l3.933-2.202v-2.64l-1.247.7a1.762 1.762 0 01-.806 2.087 1.777 1.777 0 01-2.208-.398L3.6 8.347a.686.686 0 00-.266.933v.003L9.445 20.12c.19.328.608.446.942.26zm-.894-4.762V9.081l-2.801 1.572 2.801 4.966zM19.644 2a2.07 2.07 0 012.07 2.062v13.955a2.069 2.069 0 01-2.07 2.061h-2.21a1.193 1.193 0 01-1.168-.963.678.678 0 00-1.328 0c-.109.557-.6.96-1.168.963h-.664a1.073 1.073 0 01-.406.401l-1.717.96c-.442.25-.963.312-1.45.174a1.89 1.89 0 01-1.15-.902L2.273 9.88a1.874 1.874 0 01-.171-1.446c.134-.487.46-.899.902-1.145l1.703-.953c.49-.28 1.11-.151 1.448.3a.55.55 0 00.69.137.546.546 0 00.24-.658 1.115 1.115 0 01.496-1.387l1.703-.952c.078-.045.168-.064.252-.098A2.062 2.062 0 0111.56 2h2.193a1.18 1.18 0 011.177 1.022.68.68 0 001.345 0A1.185 1.185 0 0117.453 2h2.19zm-6.87 13.339h5.772V6.787h-5.773v8.552zm6.383-9.768a.61.61 0 01.61.608v9.768a.61.61 0 01-.61.608h-6.992a.61.61 0 01-.61-.608V6.179a.61.61 0 01.61-.608h6.992z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTimeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.458 15.73a.618.618 0 01-.868 0l-3.031-3.028a.617.617 0 01-.18-.437V8.164a.616.616 0 011.233 0v3.846l2.852 2.849a.62.62 0 01-.006.87M11.99 2.15c-6.218 0-9.84 3.14-9.84 9.846 0 6.706 3.622 9.84 9.84 9.84 6.219 0 9.846-3.134 9.846-9.84 0-6.706-3.627-9.846-9.846-9.846"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTimeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.992 21.02c5.99 0 9.027-3.035 9.027-9.022 0-5.99-3.037-9.027-9.027-9.027-5.987 0-9.021 3.037-9.021 9.027 0 5.987 3.034 9.021 9.021 9.021zm0-18.87c6.22 0 9.848 3.14 9.848 9.848 0 6.707-3.628 9.842-9.848 9.842-6.22 0-9.842-3.135-9.842-9.842 0-6.707 3.623-9.848 9.842-9.848zm.415 9.946l2.908 2.91a.408.408 0 01-.011.58.408.408 0 01-.569 0l-3.031-3.028a.421.421 0 01-.12-.291V8.165a.41.41 0 01.817 0l.006 3.93z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTimeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.99 20.607c5.799 0 8.617-2.818 8.617-8.611 0-5.798-2.818-8.616-8.617-8.616-5.792 0-8.61 2.818-8.61 8.616 0 5.793 2.818 8.61 8.61 8.61zm0-18.457c6.219 0 9.846 3.14 9.846 9.846 0 6.706-3.627 9.84-9.846 9.84-6.218 0-9.84-3.134-9.84-9.84 0-6.706 3.622-9.846 9.84-9.846zm.62 9.86l2.848 2.851c.25.233.263.622.03.869a.612.612 0 01-.867.03l-.031-.03-3.031-3.031a.615.615 0 01-.18-.434V8.164a.616.616 0 011.233 0l-.003 3.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTkFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.727 16.553a.404.404 0 01-.35.205h-.434a.406.406 0 01-.345-.196l-2.585-4.325-1.028 1.286v2.831c0 .222-.18.404-.404.404h-.383a.403.403 0 01-.404-.404V7.626c0-.221.18-.403.404-.403h.383c.222 0 .404.18.404.403v4.065l3.428-4.317a.405.405 0 01.317-.151h.445c.154 0 .294.09.362.227a.405.405 0 01-.048.425l-2.695 3.404 2.93 4.865a.41.41 0 01.003.41zm-6.728-8.49a.401.401 0 01-.392.314H9.228v7.98a.403.403 0 01-.403.404h-.38a.402.402 0 01-.404-.404v-7.98H5.609a.403.403 0 01-.403-.403v-.345c0-.221.18-.403.403-.403h6.073a.404.404 0 01.392.49L12 8.063zM11.99 2.15c-6.437 0-9.84 3.403-9.84 9.846 0 6.437 3.403 9.84 9.84 9.84 6.443 0 9.846-3.403 9.846-9.84 0-6.443-3.403-9.846-9.846-9.846z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTkLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.992 21.02c5.99 0 9.024-3.035 9.024-9.022 0-5.99-3.037-9.024-9.024-9.024-5.987 0-9.021 3.034-9.021 9.024 0 5.984 3.037 9.021 9.021 9.021zm0-18.87c6.444 0 9.848 3.407 9.848 9.848 0 6.438-3.404 9.842-9.848 9.842-6.438 0-9.842-3.404-9.842-9.842 0-6.441 3.404-9.848 9.842-9.848zm-.328 4.945a.31.31 0 01.303.367l-.073.37a.309.309 0 01-.302.25H8.978v8.5c0 .17-.138.307-.309.307h-.406a.307.307 0 01-.308-.308v-8.5H5.279a.307.307 0 01-.308-.308v-.37c0-.17.138-.308.308-.308h6.385zm7.31 9.332a.31.31 0 01-.263.468h-.457a.313.313 0 01-.266-.151l-2.802-4.693-1.21 1.516v3.017a.307.307 0 01-.308.308h-.401a.307.307 0 01-.308-.308V7.41c0-.171.137-.308.308-.308h.4c.171 0 .309.137.309.308v4.603l3.81-4.797a.311.311 0 01.241-.114h.47a.31.31 0 01.24.501l-2.884 3.642 3.12 5.183z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTkRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.99 3.357c-5.728 0-8.633 2.908-8.633 8.639 0 5.728 2.905 8.633 8.633 8.633 5.731 0 8.639-2.905 8.639-8.633 0-5.731-2.908-8.639-8.639-8.639zm0 18.48c-6.437 0-9.84-3.404-9.84-9.841 0-6.443 3.403-9.846 9.84-9.846 6.443 0 9.846 3.403 9.846 9.846 0 6.437-3.403 9.84-9.846 9.84zm-.308-14.609a.404.404 0 01.392.49L12 8.064a.401.401 0 01-.392.314h-2.38v7.98a.403.403 0 01-.403.404h-.38a.402.402 0 01-.404-.404v-7.98H5.609a.403.403 0 01-.403-.403V7.63c0-.221.18-.403.403-.403h6.073v.002zm7.04 8.92a.404.404 0 01-.345.61h-.434a.402.402 0 01-.345-.196l-2.585-4.325-1.031 1.286v2.831c0 .222-.18.404-.403.404h-.381a.402.402 0 01-.404-.404V7.63c0-.221.18-.403.404-.403h.38c.225 0 .404.179.404.403v4.064l3.429-4.316a.405.405 0 01.316-.151h.445c.154 0 .295.086.365.227a.405.405 0 01-.048.425l-2.698 3.404 2.93 4.865z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTongueFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.66 16.026a.61.61 0 01-.613.608h-.003a.61.61 0 01-.616-.602l-.04-7.06c.21.007.41.029.628.029.21 0 .403-.02.608-.025l.036 7.05zm9.098-11.28a.573.573 0 00.09-.347.569.569 0 00-.266-.493.617.617 0 00-.765.08c-.03.029-.067.054-.092.09a7.38 7.38 0 01-2.054 2.02c-1.67 1.115-3.888 1.692-6.658 1.692-2.218 0-4.11-.364-5.622-1.081a7.64 7.64 0 01-2.675-2.09c-.145-.18-.294-.356-.423-.549a.678.678 0 00-.137-.131.619.619 0 00-.72-.04.617.617 0 00-.143.14.606.606 0 00-.039.703c.216.317.451.617.703.9.081.095.177.176.263.266.171.176.342.353.527.515.129.112.266.213.403.317.166.128.331.26.51.378.137.092.283.173.426.26.132.079.255.166.392.238a33.439 33.439 0 00-.098 2.74c0 3.695.44 6.619 2.118 8.294 1.005 1.006 2.456 1.557 4.52 1.557.345 0 .673-.016.987-.044.045-.003.081-.014.123-.02a8.24 8.24 0 00.76-.115c3.904-.835 4.77-4.498 4.77-9.672 0-1.025-.034-1.905-.099-2.706 0-.017 0-.025-.008-.04.078-.041.148-.092.227-.134a7.908 7.908 0 001.047-.692 9.08 9.08 0 00.365-.285c.201-.174.392-.359.577-.55.086-.089.179-.173.263-.265.258-.292.501-.597.723-.925l.005-.011z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTongueLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.739 10.316c0 6.694-1.499 9.064-5.723 9.064-4.227 0-5.723-2.372-5.723-9.064 0-.964.031-1.801.09-2.566 1.47.597 3.207.916 5.193.958l.04 7.428c0 .23.187.412.42.412h.003a.42.42 0 00.417-.417l-.04-7.426c2.006-.04 3.754-.361 5.233-.963.059.764.09 1.605.09 2.574m3.919-6.434a.425.425 0 00-.583.117c-1.728 2.586-4.782 3.897-9.067 3.897-4.292 0-7.348-1.314-9.076-3.908a.42.42 0 00-.583-.118.41.41 0 00-.12.575c.84 1.26 1.975 2.23 3.356 2.932-.009.026-.02.048-.023.076a32.06 32.06 0 00-.112 2.86c0 6.106 1.098 9.894 6.563 9.894s6.563-3.788 6.563-9.894c0-1.04-.033-1.941-.1-2.754a.429.429 0 00-.062-.176c1.384-.706 2.518-1.672 3.361-2.93a.407.407 0 00-.117-.571"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTongueRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.413 10.356c0 6.459-1.361 8.641-5.397 8.641-4.037 0-5.398-2.182-5.398-8.641 0-.824.022-1.552.067-2.219 1.356.507 2.922.79 4.695.843l.039 7.056a.612.612 0 00.616.602h.003a.61.61 0 00.613-.607l-.039-7.048c1.79-.053 3.367-.336 4.731-.852.048.67.07 1.401.07 2.225m4.154-6.446a.624.624 0 00-.854.171c-1.653 2.462-4.583 3.712-8.706 3.712-4.129 0-7.062-1.253-8.714-3.72a.625.625 0 00-.855-.174.596.596 0 00-.176.837C3.08 5.955 4.17 6.9 5.492 7.596c-.07.816-.107 1.718-.107 2.754 0 5.913 1.13 9.851 6.633 9.851 5.505 0 6.63-3.938 6.63-9.851 0-1.014-.033-1.896-.1-2.703-.003-.02-.011-.037-.017-.056 1.314-.695 2.398-1.636 3.213-2.846a.596.596 0 00-.177-.835"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconToothFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.431 21.714h-.115c-.156 0-.274-.039-.347-.064a1.763 1.763 0 01-.756-.572 5.737 5.737 0 01-.485-.748l-.075-.165a17.271 17.271 0 01-.317-.804c-.263-.694-1.022-2.692-1.496-3.213-.473.521-1.23 2.521-1.493 3.213-.145.387-.24.633-.313.796l-.009.039-.073.134a5.664 5.664 0 01-.49.754 1.719 1.719 0 01-.717.552 1.066 1.066 0 01-.37.075h-.112c-.157 0-.274-.039-.347-.064a1.738 1.738 0 01-.754-.571 5.468 5.468 0 01-.423-.645l-.044-.075a19.96 19.96 0 01-1.406-3.07 21.247 21.247 0 01-.715-2.289c-.042-.16-.092-.367-.148-.59l-.028-.116c-1.025-1.784-1.75-3.554-2.16-5.26-.583-2.44-.078-4.488 1.42-5.76.857-.736 2.023-1.176 3.28-1.24 1.294-.07 2.639.252 3.874.938.334.188.67.378 1.031.591.373-.215.706-.406 1.03-.588 1.236-.686 2.584-1.011 3.88-.941 1.255.064 2.42.504 3.28 1.244 1.496 1.271 2 3.316 1.418 5.756-.409 1.706-1.137 3.473-2.16 5.26l-.025.098c-.056.233-.106.446-.154.617a20.841 20.841 0 01-.714 2.282 19.758 19.758 0 01-1.39 3.04l-.058.1a5.583 5.583 0 01-.429.65 1.719 1.719 0 01-.717.552.913.913 0 01-.373.084z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconToothLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.803 8.866c-.4 1.67-1.12 3.409-2.14 5.174l-.095.319c-.053.218-.1.417-.146.583a20.377 20.377 0 01-.7 2.232 19.598 19.598 0 01-1.344 2.95l-.056.095c-.085.137-.222.38-.356.543a.835.835 0 01-.311.255l-.112-.003a.774.774 0 01-.311-.255 4.81 4.81 0 01-.356-.537l-.053-.104c-.053-.095-.196-.47-.333-.835-1.012-2.67-1.675-4.025-2.493-4.025-.816 0-1.482 1.356-2.493 4.025-.138.364-.28.74-.334.835l-.053.092v.012a4.767 4.767 0 01-.359.543.835.835 0 01-.31.255l-.112-.003a.774.774 0 01-.311-.255 4.462 4.462 0 01-.35-.538l-.048-.078a19.551 19.551 0 01-1.356-2.972 20.904 20.904 0 01-.7-2.238c-.045-.165-.093-.367-.149-.594l-.047-.196-.045-.11c-1.02-1.761-1.74-3.5-2.14-5.173-.502-2.095-.104-3.82 1.117-4.857.706-.605 1.673-.97 2.729-1.022 1.145-.062 2.31.226 3.398.829.395.221.798.45 1.238.708a.58.58 0 00.325.101c.154 0 .254-.061.316-.098.443-.263.846-.49 1.238-.711 1.093-.605 2.27-.894 3.4-.83 1.054.054 2.023.415 2.732 1.023 1.224 1.04 1.619 2.765 1.12 4.86m-.577-5.482C19.383 2.66 18.235 2.227 17 2.166c-1.294-.07-2.619.252-3.848.932-.365.205-.731.412-1.154.661-.41-.24-.785-.453-1.154-.66C9.617 2.418 8.297 2.101 7 2.166c-1.238.061-2.383.495-3.224 1.218-1.468 1.247-1.96 3.263-1.383 5.675.417 1.731 1.156 3.527 2.198 5.342l.034.137c.056.233.106.446.151.608.205.812.443 1.571.723 2.317a20.072 20.072 0 001.417 3.098l.05.08c.099.166.261.44.415.631.188.238.41.41.675.516a.852.852 0 00.289.053h.115a.875.875 0 00.302-.062c.244-.098.465-.269.65-.501a6.08 6.08 0 00.482-.74l.05-.092v-.017c.076-.16.177-.426.342-.857.311-.824 1.26-3.325 1.692-3.496.485.17 1.431 2.672 1.745 3.496.163.426.263.689.336.849l.053.114c.062.115.286.496.477.734.187.238.409.41.675.516a.852.852 0 00.288.053h.115c.118 0 .216-.03.303-.062.243-.098.465-.269.65-.501.16-.196.322-.473.42-.636l.061-.1c.608-1.104.964-1.88 1.406-3.08.28-.744.519-1.5.726-2.313.045-.165.092-.373.148-.597l.037-.154c1.045-1.815 1.784-3.61 2.199-5.341.568-2.41.075-4.423-1.39-5.67"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconToothRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.863 19.865c.084.14.21.342.305.46a.575.575 0 00.221.19l.034-.01c-.003-.018.076-.082.146-.172.126-.157.257-.383.333-.512l.056-.093a18.784 18.784 0 001.3-2.854 20.4 20.4 0 00.678-2.168c.047-.171.095-.373.148-.594l.11-.342c.988-1.708 1.685-3.395 2.075-5.01.47-1.976.106-3.595-1.028-4.558-.658-.566-1.563-.905-2.552-.956-1.076-.058-2.188.213-3.221.788-.384.215-.776.437-1.208.694-.07.042-.21.126-.411.126-.21 0-.353-.087-.42-.126a63.082 63.082 0 00-1.208-.694c-1.033-.575-2.145-.852-3.218-.788-.992.05-1.897.39-2.552.953-1.137.966-1.501 2.582-1.03 4.56.389 1.614 1.086 3.3 2.075 5.011l.064.16.048.199c.053.215.1.412.143.571.196.77.417 1.48.678 2.171a18.803 18.803 0 001.316 2.882l.042.07c.076.13.21.356.328.505a.575.575 0 00.221.19l.034-.011c-.003-.017.075-.081.145-.17.098-.124.224-.323.309-.463v-.009l.075-.137c.048-.084.188-.46.314-.79 1.047-2.759 1.709-4.073 2.63-4.073.924 0 1.586 1.314 2.633 4.073.126.33.266.706.314.79l.073.137zm.568 1.85h-.115c-.156 0-.274-.04-.347-.065a1.763 1.763 0 01-.756-.572 5.737 5.737 0 01-.485-.748l-.075-.165a17.271 17.271 0 01-.317-.804c-.263-.694-1.022-2.692-1.496-3.213-.473.521-1.23 2.521-1.493 3.213-.145.387-.24.633-.313.796l-.009.039-.073.134a5.664 5.664 0 01-.49.754 1.719 1.719 0 01-.717.552 1.066 1.066 0 01-.37.075h-.112c-.157 0-.274-.039-.347-.064a1.738 1.738 0 01-.754-.571 5.468 5.468 0 01-.423-.645l-.044-.075a19.96 19.96 0 01-1.406-3.07 21.247 21.247 0 01-.715-2.289c-.042-.16-.092-.367-.148-.59l-.028-.116c-1.025-1.784-1.75-3.554-2.16-5.26-.583-2.44-.078-4.488 1.42-5.76.857-.736 2.023-1.176 3.28-1.24 1.294-.07 2.639.252 3.874.938.334.188.67.378 1.031.591.373-.218.706-.406 1.03-.588 1.236-.686 2.584-1.011 3.88-.941 1.255.064 2.42.504 3.28 1.244 1.496 1.271 2 3.316 1.418 5.756-.41 1.706-1.137 3.473-2.16 5.26l-.025.098c-.056.233-.106.446-.154.617a20.841 20.841 0 01-.714 2.282 19.758 19.758 0 01-1.39 3.04l-.058.1a5.583 5.583 0 01-.43.65 1.719 1.719 0 01-.716.552.913.913 0 01-.373.084z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTowTruckFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.375 18.903c-1.257 0-1.896-.635-1.896-1.89s.639-1.891 1.896-1.891c1.258 0 1.897.636 1.897 1.89 0 1.256-.639 1.891-1.897 1.891m-9.504 0c-1.258 0-1.896-.635-1.896-1.89s.638-1.891 1.896-1.891 1.897.636 1.897 1.89c0 1.256-.64 1.891-1.897 1.891m14.04-7.921a459.63 459.63 0 01-3.334-4.426c-.457-.636-1.272-1.045-2.073-1.045h-4.302a.6.6 0 00-.603.6v4.759L6.401 4.79a.604.604 0 00-.493-.26l-1.443-.01h-.006c-.056 0-.103.025-.156.039a.729.729 0 00-.132.033l-.011.009a.598.598 0 00-.342.535L3.81 9.332c.002.042-.009.23-.085.31-.033.037-.1.054-.198.054-.096-.028-.177-.008-.222-.056-.064-.07-.084-.246-.075-.339a.604.604 0 00-1.199-.14c-.009.078-.076.779.375 1.28.188.21.532.457 1.115.457h.014c.555-.003.894-.244 1.076-.443.44-.476.406-1.137.4-1.165l.003-1.69 1.765 3.553H2.625a.6.6 0 00-.603.6v4.4c0 .574.253 1.154.695 1.593a2.34 2.34 0 001.308.653c.446 1.079 1.448 1.709 2.84 1.709 1.376 0 2.367-.62 2.821-1.67h3.86c.454 1.054 1.446 1.67 2.82 1.67 1.376 0 2.368-.62 2.822-1.67h.224c.574 0 1.16-.252 1.6-.692.442-.44.694-1.022.694-1.593V12.81c.008-.79-.516-1.468-.796-1.83"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTowTruckLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.022 15.958c0 .314-.149.644-.41.899-.26.258-.59.406-.907.406h-.179c.014-.14.034-.277.034-.426 0-1.84-1.107-2.935-2.964-2.935-1.854 0-2.964 1.098-2.964 2.935 0 .152.02.286.034.426H9.823c.014-.14.034-.277.034-.426 0-1.84-1.107-2.935-2.964-2.935-1.854 0-2.96 1.098-2.96 2.935 0 .124.016.238.027.356a1.35 1.35 0 01-.574-.333c-.258-.258-.409-.586-.409-.9v-4.067h8.339a.407.407 0 00.409-.406V6.165h3.983c.485 0 1.011.263 1.286.639.45.619 3.078 4.078 3.423 4.524.227.29.608.781.608 1.238-.003-.003-.003 3.392-.003 3.392zm-4.426 3.003c-1.4 0-2.143-.734-2.143-2.124 0-1.389.742-2.123 2.143-2.123 1.4 0 2.143.734 2.143 2.123 0 1.39-.742 2.124-2.143 2.124zm-9.703 0c-1.4 0-2.14-.734-2.14-2.124 0-1.389.74-2.123 2.14-2.123 1.403 0 2.143.734 2.143 2.123 0 1.39-.74 2.124-2.143 2.124zM5.716 5.01l4.096 5.902-1.74-.003-2.95-5.905.594.006zm15.35 5.818c-.341-.443-2.96-3.885-3.406-4.501-.428-.594-1.196-.975-1.95-.975h-4.394a.407.407 0 00-.409.406v5.294L6.271 4.375a.41.41 0 00-.336-.176l-1.47-.011h-.003a.41.41 0 00-.163.042.4.4 0 00-.286.38l-.008 4.247c.006.056-.006.322-.14.468-.028.028-.112.117-.353.12h-.006c-.26 0-.344-.092-.372-.123-.132-.146-.137-.423-.129-.504a.405.405 0 00-.356-.451h-.003a.404.404 0 00-.453.35v.006c-.009.07-.07.697.33 1.14.165.182.468.395.986.395h.011c.493-.003.788-.21.95-.381.392-.423.361-1.014.356-1.048l.005-2.58 2.412 4.832H2.565a.407.407 0 00-.409.406v4.47c0 .53.236 1.068.647 1.477.353.35.807.555 1.322.616.395 1.098 1.367 1.726 2.765 1.726 1.39 0 2.359-.617 2.76-1.698h4.187c.4 1.084 1.37 1.698 2.759 1.698 1.39 0 2.359-.617 2.76-1.698h.35c.534 0 1.078-.232 1.487-.641.411-.41.65-.947.65-1.476v-3.398c0-.731-.488-1.359-.776-1.734z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTowTruckRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.482 16.15c0 .258-.123.53-.342.745a1.101 1.101 0 01-.709.333c.003-.073.017-.14.017-.215 0-1.908-1.19-3.09-3.103-3.09-1.914 0-3.104 1.185-3.104 3.09 0 .078.014.145.017.218h-3.33c.002-.073.016-.143.016-.218 0-1.908-1.19-3.09-3.104-3.09-1.913 0-3.103 1.185-3.103 3.09v.005c-.065-.042-.138-.07-.194-.126-.218-.216-.341-.487-.341-.745v-3.798h7.969a.6.6 0 00.602-.6V6.71h3.7c.412 0 .863.224 1.096.546.445.61 3.022 4.02 3.36 4.454.208.269.553.717.553 1.095v3.345zm-4.135 2.756c-1.257 0-1.896-.636-1.896-1.89 0-1.256.639-1.891 1.896-1.891 1.258 0 1.9.635 1.9 1.89s-.642 1.891-1.9 1.891zm-9.504 0c-1.258 0-1.896-.636-1.896-1.89 0-1.256.638-1.891 1.896-1.891s1.896.635 1.896 1.89c.003 1.255-.635 1.891-1.896 1.891zM5.557 5.73l3.734 5.409-1.199-.003-2.686-5.41.151.004zm15.328 5.249c-.336-.434-2.896-3.82-3.333-4.426-.46-.636-1.272-1.045-2.073-1.045h-4.303a.6.6 0 00-.602.6v4.762L6.375 4.79a.597.597 0 00-.493-.26L4.44 4.52h-.006c-.056 0-.103.025-.157.039-.045.008-.09.014-.131.033-.003 0-.006.003-.012.006a.592.592 0 00-.341.532l-.006 4.196c.003.042-.011.23-.084.311-.034.037-.1.053-.199.056-.095-.03-.176-.008-.221-.056-.065-.07-.084-.246-.076-.341a.604.604 0 00-1.199-.14c-.008.08-.075.781.376 1.282.187.208.532.457 1.115.457h.014c.554-.003.89-.244 1.075-.443.443-.476.406-1.137.4-1.165l.004-1.692 1.764 3.552H2.605a.6.6 0 00-.602.6v4.4c0 .574.252 1.154.694 1.594a2.36 2.36 0 001.306.653c.445 1.075 1.448 1.708 2.84 1.708 1.375 0 2.367-.619 2.82-1.672h3.864c.453 1.053 1.445 1.672 2.82 1.672 1.376 0 2.367-.619 2.821-1.672h.224c.574 0 1.157-.252 1.6-.692.442-.44.694-1.02.694-1.594v-3.336c0-.79-.524-1.465-.8-1.829z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrainFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.055 10.67a6.334 6.334 0 00-.591-.802c-2.205-2.544-4.167-3.431-5.301-3.742v4.543h5.892zm-1.28 4.98c.224-.171.577-.472.919-.865H3.374v1.001c10.508 0 13.932.02 14.922.029h.008a.755.755 0 00.47-.165zm-15.4-5.057h2.003V7.371H3.375v3.222zm3.393 0h2.155V7.371H6.768v3.222zm3.416 0h2.157V7.371h-2.157v3.222zm-7.837 6.381a.757.757 0 01-.177-.49V5.267c0-.384.269-.697.602-.697H13.11c.115-.004 3.39-.095 7.204 4.312 1.135 1.311 1.65 2.667 1.53 4.026-.171 1.936-1.583 3.276-2.407 3.904a1.871 1.871 0 01-1.132.392h-.017c-1.009-.01-4.54-.028-15.515-.028a.568.568 0 01-.425-.203zm18.91 1.052c.334 0 .603.31.603.697 0 .387-.27.697-.603.697H2.772c-.333 0-.602-.31-.602-.697 0-.387.269-.697.602-.697h18.485z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrainLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.122 5.556H2.988v.97h8.93c.227 0 .409.22.409.492v4.446c0 .274-.182.493-.41.493H2.992v1.994h17.773c.005 0 .011.003.017.003.103-.283.182-.577.21-.894.03-.336 0-.678-.076-1.022h-7.35c-.227 0-.409-.219-.409-.493V5.556c-.017.003-.03.003-.034 0zm7.443 5.496a6.541 6.541 0 00-.843-1.275c-2.44-2.938-4.605-3.829-5.748-4.1v5.372h6.591v.003zm-1.577 5.255c.308-.244.84-.726 1.283-1.373H2.99v1.555c10.764 0 14.35.022 15.4.03a.87.87 0 00.597-.212zM2.99 10.97h2.383V7.51H2.991v3.46zm3.199 0h2.283V7.51h-2.28v3.46H6.19zm3.1 0h2.219V7.51H9.29v3.46zm-7.12 3.473l.003-.011v-2.96c0-.004-.003-.007-.003-.01v-6.4c0-.132.042-.258.12-.35a.372.372 0 01.289-.143h10.53c.111 0 3.372-.092 7.193 4.51 1.112 1.339 1.616 2.711 1.501 4.081-.165 1.955-1.552 3.328-2.361 3.97-.311.246-.67.378-1.042.378h-.014c-1.062-.012-4.726-.031-15.804-.031-.227 0-.41-.222-.41-.493v-2.533l-.002-.008zm19.277 3.992c.227 0 .41.221.41.493 0 .271-.183.493-.41.493H2.58c-.227 0-.409-.222-.409-.493 0-.272.182-.493.409-.493h18.868z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrainRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.955 5.961h-9.58v.824h8.28c.333 0 .602.31.602.697v3.805c0 .384-.269.697-.602.697h-8.28v1.413h17.134c.067-.203.118-.408.137-.627a2.73 2.73 0 00-.03-.707h-7.059c-.333 0-.602-.31-.602-.697V5.961zm7.1 4.708a6.334 6.334 0 00-.591-.801c-2.205-2.544-4.167-3.431-5.301-3.739v4.54h5.892zm-1.28 4.98c.224-.167.577-.468.916-.864H3.375v1.001c10.507 0 13.931.02 14.92.029h.009a.755.755 0 00.47-.165zM5.118 10.594V8.18H3.375v2.414h1.743zm1.205 0h1.871V8.18H6.323v2.414zm3.076 0h1.653V8.18H9.4v2.414zm-7.052 6.381a.757.757 0 01-.177-.49V5.267c0-.384.269-.697.602-.697H13.11c.115-.004 3.39-.095 7.204 4.312 1.135 1.311 1.65 2.667 1.53 4.026-.171 1.936-1.583 3.276-2.407 3.904a1.871 1.871 0 01-1.132.392h-.017c-1.009-.01-4.54-.028-15.515-.028a.568.568 0 01-.425-.203zm18.91 1.052c.334 0 .603.31.603.697 0 .387-.27.697-.603.697H2.772c-.333 0-.602-.31-.602-.697 0-.387.269-.697.602-.697h18.485z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTramTrainFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.1 3.4c.333 0 .602.272.602.61 0 .337-.27.611-.602.611h-5.944v1.656c0 .336-.27.61-.603.61h-1.392l-.989 1.006h2.81c.199.008 4.216.244 6.067 4.042 2.076 4.255-.47 5.95-1.563 6.675l-.073.05a2.051 2.051 0 01-1.131.345h-.017l-.625-.003c-.092.992-.776 1.625-1.807 1.625-1.036 0-1.72-.639-1.81-1.639l-2.57-.005c-.087 1-.774 1.641-1.81 1.641s-1.723-.641-1.81-1.644h-.456c-.087 1.003-.77 1.644-1.81 1.644-1.036 0-1.725-.644-1.81-1.647H2.753a.605.605 0 01-.602-.61V8.503c0-.163.064-.317.176-.432a.596.596 0 01.426-.179h5.294L9.08 6.845a.61.61 0 01-.384-.568V4.62H2.752a.605.605 0 01-.602-.61c0-.336.269-.611.602-.611zm-5.264 14.74c-.448 0-.622.176-.622.63 0 .453.174.63.622.63s.622-.177.622-.63c0-.454-.174-.63-.622-.63zm-6.19 0c-.448 0-.622.176-.622.63 0 .453.174.63.622.63s.622-.177.622-.63c0-.454-.174-.63-.622-.63zm-4.073 0c-.448 0-.622.176-.622.63 0 .453.174.63.622.63.445 0 .619-.177.622-.63 0-.454-.177-.63-.622-.63zm14.695-1.891H3.354v1.501h.64c.299-.526.85-.837 1.573-.837s1.275.313 1.575.84h.927c.3-.527.851-.84 1.574-.84.725 0 1.277.313 1.577.84l3.036.006c.3-.53.855-.846 1.58-.846.731 0 1.286.322 1.583.86l.857.005c.168.03.333-.047.479-.146l.076-.047c.479-.32 1.07-.712 1.437-1.336zm-5.236-7.126v4.131h5.266a7.776 7.776 0 00-.327-.776c-1.426-2.921-4.412-3.31-4.939-3.355zM9.537 9.8H7.279v3.386h2.258V9.801zm3.705 0H10.94v3.386h2.302V9.801zm-7.37 0H3.358v3.383h2.516V9.801zm5.586-2.914h-.717l-.989 1.006h.717l.99-1.006zm2.496-2.266h-4.05v1.045h4.05V4.621z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTramTrainLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.285 3.6a.408.408 0 110 .817h-6.273V6.28a.408.408 0 01-.409.409H13.09c-.005.005-.005.013-.01.019l-1.404 1.396h3.361c.191.009 4.172.237 6.01 3.94 2.04 4.105-.364 5.673-1.521 6.424l-.076.049a1.876 1.876 0 01-1.042.313h-.017l-.835-.005c-.059.933-.675 1.51-1.647 1.51-.975 0-1.594-.582-1.648-1.521l-3.02-.006c-.05.942-.67 1.527-1.647 1.527-.98 0-1.6-.585-1.65-1.53h-.86c-.05.945-.67 1.53-1.65 1.53-.981 0-1.6-.588-1.65-1.532H2.561a.41.41 0 01-.41-.408v-2.723c-.002-.01 0-.013 0-.016v-1.832c-.002 0-.002-.003-.002-.006V8.514a.4.4 0 01.12-.289.406.406 0 01.289-.12h5.488l1.42-1.415H9.24a.41.41 0 01-.41-.409V4.417H2.56a.408.408 0 110-.817zm-5.373 14.248c-.564 0-.838.275-.838.839 0 .56.272.836.838.836.563 0 .837-.273.837-.836 0-.564-.274-.839-.837-.839zm-6.318 0c-.566 0-.84.275-.84.839 0 .56.274.836.84.836.563 0 .84-.273.838-.836 0-.564-.275-.839-.838-.839zm-4.16 0c-.564 0-.838.275-.838.839 0 .56.274.836.837.836.566 0 .841-.273.841-.836 0-.564-.275-.839-.84-.839zm15.341-1.772H2.976v1.914h.922c.23-.604.776-.958 1.541-.958.765 0 1.314.356 1.541.96h1.076c.227-.606.773-.96 1.54-.96.768 0 1.317.356 1.544.963l3.23.006c.225-.61.777-.97 1.544-.97.77 0 1.323.363 1.547.978l.941.005a1.11 1.11 0 00.603-.177l.075-.049c.56-.364 1.311-.86 1.695-1.712zm-6.797-7.154l-11.007.003v.803h9.764a.41.41 0 01.409.408v3.683a.408.408 0 01-.41.409H2.972v1.029h17.807c.076 0 .14.024.202.06a3.626 3.626 0 00-.026-1.021h-6.567a.41.41 0 01-.409-.409V8.922zm1.05 0h-.231v4.557h5.959a8.248 8.248 0 00-.443-1.072c-1.625-3.275-5.256-3.482-5.292-3.485zM5.77 10.548h-2.8v2.867h2.8v-2.867zm3.154 0H6.591v2.867h2.333v-2.867zm3.401 0h-2.58v2.867h2.58v-2.867zM11.94 6.69h-1.311l-1.42 1.415h1.31l1.42-1.415zm2.258-2.273H9.653v1.456h4.544V4.417z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTramTrainRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.1 3.4c.333 0 .602.272.602.61 0 .337-.27.611-.602.611h-5.944v1.656c0 .336-.27.61-.603.61h-1.395L12.17 7.89h2.81c.198.009 4.215.244 6.066 4.042 2.076 4.258-.47 5.953-1.56 6.675l-.073.048a2.051 2.051 0 01-1.131.344h-.017l-.625-.002c-.092.994-.776 1.627-1.807 1.627-1.036 0-1.72-.639-1.81-1.639l-2.57-.005c-.087 1-.774 1.641-1.81 1.641-1.04 0-1.723-.644-1.81-1.647h-.456c-.084 1.006-.77 1.647-1.81 1.647-1.039 0-1.725-.644-1.81-1.647H2.753a.605.605 0 01-.602-.61V8.5c0-.163.064-.317.176-.432a.596.596 0 01.426-.179h5.294L9.08 6.843a.606.606 0 01-.384-.566V4.62H2.752a.605.605 0 01-.602-.61c0-.336.269-.611.602-.611zm-5.267 14.74c-.448 0-.621.176-.621.63s.176.63.621.63c.449 0 .622-.176.622-.63s-.173-.63-.622-.63zm-6.19 0c-.448 0-.622.176-.622.63s.177.63.622.63c.448 0 .622-.176.622-.63s-.174-.63-.622-.63zm-4.076 0c-.448 0-.621.176-.621.63s.173.63.621.63c.449 0 .622-.176.622-.63s-.173-.63-.622-.63zm14.7-1.883H3.358v1.502h.639c.3-.527.851-.838 1.574-.838.723 0 1.275.31 1.574.838h.928c.3-.53.851-.84 1.574-.84.722 0 1.274.31 1.574.84l3.036.005c.297-.53.852-.846 1.577-.846.732 0 1.286.32 1.583.857l.857.006c.168.028.334-.048.48-.146l.075-.05c.482-.322 1.07-.714 1.44-1.328zm-6.445-7.143l-10.468.003v.726h9.082c.333 0 .602.271.602.61v3.345c0 .336-.269.61-.602.61H3.354v.62h17.247c.008 0 .014.005.022.005a3.469 3.469 0 00-.02-.557h-6.178a.605.605 0 01-.603-.611v-4.75zm1.208.006v4.132h5.266a8.911 8.911 0 00-.33-.776c-1.424-2.92-4.41-3.308-4.936-3.356zm-9.516 1.94H3.357v2.123h2.157V11.06zm3.14 0H6.72v2.123h1.935V11.06zm3.18 0H9.858v2.123h1.974V11.06zm-.379-4.174h-.717L9.75 7.89h.718l.988-1.003zm2.496-2.266h-4.05v1.045h4.05V4.621z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrashCanFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.347 6.137h-7.01V4.325c0-.423.092-.728.276-.9.233-.212.57-.193.628-.19l5.188-.003c.3 0 .515.073.66.227.236.25.267.69.258.877v1.801zM14.5 17.011a.601.601 0 11-1.205 0V10.85a.601.601 0 111.205 0v6.162zm-4.11 0a.601.601 0 11-1.204 0V10.85a.601.601 0 111.204 0v6.162zM21.084 6.137h-4.535V4.375c.008-.106.053-1.058-.577-1.734-.26-.28-.74-.613-1.543-.613l-5.13.006a2.002 2.002 0 00-1.484.493c-.45.409-.68 1.014-.68 1.798v1.812H2.601a.601.601 0 100 1.205H4.06l.003 11.087c-.003.056-.084 1.397.815 2.358.574.614 1.392.927 2.428.927h9.042c.006 0 .028.003.065.003.291 0 1.456-.053 2.31-.871.603-.577.908-1.381.908-2.39V7.343h1.457c.33 0 .602-.27.602-.603a.607.607 0 00-.605-.602z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrashCanLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.905 18.713V7.167H5.053V18.73c0 .042-.056 1.023.563 1.67.387.409.967.622 1.72.622h9.258c.034 0 1.04.033 1.703-.614.403-.384.608-.958.608-1.695zM8.199 4.296V6.35h7.563V4.302c0-.034.034-.656-.32-1.031-.187-.205-.459-.294-.826-.294H9.32c-.042 0-.468-.034-.77.246-.239.213-.354.572-.351 1.073zm13.21 2.053a.41.41 0 010 .818h-1.686v11.546c0 .975-.294 1.746-.868 2.292-.81.787-1.933.834-2.21.834H7.338c-1 0-1.776-.294-2.325-.885-.86-.916-.779-2.201-.779-2.252V7.167H2.541a.41.41 0 010-.818h4.837V4.296c0-.745.205-1.31.622-1.686.583-.516 1.328-.451 1.359-.451h5.255c.605 0 1.08.188 1.425.557.597.639.541 1.58.541 1.62v2.013h4.83zM9.88 17.655a.408.408 0 01-.408-.41v-6.29a.41.41 0 01.818 0v6.29a.408.408 0 01-.41.41zm4.194 0a.408.408 0 01-.409-.41v-6.29a.41.41 0 01.818 0v6.29a.408.408 0 01-.409.41z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrashCanRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.75 2.5c1.202 0 2.167.98 2.245 2.197l.005.16V6.5h4.25a.75.75 0 01.102 1.493L21.25 8H20v10.75a3.25 3.25 0 01-3.066 3.245L16.75 22h-9a3.25 3.25 0 01-3.25-3.25V8H3.25a.75.75 0 01-.102-1.493L3.25 6.5H7.5V4.857c0-1.236.915-2.268 2.095-2.352L9.75 2.5h5zM18.5 8H6v10.75a1.75 1.75 0 001.606 1.744l.144.006h9a1.75 1.75 0 001.75-1.75V8zm-8.25 2.5a.75.75 0 01.743.648l.007.102v6a.75.75 0 01-1.493.102L9.5 17.25v-6a.75.75 0 01.75-.75zm4 0a.75.75 0 01.743.648l.007.102v6a.75.75 0 01-1.493.102l-.007-.102v-6a.75.75 0 01.75-.75zm.5-6.5h-5c-.37 0-.696.318-.744.747L9 4.857V6.5h6.5V4.857c0-.447-.297-.799-.658-.85L14.75 4z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTravelBagFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M14.164 2c.484 0 .91.412.91.882v3.11h1.376c.647 0 1.212.63 1.212 1.35v12.39c0 .733-.554 1.352-1.212 1.352h-1.045c-.081.549-.558.6-.687.602h-.067c-.134-.003-.605-.053-.686-.602H9.909c-.081.549-.557.6-.686.602h-.068c-.134 0-.605-.053-.686-.602H7.388c-.658 0-1.213-.62-1.213-1.353V7.341c0-.72.569-1.35 1.213-1.35h1.375V2.883c0-.479.415-.882.91-.882zm1.02 10.521H8.66v4.927c0 .698.397 1.221.924 1.221h4.675c.524 0 .922-.523.922-1.22h.002V12.52zm-.925-4.011H9.584c-.577 0-.924.622-.924 1.221v1.706h6.52l.001-.853v-.586l.001-.11.001-.138v-.019c0-.6-.347-1.221-.924-1.221zm-.414-5.292h-3.85v2.765h3.85V3.218z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTravelBagLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.83 19.88V7.24c0-.181-.142-.331-.2-.345H7.247c-.051.011-.193.16-.193.342v12.64c0 .203.142.339.193.342h9.39c.05.002.194-.139.194-.34zM9.736 2.828v3.234h4.414V2.83H9.736zm6.9 3.24c.547 0 1.044.56 1.044 1.17v12.64c0 .625-.485 1.171-1.043 1.171H15.57c0 .017.003.028.003.045 0 .718-.582.775-.73.775h-.07c-.153-.003-.729-.06-.729-.78 0-.017.003-.026.003-.043H9.875c0 .017.006.028.006.045 0 .719-.585.775-.73.775H9.08c-.154-.003-.73-.06-.73-.78 0-.017.003-.026.003-.043h-1.11c-.555 0-1.043-.548-1.043-1.17V7.242c0-.613.497-1.17 1.043-1.17H8.88v-3.38c0-.367.34-.692.733-.692h4.651c.39 0 .733.322.733.693v3.376h1.64zm-2.41 11.69a.624.624 0 00.035-.21v-5.211H9.628v5.211c0 .088.018.162.036.21h4.561zm-4.563-8.29a.628.628 0 00-.04.21v1.829h4.631v-1.83a.57.57 0 00-.039-.21H9.664zm4.703-.826c.467 0 .744.529.744 1.038v7.87c0 .503-.262 1.037-.744 1.037H9.519c-.482 0-.744-.534-.744-1.038V9.68c0-.51.277-1.037.744-1.037h4.848z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTravelBagRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.43 19.734V7.344a.242.242 0 00-.05-.131H7.46a.25.25 0 00-.05.132V19.73a.26.26 0 00.042.132l8.933.003a.21.21 0 00.045-.132zM9.996 3.218v2.765h3.849V3.218h-3.85zm6.454 2.774c.647 0 1.212.63 1.212 1.35v12.39c0 .733-.554 1.352-1.212 1.352h-1.045c-.081.546-.558.6-.687.602h-.067c-.134-.003-.605-.053-.686-.602H9.909c-.081.546-.557.6-.686.602h-.068c-.134-.003-.605-.053-.686-.602H7.388c-.658 0-1.21-.619-1.21-1.35V7.344c0-.72.566-1.35 1.21-1.35h1.375V2.885c0-.479.418-.882.91-.882h4.49c.485 0 .911.412.911.882v3.11h1.376v-.003zM13.948 17.45v-4.91H9.89v4.91h4.06zM9.89 9.728v1.594h4.06V9.728H9.89zm4.37-1.215c.577 0 .924.621.924 1.22v7.718c0 .695-.397 1.221-.924 1.221H9.584c-.527 0-.924-.524-.924-1.221v-7.72c0-.6.344-1.221.924-1.221l4.675.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTreeFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.03 5.773C15.785 2.185 11.746 2 10.923 2c-1.062 0-6.275.289-6.468 5.894C3.384 8.322 2 9.367 2 11.888c0 3.21 2.244 4.353 4.342 4.353h4.832v-1.51l-2.398-2.426a.612.612 0 01.003-.86.603.603 0 01.854.003l1.54 1.558V9.43a.605.605 0 111.21 0v1.034l1.194-1.627a.605.605 0 11.972.722l-2.143 2.922c-.005.008-.017.011-.022.02v3.728l-1.208.01v4.836a.605.605 0 101.21 0v-4.838l4.04-.025c2.431 0 5.266-1.378 5.266-5.26-.006-3.51-2.333-4.961-4.661-5.18"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTreeLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.162 10.148a.398.398 0 00.031.664c.563.339.835.899.835 1.711 0 1.05-.476 1.712-1.417 1.961-.188.05-.308.283-.308.465 0 3.056-2.838 3.294-3.71 3.294h-.01v-4.695c.02-.02.047-.03.064-.053l2.305-2.935a.392.392 0 00-.064-.552l-.025-.02a.455.455 0 00-.605.084l-1.673 2.132V9.73c0-.224-.193-.406-.43-.406-.239 0-.432.182-.432.406v5.715L9.7 13.529a.452.452 0 00-.61-.003.39.39 0 00-.026.552c.009.008.014.017.023.022l2.596 2.462c.012.012.026.014.037.023v1.568c-.938-.16-2.283-.633-2.698-2.086a.424.424 0 00-.406-.3c-.829-.02-2.753-.314-2.753-2.628 0-.935.308-1.633.916-2.078a.4.4 0 00.165-.342.408.408 0 00-.199-.325c-.56-.336-.835-.896-.835-1.711 0-1.059.463-1.7 1.42-1.96.185-.051.306-.281.306-.463 0-3.056 2.837-3.294 3.709-3.294.691 0 2.997.157 3.571 2.17a.43.43 0 00.403.3c1.031.034 2.76.418 2.76 2.633 0 .95-.3 1.628-.917 2.079m1.782-2.073c0-2.314-1.644-3.277-3.286-3.429-.882-2.367-3.73-2.49-4.31-2.49-.746 0-4.384.188-4.56 3.888-1.124.423-1.738 1.35-1.738 2.647 0 1.031.381 1.678.807 2.076-.571.59-.857 1.39-.857 2.378 0 2.325 1.641 3.283 3.283 3.426.647 1.73 2.347 2.26 3.44 2.42v2.445c0 .227.193.407.431.407s.431-.183.431-.407v-2.378h.012c.745 0 4.383-.187 4.56-3.888.756-.283 1.74-.972 1.74-2.647 0-.885-.272-1.582-.807-2.078.568-.588.854-1.384.854-2.37"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTreeRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.42 15l-4.039.025v-2.524c.006-.008.017-.01.022-.02l2.143-2.92a.611.611 0 00-.129-.852.603.603 0 00-.843.123l-.003.003-1.193 1.627V9.43a.605.605 0 10-1.21 0v3.574L9.63 11.445a.602.602 0 00-.851-.008l-.006.006a.61.61 0 00-.003.86l2.398 2.425v.297H6.342c-.941 0-3.135-.305-3.135-3.137 0-1.591.678-2.594 2.014-2.975a.607.607 0 00.44-.596l-.006-.099c0-4.641 4.028-5 5.264-5 .7 0 4.235.16 5.073 3.297.067.258.3.443.565.451 1.18.034 3.92.488 3.92 3.992.002 3.75-3.104 4.042-4.057 4.042m.61-9.224C15.785 2.188 11.746 2 10.923 2c-1.062 0-6.275.289-6.468 5.894C3.384 8.324 2 9.37 2 11.888c0 3.21 2.244 4.356 4.342 4.356h4.829v4.834c0 .337.272.608.605.608a.609.609 0 00.605-.608v-4.837l4.04-.025c2.428 0 5.265-1.378 5.265-5.26 0-3.513-2.327-4.964-4.655-5.18"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrendDownLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.842 14.853v3.68c0 .23-.188.415-.415.412h-3.73a.414.414 0 01-.424-.406v-.006c0-.23.185-.411.423-.411h2.81L14.53 9.836 6.968 13.07a.429.429 0 01-.532-.174L2.212 5.623a.414.414 0 01.154-.566c.002-.003.005-.003.008-.005a.436.436 0 01.577.156l4.036 6.956 7.521-3.219a.416.416 0 01.516.14l5.972 8.275v-2.51c0-.23.185-.412.423-.412a.417.417 0 01.423.415"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrendDownRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.842 14.778l-.429 3.482a.787.787 0 01-.787.687h-3.49a.787.787 0 01-.793-.78.79.79 0 01.793-.778h1.882l-4.986-6.95-6.793 2.928a.818.818 0 01-1.016-.334L2.262 6.168a.777.777 0 01.294-1.062l.008-.005a.8.8 0 011.079.294l3.61 6.255 6.732-2.894a.8.8 0 01.969.263l5.117 7.146.19-1.574a.804.804 0 01.889-.686c.428.047.74.437.692.865v.008"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrendUpLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.842 5.412v3.675c0 .23-.193.412-.423.412a.414.414 0 01-.423-.407V6.585l-5.972 8.28a.44.44 0 01-.515.14l-7.53-3.226-4.028 6.958a.446.446 0 01-.582.157.414.414 0 01-.16-.563l4.218-7.28a.427.427 0 01.544-.174l7.554 3.238 5.98-8.289h-2.817a.425.425 0 01-.423-.414.419.419 0 01.423-.412h3.731c.23 0 .423.18.423.412"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrendUpRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.846 5.6v3.576c0 .328-.28.6-.622.6a.612.612 0 01-.622-.6V7.353l-5.47 7.54a.62.62 0 01-.754.208L7.18 12.039l-3.86 6.602a.613.613 0 01-.537.303.701.701 0 01-.308-.073.592.592 0 01-.244-.801c.005-.008.008-.017.014-.022l4.132-7.065a.625.625 0 01.787-.255l7.246 3.079 5.524-7.603H17.58a.612.612 0 01-.622-.599v-.003c0-.336.275-.602.622-.602h3.644a.61.61 0 01.622.6"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrophyFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.602 9.927c-.14.003-.28 0-.42-.005.53-1.451.717-3.289.734-5.412v-.48c.93.08 2.512.561 2.512 2.93 0 2.64-1.977 2.953-2.826 2.967m-11.515 0c-.852-.011-2.83-.325-2.83-2.966 0-2.104 1.247-2.72 2.177-2.888v.24c.011 2.21.196 4.116.745 5.611-.03 0-.061.003-.092.003m11.832-7.302a.628.628 0 00-.63-.625H6.061a.625.625 0 00-.628.622v.193C3.678 3.042 2 4.215 2 6.961c0 3.061 2.1 4.182 4.067 4.21.118.003.233.003.35-.003.093 0 .222-.008.359-.022.868 1.364 2.26 2.173 4.44 2.277v3.412c-2.367.221-3.675 1.692-3.675 4.23 0 .344.283.621.63.621h7.347c.347 0 .63-.28.63-.622 0-2.535-1.308-4.005-3.675-4.23V13.41c2.149-.177 3.311-.83 4.12-2.297h.034c.216.028.521.056.639.059.07.003.146.003.227.003h.129c1.966-.028 4.067-1.152 4.067-4.21 0-2.92-1.896-4.062-3.767-4.177v-.162h-.003z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrophyLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.893 10.263c-.11.003-.23 0-.322-.003a3.171 3.171 0 01-.432-.045c.62-1.496.827-3.445.85-5.725v-.717c.957.025 3.019.403 3.019 3.232 0 2.896-2.18 3.244-3.115 3.258m-5.86 2.316c-.011-.003-.022-.008-.036-.008-.017 0-.034.008-.05.011-.043 0-.08.003-.118.003-3.905 0-5.297-2.171-5.323-8.289V2.983h10.65c0 .537 0 1.414-.003 1.504-.056 5.871-1.403 8.017-5.12 8.092m3.294 8.437H8.672c.131-1.955 1.22-2.907 3.327-2.907 2.104 0 3.196.952 3.328 2.907M6.106 10.263C5.167 10.249 2.99 9.9 2.99 7.005c0-2.527 1.641-3.1 2.678-3.21v.504c.011 2.415.21 4.429.835 5.95-.225.014-.395.011-.398.014m11.882-7.314v-.38a.411.411 0 00-.414-.413H6.086a.412.412 0 00-.417.412v.409c-1.765.157-3.513 1.269-3.513 4.028 0 2.966 2.034 4.056 3.939 4.084h.042c.112 0 .423-.006.764-.045.874 1.47 2.33 2.303 4.681 2.359v3.907c-2.42.154-3.756 1.591-3.756 4.118 0 .23.185.415.417.415h7.515a.414.414 0 00.418-.412v-.003c0-2.53-1.34-3.966-3.756-4.118v-3.924c2.162-.132 3.529-.989 4.358-2.417.025.01.05.028.079.036.254.059.568.078.7.081.073.003.157.003.244.003h.109c1.902-.028 3.938-1.118 3.938-4.084-.005-2.938-1.986-4.02-3.86-4.056"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTrophyRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.6 9.927a5.675 5.675 0 01-.418-.008c.53-1.451.717-3.289.737-5.412v-.479c.93.078 2.51.56 2.51 2.93 0 2.641-1.978 2.955-2.83 2.97m-.94-5.432c-.054 5.652-1.27 7.624-4.785 7.697-.011-.003-.16.006-.199.006-3.7 0-4.958-1.992-4.986-7.888V3.244h9.97c.002.515.002 1.173 0 1.252m-1.805 15.947H8.83c.185-1.64 1.157-2.41 3.011-2.41 1.857 0 2.83.77 3.014 2.41M6.087 9.927c-.852-.011-2.83-.325-2.83-2.966 0-2.104 1.247-2.72 2.177-2.888v.24c.011 2.21.196 4.116.745 5.611-.03 0-.061.003-.092.003m11.832-7.143v-.16a.625.625 0 00-.628-.621H6.061a.625.625 0 00-.627.622v.193C3.678 3.045 2 4.216 2 6.96c0 3.061 2.1 4.182 4.067 4.21h.13c.078 0 .153 0 .218-.003.092 0 .22-.008.358-.022.868 1.364 2.26 2.173 4.44 2.277v3.412c-2.367.221-3.675 1.692-3.675 4.23 0 .344.283.621.63.621h7.347c.348 0 .628-.28.628-.622 0-2.537-1.308-4.005-3.675-4.23V13.41c2.03-.168 3.325-.975 4.145-2.305l.135.025a4.94 4.94 0 00.74.042h.128c1.967-.028 4.067-1.151 4.067-4.21.003-2.919-1.893-4.062-3.764-4.177"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTruckFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.955 19.65c-1.126 0-1.697-.594-1.697-1.757 0-1.17.571-1.764 1.697-1.764 1.118 0 1.69.594 1.69 1.764 0 1.163-.572 1.757-1.69 1.757zm-9.65 0c-1.126 0-1.697-.594-1.697-1.757 0-1.17.571-1.764 1.697-1.764 1.118 0 1.69.594 1.69 1.764 0 1.163-.572 1.757-1.69 1.757zm14.7-7.983a479.146 479.146 0 01-2.831-3.922c-.41-.585-1.126-.97-1.835-.97h-.009l-.82.01V5.17c0-.82-.645-1.482-1.432-1.482L3.457 3.681c-.79 0-1.432.67-1.432 1.49V16.95c0 .809.628 1.473 1.406 1.487.202 1.54 1.264 2.468 2.872 2.468 1.599 0 2.66-.93 2.854-2.468h3.935c.194 1.54 1.255 2.468 2.863 2.468 1.6 0 2.661-.93 2.854-2.468h.869c.507 0 1.028-.233 1.423-.644a2.19 2.19 0 00.61-1.482v-2.97c.003-.728-.456-1.347-.705-1.674z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTruckLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.694 16.664a1.05 1.05 0 01-.731.328h-1.084c-.18-1.412-1.165-2.247-2.717-2.247-.23 0-.451.017-.656.06V7.657h1.048c.395 0 .82.21 1.042.516.395.538 2.636 3.493 2.913 3.851.188.247.502.656.502 1.023l.008 2.89c.003.253-.12.522-.325.726zm-4.532 2.737c-1.263 0-1.93-.661-1.93-1.919s.664-1.919 1.93-1.919 1.93.661 1.93 1.919-.667 1.919-1.93 1.919zm-2.717-2.41H9.027c-.179-1.411-1.165-2.246-2.717-2.246-1.549 0-2.53.835-2.708 2.247h-.188a.438.438 0 01-.437-.432V5.062c0-.238.196-.434.434-.434l10.838.008c.246 0 .437.196.437.434v10.011c-.692.367-1.126 1.02-1.241 1.91zm-7.135 2.41c-1.263 0-1.93-.661-1.93-1.919s.664-1.919 1.93-1.919 1.93.661 1.93 1.919-.666 1.919-1.93 1.919zm15.524-6.353c0-.644-.434-1.216-.675-1.518-.28-.362-2.501-3.3-2.9-3.832-.377-.524-1.05-.857-1.705-.857h-1.05V5.067c0-.686-.56-1.249-1.258-1.249L3.414 3.812c-.7 0-1.258.564-1.258 1.25v11.496c0 .686.56 1.249 1.255 1.249h.174c.126 1.51 1.117 2.409 2.725 2.409 1.611 0 2.603-.9 2.726-2.41h4.4c.132 1.51 1.118 2.41 2.726 2.41 1.61 0 2.602-.9 2.725-2.41h1.076a1.89 1.89 0 001.314-.562c.361-.359.566-.835.566-1.305l-.009-2.891z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTruckRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.482 16.31a.897.897 0 01-.258.595c-.168.176-.386.274-.571.274h-.885c-.258-1.445-1.295-2.308-2.838-2.308-.154 0-.297.009-.443.025v-6.86l.827-.008c.313 0 .678.193.854.443.395.56 2.583 3.58 2.863 3.958.168.226.45.61.45.921v2.96zm-4.555 3.34c-1.126 0-1.697-.594-1.697-1.756 0-1.174.571-1.768 1.697-1.768 1.118 0 1.69.594 1.69 1.765 0 1.165-.572 1.759-1.69 1.759zm-2.846-2.468H9.118c-.258-1.445-1.294-2.308-2.838-2.308-1.552 0-2.588.863-2.846 2.308a.237.237 0 01-.227-.232V5.168a.23.23 0 01.224-.235l10.622.008a.23.23 0 01.227.227v10.129c-.636.395-1.045 1.04-1.199 1.885zM6.277 19.65c-1.126 0-1.697-.594-1.697-1.756 0-1.171.571-1.765 1.697-1.765 1.118 0 1.69.594 1.69 1.765 0 1.162-.572 1.756-1.69 1.756zm14.7-7.98a447.317 447.317 0 01-2.829-3.925c-.409-.585-1.126-.97-1.834-.97h-.009l-.82.01V5.167c0-.82-.645-1.482-1.432-1.482L3.431 3.678c-.79 0-1.431.67-1.431 1.49v11.779c0 .812.627 1.473 1.409 1.487.199 1.54 1.263 2.468 2.871 2.468 1.6 0 2.661-.927 2.854-2.468h3.93c.194 1.54 1.255 2.468 2.863 2.468 1.6 0 2.661-.927 2.855-2.468h.868c.507 0 1.03-.232 1.423-.644a2.19 2.19 0 00.61-1.482v-2.97c.003-.725-.456-1.344-.705-1.669z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTshirtFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.487 5.756L15.384 2.06c-.003-.003-.009-.003-.011-.003a.373.373 0 00-.098-.036c-.023-.006-.045-.014-.07-.014-.009 0-.017-.006-.023-.006-.014 0-.028.006-.04.008a.38.38 0 00-.1.023c-.014.005-.022.011-.036.017a.344.344 0 00-.101.07l-.017.016c-.02.023-.045.04-.059.068-.008.016-.008.033-.017.047 0 .003 0 .006-.002.006a.36.36 0 00-.031.16c0 1.907-.919 2.837-2.801 2.837-1.886 0-2.801-.927-2.801-2.84a.414.414 0 00-.202-.356.412.412 0 00-.406-.003L2.205 5.751a.413.413 0 00-.168.526l1.974 4.398a.404.404 0 00.54.202l1.614-.773-.033 11.168c0 .109.042.215.117.294a.41.41 0 00.289.12h10.868a.403.403 0 00.286-.12.42.42 0 00.118-.294l-.034-11.163 1.583.768c.1.047.218.053.322.014a.42.42 0 00.23-.23l1.744-4.4a.407.407 0 00-.168-.505"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTshirtLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.476 10.104L17.7 9.242a.415.415 0 00-.392.022.414.414 0 00-.188.35l.034 11.406H7.1l.034-11.406a.407.407 0 00-.58-.373l-1.82.875L3.08 6.435l5.476-3.182c.232 1.927 1.479 2.977 3.571 2.977 2.087 0 3.328-1.05 3.563-2.963l5.238 3.17-1.453 3.667zm2.168-4.193L15.54 2.214c-.003-.003-.008-.003-.011-.003a.368.368 0 00-.098-.034l-.07-.014c-.009 0-.014-.005-.023-.005-.014 0-.025.005-.039.008a.428.428 0 00-.1.02.456.456 0 00-.138.086c-.006.003-.011.012-.017.017-.02.023-.045.04-.059.068-.008.016-.01.03-.016.047 0 .003-.003.006-.003.006a.386.386 0 00-.03.16c0 1.91-.917 2.837-2.805 2.837-1.885 0-2.801-.93-2.801-2.84a.405.405 0 00-.608-.356L2.361 5.908a.413.413 0 00-.168.527l1.975 4.4a.404.404 0 00.543.202l1.613-.773-.033 11.168c0 .11.042.216.117.291.076.079.18.12.286.12h10.869c.106 0 .21-.041.285-.12a.418.418 0 00.118-.29l-.034-11.163 1.583.767a.403.403 0 00.552-.218l1.745-4.398a.412.412 0 00-.168-.51z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTshirtRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M19.064 9.742l-1.549-.753a.596.596 0 00-.854.546l.034 10.97H7.244l.033-10.97A.61.61 0 007 9.022a.584.584 0 00-.574-.036l-1.605.768L3.36 6.5l4.956-2.876C8.64 5.437 9.91 6.42 11.972 6.42c2.02 0 3.297-1.005 3.639-2.784l4.736 2.874-1.283 3.232zm2.334-4.005l-5.983-3.625c-.009-.003-.014-.003-.023-.008a.728.728 0 00-.24-.07c-.012-.003-.023-.009-.037-.009-.023 0-.04.011-.062.011a.652.652 0 00-.143.031c-.022.009-.042.02-.064.031a.606.606 0 00-.135.092.3.3 0 00-.039.045c-.025.028-.056.05-.075.084-.012.02-.014.042-.02.06-.008.016-.011.03-.017.044a.66.66 0 00-.039.19c0 .006-.003.009-.003.014 0 1.762-.81 2.583-2.546 2.583-1.737 0-2.546-.82-2.546-2.583a.606.606 0 00-.297-.523.592.592 0 00-.594-.003L2.303 5.725a.61.61 0 00-.247.774l1.936 4.31a.594.594 0 00.339.317.582.582 0 00.459-.022l1.297-.62-.031 10.62c0 .16.062.313.174.428a.586.586 0 00.423.177h10.641a.598.598 0 00.597-.605l-.034-10.614 1.266.614a.593.593 0 00.81-.317l1.711-4.31a.606.606 0 00-.246-.74z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTvContentFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.396 17.374H5.59c-1.12 0-1.989-.314-2.583-.93-.568-.594-.857-1.44-.857-2.515V7.93c0-2.201 1.221-3.411 3.44-3.411l12.806.008c2.219 0 3.44 1.213 3.44 3.412v5.997c0 1.076-.288 1.922-.86 2.51-.594.616-1.462.927-2.58.927zm-3.95 2.199H9.532a.562.562 0 01-.56-.56c0-.309.252-.56.56-.56h4.916a.561.561 0 010 1.12z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTvContentLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M5.315 17.297c-1.043 0-1.842-.275-2.383-.815-.518-.522-.782-1.28-.782-2.25V8.146c0-.97.264-1.722.782-2.236.536-.532 1.337-.8 2.38-.8l13.366-.01c1.043 0 1.844.269 2.38.801.518.516.782 1.269.782 2.236v6.087c0 .97-.264 1.728-.782 2.25-.538.54-1.34.814-2.383.814l-13.36.009zM18.68 5.643l-13.366.008c-1.752 0-2.604.815-2.604 2.494v6.088c0 .825.21 1.453.625 1.871.429.432 1.093.65 1.979.65l13.366-.009c.883 0 1.55-.217 1.979-.649.415-.416.625-1.046.625-1.872V8.137c-.003-1.679-.852-2.494-2.604-2.494zm-3.953 13.24H9.26a.277.277 0 01-.28-.272c0-.149.126-.271.28-.271h5.47c.153 0 .28.122.28.271 0 .15-.127.272-.28.272z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconTvContentRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.396 17.368L5.593 17.36c-1.12 0-1.99-.311-2.58-.927-.574-.591-.863-1.437-.863-2.513V7.923c0-2.202 1.221-3.412 3.44-3.412l12.806.009c2.219 0 3.44 1.212 3.44 3.411v5.998c0 1.075-.288 1.921-.86 2.512-.594.616-1.462.927-2.58.927zM5.59 5.632c-.807 0-1.406.193-1.779.574-.358.367-.54.944-.54 1.717v5.997c0 1.583.736 2.32 2.319 2.32l12.804.008c1.582 0 2.319-.737 2.319-2.32V7.932c0-.773-.182-1.35-.543-1.717-.373-.38-.97-.574-1.78-.574l-12.8-.008zm8.857 13.95l-4.916-.01a.562.562 0 01-.56-.56c0-.308.252-.56.56-.56l4.916.009c.308 0 .56.252.56.56 0 .308-.252.56-.56.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUmbrellaFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.557 4.515c1.387.622 4.233 2.782 4.877 7.897.003.014.011.025.011.036l-4.893-.014c.003.003.005-7.919.005-7.919zM6.143 12.42c.765-4.773 3.711-7.14 5.154-7.874l.006 7.888-5.16-.014zm15.549-1.725c.073.417-.042.86-.317 1.204a1.58 1.58 0 01-1.199.558l-1.526-.003a.606.606 0 00.014-.19c-.804-6.382-4.706-8.583-6.104-9.068 2.913.126 5.196 1.011 6.804 2.653 1.205 1.23 1.989 2.863 2.328 4.846zm-10.4-7.496c-1.356.574-5.508 3.11-6.407 9.213v.005l-1.314-.002a1.636 1.636 0 01-.815-.233 1.539 1.539 0 01-.706-1.552c.353-1.983 1.152-3.608 2.37-4.826 1.625-1.639 3.939-2.51 6.871-2.605zm3.94 15.636a.616.616 0 01.62.61c0 1.236-1.02 2.241-2.272 2.241-1.235 0-2.247-.977-2.272-2.19l-.003-.042v-7.02h1.238v7.011c0 .56.463 1.02 1.034 1.02.569 0 1.03-.457 1.03-1.02a.624.624 0 01.625-.61zM12.541 3.196h-1.227c0-.011-.006-.022-.006-.034v-.551a.616.616 0 01.62-.611.616.616 0 01.618.61v.55c.003.014-.003.022-.005.036z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUmbrellaLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.89 11.411a.521.521 0 01-.403.182l-2.025-.005c-.69-4.12-2.745-6.213-4.34-7.233 1.995.305 3.6 1.053 4.777 2.252 1.08 1.104 1.784 2.586 2.098 4.404a.529.529 0 01-.107.4zm-8.384-6.963c1.27.51 4.225 2.215 5.096 7.137l-5.096-.014V4.448zM6.4 11.557c.835-4.765 4.034-6.594 5.263-7.126v7.137L6.4 11.557zm-3.151-.09a.52.52 0 01-.24-.515c.321-1.815 1.04-3.292 2.133-4.384 1.222-1.232 2.902-1.98 5-2.25-1.644 1.048-3.935 3.208-4.6 7.236l-2.013-.006a.58.58 0 01-.28-.08zm18.577-.596c-.34-1.984-1.12-3.611-2.322-4.84-1.639-1.673-3.99-2.567-6.998-2.66v-.797a.42.42 0 00-.423-.418.421.421 0 00-.423.418v.804c-3.056.053-5.456.927-7.12 2.61-1.216 1.213-2.011 2.838-2.364 4.82a1.343 1.343 0 00.625 1.368c.21.129.465.202.72.204l8.14.02v7.378c.008 1.14.952 2.065 2.112 2.065 1.162 0 2.109-.933 2.109-2.079a.42.42 0 00-.423-.417.421.421 0 00-.423.417 1.26 1.26 0 01-1.266 1.247c-.698 0-1.266-.56-1.266-1.247v-7.358l7.977.022c.41 0 .793-.177 1.059-.49.25-.308.353-.698.286-1.067z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUmbrellaRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.387 11.134a.308.308 0 01-.236.107l-1.812-.006c-.602-3.375-2.135-5.361-3.55-6.501 1.494.361 2.724 1.014 3.66 1.97 1.027 1.05 1.7 2.464 1.996 4.206a.31.31 0 01-.058.224zm-7.84-6.372c1.29.6 3.71 2.266 4.534 6.473l-4.535-.01V4.761zm-5.945 6.445c.799-4.064 3.406-5.82 4.703-6.453v6.467l-4.703-.014zm-3.218-.056c-.011-.008-.04-.028-.07-.061a.294.294 0 01-.07-.236c.308-1.736.991-3.145 2.033-4.187.978-.986 2.272-1.647 3.85-1.986-1.494 1.157-3.183 3.17-3.78 6.52l-1.795-.005a.342.342 0 01-.168-.045zm18.28-.448c-.34-1.983-1.123-3.616-2.328-4.846-1.605-1.639-3.885-2.524-6.79-2.653v-.593A.616.616 0 0011.927 2a.616.616 0 00-.619.61v.594c-2.952.087-5.283.961-6.913 2.608-1.219 1.222-2.017 2.846-2.37 4.83a1.523 1.523 0 00.706 1.546c.238.145.524.23.815.232l7.762.023v7.014c0 .014 0 .028.003.042.025 1.212 1.036 2.19 2.272 2.19 1.252 0 2.271-1.006 2.271-2.24a.616.616 0 00-.619-.611.616.616 0 00-.619.61c0 .56-.465 1.017-1.033 1.017a1.028 1.028 0 01-1.034-1.017v-7.003l7.605.02c.46-.003.894-.199 1.196-.557.275-.348.39-.788.314-1.205z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserAccountFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.587 11.86c-1.558 0-2.77-.409-3.61-1.219-.872-.84-1.315-2.086-1.315-3.705 0-1.62.443-2.869 1.314-3.712C8.816 2.412 10.03 2 11.586 2c1.558 0 2.774.412 3.617 1.224.877.843 1.32 2.093 1.32 3.712 0 1.619-.446 2.865-1.323 3.705-.84.81-2.056 1.219-3.613 1.219zm8.193 9.832H3.394a.562.562 0 01-.56-.56v-1.639c0-1.569.487-2.905 1.411-3.868 1.008-1.05 2.504-1.608 4.33-1.608h6.009c1.826 0 3.328.554 4.336 1.605.93.966 1.42 2.302 1.42 3.871v1.639c0 .308-.252.56-.56.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserAccountLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M22.155 23.8H1.836a.337.337 0 01-.336-.335v-2.622c0-1.792.558-3.318 1.61-4.413 1.15-1.19 2.867-1.822 4.965-1.822h7.842c2.097 0 3.815.632 4.965 1.825 1.055 1.096 1.61 2.622 1.61 4.413v2.622a.336.336 0 01-.337.333zm-19.983-.67H21.82v-2.286c0-1.613-.49-2.978-1.422-3.946-1.035-1.073-2.54-1.617-4.48-1.617H8.075c-1.94 0-3.446.544-4.48 1.617-.932.968-1.423 2.33-1.423 3.946v2.286zm9.822-11.126c-3.859 0-5.899-2.04-5.899-5.9 0-1.96.524-3.458 1.56-4.46.998-.965 2.457-1.456 4.34-1.456 1.881 0 3.344.491 4.349 1.456 1.042 1.002 1.566 2.504 1.566 4.46 0 3.86-2.044 5.9-5.916 5.9zm0-11.143c-1.7 0-3.005.427-3.872 1.267-.898.87-1.355 2.208-1.355 3.976 0 1.769.457 3.103 1.355 3.967.867.837 2.171 1.257 3.872 1.257s3.012-.424 3.882-1.26c.905-.868 1.362-2.202 1.362-3.967 0-1.765-.457-3.106-1.362-3.976C15.003 1.287 13.698.86 11.994.86z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserAccountRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.438 14.505c2.496 0 4.52 2.023 4.519 4.504l.041 2.229-.007.11a.75.75 0 01-.742.647h-16a.749.749 0 01-.749-.749v-2.223a4.517 4.517 0 014.518-4.518zm0 1.498h-8.42a3.02 3.02 0 00-3.02 3.02v1.474h14.488l-.032-1.651a3.02 3.02 0 00-3.016-2.843zM12.25 2.5c3.343 0 5.25 1.839 5.25 5.25S15.592 13 12.25 13c-3.259 0-5.154-1.748-5.246-4.997L7 7.75l.004-.253C7.095 4.247 8.99 2.5 12.249 2.5zm0 1.5C9.723 4 8.5 5.18 8.5 7.75c0 2.57 1.224 3.75 3.75 3.75S16 10.32 16 7.75C16 5.18 14.775 4 12.25 4z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserSupportFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.008 2h-6.582a1.664 1.664 0 00-1.67 1.658v4.037c0 .952.681 1.67 1.583 1.67h.557v1.383c0 .395-.084.773.294.835.379.061.676-.336.902-.608.227-.272.866-.922 1.463-1.61l3.453.008c.922 0 1.667-.748 1.67-1.67V3.67A1.672 1.672 0 0020.008 2zm-3.12 6.28a.526.526 0 11-.001-1.052.526.526 0 01.001 1.052zm.882-2.787c-.103.104-.383.291-.383.518v.208a.503.503 0 01-.502.512.503.503 0 01-.501-.512V6.01c0-.538.35-.851.585-1.078.093-.09.325-.238.325-.454 0-.137-.078-.434-.412-.434-.333 0-.501.269-.501.428a.5.5 0 01-1 .026v-.023c0-.837.583-1.38 1.501-1.38.86 0 1.437.716 1.437 1.386.006.568-.302.765-.549 1.011zM8.465 15.507c1.134 0 2.014-.322 2.613-.958.566-.6.855-1.445.855-2.513 0-1.067-.289-1.91-.855-2.512-.599-.636-1.479-.958-2.613-.958s-2.014.322-2.613.958c-.566.6-.855 1.445-.855 2.512 0 1.068.289 1.91.855 2.513.599.636 1.479.958 2.613.958zm2.61.986h-5.22c-1.261 0-2.23.33-2.877.986-.647.655-.978 1.625-.978 2.89v1.043c0 .154.126.28.28.28h12.37a.28.28 0 00.28-.28V20.37c0-1.266-.328-2.241-.978-2.894-.65-.652-1.616-.983-2.876-.983z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserSupportLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.232 16.635c1.26 0 2.23.33 2.877.986.647.656.977 1.625.977 2.894v1.042a.28.28 0 01-.28.277H2.436a.28.28 0 01-.28-.28v-1.042c0-1.266.328-2.24.978-2.894.65-.652 1.616-.983 2.877-.983h5.22zm0 .56H6.01c-1.107 0-1.942.275-2.482.818-.54.544-.813 1.387-.813 2.499v.762h11.81v-.762c0-1.115-.275-1.955-.812-2.499-.538-.543-1.376-.818-2.482-.818zm-2.61-8.484c1.134 0 2.013.322 2.613.958.566.6.854 1.445.854 2.512 0 1.068-.288 1.91-.854 2.513-.6.633-1.48.955-2.614.955s-2.014-.322-2.613-.958c-.569-.6-.855-1.442-.855-2.51 0-1.067.289-1.91.855-2.512.6-.636 1.479-.958 2.613-.958zm0 .56c-1.328 0-2.908.504-2.908 2.91 0 1.328.504 2.908 2.907 2.908 2.404 0 2.908-1.583 2.908-2.908 0-1.324-.504-2.91-2.908-2.91zm11.84-7.115c.36.006.708.152.963.41.258.254.406.599.41.96V7.35a1.4 1.4 0 01-1.373 1.372h-4.219l-.146.219c-.344.514-.828 1.24-.86 1.29-.078.121-.268.415-.577.415a.516.516 0 01-.092-.008c-.395-.07-.395-.434-.395-.555V8.725h-.812a1.4 1.4 0 01-1.373-1.373V3.53c0-.717.695-1.373 1.457-1.373h7.017zm0 .56h-7.017c-.454 0-.897.404-.897.813v3.823c0 .426.387.813.813.813h1.092a.28.28 0 01.28.28v1.532l.031-.045c.053-.084 1.053-1.58 1.095-1.641a.273.273 0 01.233-.124h4.37a.843.843 0 00.812-.812V3.53a.843.843 0 00-.812-.813zm-3.555 4.236c.09-.003.176.03.238.095a.322.322 0 010 .457.317.317 0 01-.238.098.319.319 0 01-.235-.096.314.314 0 01-.098-.227c0-.179.145-.327.325-.327h.008zm-.011-3.74c.694 0 1.28.58 1.28 1.264 0 .523-.297.784-.516.974l-.022.02c-.048.042-.098.081-.148.123-.082.062-.244.194-.272.255v.51a.313.313 0 01-.254.316l-.065.006a.322.322 0 01-.323-.322v-.521c0-.347.3-.583.519-.754.044-.036.09-.07.12-.098l.022-.02c.2-.176.295-.268.295-.49 0-.364-.337-.618-.636-.618-.364 0-.636.266-.636.619a.32.32 0 01-.336.308.319.319 0 01-.308-.308c0-.71.563-1.264 1.28-1.264z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconUserSupportRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.006 15.927c1.339 0 2.372.359 3.075 1.067.703.71 1.06 1.745 1.06 3.09v1.04c0 .31-.25.56-.561.56H2.56a.562.562 0 01-.56-.56v-1.04c0-1.345.356-2.384 1.059-3.09.703-.705 1.74-1.067 3.075-1.067h4.872zm.002 1.12H6.134c-1.028 0-1.795.247-2.28.737-.484.49-.734 1.264-.734 2.3v.479h10.9v-.479c0-1.036-.247-1.812-.731-2.3-.485-.487-1.253-.736-2.28-.736zM8.571 7.63c1.216 0 2.163.353 2.818 1.045.617.653.93 1.563.93 2.703s-.313 2.05-.93 2.703c-.655.698-1.605 1.048-2.818 1.048-1.215 0-2.162-.35-2.817-1.045-.62-.653-.93-1.563-.93-2.703s.313-2.05.93-2.703C6.409 7.983 7.356 7.63 8.57 7.63zm0 1.12c-1.745 0-2.627.886-2.627 2.628s.885 2.628 2.627 2.628c1.743 0 2.628-.886 2.628-2.628s-.885-2.627-2.628-2.627zM20.078 2c.891 0 1.614.723 1.614 1.613v3.902c0 .891-.723 1.614-1.614 1.614H16.79c-.314.496-.978 1.54-1.11 1.74-.29.445-.705.714-1.08.714a.754.754 0 01-.113-.009c-.414-.061-.75-.462-.75-.888v-1.56h-.11c-.87 0-1.529-.695-1.529-1.613v-3.9c0-.89.723-1.613 1.613-1.613h6.367zm0 1.12h-6.367a.494.494 0 00-.493.493v3.902c0 .247.127.493.41.493h.669c.308 0 .56.253.56.56v1.51c.328-.51 1.143-1.795 1.151-1.81a.56.56 0 01.474-.26h3.596a.494.494 0 00.493-.493V3.613a.494.494 0 00-.493-.493zm-3.05 3.648a.44.44 0 110 .88.44.44 0 010-.88zm.003-3.295c.72 0 1.201.6 1.201 1.157 0 .476-.257.639-.462.846-.087.087-.322.244-.322.434v.171a.417.417 0 01-.409.429c-.005.003-.008.003-.011.003a.418.418 0 01-.417-.423v-.177c0-.45.294-.711.49-.902.078-.075.272-.199.272-.378 0-.115-.068-.364-.345-.364-.277 0-.417.224-.417.358a.418.418 0 01-.835 0c0-.7.487-1.154 1.255-1.154z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideoFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.608 19.615c1.546-.123 1.795-1.362 1.832-2.101h-1.832v2.1zM3.244 17.53c.028.356.137 1.005.568 1.468.294.31.717.504 1.266.58V17.53H3.244zm.843-13.079c-.199.126-.765.513-.838 1.807h1.83V4.122c-.286.033-.659.115-.992.33zm16.361 1.793c-.017-.336-.103-1.03-.554-1.518-.292-.317-.723-.513-1.283-.591v2.11h1.837zm-1.84 10.02h1.84v-2.087h-1.84v2.087zm0-6.681h1.84V7.497h-1.84v2.087zm0 3.339h1.84v-2.087h-1.84v2.087zM3.235 16.279h1.84v-2.087h-1.84v2.087zm0-6.687h1.843v-2.08H3.235v2.08zm0 1.253v2.092h1.84v-2.092h-1.84zm14.804-8c3.925 0 3.639 3.697 3.639 3.697s.003 6.457.003 10.619c0 3.412-2.443 3.72-3.325 3.72-.194 0-.314-.017-.314-.017H5.625c-3.863 0-3.617-3.683-3.617-3.683L2.006 6.52c0-3.435 2.655-3.678 3.409-3.678.123 0 .196.005.196.005l12.428-.002zM9.591 14.444V9.281l4.39 2.583-4.39 2.58zm5.93-3.123L9.283 7.657a.607.607 0 00-.616 0 .63.63 0 00-.308.543v7.33a.622.622 0 00.616.625.607.607 0 00.308-.084l6.235-3.663a.63.63 0 00.308-.544.628.628 0 00-.305-.543z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideogamesFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.104 11.294c-.138.129-.334.193-.586.193-.252 0-.448-.064-.585-.193-.143-.134-.213-.33-.213-.59 0-.261.073-.46.213-.595.137-.129.333-.196.585-.196.252 0 .448.067.586.196.142.135.215.334.215.594-.003.26-.075.46-.215.591m-1.62-1.569c-.134.13-.333.194-.585.194-.25 0-.448-.065-.585-.194-.14-.134-.21-.336-.21-.59 0-.258.072-.457.21-.592.137-.131.333-.196.585-.196.252 0 .448.065.586.196.142.135.212.334.212.591 0 .258-.07.457-.212.591m0 3.14c-.135.132-.334.197-.586.197-.25 0-.448-.065-.585-.196-.14-.135-.21-.334-.21-.592 0-.257.072-.456.21-.59.137-.132.333-.197.585-.197.252 0 .448.068.586.196.142.135.212.334.212.591 0 .258-.07.457-.212.592m-1.62-1.572c-.137.129-.333.193-.585.193-.252 0-.448-.064-.585-.193-.14-.134-.213-.33-.213-.59 0-.261.073-.46.213-.595.137-.129.333-.196.585-.196.252 0 .448.067.586.196.14.135.212.334.212.594.003.26-.07.46-.212.591m-4.91.188c-.189.176-.463.266-.819.266h-.112l.003.022c.014.062.02.126.02.177 0 .364-.098.641-.289.82-.185.177-.462.267-.818.267-.358 0-.633-.09-.818-.267-.187-.173-.285-.453-.285-.82 0-.034.01-.12.016-.157-.042.005-.072.005-.168.005-.358 0-.633-.09-.82-.266-.188-.176-.286-.453-.286-.82 0-.367.098-.642.288-.827.182-.173.46-.263.815-.263.031 0 .118.008.146.011h.02c-.006-.05-.011-.1-.011-.16 0-.366.098-.644.29-.823.183-.174.457-.263.816-.263.356 0 .63.09.818.266.193.182.288.46.288.823 0 .02-.002.07-.005.107a.651.651 0 01.095-.006c.356 0 .63.09.818.266.193.188.288.465.288.827-.002.355-.1.633-.29.815m9.604-3.827c-.059-.142-.11-.266-.151-.36-.04-.093-.056-.119-.067-.14l-.06-.113a3.042 3.042 0 00-.545-.728c-.681-.647-1.645-.975-2.866-.975-.501 0-.95.07-1.361.176-.244.065-.785.303-.796.309 0 0-.414.232-.546.322a2.375 2.375 0 01-2.65 0 14.5 14.5 0 00-.546-.322 7.513 7.513 0 00-.793-.309 5.254 5.254 0 00-1.361-.176c-1.221 0-2.185.328-2.863.975a3.15 3.15 0 00-.549.728l-.056.112c-.011.022-.028.05-.067.14-.042.095-.095.219-.154.361-.56 1.345-2.165 4.63-2.126 7.499.005.415.162 1.238.286 1.636.243.793.812 1.302 1.436 1.507.255.084.6.143.85.162.024 0 .05.003.078.003.35 0 .95-.143 1.26-.283.19-.087.457-.227.77-.496.188-.162.27-.268.58-.652.219-.27.412-.563.664-.804.58-.555 1.32-.95 2.196-1.193a6.523 6.523 0 011.726-.236 6.39 6.39 0 011.722.236c.88.246 1.617.638 2.196 1.193.255.24.449.535.667.804.311.38.392.49.58.652.314.27.594.41.784.496.336.149.992.28 1.325.28.25 0 .594-.078.849-.162.622-.205 1.193-.714 1.437-1.507.12-.395.277-1.221.283-1.636.033-2.866-1.572-6.151-2.132-7.499"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideogamesLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M16.118 8.32c.256 0 .456.065.595.192.145.134.22.33.22.589 0 .255-.075.452-.22.585-.14.128-.339.192-.595.192-.256 0-.455-.064-.594-.192-.143-.133-.217-.327-.217-.585 0-.258.074-.455.217-.589.14-.127.338-.191.594-.191zm-1.641 1.555c.256 0 .455.064.594.194.145.134.22.33.22.589 0 .255-.075.452-.22.585-.14.128-.338.192-.594.192-.256 0-.456-.064-.595-.192-.142-.133-.219-.327-.219-.585 0-.258.074-.455.22-.589.136-.127.335-.194.594-.194zm1.641 1.557c.256 0 .456.064.595.192.145.133.22.33.22.588 0 .255-.075.452-.22.586-.14.127-.339.191-.595.191-.256 0-.455-.064-.594-.191-.143-.134-.217-.328-.217-.586 0-.255.074-.455.217-.588.14-.128.338-.192.594-.192zm1.645-1.557c.256 0 .455.064.594.194.146.134.22.33.22.589 0 .255-.074.452-.22.585-.139.128-.338.192-.594.192-.26 0-.455-.064-.595-.192-.145-.133-.216-.327-.216-.585 0-.258.074-.455.216-.589.14-.127.339-.194.595-.194zM9.3 10.994c.089-.084.103-.275.103-.384 0-.105-.014-.3-.103-.383-.065-.06-.207-.094-.398-.094-.054 0-.065.006-.085.006h-.032c-.011 0-.022 0-.02-.003a1.27 1.27 0 01-.105.005.458.458 0 01-.242-.058c-.108-.066-.182-.183-.222-.344-.017-.064-.017-.12-.017-.175l-.002-.03c.002-.011.002-.02.002-.028.003-.028.009-.058.009-.075 0-.108-.014-.303-.103-.386-.065-.06-.207-.094-.398-.094-.188 0-.327.033-.392.094-.092.083-.103.278-.103.386 0 .064.009.114.017.166 0 .003 0 .006.003.009.003.02-.003.033 0 .053a.493.493 0 01-.077.34c-.08.106-.21.17-.387.195-.008.003-.017.003-.028.003-.023 0-.043-.003-.068-.003H6.65c-.029 0-.057.003-.083.003-.02 0-.037-.003-.057-.006h-.003c-.03-.002-.06-.01-.096-.01-.188 0-.327.033-.393.096-.088.084-.102.275-.102.383 0 .184.037.322.1.383.065.059.207.095.395.095.094 0 .094 0 .162-.011h.003c.014 0 .06-.006.074-.006h.003c.028-.003.06-.003.088-.003.09 0 .173.017.239.059.108.066.182.18.222.341.014.053.011.094.014.139 0 .016.003.03.003.044-.006.03-.009.059-.012.086-.005.034-.014.072-.014.1 0 .183.037.325.1.383.065.058.207.092.392.092.188 0 .333-.034.399-.095.088-.083.102-.274.102-.383 0-.027-.014-.069-.017-.105l-.009-.061c-.002-.025-.002-.05-.002-.078 0-.033-.009-.064-.006-.1.017-.163.077-.291.176-.369a.516.516 0 01.33-.097h.046l.045.003h.003a.288.288 0 00.08.008h.074c.185.003.33-.033.395-.091zm-.281-1.66c.364.016.651.125.859.316.239.222.358.544.358.96 0 .42-.12.742-.36.964-.203.186-.482.291-.854.31 0 .42-.123.741-.362.963-.227.209-.557.317-.976.317-.418 0-.742-.106-.973-.317-.224-.21-.347-.519-.355-.91-.393-.011-.703-.116-.922-.319-.236-.22-.359-.541-.359-.96 0-.417.123-.741.359-.96.219-.203.529-.311.922-.323.008-.39.128-.696.355-.907.23-.214.555-.322.973-.322.419 0 .749.108.976.322.222.202.344.494.359.866zm11.892 7.121c.106-.338.248-1.076.254-1.398.031-2.329-1.187-5.068-1.844-6.54-.097-.218-.185-.41-.253-.574l-.032-.077c-.042-.103-.082-.192-.113-.264a.647.647 0 00-.037-.075l-.009-.017-.023-.044-.042-.075a2.21 2.21 0 00-.39-.508c-.53-.494-1.315-.74-2.33-.74a4.63 4.63 0 00-1.167.146 7.78 7.78 0 00-.646.247c-.096.053-.364.2-.46.264a3.325 3.325 0 01-3.64 0c-.1-.064-.366-.214-.463-.267a7.206 7.206 0 00-.646-.247 4.596 4.596 0 00-1.164-.147c-1.018 0-1.8.25-2.33.741-.142.13-.27.303-.407.539l-.031.058-.003.003-.023.047-.037.075c-.037.08-.08.18-.128.291l-.02.048c-.07.166-.156.358-.253.577-.654 1.47-1.875 4.21-1.843 6.541.002.322.145 1.06.25 1.4.15.474.486.824.927.965.168.053.447.106.663.12.23 0 .72-.109.948-.209.199-.086.387-.205.58-.366.108-.092.157-.147.39-.427l.097-.114.185-.233c.156-.2.335-.428.56-.636.683-.633 1.55-1.096 2.584-1.38a7.509 7.509 0 011.977-.263c.671 0 1.337.089 1.977.264 1.036.283 1.904.746 2.584 1.379.224.208.4.436.56.638.06.078.123.156.185.23l.094.115c.233.28.282.335.393.427.244.203.455.308.594.366.236.103.783.208 1.002.208.11 0 .358-.041.597-.119.444-.144.783-.497.933-.969zm-1.072-8.82c.569 1.332 2.2 4.588 2.16 7.433-.006.41-.166 1.227-.29 1.618a2.247 2.247 0 01-1.46 1.493c-.26.083-.61.161-.863.161-.338 0-1.004-.13-1.345-.28a3.345 3.345 0 01-.797-.492c-.19-.16-.276-.266-.589-.646-.222-.267-.418-.558-.674-.797-.59-.55-1.34-.94-2.23-1.182a6.776 6.776 0 00-1.75-.233c-.592 0-1.181.077-1.75.233-.89.244-1.64.633-2.23 1.182-.257.239-.453.528-.678.797-.316.377-.398.485-.589.646a3.319 3.319 0 01-.782.492c-.316.138-.925.28-1.284.28h-.08a4.395 4.395 0 01-.861-.161 2.259 2.259 0 01-1.46-1.493c-.122-.391-.282-1.21-.287-1.618-.04-2.842 1.59-6.098 2.16-7.433.059-.141.11-.263.153-.358.04-.089.057-.116.068-.139l.06-.11c.153-.267.33-.514.558-.722.688-.641 1.67-.966 2.91-.966.51 0 .962.07 1.383.178.247.063.796.3.808.305 0 0 .42.23.552.32.407.266.876.399 1.346.399.469 0 .941-.133 1.345-.4.134-.089.555-.32.555-.32.009-.005.558-.24.805-.304a5.476 5.476 0 011.383-.178c1.24 0 2.22.325 2.91.966.223.208.402.455.555.721l.057.111c.012.023.029.05.069.14.05.094.102.218.162.357z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideogamesRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.927 8.35c.252 0 .448.065.586.193.142.135.215.334.215.594 0 .258-.073.457-.215.591-.138.13-.334.194-.586.194-.252 0-.448-.065-.585-.194-.143-.134-.213-.33-.213-.59 0-.261.073-.46.213-.595.134-.128.33-.193.585-.193zm-1.619 1.57c.252 0 .448.064.586.196.142.134.215.333.215.594 0 .257-.073.456-.215.59-.138.13-.334.194-.586.194-.252 0-.448-.064-.585-.193-.14-.135-.216-.33-.216-.591 0-.26.073-.46.216-.594.137-.132.333-.196.585-.196zm1.62 1.568c.251 0 .447.065.585.194.142.134.215.333.215.594 0 .257-.073.456-.215.59-.138.13-.334.194-.586.194-.252 0-.448-.065-.585-.193-.143-.135-.213-.331-.213-.591 0-.261.073-.46.213-.594.134-.13.33-.194.585-.194zm1.615-1.568c.253 0 .449.064.586.196.143.134.216.333.216.594 0 .257-.073.456-.216.59-.137.13-.333.194-.586.194-.254 0-.448-.064-.585-.193-.14-.135-.213-.33-.213-.591 0-.26.073-.46.213-.594.137-.132.333-.196.585-.196zm-8.378-.35c.359 0 .633.086.818.263.193.188.292.462.292.826 0 .364-.099.639-.292.821-.185.176-.462.266-.818.266h-.112l.003.023a.845.845 0 01.022.176c0 .364-.098.639-.29.82-.189.177-.463.264-.819.264-.358 0-.636-.087-.818-.266-.19-.177-.285-.454-.285-.82 0-.034.01-.121.016-.158-.042.003-.072.006-.168.006-.358 0-.633-.09-.818-.266-.187-.177-.285-.457-.285-.824 0-.367.098-.644.288-.823.182-.174.457-.266.815-.266.031 0 .115.005.146.01h.02c-.006-.05-.012-.1-.012-.159 0-.367.096-.644.292-.826.182-.174.456-.266.815-.266.358 0 .633.09.818.266.19.182.291.462.291.826 0 .017-.003.07-.008.107.01.002.042 0 .09 0zm11.087 6.868c.1-.33.227-1.034.23-1.297.03-2.263-1.149-4.978-1.782-6.437-.095-.221-.182-.417-.252-.585l-.036-.09-.104-.244-.025-.056-.014-.028-.006-.01-.039-.074a1.976 1.976 0 00-.316-.431c-.443-.42-1.118-.633-2.009-.633-.353 0-.695.045-1.04.137a6.775 6.775 0 00-.556.221c-.101.056-.32.18-.407.238-.6.404-1.297.617-2.022.617a3.598 3.598 0 01-2.022-.617c-.093-.061-.311-.184-.41-.24a8.984 8.984 0 00-.557-.222 4.105 4.105 0 00-1.04-.137c-.89 0-1.565.216-2.005.633-.103.1-.21.241-.316.431l-.031.062-.025.05-.028.06c-.034.075-.073.17-.118.277l-.022.056c-.07.168-.157.367-.252.585-.633 1.46-1.813 4.174-1.782 6.437.003.263.126.97.23 1.297.154.499.504.661.65.709.131.044.375.086.554.103.124-.003.55-.095.734-.179.157-.07.311-.17.47-.305.076-.065.104-.096.331-.376l.096-.117c.058-.076.114-.152.173-.227.165-.216.348-.46.591-.692.72-.686 1.636-1.188 2.717-1.49a7.717 7.717 0 014.118 0c1.084.302 1.997.804 2.717 1.49.244.232.431.476.594.692l.174.224.092.115c.227.28.258.31.33.378.2.17.373.258.485.305.171.076.656.174.818.174.064 0 .266-.037.46-.098.148-.045.498-.207.652-.706zm-.664-8.782c.563 1.348 2.166 4.63 2.126 7.5-.005.414-.16 1.237-.283 1.635-.243.793-.812 1.302-1.437 1.507-.255.081-.599.16-.848.16-.334 0-.99-.132-1.325-.283a3.19 3.19 0 01-.785-.496c-.187-.16-.271-.272-.58-.653-.22-.269-.414-.563-.666-.804-.58-.552-1.32-.95-2.196-1.193a6.374 6.374 0 00-1.723-.235 6.28 6.28 0 00-1.723.235c-.876.244-1.613.639-2.196 1.193-.252.241-.445.533-.663.804-.311.381-.393.493-.58.653-.314.266-.58.412-.77.496-.312.14-.908.285-1.261.285-.028 0-.056 0-.079-.002a4.187 4.187 0 01-.848-.16c-.625-.205-1.19-.714-1.437-1.507-.124-.398-.278-1.221-.286-1.636-.04-2.868 1.566-6.151 2.126-7.499.059-.14.11-.266.154-.36.04-.088.056-.116.067-.14l.056-.11c.154-.27.325-.521.55-.731.677-.647 1.644-.975 2.862-.975.504 0 .95.07 1.361.18.244.064.785.302.793.307 0 0 .415.233.546.32a2.377 2.377 0 002.653 0c.132-.087.546-.32.546-.32.012-.005.552-.243.796-.308.414-.112.86-.18 1.361-.18 1.221 0 2.185.329 2.866.976.221.21.395.462.546.73l.059.11c.011.025.028.053.067.14.042.095.092.221.151.361z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideoLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.748 20.159c1.107-.036 2.35-.564 2.408-2.727H18.74l.008 2.727zM2.834 17.432c0 .263.043 1.277.697 1.97.424.447 1.062.687 1.882.732l-.009-2.7h-2.57v-.002zm1.062-13.18c-.689.436-1.039 1.23-1.053 2.347H5.37l-.012-2.76c-.315.008-.924.072-1.462.413zm17.271 2.35c.006-.123.034-1.247-.674-2.004-.407-.433-1.016-.673-1.796-.737l.008 2.74h2.462zm-2.439 7.5l.006 2.497h2.43v-2.5c0 .002-2.436.002-2.436.002zm2.433-6.668h-2.456l.009 2.501h2.45l-.003-2.5zm-2.444 3.334l.008 2.5h2.44v-2.5h-2.448zM6.192 3.838l.051 16.313h11.668l-.05-16.318c-3.515 0-9.822.005-11.669.005zM2.837 16.6h2.561l-.008-2.5H2.837v2.5zm2.541-6.664l-.008-2.5H2.834v2.5h2.544zm-2.541.833v2.5H5.39l-.009-2.5H2.837zM18.298 3c3.99 0 3.697 3.691 3.697 3.691l.003 10.598c0 3.404-2.482 3.711-3.378 3.711-.2 0-.319-.017-.319-.017H5.68c-3.927 0-3.677-3.674-3.677-3.674V6.669C2.003 3.24 4.701 3 5.467 3c.128 0 .202.006.202.006S14.309 3 18.299 3zM9.505 14.937L14.593 12 9.505 9.063v5.874zm6.13-3.297a.414.414 0 010 .72l-6.338 3.66a.41.41 0 01-.415 0 .42.42 0 01-.208-.36V8.342a.42.42 0 01.208-.36.41.41 0 01.415 0l6.338 3.658z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideoRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M18.639 19.618c1.546-.124 1.795-1.362 1.834-2.101H18.64v2.1zm-15.37-2.084c.028.355.137 1.005.569 1.467.294.314.717.505 1.266.58v-2.047H3.269zM4.112 4.45c-.199.126-.765.512-.837 1.806h1.829V4.12c-.286.034-.659.115-.992.33zm16.367 1.792c-.017-.336-.104-1.03-.557-1.518-.295-.316-.726-.513-1.286-.59v2.108h1.843zm-1.84 10.023h1.843v-2.087h-1.843v2.087zm0-6.681h1.84v-2.09h-1.84v2.09zm0 3.339h1.84v-2.09h-1.84v2.09zM6.333 4.099v15.519H17.41V4.094c-3.39 0-9.106.005-11.076.005zM3.261 16.282h1.843v-2.087H3.26v2.087zm0-6.69h1.843v-2.08H3.26v2.08zm0 1.253v2.095h1.843v-2.095H3.26zM18.07 2.842c3.927 0 3.639 3.7 3.639 3.7l.002 10.625c0 3.411-2.442 3.722-3.324 3.722-.194 0-.314-.016-.314-.016H5.65c-3.866 0-3.62-3.687-3.62-3.687L2.029 6.522c0-3.437 2.655-3.68 3.409-3.68.126 0 .196.005.196.005s8.51-.005 12.437-.005zM9.619 14.447l4.392-2.583L9.62 9.282v5.165zm5.93-3.126a.63.63 0 01.308.543.63.63 0 01-.308.544l-6.238 3.666a.607.607 0 01-.616 0 .63.63 0 01-.308-.543V8.197a.63.63 0 01.308-.543.607.607 0 01.616 0l6.238 3.667z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideoSurveillanceSegurityFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.087 10.748a.124.124 0 01-.152.09l-.736-.188.426-1.67.736.188a.122.122 0 01.09.148l-.364 1.432zm1.409-2.157a1.344 1.344 0 00-.83-.619l-.736-.188.202-.795a1.46 1.46 0 00-.16-1.107 1.44 1.44 0 00-.894-.67L6.74 2.073a1.459 1.459 0 00-1.773 1.051v.006L3.679 8.2a1.466 1.466 0 001.056 1.779l5.935 1.51-2.112 5.985h-2.58v-2.535a1.46 1.46 0 00-1.459-1.462H3.46c-.804 0-1.459.656-1.459 1.46v5.316c0 .807.655 1.46 1.46 1.46h1.053a1.46 1.46 0 001.459-1.463V18.7h3.014c.26 0 .493-.165.58-.409l2.294-6.501 5.204 1.325a1.458 1.458 0 001.773-1.056l.056-.216.737.188a1.357 1.357 0 001.647-.98l.364-1.435a1.34 1.34 0 00-.145-1.025z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVideoSurveillanceSegurityLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.994 9.44l-.373 1.462a.33.33 0 01-.4.243l-.006-.002-.955-.244.538-2.115.955.244c.176.05.286.23.24.411zm-2.863 2.495a.442.442 0 01-.535.322h-.006L4.994 9.047a.434.434 0 01-.272-.204.436.436 0 01-.05-.333l1.316-5.177a.445.445 0 01.538-.322l12.6 3.204a.441.441 0 01.319.538c.003.003-1.314 5.182-1.314 5.182zM4.955 20.563a.444.444 0 01-.443.442H3.439a.444.444 0 01-.442-.445v-5.431c0-.244.198-.443.442-.443h1.076c.243 0 .442.199.442.443v5.434h-.002zM21.677 8.759a1.158 1.158 0 00-.72-.538l-.955-.244.258-1.014a1.286 1.286 0 00-.927-1.56l-12.6-3.207a1.283 1.283 0 00-1.557.927l-1.317 5.18a1.275 1.275 0 00.928 1.557l6.282 1.6-2.282 6.467H5.82c-.011 0-.017.005-.028.005V15.13c0-.706-.574-1.283-1.28-1.283H3.439c-.709 0-1.283.577-1.283 1.283v5.43c0 .707.574 1.281 1.283 1.281h1.076c.706 0 1.28-.574 1.28-1.28v-1.798c.011 0 .017.005.028.005h3.263c.18 0 .336-.112.395-.28l2.406-6.82 5.499 1.4a1.282 1.282 0 001.557-.927l.107-.423.955.24c.622.163 1.26-.21 1.423-.834 0-.006.003-.008.003-.014l.372-1.462a1.146 1.146 0 00-.126-.888z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.838 15.692a.62.62 0 01.775.412.61.61 0 01-.411.764l-.933.289c.067.42.05.781-.025 1.095l.792.42c.306.157.42.535.255.832a.598.598 0 01-.543.33.583.583 0 01-.289-.067l-.806-.425c-.28.294-.611.501-.874.641l.288.939a.623.623 0 01-.412.773.629.629 0 01-.776-.412l-.288-.938c-.14.016-.288.033-.454.033-.199 0-.412-.025-.627-.073l-.437.815a.62.62 0 01-.544.33.621.621 0 01-.546-.905l.429-.814a2.774 2.774 0 01-.636-.88s0 .009-.008.009l-.942.288a.494.494 0 01-.182.034.617.617 0 01-.182-1.21l.941-.289c.009-.008.009 0 .017-.008a2.88 2.88 0 01.009-1.078l-.799-.429a.606.606 0 01-.255-.832.616.616 0 01.832-.263l.801.428c.28-.305.611-.51.883-.641l-.289-.938a.613.613 0 01.412-.765.626.626 0 01.776.403l.288.947c.14-.017.289-.034.463-.034.187 0 .403.026.619.073l.428-.815a.628.628 0 01.84-.263.63.63 0 01.255.84l-.42.798c.238.213.462.505.645.883l.93-.297zm11.436-1.639a.624.624 0 01.412.773.629.629 0 01-.594.437.452.452 0 01-.179-.033l-.815-.255c-.1.263-.255.518-.445.764l.627.628a.62.62 0 010 .871.65.65 0 01-.437.182.65.65 0 01-.437-.182l-.619-.616c-.213.173-.47.336-.759.454l.246.798a.623.623 0 01-.403.773.742.742 0 01-.19.025.606.606 0 01-.586-.426l-.297-.93a3.324 3.324 0 01-.955-.173c-.115-.034-.23-.081-.356-.132l-.072.616a.607.607 0 01-.611.535h-.073a.613.613 0 01-.535-.691l.132-1.054a11.995 11.995 0 01-1.12-.798l-.42.832a.618.618 0 01-.833.269.617.617 0 01-.272-.832l.547-1.079a28.514 28.514 0 01-1.26-1.168l-.816.816a.65.65 0 01-.437.182.634.634 0 01-.437-.182.62.62 0 010-.872l.818-.815a30.47 30.47 0 01-1.18-1.266l-1.08.544a.54.54 0 01-.272.064.617.617 0 01-.28-1.168l.823-.42c-.073-.098-.148-.19-.221-.289a11.361 11.361 0 01-.56-.823l-1.065.131h-.08a.616.616 0 01-.073-1.227l.627-.08c-.05-.107-.082-.214-.115-.314a3.501 3.501 0 01-.174-.98l-.955-.303a.611.611 0 01-.403-.773.614.614 0 01.776-.404l.831.252c.115-.28.28-.526.446-.73l-.644-.65a.62.62 0 010-.872.624.624 0 01.874 0l.652.65a3.2 3.2 0 01.734-.437l-.263-.849a.614.614 0 01.406-.773.626.626 0 01.776.404l.305.986c.297.008.61.058.955.165.11.03.216.073.33.115l.082-.65a.627.627 0 01.692-.535c.339.05.577.353.538.692l-.14 1.1c.353.213.725.48 1.112.782l.437-.863a.612.612 0 01.832-.271c.305.156.42.526.271.832l-.56 1.109c.395.347.815.734 1.252 1.168l.84-.849a.624.624 0 01.875 0 .606.606 0 010 .871l-.84.84c.428.435.814.858 1.17 1.25l1.112-.558a.63.63 0 01.835.28.615.615 0 01-.28.824l-.857.429c.305.395.577.764.792 1.12l1.096-.14a.616.616 0 01.683.535.614.614 0 01-.535.692l-.636.081c.182.462.28.888.297 1.291l.938.3z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M7.025 19.778c.729-.239 1.867-.904 1.318-2.66-.324-1.058-.942-1.57-1.881-1.57-.325 0-.598.06-.737.094-.077.026-.162.051-.24.077-.882.281-1.82.964-1.3 2.654.333 1.067.94 1.587 1.856 1.587.333 0 .606-.06.742-.102.08-.029.174-.054.242-.08zm2.935-3.615a.427.427 0 01.53.281c.067.23-.06.47-.283.538l-.942.29c.128.623.086 1.135-.051 1.553l.78.418c.213.103.29.367.18.572a.427.427 0 01-.38.23.397.397 0 01-.196-.05l-.797-.419a3.227 3.227 0 01-1.258.922l.3.947a.426.426 0 01-.283.53.343.343 0 01-.128.025.437.437 0 01-.41-.307l-.29-.948a3.78 3.78 0 01-.691.069c-.268 0-.558-.034-.857-.128l-.427.793a.427.427 0 01-.378.23.397.397 0 01-.197-.05.415.415 0 01-.18-.572l.428-.802c-.35-.273-.67-.675-.908-1.246l-.974.298a.66.66 0 01-.128.017.429.429 0 01-.12-.836l.969-.299c-.137-.614-.103-1.126.034-1.544l-.789-.41a.427.427 0 01-.179-.58.418.418 0 01.572-.18l.788.419c.385-.495.908-.777 1.258-.922l-.29-.947a.426.426 0 01.282-.53.426.426 0 01.538.282l.29.956c.188-.043.418-.068.686-.068.273 0 .564.034.865.128l.419-.803a.43.43 0 01.583-.179c.205.111.29.367.18.572l-.419.794c.35.273.677.674.916 1.254l.957-.298zm8.925-.41c1.156-1.152 1.787-2.595-3.122-7.493-3.003-3.004-4.716-3.926-5.855-3.926-.72 0-1.215.367-1.659.81-1.155 1.161-1.796 2.604 3.114 7.5 4.912 4.898 6.358 4.267 7.522 3.109zM21.7 14.46a.44.44 0 01.282.538.427.427 0 01-.41.299c-.043 0-.086 0-.128-.017l-1.045-.325a3.32 3.32 0 01-.615 1.067l.789.785c.17.162.17.436 0 .598a.414.414 0 01-.3.128.433.433 0 01-.306-.128l-.789-.785a3.36 3.36 0 01-1.061.623l.324 1.04a.42.42 0 01-.282.53.343.343 0 01-.128.025.425.425 0 01-.404-.298l-.359-1.135c-.017 0-.034.008-.05.008-.505 0-1.045-.145-1.634-.41l-.111.93a.439.439 0 01-.427.376c-.017 0-.034 0-.052-.008a.426.426 0 01-.375-.478l.162-1.238a14.183 14.183 0 01-1.471-1.032l-.547 1.092a.439.439 0 01-.384.23.41.41 0 01-.196-.042.43.43 0 01-.188-.572l.643-1.271a34.036 34.036 0 01-1.574-1.46l-1.002.99a.414.414 0 01-.299.128.427.427 0 01-.307-.725l1.002-.999a32.747 32.747 0 01-1.463-1.579l-1.275.64a.39.39 0 01-.188.052.419.419 0 01-.384-.24.423.423 0 01.188-.571l1.095-.546a14.86 14.86 0 01-1.036-1.468l-1.24.153c-.026 0-.043.009-.06.009a.424.424 0 01-.419-.376.42.42 0 01.367-.477l.934-.12c-.265-.606-.384-1.16-.376-1.673L5.437 6.37a.422.422 0 01-.276-.538.43.43 0 01.532-.281l1.07.332c.129-.358.334-.708.624-1.04l-.814-.812a.422.422 0 010-.605.428.428 0 01.598 0l.814.81c.333-.273.685-.47 1.044-.597l-.333-1.084a.427.427 0 01.273-.538c.23-.068.47.06.538.282l.37 1.195c.512-.009 1.062.11 1.668.375l.12-.964a.423.423 0 01.478-.367.42.42 0 01.37.47l-.163 1.288c.453.265.94.615 1.463 1.024l.564-1.126a.42.42 0 01.572-.188.416.416 0 01.188.572l-.65 1.305a33.26 33.26 0 011.566 1.451l1.028-1.024a.439.439 0 01.606 0 .438.438 0 010 .606L16.659 7.94a28.83 28.83 0 011.455 1.562l1.309-.657a.431.431 0 01.572.188.416.416 0 01-.188.571l-1.13.572c.419.512.763.999 1.036 1.451l1.284-.162a.417.417 0 01.47.375.43.43 0 01-.368.478l-.95.111c.273.606.401 1.16.392 1.673l1.159.358z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.916 18.955c1.493-.484 1.129-1.67 1.014-2.056-.339-1.084-.938-1.224-1.417-1.224-.28 0-.513.056-.603.081a2.78 2.78 0 00-.22.068c-1.469.47-1.096 1.66-.984 2.05.339 1.104.924 1.24 1.403 1.24.272 0 .513-.058.594-.089.073-.022.149-.047.213-.07zm2.896-3.291a.62.62 0 01.773.412.61.61 0 01-.411.764l-.933.289c.067.42.05.781-.025 1.095l.792.42a.61.61 0 01.258.832.605.605 0 01-.546.33.583.583 0 01-.289-.067l-.806-.425c-.28.297-.611.501-.874.641l.288.939a.624.624 0 01-.412.773.626.626 0 01-.773-.412l-.288-.938c-.14.016-.289.033-.454.033-.199 0-.412-.025-.627-.073l-.437.815a.62.62 0 01-.544.331.621.621 0 01-.546-.905l.429-.815a2.774 2.774 0 01-.636-.88s0 .009-.009.009l-.938.288a.488.488 0 01-.182.031.626.626 0 01-.594-.434.62.62 0 01.412-.773l.941-.289c.008-.008.008 0 .017-.008a2.88 2.88 0 01.008-1.078l-.798-.429a.61.61 0 01-.258-.832.619.619 0 01.835-.263l.798.428a3 3 0 01.883-.644l-.289-.938a.613.613 0 01.412-.765.63.63 0 01.776.403l.288.947c.14-.017.289-.033.462-.033.188 0 .404.025.62.072l.428-.815a.627.627 0 01.84-.263.63.63 0 01.255.84l-.42.799c.238.213.462.501.642.882l.932-.294zm7.09.384c.692 0 1.081-.387 1.426-.731.832-.83 1.972-1.967-3-6.939-2.084-2.081-3.653-3.258-4.799-3.61a2.33 2.33 0 00-.686-.115c-.518 0-.972.23-1.468.734-.708.7-.882 1.3-.619 2.145.356 1.146 1.54 2.709 3.62 4.79 2.938 2.922 4.537 3.726 5.526 3.726zm4.344-2.023a.62.62 0 01.412.773.626.626 0 01-.594.437.518.518 0 01-.182-.03l-.815-.255a2.97 2.97 0 01-.445.764l.627.628a.62.62 0 010 .87.65.65 0 01-.437.183.637.637 0 01-.437-.182l-.619-.616c-.215.173-.47.336-.759.453l.247.799a.622.622 0 01-.404.773.726.726 0 01-.19.025.61.61 0 01-.586-.426l-.296-.93a3.412 3.412 0 01-.956-.17c-.115-.034-.23-.085-.355-.132l-.073.616a.61.61 0 01-.61.535H14.7a.613.613 0 01-.535-.692l.132-1.053a11.995 11.995 0 01-1.12-.798l-.42.832a.616.616 0 01-.833.268.615.615 0 01-.271-.829l.543-1.078c-.395-.345-.823-.74-1.26-1.168l-.816.815a.65.65 0 01-.437.182.634.634 0 01-.437-.182.62.62 0 010-.871l.816-.815a32.355 32.355 0 01-1.18-1.266l-1.08.543a.547.547 0 01-.273.064.617.617 0 01-.28-1.168l.824-.42c-.076-.098-.149-.187-.221-.288a11.361 11.361 0 01-.56-.824l-1.065.132h-.081a.623.623 0 01-.611-.544.614.614 0 01.535-.683l.627-.081c-.047-.107-.08-.213-.114-.314a3.484 3.484 0 01-.174-.98l-.955-.306a.61.61 0 01-.404-.773.614.614 0 01.776-.403l.832.255c.115-.28.28-.527.446-.731l-.645-.65a.62.62 0 010-.871.624.624 0 01.874 0l.653.65a3.13 3.13 0 01.734-.438l-.263-.848a.612.612 0 01.403-.773.621.621 0 01.776.403l.305.989c.297.008.61.059.955.165.107.034.216.073.33.115l.082-.65A.627.627 0 0112 2.521a.622.622 0 01.535.692l-.14 1.1c.356.214.725.48 1.112.782l.437-.863a.612.612 0 01.832-.271c.305.157.42.526.272.832l-.56 1.109c.394.344.817.734 1.251 1.168l.84-.846a.624.624 0 01.875 0 .606.606 0 010 .871l-.84.84c.428.435.815.855 1.17 1.25l1.112-.558a.628.628 0 01.832.28.616.616 0 01-.28.824l-.857.426c.305.395.577.765.793 1.118l1.095-.14a.615.615 0 01.683.534.616.616 0 01-.535.692l-.635.082c.182.462.28.888.297 1.29l.957.292z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusScanFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M13.88 10.546v-.748a.528.528 0 00-.53-.526h-.639a4.148 4.148 0 00-.285-1.233l.832-.25a.524.524 0 00.375-.529l-.062-1.126c-.016-.288-.271-.481-.557-.495a.527.527 0 00-.501.551l.039.718-.437.131c.011-.081.02-.16.02-.25 0-1.652-1.62-1.652-2.312-1.652-.691 0-2.31 0-2.31 1.653 0 .092.01.174.022.258l-.465-.14.04-.718a.527.527 0 00-.502-.551c-.275-.006-.54.204-.558.495L5.99 7.26a.529.529 0 00.375.533l.852.255c-.16.375-.244.795-.286 1.226H6.29a.526.526 0 00-.53.524v.748c0 .291.239.524.53.524.292 0 .53-.233.53-.524v-.221h.073c.005.532.047 1.05.17 1.512l-.703.21a.528.528 0 00-.375.533l.062 1.123a.53.53 0 00.529.499h.03a.528.528 0 00.502-.552l-.039-.714.454-.138c.428.552 1.134.902 2.297.902 1.157 0 1.862-.347 2.291-.896l.437.132-.04.714a.527.527 0 00.502.552h.031a.53.53 0 00.53-.499l.061-1.126a.529.529 0 00-.375-.532l-.684-.205c.126-.465.168-.983.171-1.518h.073v.221c0 .292.238.524.532.524a.52.52 0 00.53-.52zm7.627 10.104a.602.602 0 01.006.851l-.006.006a.614.614 0 01-.866 0l-5.826-5.776a7.835 7.835 0 01-4.989 1.784C5.501 17.515 2 14.042 2 9.756 2 5.473 5.501 2 9.823 2c4.323 0 7.824 3.473 7.824 7.756a7.68 7.68 0 01-1.96 5.126c.002 0 5.82 5.768 5.82 5.768zM8.58 6.798v-.017c0-.347 0-.599 1.25-.599.78 0 1.075.098 1.184.258.067.095.067.213.067.341l-.003.017H8.58zm1.742 4.964V8.96a.526.526 0 00-.53-.524.526.526 0 00-.529.524v2.8a.528.528 0 001.06 0zm.773-3.796c.415.311.594.967.594 2.19 0 1.956-.4 2.491-1.863 2.491-1.462 0-1.862-.535-1.862-2.49 0-1.219.173-1.874.585-2.185.269-.205.686-.303 1.277-.303.583 0 1 .098 1.27.297z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusScanLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.064 17.013c3.905 0 7.081-3.148 7.081-7.02 0-3.87-3.176-7.019-7.081-7.019-3.905 0-7.081 3.149-7.081 7.02 0 3.87 3.176 7.022 7.08 7.02zm11.655 4.132c.16.157.163.415.006.574l-.006.006c-.16.16-.42.16-.582 0l-5.877-5.832a7.9 7.9 0 01-5.196 1.938c-4.367 0-7.908-3.51-7.908-7.837 0-4.328 3.54-7.838 7.908-7.838 4.367 0 7.905 3.51 7.905 7.838 0 1.98-.76 3.888-2.12 5.328l5.87 5.823zM10.064 13.47c1.557 0 2.008-.591 2.008-2.639 0-1.28-.193-1.972-.647-2.31-.294-.22-.74-.326-1.358-.326-.628 0-1.076.11-1.367.331-.449.342-.639 1.03-.639 2.305-.006 2.048.448 2.639 2.003 2.639zm.003-6.776c-1.387 0-1.387.339-1.387.731 0 .07.006.132.014.185.373-.151.82-.232 1.367-.232.549 0 1 .08 1.375.232.009-.053.014-.115.014-.188.003-.389.003-.728-1.383-.728zm3.56 3.367a.41.41 0 01.412.409v.756a.41.41 0 01-.412.41.41.41 0 01-.412-.41v-.347h-.32c-.002.661-.064 1.244-.212 1.737l.818.246c.18.053.3.224.291.412l-.062 1.137a.408.408 0 01-.411.387h-.023a.41.41 0 01-.389-.429l.045-.82-.614-.185c-.417.585-1.117.924-2.271.924-1.16 0-1.86-.339-2.278-.927l-.63.19.045.82a.408.408 0 01-.39.43h-.022a.411.411 0 01-.412-.387l-.061-1.137a.404.404 0 01.291-.412l.838-.252c-.146-.493-.208-1.073-.21-1.731h-.323v.347a.41.41 0 01-.411.409.41.41 0 01-.412-.409v-.756a.41.41 0 01.412-.41h.759c.039-.512.14-1.008.347-1.436l-1-.305a.404.404 0 01-.291-.412l.061-1.138c.012-.226.216-.414.435-.386a.41.41 0 01.389.429l-.045.817.75.227a2.068 2.068 0 01-.052-.434c0-.969.585-1.33 1.198-1.465l-.072-.073a.407.407 0 01-.003-.574l.003-.003c.162-.16.42-.16.582 0l.378.373a.378.378 0 01.101.196h.009a.372.372 0 01.103-.196l.376-.373c.162-.16.42-.16.582 0 .16.157.163.415.006.575l-.006.005-.067.067c.625.13 1.23.485 1.23 1.471a1.9 1.9 0 01-.05.426l.722-.219-.045-.818a.408.408 0 01.39-.428c.235-.028.422.16.434.386l.061 1.138a.404.404 0 01-.291.411l-.98.294c.21.429.31.93.35 1.443h.759zm-3.594-.843a.41.41 0 01.412.409v2.829a.41.41 0 01-.412.409.41.41 0 01-.412-.409v-2.83c0-.226.185-.41.412-.408z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconVirusScanRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M9.824 16.33c3.638 0 6.602-2.935 6.602-6.546 0-3.608-2.961-6.543-6.602-6.543-3.64 0-6.603 2.935-6.603 6.543.003 3.611 2.964 6.547 6.603 6.547zm11.683 4.348a.604.604 0 01-.431 1.033.608.608 0 01-.432-.176l-5.826-5.776a7.84 7.84 0 01-4.992 1.782c-4.322 0-7.823-3.474-7.823-7.76 0-4.282 3.504-7.756 7.823-7.756 4.32 0 7.824 3.474 7.824 7.757a7.696 7.696 0 01-1.96 5.126l5.817 5.77zM9.824 12.675c1.462 0 1.862-.535 1.862-2.49 0-1.227-.176-1.88-.59-2.19-.27-.2-.684-.298-1.272-.298-.592 0-1.009.099-1.278.303-.409.31-.585.966-.585 2.185 0 1.955.4 2.49 1.863 2.49zm.005-6.465c-1.25 0-1.25.252-1.25.602v.014c.354-.117.76-.182 1.245-.182.487 0 .896.065 1.252.182l.002-.016c0-.348 0-.6-1.249-.6zM13.35 9.3c.294 0 .532.235.532.526v.748a.529.529 0 01-.532.527.527.527 0 01-.53-.527v-.221h-.072c-.006.535-.048 1.053-.174 1.518l.687.207c.232.07.389.289.375.53l-.062 1.126a.53.53 0 01-.53.498h-.027a.526.526 0 01-.502-.551l.04-.717-.437-.132c-.429.549-1.135.896-2.294.896-1.163 0-1.869-.35-2.297-.902l-.454.135.039.714a.53.53 0 01-.501.555h-.028a.53.53 0 01-.53-.499l-.061-1.126a.528.528 0 01.375-.532l.703-.213c-.12-.462-.165-.98-.17-1.513h-.074v.222a.528.528 0 01-.53.526.529.529 0 01-.531-.526V9.82c0-.292.238-.527.532-.527h.639a4.09 4.09 0 01.282-1.227l-.851-.257a.522.522 0 01-.375-.533l.061-1.126c.017-.291.283-.501.558-.496a.529.529 0 01.501.555l-.04.714.466.14c-.009-.084-.023-.168-.023-.257 0-1.653 1.62-1.653 2.311-1.653.692 0 2.311 0 2.311 1.653 0 .087-.01.168-.02.249l.438-.132-.04-.717a.525.525 0 01.502-.552c.288.017.543.208.557.5l.062 1.125a.527.527 0 01-.375.53l-.835.249c.162.378.246.798.285 1.232h.64v.01zm-3.554-.835c.294 0 .529.235.529.527v2.8a.528.528 0 01-.53.527.527.527 0 01-.529-.526V8.992a.525.525 0 01.53-.527z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWalletFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.47 15.252v-2.888c0-.126-.1-.23-.224-.23h-7.963c-.84 0-1.527.703-1.527 1.566v.213c0 .863.684 1.566 1.527 1.566h7.963c.124.003.225-.1.225-.227zM4.74 6.695c0 .022-.009.039-.012.058l12.703.003V5.49c0-.148-.131-.272-.291-.272l-.286.023h-.005L5.07 6.084c-.202.003-.333.126-.333.272v.339h.002zm-1.202-.387A1.505 1.505 0 015.03 4.846l11.218-.804v-.748L4.524 4.12a1.275 1.275 0 00-.936.384c-.238.247-.37.572-.37.919v.034c0 .313.118.613.32.851zm16.708 4.588c.79 0 1.432.659 1.432 1.47v2.889c0 .81-.642 1.468-1.432 1.468h-.086l.002 1.596c0 .678-.255 1.317-.722 1.796a2.42 2.42 0 01-1.748.745l-13.213.005c-.745-.005-1.398-.28-1.846-.767-.445-.487-.661-1.146-.622-1.908V5.423c0-.678.258-1.317.723-1.796a2.427 2.427 0 011.748-.745l12.327-.868a.601.601 0 01.454.165c.123.118.19.28.19.454v1.395a1.502 1.502 0 011.183 1.465v1.443c.342.126.644.319.885.582.445.488.658 1.149.619 1.916l.003 1.465h.103v-.003zm-7.77 1.995c.538 0 .972.448.972 1s-.434 1-.972 1-.972-.448-.972-1a.984.984 0 01.972-1z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWalletLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M21.018 15.9v-2.952a.439.439 0 00-.434-.445H12.45c-.972 0-1.765.812-1.765 1.815v.218c0 1 .79 1.813 1.765 1.813h8.137a.443.443 0 00.431-.449zm-1.546 3.138l-.003-1.846h-7.02c-1.425 0-2.588-1.194-2.588-2.659v-.218c0-1.468 1.16-2.661 2.589-2.661h7.002l-.002-1.745c.025-.516-.096-.922-.356-1.205-.26-.285-.647-.437-1.12-.442l-13.496.005V8.26c-.558 0-1.079-.21-1.496-.58v11.255c-.025.507.098.91.356 1.193.263.286.666.446 1.14.451l13.498-.005c.824.005 1.496-.687 1.496-1.535zM2.982 5.842v.033c0 .412.154.798.44 1.09.086.09.187.165.294.23v-.393A1.33 1.33 0 015.04 5.47l11.666-.838V3.444l-12.199.86a1.49 1.49 0 00-1.086.45c-.286.29-.44.676-.44 1.088zm14.933.07a.5.5 0 00-.505-.49l-.291.022h-.003L5.07 6.309c-.306 0-.533.222-.533.49v.617l13.379.005v-1.51zm2.672 5.745c.692 0 1.255.58 1.255 1.291V15.9c0 .712-.563 1.292-1.255 1.292h-.294l.003 1.846c0 1.316-1.04 2.386-2.32 2.386l-13.501.006c-.703-.006-1.317-.26-1.737-.717-.414-.454-.616-1.076-.577-1.796V5.842c0-.636.24-1.236.678-1.687.44-.45 1.02-.7 1.641-.7l12.611-.89a.403.403 0 01.308.111.43.43 0 01.132.308v1.608c.686.07 1.21.633 1.21 1.32v1.633a2.1 2.1 0 01.958.582c.414.454.613 1.079.577 1.804l.003 1.723h.308v.003zm-7.941 3.582a.804.804 0 00.792-.815.804.804 0 00-.792-.815.806.806 0 00-.793.815c0 .448.356.815.793.815zm0-2.476c.89 0 1.613.745 1.613 1.661s-.725 1.661-1.613 1.661c-.891 0-1.617-.745-1.617-1.66 0-.917.726-1.662 1.617-1.662z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWalletRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.479 15.255v-2.888c0-.129-.1-.23-.224-.23h-7.97c-.842 0-1.526.703-1.526 1.566v.213c0 .863.686 1.566 1.527 1.566h7.969a.224.224 0 00.224-.227zm-1.518 3.07l-.003-1.6h-6.672c-1.507 0-2.737-1.26-2.737-2.806v-.213c0-1.55 1.227-2.807 2.737-2.807h6.658l-.003-1.498c.023-.457-.078-.802-.291-1.037-.216-.238-.546-.364-.953-.367L4.48 8v-.008c-.454 0-.885-.135-1.266-.367V18.23c-.023.448.078.792.294 1.025.218.24.563.372.972.375l13.218-.003c.34 0 .656-.134.894-.38a1.32 1.32 0 00.37-.922zM3.213 5.415v.033c0 .317.115.616.32.855A1.505 1.505 0 015.024 4.84l11.227-.806v-.745l-11.734.826a1.284 1.284 0 00-.935.38c-.238.247-.37.572-.37.92zm13.641-.18l-11.787.846c-.201.003-.333.123-.333.272v.339c0 .02-.009.04-.011.059l12.711.003V5.487c0-.148-.131-.271-.291-.271l-.286.02h-.003zm3.4 5.661c.79 0 1.432.659 1.432 1.47v2.889c0 .81-.644 1.47-1.431 1.47h-.087l.003 1.6a2.55 2.55 0 01-.723 1.795 2.422 2.422 0 01-1.75.746l-13.225.002c-.745-.005-1.4-.28-1.846-.767-.445-.488-.66-1.146-.621-1.908V5.415c0-.678.257-1.317.722-1.796a2.422 2.422 0 011.751-.745l12.336-.871a.597.597 0 01.454.165c.123.118.19.28.19.454v1.395c.69.157 1.185.753 1.185 1.468v1.442c.342.129.645.322.885.583.446.487.659 1.148.62 1.919l.002 1.467h.104zm-7.778 1.998c.538 0 .975.448.975 1 0 .551-.437 1-.975 1s-.972-.449-.972-1c0-.552.434-1 .972-1z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWarningFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.84 17.58a.703.703 0 010-1.406.7.7 0 01.7.703.7.7 0 01-.7.703zm-.616-11.356a.616.616 0 011.233 0v8.499a.616.616 0 01-1.233 0V6.224zm1.03-4.213c-.229-.005-.495-.011-.75-.011h-.182C9.345 2.017 2 2.695 2 11.81c0 9.128 7.415 9.845 9.392 9.873a38.305 38.305 0 00.902-.003c1.88-.033 9.392-.739 9.392-9.812 0-9.05-7.504-9.812-9.431-9.857z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWarningLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.434 21.016c2.014-.036 8.588-.795 8.588-8.991 0-3.55-1.213-6.11-3.608-7.611-1.955-1.227-4.163-1.406-5.022-1.429a29.517 29.517 0 00-.723-.008h-.182c-.855.008-3.048.154-4.975 1.367-2.347 1.476-3.535 4.042-3.535 7.625 0 3.588 1.202 6.16 3.571 7.655 1.944 1.224 4.154 1.387 5.014 1.398l.295.003c.201-.003.403-.003.577-.009zM12.41 2.165c1.927.044 9.432.806 9.432 9.86 0 9.072-7.513 9.778-9.393 9.812-.179.003-.386.006-.593.006-.104 0-.208 0-.309-.003-1.977-.028-9.392-.743-9.392-9.871 0-9.118 7.348-9.796 9.322-9.813h.19c.253 0 .516.003.743.009zm-.414 13.126a.41.41 0 01-.41-.41V6.384a.41.41 0 01.819 0v8.499a.41.41 0 01-.41.409zm.002 1.045a.641.641 0 110 1.282.641.641 0 010-1.282z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWarningRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.272 20.448c2.462-.045 8.185-.972 8.185-8.58 0-7.61-5.757-8.571-8.233-8.63a29.517 29.517 0 00-.723-.008h-.17c-2.437.022-8.104.902-8.104 8.58 0 7.694 5.72 8.607 8.18 8.641l.288.003c.204 0 .403-.003.577-.006zm-.017-18.437c1.93.045 9.431.807 9.431 9.86 0 9.073-7.515 9.776-9.392 9.812-.18.003-.386.006-.594.006-.103 0-.207-.003-.308-.003C9.417 21.656 2 20.941 2 11.812 2 2.695 9.347 2.017 11.322 2h.18c.257 0 .523.003.753.011zM11.84 15.34a.616.616 0 01-.616-.616v-8.5a.616.616 0 011.233 0v8.499a.62.62 0 01-.617.616zm0 .837c.387 0 .7.314.703.7a.705.705 0 01-.7.704h-.003a.701.701 0 010-1.404z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWaterDropFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.569 2.12a.407.407 0 00-.575-.002l-.002.002c-1.359 1.367-6.673 8.247-6.659 12.57.006 2.173.647 3.957 1.852 5.164 1.199 1.2 2.966 1.835 5.106 1.835h.034c4.367-.014 6.964-2.644 6.95-7.042-.009-4.28-5.345-11.157-6.706-12.527"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWaterDropLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.992 21.022h-.034c-1.947 0-3.473-.538-4.53-1.594-1.064-1.064-1.604-2.608-1.613-4.585-.011-3.796 4.586-9.93 6.132-11.676 1.552 1.748 6.174 7.886 6.185 11.64.008 3.994-2.171 6.204-6.14 6.215m.243-18.745a.41.41 0 00-.288-.12.42.42 0 00-.289.12C10.3 3.644 4.986 10.52 5 14.845c.006 2.171.647 3.958 1.852 5.166 1.198 1.198 2.963 1.834 5.106 1.834h.034c4.364-.014 6.963-2.644 6.95-7.042-.01-4.277-5.345-11.154-6.707-12.526"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWaterDropRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12.322 20.434h-.033c-1.824 0-3.247-.501-4.23-1.493-.986-.997-1.49-2.45-1.496-4.322-.011-3.325 3.936-9.006 5.712-11.076 1.619 1.9 5.756 7.552 5.767 11.04.014 3.762-2.02 5.84-5.72 5.851m.395-18.258a.626.626 0 00-.871 0c-1.328 1.35-6.524 8.155-6.51 12.446.006 2.185.65 3.983 1.86 5.207 1.205 1.216 2.966 1.857 5.098 1.857h.034c4.364-.014 6.963-2.67 6.952-7.106-.017-4.61-5.748-11.574-6.563-12.404"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWebFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M6.655 10.357l2.729 2.384a.57.57 0 01.006.857l-2.73 2.429a.595.595 0 01-.409.154.61.61 0 01-.442-.188.566.566 0 01.01-.801c.01-.006.015-.014.023-.02l2.244-1.997-2.238-1.958a.567.567 0 01-.062-.798c.006-.009.014-.014.02-.023a.615.615 0 01.848-.039zm10.681 2.255c.333 0 .605.26.605.58 0 .32-.272.58-.602.58H10.87a.596.596 0 01-.605-.58c0-.32.272-.583.605-.583l6.465.003zm2.922 5.515a.22.22 0 00.224-.215V8.248H3.204v9.664c0 .117.101.215.225.215h16.829zM5.188 6.732a.548.548 0 00-.558-.537h-.003a.548.548 0 00-.557.537c0 .297.25.538.557.538a.548.548 0 00.56-.538zm1.678 0a.548.548 0 00-.558-.537h-.003a.548.548 0 00-.557.537c0 .297.25.538.557.538a.548.548 0 00.56-.538zm1.677 0a.548.548 0 00-.557-.537h-.003a.548.548 0 00-.557.537c0 .297.25.538.557.538a.548.548 0 00.56-.538zm11.715-2.207c.787 0 1.428.62 1.428 1.378v12.009c0 .759-.641 1.378-1.428 1.378H3.428c-.79 0-1.428-.616-1.428-1.375V5.903c0-.759.639-1.378 1.429-1.378h16.829z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWebLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.725 18.189c.242 0 .441-.19.441-.427V8.084H2.834v9.678c0 .236.196.427.44.427h17.451zM3.275 4.809a.437.437 0 00-.441.426v2.04h18.332v-2.04a.433.433 0 00-.44-.427H3.274zM20.725 4C21.428 4 22 4.555 22 5.235v12.53c0 .68-.572 1.235-1.275 1.235H3.275C2.572 19 2 18.445 2 17.765V5.235C2 4.555 2.572 4 3.275 4h17.45zM6.48 10.03l2.829 2.487a.404.404 0 01.137.3.401.401 0 01-.134.298l-2.829 2.533a.428.428 0 01-.592-.02.397.397 0 01.023-.572l2.493-2.234-2.49-2.191a.395.395 0 01-.029-.572.432.432 0 01.592-.029zm11.218 2.405c.23 0 .419.182.419.404a.413.413 0 01-.419.404h-6.704a.413.413 0 01-.419-.404.41.41 0 01.419-.404h6.704zM6.257 6.664a.572.572 0 01-.58-.561c0-.31.259-.563.58-.563.322 0 .58.25.58.563a.57.57 0 01-.58.56zm1.742 0a.572.572 0 01-.58-.561c0-.31.258-.563.58-.563.321 0 .578.25.578.563a.57.57 0 01-.578.56zm-3.48 0a.572.572 0 01-.581-.561c0-.31.259-.563.58-.563a.57.57 0 01.581.563c0 .307-.259.56-.58.56z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWebRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M20.457 7.66V5.929a.227.227 0 00-.227-.222H3.46a.225.225 0 00-.23.222v1.73h17.227zm0 10.224V8.842H3.23v9.042c0 .12.103.218.23.218h16.77a.223.223 0 00.227-.218zM20.23 4.525c.804 0 1.456.63 1.456 1.404v11.955c0 .776-.655 1.403-1.456 1.403H3.46c-.805 0-1.46-.63-1.46-1.403V5.929c0-.776.655-1.404 1.46-1.404h16.77zM5.742 16.287a.579.579 0 01.034-.837l2.286-2.034-2.283-1.994a.576.576 0 01-.042-.838.628.628 0 01.868-.04l2.779 2.43a.576.576 0 01.003.873l-2.78 2.474a.62.62 0 01-.417.157.622.622 0 01-.448-.19zm5.163-2.26a.606.606 0 01-.616-.591c0-.328.274-.591.616-.591h6.588c.339 0 .616.266.616.59a.602.602 0 01-.616.592h-6.588zM6.218 6.105a.56.56 0 01.57.55.56.56 0 01-.57.548.558.558 0 01-.568-.549c0-.305.252-.549.568-.549zm1.71 0c.316 0 .568.247.568.55a.56.56 0 01-.569.548.56.56 0 01-.568-.549c0-.305.254-.549.568-.549zm-3.421 0c.317 0 .569.247.569.55a.56.56 0 01-.569.548.558.558 0 01-.569-.549c0-.305.255-.549.569-.549z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWifiFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.857 15.695c.67 0 1.202.185 1.583.551.395.381.596.93.596 1.628 0 .697-.201 1.246-.596 1.627-.381.367-.913.552-1.583.552-.67 0-1.202-.185-1.582-.552-.395-.38-.597-.93-.597-1.627 0-.698.202-1.247.597-1.628.38-.366.913-.551 1.582-.551zm.037-3.835a6.725 6.725 0 014.686 1.896.561.561 0 01-.782.804 5.55 5.55 0 00-1.72-1.14 5.559 5.559 0 00-2.184-.442 5.575 5.575 0 00-3.97 1.644.558.558 0 01-.793.003.561.561 0 010-.793 6.665 6.665 0 012.087-1.42 6.688 6.688 0 012.676-.552zm.002-4.087a10.189 10.189 0 017.154 2.922.561.561 0 01-.784.8 9.049 9.049 0 00-2.835-1.887 9.036 9.036 0 00-3.535-.712c-1.24 0-2.442.244-3.571.726a9.135 9.135 0 00-2.863 1.93l-.011.011a.558.558 0 01-.793 0 .561.561 0 010-.793l.014-.014a10.197 10.197 0 017.224-2.983zM11.9 3.69c1.84 0 3.63.359 5.317 1.067a13.641 13.641 0 014.305 2.871.559.559 0 01.006.793.559.559 0 01-.793.006A12.56 12.56 0 0011.9 4.811c-1.706 0-3.356.333-4.91.991a12.622 12.622 0 00-3.995 2.686l-.016.017a.555.555 0 01-.79.003.561.561 0 010-.793l.016-.02A13.775 13.775 0 016.552 4.77a13.635 13.635 0 015.347-1.08z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWifiLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M12 16.155c.625 0 1.112.162 1.453.48.356.33.536.814.536 1.442 0 1.24-.707 1.923-1.988 1.923-1.282 0-1.988-.683-1.988-1.923 0-1.239.706-1.922 1.988-1.922zm0 .567c-.956 0-1.4.43-1.4 1.355 0 .926.444 1.356 1.4 1.356.958 0 1.402-.43 1.402-1.356 0-.468-.12-.815-.356-1.035-.228-.212-.578-.32-1.045-.32zm.038-4.445c.911 0 1.794.173 2.629.515.769.314 1.467.76 2.07 1.327.117.11.12.29.006.403a.3.3 0 01-.416.005 6.14 6.14 0 00-1.89-1.212 6.314 6.314 0 00-2.402-.47c-.852 0-1.675.164-2.453.487-.715.3-1.355.721-1.91 1.258a.278.278 0 01-.203.083.3.3 0 01-.208-.083.28.28 0 010-.402 6.739 6.739 0 012.094-1.377 6.911 6.911 0 012.683-.534zm.003-4.137c1.398 0 2.76.264 4.041.788a10.41 10.41 0 013.245 2.087c.117.11.117.29.003.402a.3.3 0 01-.416.003 9.793 9.793 0 00-3.06-1.97 10.058 10.058 0 00-3.813-.743c-1.34 0-2.635.256-3.854.758a9.884 9.884 0 00-3.088 2.013l-.011.011a.294.294 0 01-.413.003.276.276 0 01-.003-.4l.014-.013a10.448 10.448 0 013.27-2.135 10.635 10.635 0 014.085-.804zM12.046 4c1.889 0 3.723.355 5.452 1.058a14.062 14.062 0 014.415 2.845.28.28 0 01.003.402.303.303 0 01-.416.003 13.444 13.444 0 00-4.23-2.727 13.842 13.842 0 00-5.227-1.014c-1.823 0-3.591.345-5.255 1.028a13.543 13.543 0 00-4.272 2.779l-.018.016a.28.28 0 01-.205.086.3.3 0 01-.208-.083.28.28 0 010-.402l.02-.02a14.12 14.12 0 014.458-2.9A14.396 14.396 0 0112.046 4z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWifiRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.857 15.697c.67 0 1.202.185 1.583.552.395.381.596.93.596 1.628 0 .697-.201 1.246-.596 1.627-.378.367-.91.552-1.583.552-.67 0-1.202-.185-1.582-.552-.395-.38-.597-.93-.597-1.627 0-.698.202-1.247.597-1.628.38-.367.913-.552 1.582-.552zm0 1.12c-.75 0-1.059.31-1.059 1.06s.308 1.059 1.06 1.059c.75 0 1.058-.309 1.058-1.06 0-.383-.084-.658-.255-.82-.162-.16-.431-.238-.804-.238zm.037-4.954a6.725 6.725 0 014.686 1.896.561.561 0 01-.782.804 5.55 5.55 0 00-1.72-1.14 5.559 5.559 0 00-2.184-.443 5.576 5.576 0 00-3.97 1.644.558.558 0 01-.793.003.561.561 0 010-.792 6.665 6.665 0 012.087-1.42 6.688 6.688 0 012.676-.552zm.005-4.081a10.189 10.189 0 017.154 2.918.561.561 0 01-.784.801 9.049 9.049 0 00-2.835-1.888 9.036 9.036 0 00-3.535-.711c-1.24 0-2.442.244-3.571.725a9.135 9.135 0 00-2.863 1.93l-.011.012a.56.56 0 01-.796-.787l.02-.02a10.255 10.255 0 013.21-2.165 10.179 10.179 0 014.011-.815zm.003-4.09c1.84 0 3.63.358 5.316 1.067a13.641 13.641 0 014.306 2.871.559.559 0 01.005.793.559.559 0 01-.792.006 12.56 12.56 0 00-8.835-3.616c-1.706 0-3.356.333-4.91.99A12.622 12.622 0 002.997 8.49l-.017.017a.558.558 0 11-.79-.79l.017-.02a13.775 13.775 0 014.348-2.924 13.625 13.625 0 015.347-1.081z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWinnerFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M15.648 20.238l.596-1.605a1.021 1.021 0 011.303-.596l1.591.588-2.322-5.048c-.894.796-2.112 1.258-3.588 1.4l2.42 5.261zM4.83 18.622l1.6-.588c.52-.19 1.1.07 1.302.588l.596 1.608 2.446-5.303c-1.46-.207-2.628-.761-3.465-1.663l-2.48 5.358zm6.073-7.308a.61.61 0 00.285-.073l1.028-.563h.017l1.028.563a.583.583 0 00.283.073c.12 0 .235-.036.33-.106a.598.598 0 00.25-.605l-.19-1.202c-.009-.009 0-.017 0-.025l.837-.846a.62.62 0 00.151-.639.604.604 0 00-.482-.406l-1.15-.17s-.01 0-.01-.01l-.526-1.083a.577.577 0 00-1.061 0l-.513 1.084c-.008.008-.008.008-.017.008l-1.151.17a.585.585 0 00-.473.407.618.618 0 00.14.639l.837.846c0 .008.009.016.009.025l-.2 1.202a.608.608 0 00.25.605.545.545 0 00.328.106zm1.322-9.154c4.061 0 6.431 2.056 6.431 6.437 0 1.633-.322 2.941-.952 3.936l2.8 6.08a.984.984 0 01-.13 1.054.997.997 0 01-1.004.356l-2.039-.745-.728 1.963c-.216.395-.555.605-.927.605h-.034a.99.99 0 01-.888-.588l-2.762-5.992-2.767 5.992a.994.994 0 01-.894.588h-.025c-.373 0-.714-.199-.894-.538l-.761-2.028-1.958.72a1.32 1.32 0 01-.309.037.972.972 0 01-.778-.362 1.009 1.009 0 01-.132-1.061l2.983-6.48c.009-.024.026-.033.042-.055-.465-.93-.706-2.09-.706-3.48C5.791 4.217 8.16 2.16 12.225 2.16z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWinnerLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.608 18.4l2.227.807-2.72-5.664c-.983.947-2.366 1.468-4.092 1.588l2.756 5.896.776-2.15a.83.83 0 011.053-.477zm-9.36 2.675l2.725-5.992c-1.703-.196-3.042-.812-3.953-1.882l-2.81 6.02 2.155-.818a.83.83 0 011.05.473l.832 2.199zm3.98-18.092c-3.874 0-5.76 1.857-5.76 5.675 0 3.818 1.883 5.675 5.76 5.675 3.88 0 5.761-1.855 5.761-5.673 0-3.82-1.885-5.677-5.761-5.677zm8.296 15.89a.79.79 0 01-.109.846.815.815 0 01-.815.28l-2.283-.823-.81 2.188c-.165.313-.44.476-.744.476h-.023a.815.815 0 01-.723-.468l-2.907-6.219c-.084 0-.165-.005-.247-.008l-2.91 6.227a.823.823 0 01-.723.47h-.022a.811.811 0 01-.723-.428l-.854-2.247-2.205.818c-.355.082-.67-.022-.868-.263a.802.802 0 01-.11-.846l3.026-6.47c-.549-.978-.843-2.216-.843-3.743 0-4.434 2.428-6.507 6.597-6.507 4.168 0 6.599 2.076 6.599 6.504 0 1.768-.395 3.155-1.123 4.185l2.82 6.028zM9.87 8.083a.208.208 0 00.05.222l.858.857a.46.46 0 01.12.39l-.202 1.2a.206.206 0 00.084.211c.056.04.126.045.188.011l1.056-.571a.44.44 0 01.429.008l1.044.563a.176.176 0 00.188-.011.201.201 0 00.081-.207l-.201-1.21a.453.453 0 01.126-.384l.854-.854a.21.21 0 00.05-.222.191.191 0 00-.15-.131l-1.186-.177a.447.447 0 01-.333-.255l-.524-1.087a.19.19 0 00-.252-.084.203.203 0 00-.084.084l-.53 1.101a.452.452 0 01-.321.241l-1.191.18a.17.17 0 00-.154.125zm.168 1.519l-.717-.717a1.032 1.032 0 01.574-1.75l.972-.147.437-.913a1.024 1.024 0 011.849 0l.44.913.972.146c.38.056.697.32.82.689.126.375.034.781-.246 1.062l-.717.72.17 1.016a1.02 1.02 0 01-.425 1.017 1.03 1.03 0 01-1.07.062l-.868-.468-.86.468a1.028 1.028 0 01-1.499-1.079c-.003-.003.168-1.02.168-1.02z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWinnerRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M17.55 18.02l1.6.588-2.326-5.039c-.899.798-2.112 1.258-3.596 1.395l2.425 5.26.597-1.607a1.024 1.024 0 011.3-.597zm-9.213 2.202l2.445-5.306c-1.462-.207-2.63-.762-3.47-1.666l-2.474 5.367 1.602-.594a1.023 1.023 0 011.297.59l.6 1.609zM12.23 3.395c-3.54 0-5.19 1.65-5.19 5.19 0 3.541 1.65 5.188 5.19 5.188 3.544 0 5.194-1.647 5.194-5.187 0-3.544-1.65-5.19-5.194-5.19zM20.513 18.6c.163.353.112.759-.134 1.061-.244.3-.63.435-1.009.35l-2.036-.742-.731 1.961c-.207.403-.55.61-.927.61h-.028a1.002 1.002 0 01-.891-.585l-2.765-5.994-2.762 5.994a1.006 1.006 0 01-.89.588h-.031c-.376 0-.717-.204-.894-.537l-.764-2.034-1.958.72c-.457.106-.84-.028-1.087-.328a1.005 1.005 0 01-.132-1.059l2.986-6.479c.009-.02.025-.033.037-.05-.46-.93-.704-2.09-.704-3.485 0-4.38 2.37-6.431 6.435-6.431 4.064 0 6.437 2.05 6.437 6.431 0 1.633-.33 2.942-.953 3.939l2.801 6.07zm-9.24-10.68l-1.163.176.854.837c.143.143.21.373.177.572l-.196 1.187.983-.568a.631.631 0 01.608 0l.986.54-.2-1.17a.675.675 0 01.18-.564l.832-.846L13.2 7.92a.654.654 0 01-.49-.378l-.508-1.07-.459 1.09a.658.658 0 01-.47.358zM9.865 9.588l-.622-.633a1.24 1.24 0 01-.29-1.27 1.21 1.21 0 01.971-.823l.835-.126.378-.798a1.204 1.204 0 011.095-.698c.47 0 .891.266 1.095.698l.381.8.832.127c.451.067.824.384.972.823.149.451.037.936-.291 1.27l-.622.632.149.902a1.218 1.218 0 01-1.773 1.289l-.743-.406-.736.403a1.191 1.191 0 01-1.275-.076 1.226 1.226 0 01-.501-1.212l.145-.902z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWomanFilled: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.915 6.958c-1.533 0-2.449-.924-2.449-2.473 0-.79.225-1.412.67-1.85.431-.422 1.028-.635 1.779-.635.75 0 1.347.213 1.778.63.448.434.675 1.06.675 1.852 0 1.552-.918 2.476-2.453 2.476zm5.252 6.65c.131.392.103.807-.073 1.17-.177.362-.48.63-.854.757a1.148 1.148 0 01-.493.087l.168.63a.604.604 0 01-.577.76h-.401l-.017 3.15c0 .477-.145.874-.417 1.146-.174.17-.482.375-.983.375h-.037c-.77-.016-1.33-.655-1.33-1.523l.014-3.149h-.47l.016 3.146c0 .47-.154.88-.437 1.16-.247.243-.58.375-.927.366h-.037c-.798-.02-1.397-.675-1.397-1.523l-.017-3.146h-.4a.604.604 0 01-.577-.76l.167-.63h-.003c-.17 0-.338-.03-.504-.089a1.473 1.473 0 01-.84-.75 1.517 1.517 0 01-.076-1.166l1.527-4.392a1.54 1.54 0 01.081-.205 2.826 2.826 0 012.594-1.711h2.098c1.134 0 2.157.683 2.605 1.74.022.044.05.111.076.193.002-.006 1.52 4.364 1.52 4.364z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWomanLight: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M10.898 3.336c-.252.243-.381.63-.381 1.148 0 1.022.479 1.501 1.507 1.501 1.033 0 1.515-.476 1.515-1.501 0-.515-.129-.905-.383-1.148-.247-.239-.628-.356-1.132-.356-.502 0-.882.117-1.126.356zm1.126 3.47c-1.485 0-2.336-.846-2.336-2.322 0-.748.213-1.333.633-1.74.406-.392.977-.588 1.703-.588.725 0 1.3.2 1.706.586.423.406.636.991.636 1.742 0 1.476-.855 2.322-2.342 2.322zm4.45 7.737a.524.524 0 00.029-.4l-1.583-4.48a1.92 1.92 0 00-1.804-1.266h-2.179c-.762 0-1.454.454-1.756 1.157a1.724 1.724 0 00-.045.1L7.55 14.146c-.092.269.05.56.32.656a.508.508 0 00.395-.017.525.525 0 00.271-.297l.824-2.446a.412.412 0 01.535-.235.416.416 0 01.252.49l-.375 1.166-.754 2.795h.49c.227 0 .412.185.415.41l.02 3.831a.518.518 0 101.036 0l-.02-3.83c0-.226.183-.41.41-.414h1.313c.227 0 .412.185.415.412l-.017 3.832c0 .289.232.524.518.524a.52.52 0 00.518-.524l.02-3.832a.414.414 0 01.414-.409h.493l-.764-2.812-.373-1.151a.409.409 0 01.266-.516.415.415 0 01.521.263l.827 2.449a.52.52 0 00.658.31.509.509 0 00.297-.257zm.81-.672c.118.347.093.711-.07 1.036-.16.32-.431.557-.767.67-.233.083-.485.1-.726.044l.252.936a.412.412 0 01-.4.518h-.622l-.017 3.42a1.35 1.35 0 01-1.347 1.345 1.35 1.35 0 01-1.347-1.348l.016-3.42h-.479l.017 3.418c0 .745-.602 1.35-1.344 1.35a1.347 1.347 0 01-1.345-1.348l-.017-3.42h-.622a.413.413 0 01-.397-.518l.252-.936a1.327 1.327 0 01-.731-.047 1.311 1.311 0 01-.76-.667 1.327 1.327 0 01-.07-1.033l1.586-4.485c.02-.059.042-.115.076-.182a2.73 2.73 0 012.507-1.633h2.179c1.095 0 2.084.647 2.515 1.652a.966.966 0 01.07.174l1.591 4.474z"
                fill={fillColor}
            />
        </svg>
    );
};

export const IconWomanRegular: React.FC<Props> = ({color, size}) => {
    const {colors} = useTheme();
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? colors.iconInverse : colors.iconPrimary);
    return (
        <svg width={size} height={size} viewBox="0 0 24 24" role="presentation">
            <path
                d="M11.398 3.501c-.202.2-.306.53-.306.98 0 .889.376 1.267 1.255 1.267.883 0 1.258-.378 1.258-1.266 0-.451-.104-.782-.308-.98-.199-.194-.518-.292-.95-.292-.431-.003-.75.095-.95.291zm.947 3.457c-1.533 0-2.449-.924-2.449-2.476 0-.79.224-1.412.67-1.849.431-.42 1.028-.633 1.779-.633.75 0 1.347.213 1.778.63.446.437.675 1.06.675 1.852 0 1.552-.918 2.476-2.453 2.476zm4.106 7.283a.34.34 0 00.017-.241l-1.524-4.378c-.006-.011-.036-.087-.042-.098a1.64 1.64 0 00-1.507-1.009h-2.098A1.64 1.64 0 009.75 9.622l-1.524 4.386a.314.314 0 00.017.236c.02.042.067.115.165.148a.29.29 0 00.232-.008.31.31 0 00.157-.177l.79-2.386a.594.594 0 01.75-.39.6.6 0 01.387.76l-.364 1.14-.658 2.476h.216a.6.6 0 01.596.602l.017 3.75c0 .076.017.314.23.32.073-.008.095-.017.1-.022.04-.04.076-.143.076-.292l-.02-3.75c0-.16.062-.314.174-.429a.59.59 0 01.423-.18h1.673a.601.601 0 01.597.608l-.017 3.754s.002.308.16.314a.421.421 0 00.159-.028c.02-.02.059-.107.059-.289l.02-3.756a.602.602 0 01.596-.602h.213l-.664-2.493-.359-1.124a.6.6 0 01.387-.76c.31-.102.65.074.75.39l.793 2.393a.32.32 0 00.157.174c.042.02.123.047.219.01a.295.295 0 00.193-.156zm1.146-.636c.131.392.103.807-.073 1.17a1.47 1.47 0 01-.855.757 1.14 1.14 0 01-.493.087l.169.63a.604.604 0 01-.577.762h-.401l-.017 3.151c0 .48-.143.877-.417 1.149-.174.174-.485.372-.983.372h-.037c-.77-.014-1.33-.655-1.33-1.523l.014-3.149h-.47l.016 3.146c0 .47-.154.882-.437 1.16-.244.24-.563.366-.927.366h-.037c-.798-.02-1.397-.675-1.397-1.523l-.015-3.15h-.4a.585.585 0 01-.473-.238.604.604 0 01-.104-.524l.168-.633h-.003c-.17 0-.339-.03-.501-.09a1.473 1.473 0 01-.84-.75A1.517 1.517 0 017.1 13.61l1.526-4.393a1.3 1.3 0 01.084-.201 2.824 2.824 0 012.594-1.712h2.098c1.135 0 2.157.684 2.605 1.74.023.045.05.11.076.193l1.513 4.367z"
                fill={fillColor}
            />
        </svg>
    );
};
