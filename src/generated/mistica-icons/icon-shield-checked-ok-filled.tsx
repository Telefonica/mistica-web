'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseOrMediaVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconShieldCheckedOkFilled = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseOrMediaVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^vivo-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M20.608 5.328V5.3l-.009-.076a.62.62 0 0 0-.711-.51c-1.633.258-2.488-.313-3.566-1.036h-.001c-1.062-.712-2.26-1.515-4.324-1.518h-.006c-2.053 0-3.252.798-4.31 1.5l-.017.013-.01.005c-1.073.72-1.925 1.29-3.534 1.037a.595.595 0 0 0-.74.582c-.002.27-.019 6.617.457 9.362.622 3.61 7.605 6.986 7.902 7.129.163.075.35.075.51 0 .297-.14 7.289-3.516 7.91-7.127.455-2.682.449-8.806.449-9.333M8.5 11.858l2.006 2.027s4.98-5.041 4.983-5.039l.008-.008a.59.59 0 0 1 .835.008.607.607 0 0 1 0 .852l-5.406 5.468-.003.002a.593.593 0 0 1-.838-.002l-2.428-2.457a.607.607 0 0 1 0-.851l.008-.009a.59.59 0 0 1 .835.008"
                />
            </svg>
        );
    } else if (skinName.match(/^o2-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M12.26 2.114c.181.175 3.105 3.003 6.883 3.003.201 0 .361.164.357.366v9.175c0 3.283-2.418 5.68-7.39 7.323A.3.3 0 0 1 12 22a.3.3 0 0 1-.11-.019c-4.972-1.644-7.39-4.04-7.39-7.323V5.483c0-.202.16-.366.356-.366 3.88 0 6.865-2.983 6.893-3.011a.35.35 0 0 1 .51.008m-2.047 13.864 6.092-6.065a.565.565 0 0 0 .014-.78.525.525 0 0 0-.759-.014l-5.333 5.313-1.947-2.001a.525.525 0 0 0-.759 0 .56.56 0 0 0 0 .78z"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M12.26 2.114c.181.175 3.105 3.003 6.883 3.003.201 0 .361.164.357.366v9.175c0 3.283-2.418 5.68-7.39 7.323A.3.3 0 0 1 12 22a.3.3 0 0 1-.11-.019c-4.972-1.644-7.39-4.04-7.39-7.323V5.483c0-.202.16-.366.356-.366 3.88 0 6.865-2.983 6.893-3.011a.35.35 0 0 1 .51.008m-2.047 13.864 6.092-6.065a.565.565 0 0 0 .014-.78.525.525 0 0 0-.759-.014l-5.333 5.313-1.947-2.001a.525.525 0 0 0-.759 0 .56.56 0 0 0 0 .78z"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M11.337 2.767c.42-.206.91-.201 1.327.007.585.294 1.65.827 2.558 1.278.636.315 1.61.682 2.443.974a56 56 0 0 0 1.37.46l.108.034.005.002c.209.066.352.26.352.478v7.39a6.5 6.5 0 0 1-2.999 5.476l-3.696 2.363a1.5 1.5 0 0 1-1.61.004l-3.669-2.319A6.5 6.5 0 0 1 4.5 13.42V6a.5.5 0 0 1 .354-.478l.006-.002.023-.007.088-.028a45 45 0 0 0 1.397-.462c.846-.293 1.813-.658 2.4-.965.864-.454 1.967-.997 2.569-1.291m4.182 6.703a.75.75 0 0 0-1.061 0l-3.47 3.47-1.47-1.47a.75.75 0 0 0-1.06 1.06l2 2a.75.75 0 0 0 1.06 0l4-4a.75.75 0 0 0 0-1.06"
                />
            </svg>
        );
    }
};

export default IconShieldCheckedOkFilled;
