'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseOrMediaVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconAlertRegular = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseOrMediaVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^vivo-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M11.35 9.766v4.25a.625.625 0 1 0 1.25 0v-4.25a.625.625 0 1 0-1.25 0M11.975 17.131a.625.625 0 1 0 0-1.25.625.625 0 0 0 0 1.25"
                />
                <path
                    fill={fillColor}
                    d="M13.463 4.14c-.646-1.134-2.28-1.134-2.927 0L2.533 18.195a1.684 1.684 0 0 0 1.463 2.517h16.007a1.684 1.684 0 0 0 1.463-2.517zm6.917 14.672a.434.434 0 0 1-.377.65H3.996a.434.434 0 0 1-.377-.65L11.623 4.76a.434.434 0 0 1 .754 0z"
                />
            </svg>
        );
    } else if (skinName.match(/^o2-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M12.608 3.367C12.466 3.146 12.251 3 12 3a.69.69 0 0 0-.608.367L2.106 19.899a.69.69 0 0 0 0 .734c.142.221.357.367.608.367h18.572a.69.69 0 0 0 .608-.367.69.69 0 0 0 0-.734zM12 5.2l6.25 11.133 1.788 3.198H3.963zm0 3.49a.725.725 0 0 0-.713.734v5.696c0 .404.32.733.713.733s.713-.329.713-.733V9.43c0-.405-.32-.739-.713-.739m-.713 9.003c0-.405.32-.734.713-.734s.713.329.713.733c0 .405-.32.734-.713.734a.725.725 0 0 1-.713-.733"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M12.608 3.367C12.466 3.146 12.251 3 12 3a.69.69 0 0 0-.608.367L2.106 19.899a.69.69 0 0 0 0 .734c.142.221.357.367.608.367h18.572a.69.69 0 0 0 .608-.367.69.69 0 0 0 0-.734zM12 5.2l6.25 11.133 1.788 3.198H3.963zm0 3.49a.725.725 0 0 0-.713.734v5.696c0 .404.32.733.713.733s.713-.329.713-.733V9.43c0-.405-.32-.739-.713-.739m-.713 9.003c0-.405.32-.734.713-.734s.713.329.713.733c0 .405-.32.734-.713.734a.725.725 0 0 1-.713-.733"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M12 15A1 1 0 1 1 12 17 1 1 0 0 1 12 15M12 8.25a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75"
                />
                <path
                    fill={fillColor}
                    d="M12 1.918a2.67 2.67 0 0 1 2.185 1.14l.094.143.002.004 8.105 13.536.007.01a2.665 2.665 0 0 1-2.277 3.995H3.884a2.665 2.665 0 0 1-2.276-3.996L9.714 3.213l.007-.012A2.67 2.67 0 0 1 12 1.918m0 1.5a1.17 1.17 0 0 0-.993.554v.004l-8.1 13.525a1.164 1.164 0 0 0 .995 1.745h16.196a1.164 1.164 0 0 0 .997-1.74l-8.1-13.528-.085-.122a1.17 1.17 0 0 0-.91-.438"
                />
            </svg>
        );
    }
};

export default IconAlertRegular;
