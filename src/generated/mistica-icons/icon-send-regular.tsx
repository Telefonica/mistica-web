'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseOrMediaVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconSendRegular = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseOrMediaVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^vivo-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M3 3.901a.904.904 0 0 1 1.308-.807l15.591 7.755a.907.907 0 0 1 .004 1.618L4.34 20.302a.906.906 0 0 1-1.292-.99l1.576-7.67-1.602-7.547A.8.8 0 0 1 3 3.901m1.186.366 1.567 7.37-1.54 7.492 14.836-7.472z"
                />
            </svg>
        );
    } else if (skinName.match(/^o2-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M21.513 2.831q.006-.058.005-.109v-.024a1 1 0 0 0-.023-.137v-.01q-.008-.013-.009-.028a.5.5 0 0 0-.054-.137l-.04-.071q-.014-.022-.032-.043-.027-.035-.055-.062l-.018-.016-.018-.017a.705.705 0 0 0-.314-.161q-.008-.001-.015-.005a.6.6 0 0 0-.22-.002l-.02.002q-.016.004-.034.005-.016.001-.033.005L2.99 7.03a.74.74 0 0 0-.519.654.75.75 0 0 0 .406.734l7.898 3.815-.696.73a.767.767 0 0 0 0 1.047c.276.29.723.29.998 0l.696-.73 3.634 8.289a.7.7 0 0 0 .642.431q.029.001.058-.005a.71.71 0 0 0 .623-.545l4.764-18.51.005-.028q0-.015.004-.029l.002-.01a.2.2 0 0 0 .007-.042m-3.066 1.35-6.606 6.934-6.601-3.19zm-5.608 7.981 6.606-6.933-3.567 13.861z"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M21.513 2.831q.006-.058.005-.109v-.024a1 1 0 0 0-.023-.137v-.01q-.008-.013-.009-.028a.5.5 0 0 0-.054-.137l-.04-.071a.717.717 0 0 0-.086-.104l-.019-.017q-.007-.01-.018-.017a.704.704 0 0 0-.298-.156q-.007-.004-.015-.005l-.016-.005a.6.6 0 0 0-.22-.002l-.02.002-.034.005q-.016.001-.033.005L2.99 7.03a.74.74 0 0 0-.519.654.75.75 0 0 0 .406.734l7.898 3.815-.696.73a.767.767 0 0 0 0 1.047c.276.29.723.29.998 0l.696-.73 3.634 8.289a.7.7 0 0 0 .642.431q.029.001.058-.005a.71.71 0 0 0 .623-.545l4.764-18.51.005-.028q0-.015.004-.029l.002-.01q.006-.02.007-.042m-3.066 1.35-6.606 6.934-6.601-3.19zm-5.608 7.981 6.606-6.933-3.567 13.861z"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="m4.79 3.28.176.054.06.026 16.302 7.966a1 1 0 0 1 .078.044l.014.009a.8.8 0 0 1 .187.184q.01.014.02.027.033.052.059.109.007.016.012.034a.8.8 0 0 1 .051.268.8.8 0 0 1-.05.26q-.006.021-.014.041a1 1 0 0 1-.054.1q-.016.024-.034.047a1 1 0 0 1-.052.061l-.027.03a1 1 0 0 1-.13.1q-.03.017-.06.034L5.028 20.641l-.06.027a1.254 1.254 0 0 1-1.473-.449 1.3 1.3 0 0 1-.17-1.196L5.708 12 3.326 4.978a1.3 1.3 0 0 1-.048-.707l.049-.173a1.3 1.3 0 0 1 .28-.456v.001c.171-.18.39-.306.633-.361l.183-.027q.185-.014.366.026m.116 15.749 12.848-6.278H7.037zm2.13-7.78h10.718L4.906 4.972z"
                />
            </svg>
        );
    }
};

export default IconSendRegular;
