/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconLockClosedRegular = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^blau/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M14.058 14.692v3.2h-3.2v-3.2h3.2zm.095-11.34a4.415 4.415 0 014.41 4.41v2.714h-8.82V7.762a4.415 4.415 0 014.41-4.41zm3.39 17.296H7.373a1.02 1.02 0 01-1.02-1.02v-7.8h12.21v7.8a1.02 1.02 0 01-1.018 1.02zM8.392 7.762v2.714H5v9.152A2.374 2.374 0 007.373 22h10.172a2.374 2.374 0 002.37-2.371V7.762A5.768 5.768 0 0014.155 2 5.768 5.768 0 008.39 7.762z"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M10.956 17.057l4.031-4.135a.679.679 0 01.982 0 .728.728 0 010 1.012l-5.013 5.147-2.232-2.292a.728.728 0 010-1.012.683.683 0 01.986 0l1.246 1.28z"
                />
                <path
                    fill={fillColor}
                    d="M17.912 8.07v1.428c1.15 0 2.088.96 2.088 2.144v8.214C20 21.04 19.061 22 17.912 22H6.088C4.935 22 4 21.036 4 19.856v-8.214C4 10.458 4.939 9.5 6.088 9.5V8.07C6.088 4.723 8.74 2 12 2s5.912 2.723 5.912 6.07zM12 3.429c-2.493 0-4.522 2.083-4.522 4.643V9.5h9.044V8.07c0-2.56-2.03-4.643-4.522-4.643zm6.606 16.424h.003v-8.21a.708.708 0 00-.697-.716H6.088a.709.709 0 00-.698.716v8.21a.71.71 0 00.698.716h11.82a.708.708 0 00.698-.716z"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M14 16.31c0 1.845-1.526 1.987-1.908 1.995h-.183c-.402-.007-1.91-.15-1.91-2.007 0-1.85 1.493-1.99 1.894-1.993h.04c.053 0 .106 0 .152.002.392.01 1.915.165 1.915 2.003zm-1.92 1.096c1.022-.019 1.022-.802 1.022-1.096 0-.267 0-1.08-1.037-1.105l-.062-.002h-.097c-1.004.01-1.004.799-1.004 1.095 0 .298 0 1.095 1.023 1.108h.154z"
                />
                <path
                    fill={fillColor}
                    d="M17.142 6.602C17.024 4.017 14.758 1.975 12 1.975c-2.833 0-5.147 2.154-5.147 4.837v1.533c-.455.07-1.042.252-1.52.7-.552.514-.834 1.243-.834 2.162l.003 7.863c-.003.056-.074 1.21.715 2.07.54.59 1.323.887 2.325.887l8.857-.006h.002c.078.005 1.373.08 2.272-.77.55-.519.825-1.24.825-2.152l-.001-4.883v-.003c0-1.635 0-2.946-.002-2.946v-.004c.006-.094.073-1.219-.7-2.07-.41-.452-.964-.735-1.65-.847V6.812l-.005-.21zm-1.33 1.69c-2.278.001-6.103.006-7.623.009V6.812l.005-.185C8.3 4.788 9.954 3.31 12.002 3.31c2.115 0 3.81 1.579 3.81 3.502v1.48zm2.091 1.725c.427.462.39 1.139.386 1.198 0 0-.003 5.285.003 7.887 0 .56-.142.97-.435 1.252-.493.472-1.284.45-1.399.447h-.012l-8.9.006c-.649 0-1.13-.166-1.432-.49-.435-.467-.404-1.153-.4-1.198v-7.91c-.001-.56.147-.984.438-1.257.415-.39 1.035-.427 1.257-.427.04 0 .069.001.079.002h.003a.242.242 0 00.046.003H8.78c1.955-.003 5.75-.007 7.663-.007.663 0 1.155.165 1.46.495z"
                />
            </svg>
        );
    }
};

export default IconLockClosedRegular;
