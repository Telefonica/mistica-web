'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconLocationLight = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M11.475 21.74c.14.184.315.26.527.26a.63.63 0 0 0 .527-.26c.247-.26 5.971-7.004 5.971-12.372C18.5 5.22 15.655 2 12.002 2S5.504 5.22 5.5 9.368c0 5.26 5.49 11.795 5.952 12.345zM6.91 9.372c0-3.368 2.178-5.888 5.09-5.888 2.914 0 5.092 2.516 5.092 5.888 0 3.924-3.684 8.964-5.091 10.74-1.404-1.74-5.09-6.816-5.09-10.74"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M19 9.152c.014-4.465-2.596-7.138-6.98-7.152h-.031C7.627 2 5.014 4.655 5 9.11c-.014 4.39 5.318 11.38 6.685 12.767l.006.005c.16.16.416.157.573-.006 1.367-1.391 6.722-8.378 6.736-12.724m-.819-.003c-.01 3.82-4.648 10.05-6.206 11.825-1.553-1.773-6.168-8.005-6.157-11.859.012-4.053 2.202-6.281 6.17-6.281h.032c3.985.011 6.173 2.254 6.162 6.315M12 10.407c-1.097 0-1.676-.589-1.676-1.705 0-1.115.582-1.704 1.676-1.704s1.673.589 1.673 1.704c0 1.116-.58 1.705-1.673 1.705m2.492-1.705c0-1.588-.931-2.538-2.492-2.538s-2.492.95-2.492 2.538.931 2.539 2.492 2.539 2.492-.95 2.492-2.539"
                />
            </svg>
        );
    }
};

export default IconLocationLight;
