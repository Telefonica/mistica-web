'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseOrMediaVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconExitDoorFilled = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseOrMediaVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^o2-new/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path fill={fillColor} d="M17.677 21.993h3.694V3.347l-3.694 3.695z" />
                <path
                    fill={fillColor}
                    d="M16.373 6.78c0-.173.087-.347.174-.477L20.893 2H7.898v8.475h4.78a1.54 1.54 0 0 1 1.522 1.521 1.54 1.54 0 0 1-1.521 1.522H7.898v8.475h8.475z"
                />
                <path
                    fill={fillColor}
                    d="M12.679 11.345H5.116L6.16 10.3a.63.63 0 0 0 0-.912.63.63 0 0 0-.913 0L2.64 11.997l2.65 2.65c.131.131.305.175.479.175a.65.65 0 0 0 .478-.174.63.63 0 0 0 0-.913l-1.043-1.043h7.476a.67.67 0 0 0 .652-.652c0-.348-.305-.695-.652-.695"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path fill={fillColor} d="M17.677 21.993h3.694V3.347l-3.694 3.695z" />
                <path
                    fill={fillColor}
                    d="M16.373 6.78c0-.173.087-.347.174-.477L20.893 2H7.898v8.475h4.78a1.54 1.54 0 0 1 1.522 1.521 1.54 1.54 0 0 1-1.521 1.522H7.898v8.475h8.475z"
                />
                <path
                    fill={fillColor}
                    d="M12.679 11.345H5.116L6.16 10.3a.63.63 0 0 0 0-.912.63.63 0 0 0-.912 0l-2.608 2.608 2.651 2.65c.13.131.304.175.478.175a.65.65 0 0 0 .478-.174.63.63 0 0 0 0-.913l-1.043-1.043h7.476a.67.67 0 0 0 .652-.652c0-.348-.304-.695-.652-.695"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M15.537 2.5c.199 0 .33.23.273.42-.139.46-.127 1.02-.025 1.49.037.169-.085.34-.258.34H14a2.25 2.25 0 0 0-2.238 2.02L11.75 7l.012.23A2.25 2.25 0 0 0 14 9.25h1.527c.173 0 .294.171.263.34a2.244 2.244 0 0 0 1.518 2.549.27.27 0 0 1 .192.252v7.859H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1 0-1.5h1.5V5A2.5 2.5 0 0 1 7 2.5zM13 11a1 1 0 1 0 0 2 1 1 0 0 0 0-2"
                />
                <path
                    fill={fillColor}
                    d="M17.47 3.47a.75.75 0 0 1 1.06 0l3 3a.75.75 0 0 1 0 1.06l-3 3a.75.75 0 0 1-1.06 0l-.052-.056a.8.8 0 0 1-.154-.33.75.75 0 0 1 .206-.674l1.72-1.72H14a.8.8 0 0 1-.255-.048q-.03-.01-.061-.024a1 1 0 0 1-.07-.038l-.049-.03q-.034-.026-.065-.055l-.041-.037a1 1 0 0 1-.055-.067q-.016-.02-.033-.044-.02-.032-.037-.067-.016-.029-.03-.059-.014-.041-.025-.085A.8.8 0 0 1 13.25 7q.002-.103.03-.197.01-.044.025-.085.013-.03.029-.059.017-.035.037-.067.016-.023.033-.044a1 1 0 0 1 .055-.067l.041-.037q.031-.03.065-.054.026-.017.053-.033.032-.019.066-.036a1 1 0 0 1 .136-.048.8.8 0 0 1 .18-.023h5.19l-1.72-1.72a.75.75 0 0 1-.176-.282q-.01-.03-.017-.059a.7.7 0 0 1-.022-.246V3.93a.74.74 0 0 1 .215-.46"
                />
            </svg>
        );
    }
};

export default IconExitDoorFilled;
