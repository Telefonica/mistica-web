'use client';
/*
 * This file was autogenerated. Don't edit this file!
 *
 * To update, execute "yarn start" inside "import-mistica-icons"
 */

import * as React from 'react';
import {useTheme} from '../../hooks';
import {useIsInverseVariant} from '../../theme-variant-context';
import {vars} from '../../skins/skin-contract.css';

import type {IconProps} from '../../utils/types';

const IconChevronUpRegular = ({color, size = 24, ...rest}: IconProps): JSX.Element => {
    const isInverse = useIsInverseVariant();
    const fillColor = color ?? (isInverse ? vars.colors.inverse : vars.colors.neutralHigh);
    const {skinName} = useTheme();
    if (skinName.match(/^blau/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M4.16 16.612a.545.545 0 0 0 .77 0L12 9.542l7.07 7.07a.544.544 0 1 0 .77-.771L12 8l-7.84 7.84a.545.545 0 0 0 0 .772"
                />
            </svg>
        );
    } else if (skinName.match(/^o2/i)) {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M18.734 15.8a.79.79 0 0 0 1.049 0 .64.64 0 0 0 0-.962L12.545 8.2A.78.78 0 0 0 12 8a.78.78 0 0 0-.545.2l-7.238 6.638a.64.64 0 0 0 0 .963.79.79 0 0 0 1.05 0L12 9.624z"
                />
            </svg>
        );
    } else {
        return (
            <svg width={size} height={size} viewBox="0 0 24 24" role="presentation" {...rest}>
                <path
                    fill={fillColor}
                    d="M20 15.661a.82.82 0 0 1-.285.617.93.93 0 0 1-1.256-.048L11.94 9.579l-6.392 6.647a.93.93 0 0 1-1.257.054.804.804 0 0 1-.08-1.163l.018-.02 7.046-7.323a.9.9 0 0 1 .654-.274.91.91 0 0 1 .658.268l7.175 7.325a.8.8 0 0 1 .237.568"
                />
            </svg>
        );
    }
};

export default IconChevronUpRegular;
